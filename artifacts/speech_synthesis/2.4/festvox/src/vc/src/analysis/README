Program for Speech Analysis
* FOR LITTLE ENDIAN

usage: analysis [options...] [inputfile] [outputfile]
options:
        -f samp_freq[16000.0]           : sampling frequency [Hz]
        -frame frame[25.0]              : frame length [ms]
        -shift shift[5.0]               : frame shift [ms]
        -fftl fft_length[512]           : fft length
        -order order[24]                : cepstrum order
        -npowfile npowfile              : get normalized power file
        -mcep                           : mel cepstrogram
        -pow                            : include power coefficient
        -lpow                           : include linear power coefficient
        -fast                           : fast version
        -raw                            : input raw file (16bit short)
        -float                          : output float
        -nmsg                           : no message
        -help                           : display this message

The input file is a wav file (RIFF WAVE). When the input file is a raw
file (little endian short-type format), use -raw and set sampling
frequency by -f.

The output file is a binary file of a spectral feature sequence that
is an FFT spectral sequence consisting of [FFT points / 2 +
1]-dimensional spectral vectors. FFT points is changed by -fftl. A
frame length is changed by -frame. A frame shift is changed by -shift.

If -mcep is used, the output is a mel-cepstral sequence. The output
mel-cepstrum doesn't include the 0th coefficient capturing a power of
log-scaled spectrum. If -pow is used, the output mel-cepstra includes
the 0th coefficients. If -lpow is used, the output mel-cepstra
includes log-scaled power values of a linear spectrum.
* Note that a coefficient for frequency warping is set to 0.42 for 16
kHz sampling in analysis_sub.h, Line 42.

A binary file of normalized power sequence is generated by using
-npowfile.

If -fast is used, some processes are removed to reduce the
computational cost.

Binary data has double-type format. If -float is used, data has
float-type format.

Some messages are printed while executing this program. If you
don't need those messages, use -nmsg.


<EXAMPLE>
% analysis \
	-frame 30.0 \
	-shift 10.0 \
	-fftl 1024 \
	-order 29 \
	-npowfile output.npow \
	-mcep \
	-pow \
	-nmsg \
	input.wav \
	output.mcep


Tomoki Toda (tomoki@ics.nitech.ac.jp)


==================================================
The current copyright is

/*********************************************************************/
/*                                                                   */
/*            Nagoya Institute of Technology, Aichi, Japan,          */
/*       Nara Institute of Science and Technology, Nara, Japan       */
/*                                and                                */
/*             Carnegie Mellon University, Pittsburgh, PA            */
/*                      Copyright (c) 2003-2004                      */
/*                        All Rights Reserved.                       */
/*                                                                   */
/*  Permission is hereby granted, free of charge, to use and         */
/*  distribute this software and its documentation without           */
/*  restriction, including without limitation the rights to use,     */
/*  copy, modify, merge, publish, distribute, sublicense, and/or     */
/*  sell copies of this work, and to permit persons to whom this     */
/*  work is furnished to do so, subject to the following conditions: */
/*                                                                   */
/*    1. The code must retain the above copyright notice, this list  */
/*       of conditions and the following disclaimer.                 */
/*    2. Any modifications must be clearly marked as such.           */
/*    3. Original authors' names are not deleted.                    */
/*                                                                   */    
/*  NAGOYA INSTITUTE OF TECHNOLOGY, NARA INSTITUTE OF SCIENCE AND    */
/*  TECHNOLOGY, CARNEGIE MELLON UNIVERSITY, AND THE CONTRIBUTORS TO  */
/*  THIS WORK DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,  */
/*  INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, */
/*  IN NO EVENT SHALL NAGOYA INSTITUTE OF TECHNOLOGY, NARA           */
/*  INSTITUTE OF SCIENCE AND TECHNOLOGY, CARNEGIE MELLON UNIVERSITY, */
/*  NOR THE CONTRIBUTORS BE LIABLE FOR ANY SPECIAL, INDIRECT OR      */
/*  CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM   */
/*  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,  */
/*  NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN        */
/*  CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.         */
/*                                                                   */
/*********************************************************************/
/*                                                                   */
/*          Author :  Tomoki Toda (tomoki@ics.nitech.ac.jp)          */
/*          Date   :  June 2004                                      */
/*                                                                   */
/*-------------------------------------------------------------------*/
/*                                                                   */
/*  Speech Analysis                                                  */
/*                                                                   */
/*-------------------------------------------------------------------*/
