
ch_wave nist to esps to nist: pass
ch_wave nist to snd to nist: pass
ch_wave nist to riff to nist: pass
ch_wave nist to audlab to nist: pass
ch_wave nist to aiff to nist: pass
ch_wave nist to est to nist: pass
ch_wave raw binary test: pass
ch_wave raw ascii test: pass
ch_wave byte order test: pass
ch_wave stdio test1: pass
ch_wave stdio test2: pass
ch_wave stdio test3: pass
ch_wave stdio test4: pass
ch_wave subwave test1: pass
ch_wave subwave test2: pass
ch_wave concat : pass
ch_wave channel combine/extract : pass
ch_wave default file type: pass
Duration: 0.0724
Sample rate: 8000
Number of samples: 579
Number of channels: 1
Header type: nist
Data type: short
Duration: 0.3144
Sample rate: 8000
Number of samples: 2515
Number of channels: 1
Header type: nist
Data type: short
Duration: 0.6118
Sample rate: 8000
Number of samples: 4894
Number of channels: 1
Header type: nist
Data type: short
Duration: 0.5088
Sample rate: 8000
Number of samples: 4070
Number of channels: 1
Header type: nist
Data type: short
ch_wave key extract : pass
Duration: 2.0182
Sample rate: 8000
Number of samples: 16146
Number of channels: 1
Header type: nist
Data type: short
Usage: ch_wave [input file0] [input file1] ... -o [output file]
Summary: change/copy/combine waveform files
use "-" to make input and output files stdin/out
-h               Options help

-itype <string>  Input file type (optional).  If set to raw, this 
    indicates that the input file does not have a header. While 
    this can be used to specify file types other than raw, this is 
    rarely used for other purposes
    as the file type of all the existing supported 
    types can be determined automatically from the 
    file's header. If the input file is unheadered, 
    files are assumed to be shorts (16bit).  
    Supported types are 
   nist, est, esps, snd, riff, aiff, audlab, raw, ascii

-n <int>  Number of channels in an unheadered input file 

-f <int> Sample rate in Hertz for an unheadered input file 

-ibo <string>  Input byte order in an unheadered input file: 
    possibliities are: MSB , LSB, native or nonnative. 
    Suns, HP, SGI Mips, M68000 are MSB (big endian) 
    Intel, Alpha, DEC Mips, Vax are LSB (little 
    endian)

-iswap  Swap bytes. (For use on an unheadered input file)

-istype <string> Sample type in an unheadered input file:
     short, mulaw, byte, ascii

-c <string>  Select a single channel (starts from 0). 
    Waveforms can have multiple channels. This option 
    extracts a single channel for progcessing and 
    discards the rest. 

-start <float>  Extract sub-wave starting at this time, specified in 
    seconds

-end <float>  Extract sub-wave ending at this time, specified in 
    seconds

-from <int> Extract sub-wave starting at this sample point

-to <int> Extract sub-wave ending at this sample point

-o <ofile>       Output filename. If not specified output is
    to stdout.

-otype <string>  Output file type, (optional).  If no type is
    Specified the type of the input file is assumed.
    Supported types are: 
   nist, est, esps, snd, riff, aiff, audlab, raw, ascii

-F <int>         Output sample rate in Hz. If this is different 
    from the input sample rate, resampling will occur 

-obo <string>   Output byte order: MSB, LSB, native, or nonnative. 
    Suns, HP, SGI Mips, M68000 are MSB (big endian) 
    Intel, Alpha, DEC Mips, Vax are LSB 
    (little endian)

-oswap Swap bytes when saving to output

-ostype <string> Output sample type: short, mulaw, byte or ascii

-scale <float> Scaling factor. Increase or descrease the amplitude
    of the whole waveform by the factor given

-scaleN <float>  Scaling factor with normalization. 
    The waveform is scaled to its maximum level, after which 
    it is scaled by the factor given

-lpfilter <int>  Low pass filter, with cutoff frequency in Hz 
    Filtering is performed by a FIR filter which is built at run 
    time. The order of the filter can be given by -forder. The 
    default value is 199

-hpfilter <int>  High pass filter, with cutoff frequency in Hz 
    Filtering is performed by a FIR filter which is 
    built at run time. The order of the filter can 
    be given by -forder. The default value is 199.

-forder <int>  Order of FIR filter used for lpfilter and 
    hpfilter. This must be ODD. Sensible values range 
    from 19 (quick but with a shallow rolloff) to 199 
    (slow but with a steep rolloff). The default is 199.

-fafter Do filtering after other operations such as 
    resampling (default : filter before other operations)

-info Print information about file and header. 
    This option gives useful information such as file 
    length, sampling rate, number of channels etc
    No output is produced

-add A new single channel waveform is created by adding 
    the corresponding sample points of each input waveform

-pc <string> Combine input waveforms to form a single 
    multichannel waveform.  The argument to this option controls 
    how long the new waveform should be. If the option 
    is LONGEST, the output wave if the length of the 
    longest input wave and shorter waves are padded with 
    zeros at the end. If the option is FIRST, the length 
    of the new waveform is the length of the first file 
    on the command line, and subsequent waves are padded 
    or cut to this length

-key <ifile> Label file designating subsections, for use with 
    -divide. The KEYLAB file is a label file which specifies 
    where chunks (such as individual sentences) in 
    a waveform begin and end. See section of wave extraction.

-divide  Divide a single input waveform into multiple output 
    waveforms. Each output waveform is extracted from the 
    input waveform by using the KEYLAB file, which 
    specifies the start and stop times for each chunk. 
    The output files are named according to the filename 
    in the KEYLAB file, with extension given by -ext. See 
    section on wave extraction

-ext <string>    File extension for divided waveforms

-extract <string> Used in conjunction with -key to extract a 
    single section of waveform from the input 
    waveform. The argument is the name of a file given 
    in the file column of the KEYLAB file.

Duration: 2.0182
Sample rate: 8000
Number of samples: 16146
Number of channels: 1
Header type: nist
Data type: short
Duration: 2.0637
Sample rate: 20000
Number of samples: 41274
Number of channels: 1
Header type: nist
Data type: short
Duration: 2.0714
Sample rate: 8000
Number of samples: 16571
Number of channels: 1
Header type: nist
Data type: short
