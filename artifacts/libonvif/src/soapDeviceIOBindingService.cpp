/* soapDeviceIOBindingService.cpp
   Generated by gSOAP 2.8.8 from onvif.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapDeviceIOBindingService.h"

DeviceIOBindingService::DeviceIOBindingService()
{	this->soap = soap_new();
	this->own = true;
	DeviceIOBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

DeviceIOBindingService::DeviceIOBindingService(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	DeviceIOBindingService_init(_soap->imode, _soap->omode);
}

DeviceIOBindingService::DeviceIOBindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	DeviceIOBindingService_init(iomode, iomode);
}

DeviceIOBindingService::DeviceIOBindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	DeviceIOBindingService_init(imode, omode);
}

DeviceIOBindingService::~DeviceIOBindingService()
{	if (this->own)
		soap_free(this->soap);
}

void DeviceIOBindingService::DeviceIOBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
	{"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
	{"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
	{"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
	{"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
	{"wsa", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL, NULL},
	{"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
	{"ns1", "http://www.w3.org/2005/08/addressing", NULL, NULL},
	{"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"ns5", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"ns2", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
	{"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
	{"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
	{"tev-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
	{"tev-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
	{"tev-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
	{"tev-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
	{"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"tev-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
	{"tev-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
	{"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"tev-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
};

void DeviceIOBindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void DeviceIOBindingService::reset()
{	destroy();
	soap_done(this->soap);
	soap_init(this->soap);
	DeviceIOBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
DeviceIOBindingService *DeviceIOBindingService::copy()
{	DeviceIOBindingService *dup = SOAP_NEW_COPY(DeviceIOBindingService);
	if (dup)
		soap_copy_context(dup->soap, this->soap);
	return dup;
}
#endif

int DeviceIOBindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int DeviceIOBindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int DeviceIOBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int DeviceIOBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int DeviceIOBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int DeviceIOBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void DeviceIOBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void DeviceIOBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *DeviceIOBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void DeviceIOBindingService::soap_noheader()
{	this->soap->header = NULL;
}

void DeviceIOBindingService::soap_header(struct _wsse__Security *wsse__Security, char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence)
{	::soap_header(this->soap);
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->wsa__MessageID = wsa__MessageID;
	this->soap->header->wsa__RelatesTo = wsa__RelatesTo;
	this->soap->header->wsa__From = wsa__From;
	this->soap->header->wsa__ReplyTo = wsa__ReplyTo;
	this->soap->header->wsa__FaultTo = wsa__FaultTo;
	this->soap->header->wsa__To = wsa__To;
	this->soap->header->wsa__Action = wsa__Action;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
}

const SOAP_ENV__Header *DeviceIOBindingService::soap_header()
{	return this->soap->header;
}

int DeviceIOBindingService::run(int port)
{	if (soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()) || serve())
				return this->soap->error;
			soap_destroy(this->soap);
			soap_end(this->soap);
		}
	}
	else
		return this->soap->error;
	return SOAP_OK;
}

SOAP_SOCKET DeviceIOBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET DeviceIOBindingService::accept()
{	return soap_accept(this->soap);
}

int DeviceIOBindingService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->soap->max_keep_alive;
#endif
	do
	{

#ifndef WITH_FASTCGI
		if (this->soap->max_keep_alive > 0 && !--k)
			this->soap->keep_alive = 0;
#endif

		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if (dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___onvifDeviceIO__GetServiceCapabilities(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetRelayOutputOptions(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetAudioSources(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetAudioOutputs(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetVideoSources(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetVideoOutputs(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetVideoSourceConfiguration(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetVideoOutputConfiguration(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetAudioSourceConfiguration(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetAudioOutputConfiguration(DeviceIOBindingService*);
static int serve___onvifDeviceIO__SetVideoSourceConfiguration(DeviceIOBindingService*);
static int serve___onvifDeviceIO__SetVideoOutputConfiguration(DeviceIOBindingService*);
static int serve___onvifDeviceIO__SetAudioSourceConfiguration(DeviceIOBindingService*);
static int serve___onvifDeviceIO__SetAudioOutputConfiguration(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetVideoSourceConfigurationOptions(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetVideoOutputConfigurationOptions(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetAudioSourceConfigurationOptions(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetAudioOutputConfigurationOptions(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetRelayOutputs(DeviceIOBindingService*);
static int serve___onvifDeviceIO__SetRelayOutputSettings(DeviceIOBindingService*);
static int serve___onvifDeviceIO__SetRelayOutputState(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetDigitalInputs(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetSerialPorts(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetSerialPortConfiguration(DeviceIOBindingService*);
static int serve___onvifDeviceIO__SetSerialPortConfiguration(DeviceIOBindingService*);
static int serve___onvifDeviceIO__GetSerialPortConfigurationOptions(DeviceIOBindingService*);
static int serve___onvifDeviceIO__SendReceiveSerialCommand(DeviceIOBindingService*);

int DeviceIOBindingService::dispatch()
{	DeviceIOBindingService_init(this->soap->imode, this->soap->omode);
	soap_peek_element(this->soap);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetServiceCapabilities"))
		return serve___onvifDeviceIO__GetServiceCapabilities(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetRelayOutputOptions"))
		return serve___onvifDeviceIO__GetRelayOutputOptions(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifMedia:GetAudioSources"))
		return serve___onvifDeviceIO__GetAudioSources(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifMedia:GetAudioOutputs"))
		return serve___onvifDeviceIO__GetAudioOutputs(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifMedia:GetVideoSources"))
		return serve___onvifDeviceIO__GetVideoSources(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetVideoOutputs"))
		return serve___onvifDeviceIO__GetVideoOutputs(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetVideoSourceConfiguration"))
		return serve___onvifDeviceIO__GetVideoSourceConfiguration(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetVideoOutputConfiguration"))
		return serve___onvifDeviceIO__GetVideoOutputConfiguration(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetAudioSourceConfiguration"))
		return serve___onvifDeviceIO__GetAudioSourceConfiguration(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetAudioOutputConfiguration"))
		return serve___onvifDeviceIO__GetAudioOutputConfiguration(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:SetVideoSourceConfiguration"))
		return serve___onvifDeviceIO__SetVideoSourceConfiguration(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:SetVideoOutputConfiguration"))
		return serve___onvifDeviceIO__SetVideoOutputConfiguration(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:SetAudioSourceConfiguration"))
		return serve___onvifDeviceIO__SetAudioSourceConfiguration(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:SetAudioOutputConfiguration"))
		return serve___onvifDeviceIO__SetAudioOutputConfiguration(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetVideoSourceConfigurationOptions"))
		return serve___onvifDeviceIO__GetVideoSourceConfigurationOptions(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetVideoOutputConfigurationOptions"))
		return serve___onvifDeviceIO__GetVideoOutputConfigurationOptions(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetAudioSourceConfigurationOptions"))
		return serve___onvifDeviceIO__GetAudioSourceConfigurationOptions(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetAudioOutputConfigurationOptions"))
		return serve___onvifDeviceIO__GetAudioOutputConfigurationOptions(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDevice:GetRelayOutputs"))
		return serve___onvifDeviceIO__GetRelayOutputs(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:SetRelayOutputSettings"))
		return serve___onvifDeviceIO__SetRelayOutputSettings(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDevice:SetRelayOutputState"))
		return serve___onvifDeviceIO__SetRelayOutputState(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetDigitalInputs"))
		return serve___onvifDeviceIO__GetDigitalInputs(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetSerialPorts"))
		return serve___onvifDeviceIO__GetSerialPorts(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetSerialPortConfiguration"))
		return serve___onvifDeviceIO__GetSerialPortConfiguration(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:SetSerialPortConfiguration"))
		return serve___onvifDeviceIO__SetSerialPortConfiguration(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:GetSerialPortConfigurationOptions"))
		return serve___onvifDeviceIO__GetSerialPortConfigurationOptions(this);
	if (!soap_match_tag(this->soap, this->soap->tag, "onvifDeviceIO:SendReceiveSerialCommand"))
		return serve___onvifDeviceIO__SendReceiveSerialCommand(this);
	return this->soap->error = SOAP_NO_METHOD;
}

static int serve___onvifDeviceIO__GetServiceCapabilities(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetServiceCapabilities soap_tmp___onvifDeviceIO__GetServiceCapabilities;
	_onvifDeviceIO__GetServiceCapabilitiesResponse onvifDeviceIO__GetServiceCapabilitiesResponse;
	onvifDeviceIO__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetServiceCapabilities(soap, &soap_tmp___onvifDeviceIO__GetServiceCapabilities);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetServiceCapabilities(soap, &soap_tmp___onvifDeviceIO__GetServiceCapabilities, "-onvifDeviceIO:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetServiceCapabilities(soap_tmp___onvifDeviceIO__GetServiceCapabilities.onvifDeviceIO__GetServiceCapabilities, &onvifDeviceIO__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetServiceCapabilitiesResponse.soap_put(soap, "onvifDeviceIO:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetServiceCapabilitiesResponse.soap_put(soap, "onvifDeviceIO:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetRelayOutputOptions(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetRelayOutputOptions soap_tmp___onvifDeviceIO__GetRelayOutputOptions;
	_onvifDeviceIO__GetRelayOutputOptionsResponse onvifDeviceIO__GetRelayOutputOptionsResponse;
	onvifDeviceIO__GetRelayOutputOptionsResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetRelayOutputOptions(soap, &soap_tmp___onvifDeviceIO__GetRelayOutputOptions);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetRelayOutputOptions(soap, &soap_tmp___onvifDeviceIO__GetRelayOutputOptions, "-onvifDeviceIO:GetRelayOutputOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetRelayOutputOptions(soap_tmp___onvifDeviceIO__GetRelayOutputOptions.onvifDeviceIO__GetRelayOutputOptions, &onvifDeviceIO__GetRelayOutputOptionsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetRelayOutputOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetRelayOutputOptionsResponse.soap_put(soap, "onvifDeviceIO:GetRelayOutputOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetRelayOutputOptionsResponse.soap_put(soap, "onvifDeviceIO:GetRelayOutputOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetAudioSources(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetAudioSources soap_tmp___onvifDeviceIO__GetAudioSources;
	_onvifMedia__GetAudioSourcesResponse onvifMedia__GetAudioSourcesResponse;
	onvifMedia__GetAudioSourcesResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetAudioSources(soap, &soap_tmp___onvifDeviceIO__GetAudioSources);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetAudioSources(soap, &soap_tmp___onvifDeviceIO__GetAudioSources, "-onvifDeviceIO:GetAudioSources", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSources(soap_tmp___onvifDeviceIO__GetAudioSources.onvifMedia__GetAudioSources, &onvifMedia__GetAudioSourcesResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifMedia__GetAudioSourcesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioSourcesResponse.soap_put(soap, "onvifMedia:GetAudioSourcesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioSourcesResponse.soap_put(soap, "onvifMedia:GetAudioSourcesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetAudioOutputs(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetAudioOutputs soap_tmp___onvifDeviceIO__GetAudioOutputs;
	_onvifMedia__GetAudioOutputsResponse onvifMedia__GetAudioOutputsResponse;
	onvifMedia__GetAudioOutputsResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetAudioOutputs(soap, &soap_tmp___onvifDeviceIO__GetAudioOutputs);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetAudioOutputs(soap, &soap_tmp___onvifDeviceIO__GetAudioOutputs, "-onvifDeviceIO:GetAudioOutputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputs(soap_tmp___onvifDeviceIO__GetAudioOutputs.onvifMedia__GetAudioOutputs, &onvifMedia__GetAudioOutputsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifMedia__GetAudioOutputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioOutputsResponse.soap_put(soap, "onvifMedia:GetAudioOutputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioOutputsResponse.soap_put(soap, "onvifMedia:GetAudioOutputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetVideoSources(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetVideoSources soap_tmp___onvifDeviceIO__GetVideoSources;
	_onvifMedia__GetVideoSourcesResponse onvifMedia__GetVideoSourcesResponse;
	onvifMedia__GetVideoSourcesResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetVideoSources(soap, &soap_tmp___onvifDeviceIO__GetVideoSources);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetVideoSources(soap, &soap_tmp___onvifDeviceIO__GetVideoSources, "-onvifDeviceIO:GetVideoSources", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSources(soap_tmp___onvifDeviceIO__GetVideoSources.onvifMedia__GetVideoSources, &onvifMedia__GetVideoSourcesResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifMedia__GetVideoSourcesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetVideoSourcesResponse.soap_put(soap, "onvifMedia:GetVideoSourcesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetVideoSourcesResponse.soap_put(soap, "onvifMedia:GetVideoSourcesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetVideoOutputs(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetVideoOutputs soap_tmp___onvifDeviceIO__GetVideoOutputs;
	_onvifDeviceIO__GetVideoOutputsResponse onvifDeviceIO__GetVideoOutputsResponse;
	onvifDeviceIO__GetVideoOutputsResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetVideoOutputs(soap, &soap_tmp___onvifDeviceIO__GetVideoOutputs);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetVideoOutputs(soap, &soap_tmp___onvifDeviceIO__GetVideoOutputs, "-onvifDeviceIO:GetVideoOutputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoOutputs(soap_tmp___onvifDeviceIO__GetVideoOutputs.onvifDeviceIO__GetVideoOutputs, &onvifDeviceIO__GetVideoOutputsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetVideoOutputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetVideoOutputsResponse.soap_put(soap, "onvifDeviceIO:GetVideoOutputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetVideoOutputsResponse.soap_put(soap, "onvifDeviceIO:GetVideoOutputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetVideoSourceConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetVideoSourceConfiguration soap_tmp___onvifDeviceIO__GetVideoSourceConfiguration;
	_onvifDeviceIO__GetVideoSourceConfigurationResponse onvifDeviceIO__GetVideoSourceConfigurationResponse;
	onvifDeviceIO__GetVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetVideoSourceConfiguration(soap, &soap_tmp___onvifDeviceIO__GetVideoSourceConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetVideoSourceConfiguration(soap, &soap_tmp___onvifDeviceIO__GetVideoSourceConfiguration, "-onvifDeviceIO:GetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfiguration(soap_tmp___onvifDeviceIO__GetVideoSourceConfiguration.onvifDeviceIO__GetVideoSourceConfiguration, &onvifDeviceIO__GetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetVideoSourceConfigurationResponse.soap_put(soap, "onvifDeviceIO:GetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetVideoSourceConfigurationResponse.soap_put(soap, "onvifDeviceIO:GetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetVideoOutputConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetVideoOutputConfiguration soap_tmp___onvifDeviceIO__GetVideoOutputConfiguration;
	_onvifDeviceIO__GetVideoOutputConfigurationResponse onvifDeviceIO__GetVideoOutputConfigurationResponse;
	onvifDeviceIO__GetVideoOutputConfigurationResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetVideoOutputConfiguration(soap, &soap_tmp___onvifDeviceIO__GetVideoOutputConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetVideoOutputConfiguration(soap, &soap_tmp___onvifDeviceIO__GetVideoOutputConfiguration, "-onvifDeviceIO:GetVideoOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoOutputConfiguration(soap_tmp___onvifDeviceIO__GetVideoOutputConfiguration.onvifDeviceIO__GetVideoOutputConfiguration, &onvifDeviceIO__GetVideoOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetVideoOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetVideoOutputConfigurationResponse.soap_put(soap, "onvifDeviceIO:GetVideoOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetVideoOutputConfigurationResponse.soap_put(soap, "onvifDeviceIO:GetVideoOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetAudioSourceConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetAudioSourceConfiguration soap_tmp___onvifDeviceIO__GetAudioSourceConfiguration;
	_onvifDeviceIO__GetAudioSourceConfigurationResponse onvifDeviceIO__GetAudioSourceConfigurationResponse;
	onvifDeviceIO__GetAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetAudioSourceConfiguration(soap, &soap_tmp___onvifDeviceIO__GetAudioSourceConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetAudioSourceConfiguration(soap, &soap_tmp___onvifDeviceIO__GetAudioSourceConfiguration, "-onvifDeviceIO:GetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfiguration(soap_tmp___onvifDeviceIO__GetAudioSourceConfiguration.onvifDeviceIO__GetAudioSourceConfiguration, &onvifDeviceIO__GetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetAudioSourceConfigurationResponse.soap_put(soap, "onvifDeviceIO:GetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetAudioSourceConfigurationResponse.soap_put(soap, "onvifDeviceIO:GetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetAudioOutputConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetAudioOutputConfiguration soap_tmp___onvifDeviceIO__GetAudioOutputConfiguration;
	_onvifDeviceIO__GetAudioOutputConfigurationResponse onvifDeviceIO__GetAudioOutputConfigurationResponse;
	onvifDeviceIO__GetAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetAudioOutputConfiguration(soap, &soap_tmp___onvifDeviceIO__GetAudioOutputConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetAudioOutputConfiguration(soap, &soap_tmp___onvifDeviceIO__GetAudioOutputConfiguration, "-onvifDeviceIO:GetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfiguration(soap_tmp___onvifDeviceIO__GetAudioOutputConfiguration.onvifDeviceIO__GetAudioOutputConfiguration, &onvifDeviceIO__GetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetAudioOutputConfigurationResponse.soap_put(soap, "onvifDeviceIO:GetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetAudioOutputConfigurationResponse.soap_put(soap, "onvifDeviceIO:GetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__SetVideoSourceConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__SetVideoSourceConfiguration soap_tmp___onvifDeviceIO__SetVideoSourceConfiguration;
	_onvifDeviceIO__SetVideoSourceConfigurationResponse onvifDeviceIO__SetVideoSourceConfigurationResponse;
	onvifDeviceIO__SetVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___onvifDeviceIO__SetVideoSourceConfiguration(soap, &soap_tmp___onvifDeviceIO__SetVideoSourceConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__SetVideoSourceConfiguration(soap, &soap_tmp___onvifDeviceIO__SetVideoSourceConfiguration, "-onvifDeviceIO:SetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoSourceConfiguration(soap_tmp___onvifDeviceIO__SetVideoSourceConfiguration.onvifDeviceIO__SetVideoSourceConfiguration, &onvifDeviceIO__SetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__SetVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__SetVideoSourceConfigurationResponse.soap_put(soap, "onvifDeviceIO:SetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__SetVideoSourceConfigurationResponse.soap_put(soap, "onvifDeviceIO:SetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__SetVideoOutputConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__SetVideoOutputConfiguration soap_tmp___onvifDeviceIO__SetVideoOutputConfiguration;
	_onvifDeviceIO__SetVideoOutputConfigurationResponse onvifDeviceIO__SetVideoOutputConfigurationResponse;
	onvifDeviceIO__SetVideoOutputConfigurationResponse.soap_default(soap);
	soap_default___onvifDeviceIO__SetVideoOutputConfiguration(soap, &soap_tmp___onvifDeviceIO__SetVideoOutputConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__SetVideoOutputConfiguration(soap, &soap_tmp___onvifDeviceIO__SetVideoOutputConfiguration, "-onvifDeviceIO:SetVideoOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoOutputConfiguration(soap_tmp___onvifDeviceIO__SetVideoOutputConfiguration.onvifDeviceIO__SetVideoOutputConfiguration, &onvifDeviceIO__SetVideoOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__SetVideoOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__SetVideoOutputConfigurationResponse.soap_put(soap, "onvifDeviceIO:SetVideoOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__SetVideoOutputConfigurationResponse.soap_put(soap, "onvifDeviceIO:SetVideoOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__SetAudioSourceConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__SetAudioSourceConfiguration soap_tmp___onvifDeviceIO__SetAudioSourceConfiguration;
	_onvifDeviceIO__SetAudioSourceConfigurationResponse onvifDeviceIO__SetAudioSourceConfigurationResponse;
	onvifDeviceIO__SetAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___onvifDeviceIO__SetAudioSourceConfiguration(soap, &soap_tmp___onvifDeviceIO__SetAudioSourceConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__SetAudioSourceConfiguration(soap, &soap_tmp___onvifDeviceIO__SetAudioSourceConfiguration, "-onvifDeviceIO:SetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioSourceConfiguration(soap_tmp___onvifDeviceIO__SetAudioSourceConfiguration.onvifDeviceIO__SetAudioSourceConfiguration, &onvifDeviceIO__SetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__SetAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__SetAudioSourceConfigurationResponse.soap_put(soap, "onvifDeviceIO:SetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__SetAudioSourceConfigurationResponse.soap_put(soap, "onvifDeviceIO:SetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__SetAudioOutputConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__SetAudioOutputConfiguration soap_tmp___onvifDeviceIO__SetAudioOutputConfiguration;
	_onvifDeviceIO__SetAudioOutputConfigurationResponse onvifDeviceIO__SetAudioOutputConfigurationResponse;
	onvifDeviceIO__SetAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___onvifDeviceIO__SetAudioOutputConfiguration(soap, &soap_tmp___onvifDeviceIO__SetAudioOutputConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__SetAudioOutputConfiguration(soap, &soap_tmp___onvifDeviceIO__SetAudioOutputConfiguration, "-onvifDeviceIO:SetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioOutputConfiguration(soap_tmp___onvifDeviceIO__SetAudioOutputConfiguration.onvifDeviceIO__SetAudioOutputConfiguration, &onvifDeviceIO__SetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__SetAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__SetAudioOutputConfigurationResponse.soap_put(soap, "onvifDeviceIO:SetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__SetAudioOutputConfigurationResponse.soap_put(soap, "onvifDeviceIO:SetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetVideoSourceConfigurationOptions(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetVideoSourceConfigurationOptions soap_tmp___onvifDeviceIO__GetVideoSourceConfigurationOptions;
	_onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse;
	onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifDeviceIO__GetVideoSourceConfigurationOptions);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifDeviceIO__GetVideoSourceConfigurationOptions, "-onvifDeviceIO:GetVideoSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfigurationOptions(soap_tmp___onvifDeviceIO__GetVideoSourceConfigurationOptions.onvifDeviceIO__GetVideoSourceConfigurationOptions, &onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "onvifDeviceIO:GetVideoSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "onvifDeviceIO:GetVideoSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetVideoOutputConfigurationOptions(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetVideoOutputConfigurationOptions soap_tmp___onvifDeviceIO__GetVideoOutputConfigurationOptions;
	_onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse;
	onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetVideoOutputConfigurationOptions(soap, &soap_tmp___onvifDeviceIO__GetVideoOutputConfigurationOptions);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetVideoOutputConfigurationOptions(soap, &soap_tmp___onvifDeviceIO__GetVideoOutputConfigurationOptions, "-onvifDeviceIO:GetVideoOutputConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoOutputConfigurationOptions(soap_tmp___onvifDeviceIO__GetVideoOutputConfigurationOptions.onvifDeviceIO__GetVideoOutputConfigurationOptions, &onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse.soap_put(soap, "onvifDeviceIO:GetVideoOutputConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse.soap_put(soap, "onvifDeviceIO:GetVideoOutputConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetAudioSourceConfigurationOptions(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetAudioSourceConfigurationOptions soap_tmp___onvifDeviceIO__GetAudioSourceConfigurationOptions;
	_onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse;
	onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifDeviceIO__GetAudioSourceConfigurationOptions);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifDeviceIO__GetAudioSourceConfigurationOptions, "-onvifDeviceIO:GetAudioSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfigurationOptions(soap_tmp___onvifDeviceIO__GetAudioSourceConfigurationOptions.onvifDeviceIO__GetAudioSourceConfigurationOptions, &onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "onvifDeviceIO:GetAudioSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "onvifDeviceIO:GetAudioSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetAudioOutputConfigurationOptions(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetAudioOutputConfigurationOptions soap_tmp___onvifDeviceIO__GetAudioOutputConfigurationOptions;
	_onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse;
	onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifDeviceIO__GetAudioOutputConfigurationOptions);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifDeviceIO__GetAudioOutputConfigurationOptions, "-onvifDeviceIO:GetAudioOutputConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfigurationOptions(soap_tmp___onvifDeviceIO__GetAudioOutputConfigurationOptions.onvifDeviceIO__GetAudioOutputConfigurationOptions, &onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "onvifDeviceIO:GetAudioOutputConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "onvifDeviceIO:GetAudioOutputConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetRelayOutputs(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetRelayOutputs soap_tmp___onvifDeviceIO__GetRelayOutputs;
	_onvifDevice__GetRelayOutputsResponse onvifDevice__GetRelayOutputsResponse;
	onvifDevice__GetRelayOutputsResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetRelayOutputs(soap, &soap_tmp___onvifDeviceIO__GetRelayOutputs);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetRelayOutputs(soap, &soap_tmp___onvifDeviceIO__GetRelayOutputs, "-onvifDeviceIO:GetRelayOutputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetRelayOutputs(soap_tmp___onvifDeviceIO__GetRelayOutputs.onvifDevice__GetRelayOutputs, &onvifDevice__GetRelayOutputsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDevice__GetRelayOutputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDevice__GetRelayOutputsResponse.soap_put(soap, "onvifDevice:GetRelayOutputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDevice__GetRelayOutputsResponse.soap_put(soap, "onvifDevice:GetRelayOutputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__SetRelayOutputSettings(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__SetRelayOutputSettings soap_tmp___onvifDeviceIO__SetRelayOutputSettings;
	_onvifDeviceIO__SetRelayOutputSettingsResponse onvifDeviceIO__SetRelayOutputSettingsResponse;
	onvifDeviceIO__SetRelayOutputSettingsResponse.soap_default(soap);
	soap_default___onvifDeviceIO__SetRelayOutputSettings(soap, &soap_tmp___onvifDeviceIO__SetRelayOutputSettings);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__SetRelayOutputSettings(soap, &soap_tmp___onvifDeviceIO__SetRelayOutputSettings, "-onvifDeviceIO:SetRelayOutputSettings", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetRelayOutputSettings(soap_tmp___onvifDeviceIO__SetRelayOutputSettings.onvifDeviceIO__SetRelayOutputSettings, &onvifDeviceIO__SetRelayOutputSettingsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__SetRelayOutputSettingsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__SetRelayOutputSettingsResponse.soap_put(soap, "onvifDeviceIO:SetRelayOutputSettingsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__SetRelayOutputSettingsResponse.soap_put(soap, "onvifDeviceIO:SetRelayOutputSettingsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__SetRelayOutputState(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__SetRelayOutputState soap_tmp___onvifDeviceIO__SetRelayOutputState;
	_onvifDevice__SetRelayOutputStateResponse onvifDevice__SetRelayOutputStateResponse;
	onvifDevice__SetRelayOutputStateResponse.soap_default(soap);
	soap_default___onvifDeviceIO__SetRelayOutputState(soap, &soap_tmp___onvifDeviceIO__SetRelayOutputState);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__SetRelayOutputState(soap, &soap_tmp___onvifDeviceIO__SetRelayOutputState, "-onvifDeviceIO:SetRelayOutputState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetRelayOutputState(soap_tmp___onvifDeviceIO__SetRelayOutputState.onvifDevice__SetRelayOutputState, &onvifDevice__SetRelayOutputStateResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDevice__SetRelayOutputStateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDevice__SetRelayOutputStateResponse.soap_put(soap, "onvifDevice:SetRelayOutputStateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDevice__SetRelayOutputStateResponse.soap_put(soap, "onvifDevice:SetRelayOutputStateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetDigitalInputs(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetDigitalInputs soap_tmp___onvifDeviceIO__GetDigitalInputs;
	_onvifDeviceIO__GetDigitalInputsResponse onvifDeviceIO__GetDigitalInputsResponse;
	onvifDeviceIO__GetDigitalInputsResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetDigitalInputs(soap, &soap_tmp___onvifDeviceIO__GetDigitalInputs);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetDigitalInputs(soap, &soap_tmp___onvifDeviceIO__GetDigitalInputs, "-onvifDeviceIO:GetDigitalInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetDigitalInputs(soap_tmp___onvifDeviceIO__GetDigitalInputs.onvifDeviceIO__GetDigitalInputs, &onvifDeviceIO__GetDigitalInputsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetDigitalInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetDigitalInputsResponse.soap_put(soap, "onvifDeviceIO:GetDigitalInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetDigitalInputsResponse.soap_put(soap, "onvifDeviceIO:GetDigitalInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetSerialPorts(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetSerialPorts soap_tmp___onvifDeviceIO__GetSerialPorts;
	_onvifDeviceIO__GetSerialPortsResponse onvifDeviceIO__GetSerialPortsResponse;
	onvifDeviceIO__GetSerialPortsResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetSerialPorts(soap, &soap_tmp___onvifDeviceIO__GetSerialPorts);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetSerialPorts(soap, &soap_tmp___onvifDeviceIO__GetSerialPorts, "-onvifDeviceIO:GetSerialPorts", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetSerialPorts(soap_tmp___onvifDeviceIO__GetSerialPorts.onvifDeviceIO__GetSerialPorts, &onvifDeviceIO__GetSerialPortsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetSerialPortsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetSerialPortsResponse.soap_put(soap, "onvifDeviceIO:GetSerialPortsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetSerialPortsResponse.soap_put(soap, "onvifDeviceIO:GetSerialPortsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetSerialPortConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetSerialPortConfiguration soap_tmp___onvifDeviceIO__GetSerialPortConfiguration;
	_onvifDeviceIO__GetSerialPortConfigurationResponse onvifDeviceIO__GetSerialPortConfigurationResponse;
	onvifDeviceIO__GetSerialPortConfigurationResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetSerialPortConfiguration(soap, &soap_tmp___onvifDeviceIO__GetSerialPortConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetSerialPortConfiguration(soap, &soap_tmp___onvifDeviceIO__GetSerialPortConfiguration, "-onvifDeviceIO:GetSerialPortConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetSerialPortConfiguration(soap_tmp___onvifDeviceIO__GetSerialPortConfiguration.onvifDeviceIO__GetSerialPortConfiguration, &onvifDeviceIO__GetSerialPortConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetSerialPortConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetSerialPortConfigurationResponse.soap_put(soap, "onvifDeviceIO:GetSerialPortConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetSerialPortConfigurationResponse.soap_put(soap, "onvifDeviceIO:GetSerialPortConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__SetSerialPortConfiguration(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__SetSerialPortConfiguration soap_tmp___onvifDeviceIO__SetSerialPortConfiguration;
	_onvifDeviceIO__SetSerialPortConfigurationResponse onvifDeviceIO__SetSerialPortConfigurationResponse;
	onvifDeviceIO__SetSerialPortConfigurationResponse.soap_default(soap);
	soap_default___onvifDeviceIO__SetSerialPortConfiguration(soap, &soap_tmp___onvifDeviceIO__SetSerialPortConfiguration);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__SetSerialPortConfiguration(soap, &soap_tmp___onvifDeviceIO__SetSerialPortConfiguration, "-onvifDeviceIO:SetSerialPortConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetSerialPortConfiguration(soap_tmp___onvifDeviceIO__SetSerialPortConfiguration.onvifDeviceIO__SetSerialPortConfiguration, &onvifDeviceIO__SetSerialPortConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__SetSerialPortConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__SetSerialPortConfigurationResponse.soap_put(soap, "onvifDeviceIO:SetSerialPortConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__SetSerialPortConfigurationResponse.soap_put(soap, "onvifDeviceIO:SetSerialPortConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__GetSerialPortConfigurationOptions(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__GetSerialPortConfigurationOptions soap_tmp___onvifDeviceIO__GetSerialPortConfigurationOptions;
	_onvifDeviceIO__GetSerialPortConfigurationOptionsResponse onvifDeviceIO__GetSerialPortConfigurationOptionsResponse;
	onvifDeviceIO__GetSerialPortConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifDeviceIO__GetSerialPortConfigurationOptions(soap, &soap_tmp___onvifDeviceIO__GetSerialPortConfigurationOptions);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__GetSerialPortConfigurationOptions(soap, &soap_tmp___onvifDeviceIO__GetSerialPortConfigurationOptions, "-onvifDeviceIO:GetSerialPortConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetSerialPortConfigurationOptions(soap_tmp___onvifDeviceIO__GetSerialPortConfigurationOptions.onvifDeviceIO__GetSerialPortConfigurationOptions, &onvifDeviceIO__GetSerialPortConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__GetSerialPortConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__GetSerialPortConfigurationOptionsResponse.soap_put(soap, "onvifDeviceIO:GetSerialPortConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__GetSerialPortConfigurationOptionsResponse.soap_put(soap, "onvifDeviceIO:GetSerialPortConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifDeviceIO__SendReceiveSerialCommand(DeviceIOBindingService *service)
{	struct soap *soap = service->soap;
	struct __onvifDeviceIO__SendReceiveSerialCommand soap_tmp___onvifDeviceIO__SendReceiveSerialCommand;
	_onvifDeviceIO__SendReceiveSerialCommandResponse onvifDeviceIO__SendReceiveSerialCommandResponse;
	onvifDeviceIO__SendReceiveSerialCommandResponse.soap_default(soap);
	soap_default___onvifDeviceIO__SendReceiveSerialCommand(soap, &soap_tmp___onvifDeviceIO__SendReceiveSerialCommand);
	soap->encodingStyle = NULL;
	if (!soap_get___onvifDeviceIO__SendReceiveSerialCommand(soap, &soap_tmp___onvifDeviceIO__SendReceiveSerialCommand, "-onvifDeviceIO:SendReceiveSerialCommand", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SendReceiveSerialCommand(soap_tmp___onvifDeviceIO__SendReceiveSerialCommand.onvifDeviceIO__SendReceiveSerialCommand, &onvifDeviceIO__SendReceiveSerialCommandResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	onvifDeviceIO__SendReceiveSerialCommandResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifDeviceIO__SendReceiveSerialCommandResponse.soap_put(soap, "onvifDeviceIO:SendReceiveSerialCommandResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifDeviceIO__SendReceiveSerialCommandResponse.soap_put(soap, "onvifDeviceIO:SendReceiveSerialCommandResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
