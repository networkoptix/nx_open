/* soapNotificationProducerBindingProxy.h
   Generated by gSOAP 2.8.8 from onvif.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapNotificationProducerBindingProxy_H
#define soapNotificationProducerBindingProxy_H
#include "soapH.h"

class SOAP_CMAC NotificationProducerBindingProxy
{ public:
	struct soap *soap;
	bool own;
	/// Endpoint URL of service 'NotificationProducerBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	NotificationProducerBindingProxy();
	/// Constructor to use/share an engine state
	NotificationProducerBindingProxy(struct soap*);
	/// Constructor with endpoint URL
	NotificationProducerBindingProxy(const char *url);
	/// Constructor with engine input+output mode control
	NotificationProducerBindingProxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	NotificationProducerBindingProxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	NotificationProducerBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~NotificationProducerBindingProxy();
	/// Initializer used by constructors
	virtual	void NotificationProducerBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (uses soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to default
	virtual	void reset();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Put SOAP Header in message
	virtual	void soap_header(struct _wsse__Security *wsse__Security, char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence);
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif

	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'Subscribe' (returns error code or SOAP_OK)
	virtual	int Subscribe(_oasisWsnB2__Subscribe *oasisWsnB2__Subscribe, _oasisWsnB2__SubscribeResponse *oasisWsnB2__SubscribeResponse) { return Subscribe(NULL, NULL, oasisWsnB2__Subscribe, oasisWsnB2__SubscribeResponse); }
	virtual	int Subscribe(const char *endpoint, const char *soap_action, _oasisWsnB2__Subscribe *oasisWsnB2__Subscribe, _oasisWsnB2__SubscribeResponse *oasisWsnB2__SubscribeResponse);

	/// Web service operation 'GetCurrentMessage' (returns error code or SOAP_OK)
	virtual	int GetCurrentMessage(_oasisWsnB2__GetCurrentMessage *oasisWsnB2__GetCurrentMessage, _oasisWsnB2__GetCurrentMessageResponse *oasisWsnB2__GetCurrentMessageResponse) { return GetCurrentMessage(NULL, NULL, oasisWsnB2__GetCurrentMessage, oasisWsnB2__GetCurrentMessageResponse); }
	virtual	int GetCurrentMessage(const char *endpoint, const char *soap_action, _oasisWsnB2__GetCurrentMessage *oasisWsnB2__GetCurrentMessage, _oasisWsnB2__GetCurrentMessageResponse *oasisWsnB2__GetCurrentMessageResponse);
};
#endif
