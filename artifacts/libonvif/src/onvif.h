/* onvif.h
   Generated by wsdl2h 2.8.8 from http://www.w3.org/2006/03/addressing/ws-addr.xsd http://docs.oasis-open.org/wsn/bw-2.wsdl http://www.onvif.org/onvif/ver10/device/wsdl/devicemgmt.wsdl http://www.onvif.org/onvif/ver10/event/wsdl/event.wsdl http://www.onvif.org/onvif/ver20/imaging/wsdl/imaging.wsdl http://www.onvif.org/onvif/ver10/media/wsdl/media.wsdl http://www.onvif.org/onvif/ver20/ptz/wsdl/ptz.wsdl http://www.onvif.org/ver10/deviceio.wsdl and typemap.dat
   2012-11-13 16:17:58 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2012 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on onvif.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"
//#import "ns1.h"	// ns1 = <http://www.w3.org/2005/08/addressing>
#import "wsse.h"
#import "wsa.h"
#import "wsdd10.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://www.w3.org/2005/08/addressing"
oasisWsrfRw2 = "http://docs.oasis-open.org/wsrf/rw-2"
oasisWsrfR2 = "http://docs.oasis-open.org/wsrf/r-2"
oasisWsrf = "http://docs.oasis-open.org/wsrf/bf-2"
oasisWsnB2 = "http://docs.oasis-open.org/wsn/b-2"
oasisWsnT1 = "http://docs.oasis-open.org/wsn/t-1"
onvifDevice = "http://www.onvif.org/ver10/device/wsdl"
onvifXsd = "http://www.onvif.org/ver10/schema"
ns5 = "http://www.w3.org/2004/08/xop/include"
onvifEvents = "http://www.onvif.org/ver10/events/wsdl"
onvifImg = "http://www.onvif.org/ver20/imaging/wsdl"
onvifMedia = "http://www.onvif.org/ver10/media/wsdl"
onvifPtz = "http://www.onvif.org/ver20/ptz/wsdl"
onvifDeviceIO = "http://www.onvif.org/ver10/deviceIO/wsdl"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://www.w3.org/2005/08/addressing"
//gsoap ns1   schema namespace:	http://www.w3.org/2005/08/addressing
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_oasisWsrfRw2	"http://docs.oasis-open.org/wsrf/rw-2"
//gsoap oasisWsrfRw2 schema namespace:	http://docs.oasis-open.org/wsrf/rw-2
//gsoap oasisWsrfRw2 schema elementForm:	qualified
//gsoap oasisWsrfRw2 schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_oasisWsrfR2	"http://docs.oasis-open.org/wsrf/r-2"
//gsoap oasisWsrfR2 schema namespace:	http://docs.oasis-open.org/wsrf/r-2
//gsoap oasisWsrfR2 schema elementForm:	qualified
//gsoap oasisWsrfR2 schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_oasisWsrf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap oasisWsrf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap oasisWsrf schema elementForm:	qualified
//gsoap oasisWsrf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_oasisWsnB2	"http://docs.oasis-open.org/wsn/b-2"
//gsoap oasisWsnB2 schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap oasisWsnB2 schema elementForm:	qualified
//gsoap oasisWsnB2 schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_oasisWsnT1	"http://docs.oasis-open.org/wsn/t-1"
//gsoap oasisWsnT1 schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap oasisWsnT1 schema elementForm:	qualified
//gsoap oasisWsnT1 schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_onvifDevice	"http://www.onvif.org/ver10/device/wsdl"
//gsoap onvifDevice schema namespace:	http://www.onvif.org/ver10/device/wsdl
//gsoap onvifDevice schema elementForm:	qualified
//gsoap onvifDevice schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_onvifXsd	"http://www.onvif.org/ver10/schema"
//gsoap onvifXsd schema namespace:	http://www.onvif.org/ver10/schema
//gsoap onvifXsd schema elementForm:	qualified
//gsoap onvifXsd schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns5	"http://www.w3.org/2004/08/xop/include"
//gsoap ns5   schema namespace:	http://www.w3.org/2004/08/xop/include
//gsoap ns5   schema form:	unqualified

#define SOAP_NAMESPACE_OF_onvifEvents	"http://www.onvif.org/ver10/events/wsdl"
//gsoap onvifEvents schema namespace:	http://www.onvif.org/ver10/events/wsdl
//gsoap onvifEvents schema elementForm:	qualified
//gsoap onvifEvents schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_onvifImg	"http://www.onvif.org/ver20/imaging/wsdl"
//gsoap onvifImg schema namespace:	http://www.onvif.org/ver20/imaging/wsdl
//gsoap onvifImg schema elementForm:	qualified
//gsoap onvifImg schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_onvifMedia	"http://www.onvif.org/ver10/media/wsdl"
//gsoap onvifMedia schema namespace:	http://www.onvif.org/ver10/media/wsdl
//gsoap onvifMedia schema elementForm:	qualified
//gsoap onvifMedia schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_onvifPtz	"http://www.onvif.org/ver20/ptz/wsdl"
//gsoap onvifPtz schema namespace:	http://www.onvif.org/ver20/ptz/wsdl
//gsoap onvifPtz schema elementForm:	qualified
//gsoap onvifPtz schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_onvifDeviceIO	"http://www.onvif.org/ver10/deviceIO/wsdl"
//gsoap onvifDeviceIO schema namespace:	http://www.onvif.org/ver10/deviceIO/wsdl
//gsoap onvifDeviceIO schema elementForm:	qualified
//gsoap onvifDeviceIO schema attributeForm:	unqualified
class xsd__anyType { _XML __item; struct soap *soap; };

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


// Imported type "http://www.w3.org/2005/08/addressing":EndpointReferenceType defined by ns1__EndpointReferenceType

/// Primitive built-in type "SOAP-ENV:Envelope"
typedef std::string SOAP_ENV__Envelope;

/// Primitive built-in type "xs:NCName"
typedef std::string xsd__NCName;

/// Class wrapper for built-in type "xs:NCName" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__NCName_ to check runtime type (see soapStub.h)
class xsd__NCName_ : public xsd__anyType
{ public:
    xsd__NCName                          __item;                       
};

/// Built-in type "xs:QName".
typedef std::string xsd__QName;

/// Class wrapper for built-in type "xs:QName" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__QName_ to check runtime type (see soapStub.h)
class xsd__QName_ : public xsd__anyType
{ public:
    xsd__QName                           __item;                       
};

/// Primitive built-in type "xs:anySimpleType"
typedef std::string xsd__anySimpleType;

/// Class wrapper for built-in type "xs:anySimpleType" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__anySimpleType_ to check runtime type (see soapStub.h)
class xsd__anySimpleType_ : public xsd__anyType
{ public:
    xsd__anySimpleType                   __item;                       
};

/// Primitive built-in type "xs:anyURI"
typedef std::string xsd__anyURI;

/// Class wrapper for built-in type "xs:anyURI" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__anyURI_ to check runtime type (see soapStub.h)
class xsd__anyURI_ : public xsd__anyType
{ public:
    xsd__anyURI                          __item;                       
};

/// Built-in type "xs:base64Binary".
class xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: for DIME and MTOM XOP attachments only
	struct soap *soap;
};

/// Class wrapper for built-in type "xs:base64Binary" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__base64Binary_ to check runtime type (see soapStub.h)
class xsd__base64Binary_ : public xsd__anyType
{ public:
    xsd__base64Binary                    __item;                       
};

/// Class wrapper for built-in type "xs:boolean" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__boolean to check runtime type (see soapStub.h)
class xsd__boolean : public xsd__anyType
{ public:
    bool                                 __item;                       
};

/// Class wrapper for built-in type "xs:dateTime" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__dateTime to check runtime type (see soapStub.h)
class xsd__dateTime : public xsd__anyType
{ public:
    time_t                               __item;                       
};

/// Primitive built-in type "xs:duration"
typedef std::string xsd__duration;

/// Class wrapper for built-in type "xs:duration" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__duration_ to check runtime type (see soapStub.h)
class xsd__duration_ : public xsd__anyType
{ public:
    xsd__duration                        __item;                       
};

/// Class wrapper for built-in type "xs:float" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__float to check runtime type (see soapStub.h)
class xsd__float : public xsd__anyType
{ public:
    float                                __item;                       
};

/// Built-in type "xs:hexBinary".
class xsd__hexBinary { unsigned char *__ptr; int __size; };

/// Class wrapper for built-in type "xs:hexBinary" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__hexBinary_ to check runtime type (see soapStub.h)
class xsd__hexBinary_ : public xsd__anyType
{ public:
    xsd__hexBinary                       __item;                       
};

/// Class wrapper for built-in type "xs:int" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__int to check runtime type (see soapStub.h)
class xsd__int : public xsd__anyType
{ public:
    int                                  __item;                       
};

/// Primitive built-in type "xs:integer"
typedef std::string xsd__integer;

/// Class wrapper for built-in type "xs:integer" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__integer_ to check runtime type (see soapStub.h)
class xsd__integer_ : public xsd__anyType
{ public:
    xsd__integer                         __item;                       
};

/// Primitive built-in type "xs:nonNegativeInteger"
typedef std::string xsd__nonNegativeInteger;

/// Class wrapper for built-in type "xs:nonNegativeInteger" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__nonNegativeInteger_ to check runtime type (see soapStub.h)
class xsd__nonNegativeInteger_ : public xsd__anyType
{ public:
    xsd__nonNegativeInteger              __item;                       
};

/// Class wrapper for built-in type "xs:string" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__string to check runtime type (see soapStub.h)
class xsd__string : public xsd__anyType
{ public:
    std::string                          __item;                       
};

/// Primitive built-in type "xs:token"
typedef std::string xsd__token;

/// Class wrapper for built-in type "xs:token" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__token_ to check runtime type (see soapStub.h)
class xsd__token_ : public xsd__anyType
{ public:
    xsd__token                           __item;                       
};

/// Class wrapper for built-in type "xs:unsignedLong" derived from xsd__anyType
/// Use soap_type() == SOAP_TYPE_xsd__unsignedLong to check runtime type (see soapStub.h)
class xsd__unsignedLong : public xsd__anyType
{ public:
    ULONG64                              __item;                       
};

/// Built-in attribute "xmime:contentType".
typedef std::string _xmime__contentType;

/// Built-in attribute "xml:lang".
typedef std::string _xml__lang;

/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns1__EndpointReferenceType.
class ns1__EndpointReferenceType;

//  Forward declaration of class ns1__ReferenceParametersType.
class ns1__ReferenceParametersType;

//  Forward declaration of class ns1__MetadataType.
class ns1__MetadataType;

//  Forward declaration of class ns1__RelatesToType.
class ns1__RelatesToType;

//  Forward declaration of class ns1__AttributedURIType.
class ns1__AttributedURIType;

//  Forward declaration of class ns1__AttributedUnsignedLongType.
class ns1__AttributedUnsignedLongType;

//  Forward declaration of class ns1__AttributedQNameType.
class ns1__AttributedQNameType;

//  Forward declaration of class ns1__ProblemActionType.
class ns1__ProblemActionType;

//  Forward declaration of class oasisWsrfR2__ResourceUnknownFaultType.
class oasisWsrfR2__ResourceUnknownFaultType;

//  Forward declaration of class oasisWsrfR2__ResourceUnavailableFaultType.
class oasisWsrfR2__ResourceUnavailableFaultType;

//  Forward declaration of class oasisWsrf__BaseFaultType.
class oasisWsrf__BaseFaultType;

//  Forward declaration of class oasisWsnB2__QueryExpressionType.
class oasisWsnB2__QueryExpressionType;

//  Forward declaration of class oasisWsnB2__TopicExpressionType.
class oasisWsnB2__TopicExpressionType;

//  Forward declaration of class oasisWsnB2__FilterType.
class oasisWsnB2__FilterType;

//  Forward declaration of class oasisWsnB2__SubscriptionPolicyType.
class oasisWsnB2__SubscriptionPolicyType;

//  Forward declaration of class oasisWsnB2__NotificationMessageHolderType.
class oasisWsnB2__NotificationMessageHolderType;

//  Forward declaration of class oasisWsnB2__SubscribeCreationFailedFaultType.
class oasisWsnB2__SubscribeCreationFailedFaultType;

//  Forward declaration of class oasisWsnB2__InvalidFilterFaultType.
class oasisWsnB2__InvalidFilterFaultType;

//  Forward declaration of class oasisWsnB2__TopicExpressionDialectUnknownFaultType.
class oasisWsnB2__TopicExpressionDialectUnknownFaultType;

//  Forward declaration of class oasisWsnB2__InvalidTopicExpressionFaultType.
class oasisWsnB2__InvalidTopicExpressionFaultType;

//  Forward declaration of class oasisWsnB2__TopicNotSupportedFaultType.
class oasisWsnB2__TopicNotSupportedFaultType;

//  Forward declaration of class oasisWsnB2__MultipleTopicsSpecifiedFaultType.
class oasisWsnB2__MultipleTopicsSpecifiedFaultType;

//  Forward declaration of class oasisWsnB2__InvalidProducerPropertiesExpressionFaultType.
class oasisWsnB2__InvalidProducerPropertiesExpressionFaultType;

//  Forward declaration of class oasisWsnB2__InvalidMessageContentExpressionFaultType.
class oasisWsnB2__InvalidMessageContentExpressionFaultType;

//  Forward declaration of class oasisWsnB2__UnrecognizedPolicyRequestFaultType.
class oasisWsnB2__UnrecognizedPolicyRequestFaultType;

//  Forward declaration of class oasisWsnB2__UnsupportedPolicyRequestFaultType.
class oasisWsnB2__UnsupportedPolicyRequestFaultType;

//  Forward declaration of class oasisWsnB2__NotifyMessageNotSupportedFaultType.
class oasisWsnB2__NotifyMessageNotSupportedFaultType;

//  Forward declaration of class oasisWsnB2__UnacceptableInitialTerminationTimeFaultType.
class oasisWsnB2__UnacceptableInitialTerminationTimeFaultType;

//  Forward declaration of class oasisWsnB2__NoCurrentMessageOnTopicFaultType.
class oasisWsnB2__NoCurrentMessageOnTopicFaultType;

//  Forward declaration of class oasisWsnB2__UnableToGetMessagesFaultType.
class oasisWsnB2__UnableToGetMessagesFaultType;

//  Forward declaration of class oasisWsnB2__UnableToDestroyPullPointFaultType.
class oasisWsnB2__UnableToDestroyPullPointFaultType;

//  Forward declaration of class oasisWsnB2__UnableToCreatePullPointFaultType.
class oasisWsnB2__UnableToCreatePullPointFaultType;

//  Forward declaration of class oasisWsnB2__UnacceptableTerminationTimeFaultType.
class oasisWsnB2__UnacceptableTerminationTimeFaultType;

//  Forward declaration of class oasisWsnB2__UnableToDestroySubscriptionFaultType.
class oasisWsnB2__UnableToDestroySubscriptionFaultType;

//  Forward declaration of class oasisWsnB2__PauseFailedFaultType.
class oasisWsnB2__PauseFailedFaultType;

//  Forward declaration of class oasisWsnB2__ResumeFailedFaultType.
class oasisWsnB2__ResumeFailedFaultType;

//  Forward declaration of class _oasisWsnB2__NotificationProducerRP.
class _oasisWsnB2__NotificationProducerRP;

//  Forward declaration of class _oasisWsnB2__SubscriptionManagerRP.
class _oasisWsnB2__SubscriptionManagerRP;

//  Forward declaration of class _oasisWsnB2__Notify.
class _oasisWsnB2__Notify;

//  Forward declaration of class _oasisWsnB2__UseRaw.
class _oasisWsnB2__UseRaw;

//  Forward declaration of class _oasisWsnB2__Subscribe.
class _oasisWsnB2__Subscribe;

//  Forward declaration of class _oasisWsnB2__SubscribeResponse.
class _oasisWsnB2__SubscribeResponse;

//  Forward declaration of class _oasisWsnB2__GetCurrentMessage.
class _oasisWsnB2__GetCurrentMessage;

//  Forward declaration of class _oasisWsnB2__GetCurrentMessageResponse.
class _oasisWsnB2__GetCurrentMessageResponse;

//  Forward declaration of class _oasisWsnB2__GetMessages.
class _oasisWsnB2__GetMessages;

//  Forward declaration of class _oasisWsnB2__GetMessagesResponse.
class _oasisWsnB2__GetMessagesResponse;

//  Forward declaration of class _oasisWsnB2__DestroyPullPoint.
class _oasisWsnB2__DestroyPullPoint;

//  Forward declaration of class _oasisWsnB2__DestroyPullPointResponse.
class _oasisWsnB2__DestroyPullPointResponse;

//  Forward declaration of class _oasisWsnB2__CreatePullPoint.
class _oasisWsnB2__CreatePullPoint;

//  Forward declaration of class _oasisWsnB2__CreatePullPointResponse.
class _oasisWsnB2__CreatePullPointResponse;

//  Forward declaration of class _oasisWsnB2__Renew.
class _oasisWsnB2__Renew;

//  Forward declaration of class _oasisWsnB2__RenewResponse.
class _oasisWsnB2__RenewResponse;

//  Forward declaration of class _oasisWsnB2__Unsubscribe.
class _oasisWsnB2__Unsubscribe;

//  Forward declaration of class _oasisWsnB2__UnsubscribeResponse.
class _oasisWsnB2__UnsubscribeResponse;

//  Forward declaration of class _oasisWsnB2__PauseSubscription.
class _oasisWsnB2__PauseSubscription;

//  Forward declaration of class _oasisWsnB2__PauseSubscriptionResponse.
class _oasisWsnB2__PauseSubscriptionResponse;

//  Forward declaration of class _oasisWsnB2__ResumeSubscription.
class _oasisWsnB2__ResumeSubscription;

//  Forward declaration of class _oasisWsnB2__ResumeSubscriptionResponse.
class _oasisWsnB2__ResumeSubscriptionResponse;

//  Forward declaration of class oasisWsnT1__Documentation.
class oasisWsnT1__Documentation;

//  Forward declaration of class oasisWsnT1__ExtensibleDocumented.
class oasisWsnT1__ExtensibleDocumented;

//  Forward declaration of class oasisWsnT1__QueryExpressionType.
class oasisWsnT1__QueryExpressionType;

//  Forward declaration of class oasisWsnT1__TopicNamespaceType.
class oasisWsnT1__TopicNamespaceType;

//  Forward declaration of class oasisWsnT1__TopicType.
class oasisWsnT1__TopicType;

//  Forward declaration of class oasisWsnT1__TopicSetType.
class oasisWsnT1__TopicSetType;

//  Forward declaration of class onvifDevice__Service.
class onvifDevice__Service;

//  Forward declaration of class onvifDevice__DeviceServiceCapabilities.
class onvifDevice__DeviceServiceCapabilities;

//  Forward declaration of class onvifDevice__NetworkCapabilities.
class onvifDevice__NetworkCapabilities;

//  Forward declaration of class onvifDevice__SecurityCapabilities.
class onvifDevice__SecurityCapabilities;

//  Forward declaration of class onvifDevice__SystemCapabilities.
class onvifDevice__SystemCapabilities;

//  Forward declaration of class onvifDevice__MiscCapabilities.
class onvifDevice__MiscCapabilities;

//  Forward declaration of class _onvifDevice__GetServices.
class _onvifDevice__GetServices;

//  Forward declaration of class _onvifDevice__GetServicesResponse.
class _onvifDevice__GetServicesResponse;

//  Forward declaration of class _onvifDevice__GetServiceCapabilities.
class _onvifDevice__GetServiceCapabilities;

//  Forward declaration of class _onvifDevice__GetServiceCapabilitiesResponse.
class _onvifDevice__GetServiceCapabilitiesResponse;

//  Forward declaration of class _onvifDevice__GetDeviceInformation.
class _onvifDevice__GetDeviceInformation;

//  Forward declaration of class _onvifDevice__GetDeviceInformationResponse.
class _onvifDevice__GetDeviceInformationResponse;

//  Forward declaration of class _onvifDevice__SetSystemDateAndTime.
class _onvifDevice__SetSystemDateAndTime;

//  Forward declaration of class _onvifDevice__SetSystemDateAndTimeResponse.
class _onvifDevice__SetSystemDateAndTimeResponse;

//  Forward declaration of class _onvifDevice__GetSystemDateAndTime.
class _onvifDevice__GetSystemDateAndTime;

//  Forward declaration of class _onvifDevice__GetSystemDateAndTimeResponse.
class _onvifDevice__GetSystemDateAndTimeResponse;

//  Forward declaration of class _onvifDevice__SetSystemFactoryDefault.
class _onvifDevice__SetSystemFactoryDefault;

//  Forward declaration of class _onvifDevice__SetSystemFactoryDefaultResponse.
class _onvifDevice__SetSystemFactoryDefaultResponse;

//  Forward declaration of class _onvifDevice__UpgradeSystemFirmware.
class _onvifDevice__UpgradeSystemFirmware;

//  Forward declaration of class _onvifDevice__UpgradeSystemFirmwareResponse.
class _onvifDevice__UpgradeSystemFirmwareResponse;

//  Forward declaration of class _onvifDevice__SystemReboot.
class _onvifDevice__SystemReboot;

//  Forward declaration of class _onvifDevice__SystemRebootResponse.
class _onvifDevice__SystemRebootResponse;

//  Forward declaration of class _onvifDevice__RestoreSystem.
class _onvifDevice__RestoreSystem;

//  Forward declaration of class _onvifDevice__RestoreSystemResponse.
class _onvifDevice__RestoreSystemResponse;

//  Forward declaration of class _onvifDevice__GetSystemBackup.
class _onvifDevice__GetSystemBackup;

//  Forward declaration of class _onvifDevice__GetSystemBackupResponse.
class _onvifDevice__GetSystemBackupResponse;

//  Forward declaration of class _onvifDevice__GetSystemSupportInformation.
class _onvifDevice__GetSystemSupportInformation;

//  Forward declaration of class _onvifDevice__GetSystemSupportInformationResponse.
class _onvifDevice__GetSystemSupportInformationResponse;

//  Forward declaration of class _onvifDevice__GetSystemLog.
class _onvifDevice__GetSystemLog;

//  Forward declaration of class _onvifDevice__GetSystemLogResponse.
class _onvifDevice__GetSystemLogResponse;

//  Forward declaration of class _onvifDevice__GetScopes.
class _onvifDevice__GetScopes;

//  Forward declaration of class _onvifDevice__GetScopesResponse.
class _onvifDevice__GetScopesResponse;

//  Forward declaration of class _onvifDevice__SetScopes.
class _onvifDevice__SetScopes;

//  Forward declaration of class _onvifDevice__SetScopesResponse.
class _onvifDevice__SetScopesResponse;

//  Forward declaration of class _onvifDevice__AddScopes.
class _onvifDevice__AddScopes;

//  Forward declaration of class _onvifDevice__AddScopesResponse.
class _onvifDevice__AddScopesResponse;

//  Forward declaration of class _onvifDevice__RemoveScopes.
class _onvifDevice__RemoveScopes;

//  Forward declaration of class _onvifDevice__RemoveScopesResponse.
class _onvifDevice__RemoveScopesResponse;

//  Forward declaration of class _onvifDevice__GetDiscoveryMode.
class _onvifDevice__GetDiscoveryMode;

//  Forward declaration of class _onvifDevice__GetDiscoveryModeResponse.
class _onvifDevice__GetDiscoveryModeResponse;

//  Forward declaration of class _onvifDevice__SetDiscoveryMode.
class _onvifDevice__SetDiscoveryMode;

//  Forward declaration of class _onvifDevice__SetDiscoveryModeResponse.
class _onvifDevice__SetDiscoveryModeResponse;

//  Forward declaration of class _onvifDevice__GetRemoteDiscoveryMode.
class _onvifDevice__GetRemoteDiscoveryMode;

//  Forward declaration of class _onvifDevice__GetRemoteDiscoveryModeResponse.
class _onvifDevice__GetRemoteDiscoveryModeResponse;

//  Forward declaration of class _onvifDevice__SetRemoteDiscoveryMode.
class _onvifDevice__SetRemoteDiscoveryMode;

//  Forward declaration of class _onvifDevice__SetRemoteDiscoveryModeResponse.
class _onvifDevice__SetRemoteDiscoveryModeResponse;

//  Forward declaration of class _onvifDevice__GetDPAddresses.
class _onvifDevice__GetDPAddresses;

//  Forward declaration of class _onvifDevice__GetDPAddressesResponse.
class _onvifDevice__GetDPAddressesResponse;

//  Forward declaration of class _onvifDevice__SetDPAddresses.
class _onvifDevice__SetDPAddresses;

//  Forward declaration of class _onvifDevice__SetDPAddressesResponse.
class _onvifDevice__SetDPAddressesResponse;

//  Forward declaration of class _onvifDevice__GetEndpointReference.
class _onvifDevice__GetEndpointReference;

//  Forward declaration of class _onvifDevice__GetEndpointReferenceResponse.
class _onvifDevice__GetEndpointReferenceResponse;

//  Forward declaration of class _onvifDevice__GetRemoteUser.
class _onvifDevice__GetRemoteUser;

//  Forward declaration of class _onvifDevice__GetRemoteUserResponse.
class _onvifDevice__GetRemoteUserResponse;

//  Forward declaration of class _onvifDevice__SetRemoteUser.
class _onvifDevice__SetRemoteUser;

//  Forward declaration of class _onvifDevice__SetRemoteUserResponse.
class _onvifDevice__SetRemoteUserResponse;

//  Forward declaration of class _onvifDevice__GetUsers.
class _onvifDevice__GetUsers;

//  Forward declaration of class _onvifDevice__GetUsersResponse.
class _onvifDevice__GetUsersResponse;

//  Forward declaration of class _onvifDevice__CreateUsers.
class _onvifDevice__CreateUsers;

//  Forward declaration of class _onvifDevice__CreateUsersResponse.
class _onvifDevice__CreateUsersResponse;

//  Forward declaration of class _onvifDevice__DeleteUsers.
class _onvifDevice__DeleteUsers;

//  Forward declaration of class _onvifDevice__DeleteUsersResponse.
class _onvifDevice__DeleteUsersResponse;

//  Forward declaration of class _onvifDevice__SetUser.
class _onvifDevice__SetUser;

//  Forward declaration of class _onvifDevice__SetUserResponse.
class _onvifDevice__SetUserResponse;

//  Forward declaration of class _onvifDevice__GetWsdlUrl.
class _onvifDevice__GetWsdlUrl;

//  Forward declaration of class _onvifDevice__GetWsdlUrlResponse.
class _onvifDevice__GetWsdlUrlResponse;

//  Forward declaration of class _onvifDevice__GetCapabilities.
class _onvifDevice__GetCapabilities;

//  Forward declaration of class _onvifDevice__GetCapabilitiesResponse.
class _onvifDevice__GetCapabilitiesResponse;

//  Forward declaration of class _onvifDevice__GetHostname.
class _onvifDevice__GetHostname;

//  Forward declaration of class _onvifDevice__GetHostnameResponse.
class _onvifDevice__GetHostnameResponse;

//  Forward declaration of class _onvifDevice__SetHostname.
class _onvifDevice__SetHostname;

//  Forward declaration of class _onvifDevice__SetHostnameResponse.
class _onvifDevice__SetHostnameResponse;

//  Forward declaration of class _onvifDevice__SetHostnameFromDHCP.
class _onvifDevice__SetHostnameFromDHCP;

//  Forward declaration of class _onvifDevice__SetHostnameFromDHCPResponse.
class _onvifDevice__SetHostnameFromDHCPResponse;

//  Forward declaration of class _onvifDevice__GetDNS.
class _onvifDevice__GetDNS;

//  Forward declaration of class _onvifDevice__GetDNSResponse.
class _onvifDevice__GetDNSResponse;

//  Forward declaration of class _onvifDevice__SetDNS.
class _onvifDevice__SetDNS;

//  Forward declaration of class _onvifDevice__SetDNSResponse.
class _onvifDevice__SetDNSResponse;

//  Forward declaration of class _onvifDevice__GetNTP.
class _onvifDevice__GetNTP;

//  Forward declaration of class _onvifDevice__GetNTPResponse.
class _onvifDevice__GetNTPResponse;

//  Forward declaration of class _onvifDevice__SetNTP.
class _onvifDevice__SetNTP;

//  Forward declaration of class _onvifDevice__SetNTPResponse.
class _onvifDevice__SetNTPResponse;

//  Forward declaration of class _onvifDevice__GetDynamicDNS.
class _onvifDevice__GetDynamicDNS;

//  Forward declaration of class _onvifDevice__GetDynamicDNSResponse.
class _onvifDevice__GetDynamicDNSResponse;

//  Forward declaration of class _onvifDevice__SetDynamicDNS.
class _onvifDevice__SetDynamicDNS;

//  Forward declaration of class _onvifDevice__SetDynamicDNSResponse.
class _onvifDevice__SetDynamicDNSResponse;

//  Forward declaration of class _onvifDevice__GetNetworkInterfaces.
class _onvifDevice__GetNetworkInterfaces;

//  Forward declaration of class _onvifDevice__GetNetworkInterfacesResponse.
class _onvifDevice__GetNetworkInterfacesResponse;

//  Forward declaration of class _onvifDevice__SetNetworkInterfaces.
class _onvifDevice__SetNetworkInterfaces;

//  Forward declaration of class _onvifDevice__SetNetworkInterfacesResponse.
class _onvifDevice__SetNetworkInterfacesResponse;

//  Forward declaration of class _onvifDevice__GetNetworkProtocols.
class _onvifDevice__GetNetworkProtocols;

//  Forward declaration of class _onvifDevice__GetNetworkProtocolsResponse.
class _onvifDevice__GetNetworkProtocolsResponse;

//  Forward declaration of class _onvifDevice__SetNetworkProtocols.
class _onvifDevice__SetNetworkProtocols;

//  Forward declaration of class _onvifDevice__SetNetworkProtocolsResponse.
class _onvifDevice__SetNetworkProtocolsResponse;

//  Forward declaration of class _onvifDevice__GetNetworkDefaultGateway.
class _onvifDevice__GetNetworkDefaultGateway;

//  Forward declaration of class _onvifDevice__GetNetworkDefaultGatewayResponse.
class _onvifDevice__GetNetworkDefaultGatewayResponse;

//  Forward declaration of class _onvifDevice__SetNetworkDefaultGateway.
class _onvifDevice__SetNetworkDefaultGateway;

//  Forward declaration of class _onvifDevice__SetNetworkDefaultGatewayResponse.
class _onvifDevice__SetNetworkDefaultGatewayResponse;

//  Forward declaration of class _onvifDevice__GetZeroConfiguration.
class _onvifDevice__GetZeroConfiguration;

//  Forward declaration of class _onvifDevice__GetZeroConfigurationResponse.
class _onvifDevice__GetZeroConfigurationResponse;

//  Forward declaration of class _onvifDevice__SetZeroConfiguration.
class _onvifDevice__SetZeroConfiguration;

//  Forward declaration of class _onvifDevice__SetZeroConfigurationResponse.
class _onvifDevice__SetZeroConfigurationResponse;

//  Forward declaration of class _onvifDevice__GetIPAddressFilter.
class _onvifDevice__GetIPAddressFilter;

//  Forward declaration of class _onvifDevice__GetIPAddressFilterResponse.
class _onvifDevice__GetIPAddressFilterResponse;

//  Forward declaration of class _onvifDevice__SetIPAddressFilter.
class _onvifDevice__SetIPAddressFilter;

//  Forward declaration of class _onvifDevice__SetIPAddressFilterResponse.
class _onvifDevice__SetIPAddressFilterResponse;

//  Forward declaration of class _onvifDevice__AddIPAddressFilter.
class _onvifDevice__AddIPAddressFilter;

//  Forward declaration of class _onvifDevice__AddIPAddressFilterResponse.
class _onvifDevice__AddIPAddressFilterResponse;

//  Forward declaration of class _onvifDevice__RemoveIPAddressFilter.
class _onvifDevice__RemoveIPAddressFilter;

//  Forward declaration of class _onvifDevice__RemoveIPAddressFilterResponse.
class _onvifDevice__RemoveIPAddressFilterResponse;

//  Forward declaration of class _onvifDevice__GetAccessPolicy.
class _onvifDevice__GetAccessPolicy;

//  Forward declaration of class _onvifDevice__GetAccessPolicyResponse.
class _onvifDevice__GetAccessPolicyResponse;

//  Forward declaration of class _onvifDevice__SetAccessPolicy.
class _onvifDevice__SetAccessPolicy;

//  Forward declaration of class _onvifDevice__SetAccessPolicyResponse.
class _onvifDevice__SetAccessPolicyResponse;

//  Forward declaration of class _onvifDevice__CreateCertificate.
class _onvifDevice__CreateCertificate;

//  Forward declaration of class _onvifDevice__CreateCertificateResponse.
class _onvifDevice__CreateCertificateResponse;

//  Forward declaration of class _onvifDevice__GetCertificates.
class _onvifDevice__GetCertificates;

//  Forward declaration of class _onvifDevice__GetCertificatesResponse.
class _onvifDevice__GetCertificatesResponse;

//  Forward declaration of class _onvifDevice__GetCertificatesStatus.
class _onvifDevice__GetCertificatesStatus;

//  Forward declaration of class _onvifDevice__GetCertificatesStatusResponse.
class _onvifDevice__GetCertificatesStatusResponse;

//  Forward declaration of class _onvifDevice__SetCertificatesStatus.
class _onvifDevice__SetCertificatesStatus;

//  Forward declaration of class _onvifDevice__SetCertificatesStatusResponse.
class _onvifDevice__SetCertificatesStatusResponse;

//  Forward declaration of class _onvifDevice__DeleteCertificates.
class _onvifDevice__DeleteCertificates;

//  Forward declaration of class _onvifDevice__DeleteCertificatesResponse.
class _onvifDevice__DeleteCertificatesResponse;

//  Forward declaration of class _onvifDevice__GetPkcs10Request.
class _onvifDevice__GetPkcs10Request;

//  Forward declaration of class _onvifDevice__GetPkcs10RequestResponse.
class _onvifDevice__GetPkcs10RequestResponse;

//  Forward declaration of class _onvifDevice__LoadCertificates.
class _onvifDevice__LoadCertificates;

//  Forward declaration of class _onvifDevice__LoadCertificatesResponse.
class _onvifDevice__LoadCertificatesResponse;

//  Forward declaration of class _onvifDevice__GetClientCertificateMode.
class _onvifDevice__GetClientCertificateMode;

//  Forward declaration of class _onvifDevice__GetClientCertificateModeResponse.
class _onvifDevice__GetClientCertificateModeResponse;

//  Forward declaration of class _onvifDevice__SetClientCertificateMode.
class _onvifDevice__SetClientCertificateMode;

//  Forward declaration of class _onvifDevice__SetClientCertificateModeResponse.
class _onvifDevice__SetClientCertificateModeResponse;

//  Forward declaration of class _onvifDevice__GetCACertificates.
class _onvifDevice__GetCACertificates;

//  Forward declaration of class _onvifDevice__GetCACertificatesResponse.
class _onvifDevice__GetCACertificatesResponse;

//  Forward declaration of class _onvifDevice__LoadCertificateWithPrivateKey.
class _onvifDevice__LoadCertificateWithPrivateKey;

//  Forward declaration of class _onvifDevice__LoadCertificateWithPrivateKeyResponse.
class _onvifDevice__LoadCertificateWithPrivateKeyResponse;

//  Forward declaration of class _onvifDevice__GetCertificateInformation.
class _onvifDevice__GetCertificateInformation;

//  Forward declaration of class _onvifDevice__GetCertificateInformationResponse.
class _onvifDevice__GetCertificateInformationResponse;

//  Forward declaration of class _onvifDevice__LoadCACertificates.
class _onvifDevice__LoadCACertificates;

//  Forward declaration of class _onvifDevice__LoadCACertificatesResponse.
class _onvifDevice__LoadCACertificatesResponse;

//  Forward declaration of class _onvifDevice__CreateDot1XConfiguration.
class _onvifDevice__CreateDot1XConfiguration;

//  Forward declaration of class _onvifDevice__CreateDot1XConfigurationResponse.
class _onvifDevice__CreateDot1XConfigurationResponse;

//  Forward declaration of class _onvifDevice__SetDot1XConfiguration.
class _onvifDevice__SetDot1XConfiguration;

//  Forward declaration of class _onvifDevice__SetDot1XConfigurationResponse.
class _onvifDevice__SetDot1XConfigurationResponse;

//  Forward declaration of class _onvifDevice__GetDot1XConfiguration.
class _onvifDevice__GetDot1XConfiguration;

//  Forward declaration of class _onvifDevice__GetDot1XConfigurationResponse.
class _onvifDevice__GetDot1XConfigurationResponse;

//  Forward declaration of class _onvifDevice__GetDot1XConfigurations.
class _onvifDevice__GetDot1XConfigurations;

//  Forward declaration of class _onvifDevice__GetDot1XConfigurationsResponse.
class _onvifDevice__GetDot1XConfigurationsResponse;

//  Forward declaration of class _onvifDevice__DeleteDot1XConfiguration.
class _onvifDevice__DeleteDot1XConfiguration;

//  Forward declaration of class _onvifDevice__DeleteDot1XConfigurationResponse.
class _onvifDevice__DeleteDot1XConfigurationResponse;

//  Forward declaration of class _onvifDevice__GetRelayOutputs.
class _onvifDevice__GetRelayOutputs;

//  Forward declaration of class _onvifDevice__GetRelayOutputsResponse.
class _onvifDevice__GetRelayOutputsResponse;

//  Forward declaration of class _onvifDevice__SetRelayOutputSettings.
class _onvifDevice__SetRelayOutputSettings;

//  Forward declaration of class _onvifDevice__SetRelayOutputSettingsResponse.
class _onvifDevice__SetRelayOutputSettingsResponse;

//  Forward declaration of class _onvifDevice__SetRelayOutputState.
class _onvifDevice__SetRelayOutputState;

//  Forward declaration of class _onvifDevice__SetRelayOutputStateResponse.
class _onvifDevice__SetRelayOutputStateResponse;

//  Forward declaration of class _onvifDevice__SendAuxiliaryCommand.
class _onvifDevice__SendAuxiliaryCommand;

//  Forward declaration of class _onvifDevice__SendAuxiliaryCommandResponse.
class _onvifDevice__SendAuxiliaryCommandResponse;

//  Forward declaration of class _onvifDevice__GetDot11Capabilities.
class _onvifDevice__GetDot11Capabilities;

//  Forward declaration of class _onvifDevice__GetDot11CapabilitiesResponse.
class _onvifDevice__GetDot11CapabilitiesResponse;

//  Forward declaration of class _onvifDevice__GetDot11Status.
class _onvifDevice__GetDot11Status;

//  Forward declaration of class _onvifDevice__GetDot11StatusResponse.
class _onvifDevice__GetDot11StatusResponse;

//  Forward declaration of class _onvifDevice__ScanAvailableDot11Networks.
class _onvifDevice__ScanAvailableDot11Networks;

//  Forward declaration of class _onvifDevice__ScanAvailableDot11NetworksResponse.
class _onvifDevice__ScanAvailableDot11NetworksResponse;

//  Forward declaration of class _onvifDevice__GetSystemUris.
class _onvifDevice__GetSystemUris;

//  Forward declaration of class _onvifDevice__GetSystemUrisResponse.
class _onvifDevice__GetSystemUrisResponse;

//  Forward declaration of class _onvifDevice__StartFirmwareUpgrade.
class _onvifDevice__StartFirmwareUpgrade;

//  Forward declaration of class _onvifDevice__StartFirmwareUpgradeResponse.
class _onvifDevice__StartFirmwareUpgradeResponse;

//  Forward declaration of class _onvifDevice__StartSystemRestore.
class _onvifDevice__StartSystemRestore;

//  Forward declaration of class _onvifDevice__StartSystemRestoreResponse.
class _onvifDevice__StartSystemRestoreResponse;

//  Forward declaration of class onvifXsd__DeviceEntity.
class onvifXsd__DeviceEntity;

//  Forward declaration of class onvifXsd__IntRectangle.
class onvifXsd__IntRectangle;

//  Forward declaration of class onvifXsd__IntRectangleRange.
class onvifXsd__IntRectangleRange;

//  Forward declaration of class onvifXsd__IntRange.
class onvifXsd__IntRange;

//  Forward declaration of class onvifXsd__FloatRange.
class onvifXsd__FloatRange;

//  Forward declaration of class onvifXsd__DurationRange.
class onvifXsd__DurationRange;

//  Forward declaration of class onvifXsd__IntList.
class onvifXsd__IntList;

//  Forward declaration of class onvifXsd__FloatList.
class onvifXsd__FloatList;

//  Forward declaration of class onvifXsd__AnyHolder.
class onvifXsd__AnyHolder;

//  Forward declaration of class onvifXsd__VideoSource.
class onvifXsd__VideoSource;

//  Forward declaration of class onvifXsd__VideoSourceExtension.
class onvifXsd__VideoSourceExtension;

//  Forward declaration of class onvifXsd__VideoSourceExtension2.
class onvifXsd__VideoSourceExtension2;

//  Forward declaration of class onvifXsd__AudioSource.
class onvifXsd__AudioSource;

//  Forward declaration of class onvifXsd__Profile.
class onvifXsd__Profile;

//  Forward declaration of class onvifXsd__ProfileExtension.
class onvifXsd__ProfileExtension;

//  Forward declaration of class onvifXsd__ProfileExtension2.
class onvifXsd__ProfileExtension2;

//  Forward declaration of class onvifXsd__ConfigurationEntity.
class onvifXsd__ConfigurationEntity;

//  Forward declaration of class onvifXsd__VideoSourceConfiguration.
class onvifXsd__VideoSourceConfiguration;

//  Forward declaration of class onvifXsd__VideoSourceConfigurationExtension.
class onvifXsd__VideoSourceConfigurationExtension;

//  Forward declaration of class onvifXsd__VideoSourceConfigurationExtension2.
class onvifXsd__VideoSourceConfigurationExtension2;

//  Forward declaration of class onvifXsd__Rotate.
class onvifXsd__Rotate;

//  Forward declaration of class onvifXsd__RotateExtension.
class onvifXsd__RotateExtension;

//  Forward declaration of class onvifXsd__VideoSourceConfigurationOptions.
class onvifXsd__VideoSourceConfigurationOptions;

//  Forward declaration of class onvifXsd__VideoSourceConfigurationOptionsExtension.
class onvifXsd__VideoSourceConfigurationOptionsExtension;

//  Forward declaration of class onvifXsd__VideoSourceConfigurationOptionsExtension2.
class onvifXsd__VideoSourceConfigurationOptionsExtension2;

//  Forward declaration of class onvifXsd__RotateOptions.
class onvifXsd__RotateOptions;

//  Forward declaration of class onvifXsd__RotateOptionsExtension.
class onvifXsd__RotateOptionsExtension;

//  Forward declaration of class onvifXsd__VideoEncoderConfiguration.
class onvifXsd__VideoEncoderConfiguration;

//  Forward declaration of class onvifXsd__VideoResolution.
class onvifXsd__VideoResolution;

//  Forward declaration of class onvifXsd__VideoRateControl.
class onvifXsd__VideoRateControl;

//  Forward declaration of class onvifXsd__Mpeg4Configuration.
class onvifXsd__Mpeg4Configuration;

//  Forward declaration of class onvifXsd__H264Configuration.
class onvifXsd__H264Configuration;

//  Forward declaration of class onvifXsd__VideoEncoderConfigurationOptions.
class onvifXsd__VideoEncoderConfigurationOptions;

//  Forward declaration of class onvifXsd__VideoEncoderOptionsExtension.
class onvifXsd__VideoEncoderOptionsExtension;

//  Forward declaration of class onvifXsd__VideoEncoderOptionsExtension2.
class onvifXsd__VideoEncoderOptionsExtension2;

//  Forward declaration of class onvifXsd__JpegOptions.
class onvifXsd__JpegOptions;

//  Forward declaration of class onvifXsd__JpegOptions2.
class onvifXsd__JpegOptions2;

//  Forward declaration of class onvifXsd__Mpeg4Options.
class onvifXsd__Mpeg4Options;

//  Forward declaration of class onvifXsd__Mpeg4Options2.
class onvifXsd__Mpeg4Options2;

//  Forward declaration of class onvifXsd__H264Options.
class onvifXsd__H264Options;

//  Forward declaration of class onvifXsd__H264Options2.
class onvifXsd__H264Options2;

//  Forward declaration of class onvifXsd__AudioSourceConfiguration.
class onvifXsd__AudioSourceConfiguration;

//  Forward declaration of class onvifXsd__AudioSourceConfigurationOptions.
class onvifXsd__AudioSourceConfigurationOptions;

//  Forward declaration of class onvifXsd__AudioSourceOptionsExtension.
class onvifXsd__AudioSourceOptionsExtension;

//  Forward declaration of class onvifXsd__AudioEncoderConfiguration.
class onvifXsd__AudioEncoderConfiguration;

//  Forward declaration of class onvifXsd__AudioEncoderConfigurationOptions.
class onvifXsd__AudioEncoderConfigurationOptions;

//  Forward declaration of class onvifXsd__AudioEncoderConfigurationOption.
class onvifXsd__AudioEncoderConfigurationOption;

//  Forward declaration of class onvifXsd__VideoAnalyticsConfiguration.
class onvifXsd__VideoAnalyticsConfiguration;

//  Forward declaration of class onvifXsd__MetadataConfiguration.
class onvifXsd__MetadataConfiguration;

//  Forward declaration of class onvifXsd__MetadataConfigurationExtension.
class onvifXsd__MetadataConfigurationExtension;

//  Forward declaration of class onvifXsd__PTZFilter.
class onvifXsd__PTZFilter;

//  Forward declaration of class onvifXsd__EventSubscription.
class onvifXsd__EventSubscription;

//  Forward declaration of class onvifXsd__MetadataConfigurationOptions.
class onvifXsd__MetadataConfigurationOptions;

//  Forward declaration of class onvifXsd__PTZStatusFilterOptions.
class onvifXsd__PTZStatusFilterOptions;

//  Forward declaration of class onvifXsd__PTZStatusFilterOptionsExtension.
class onvifXsd__PTZStatusFilterOptionsExtension;

//  Forward declaration of class onvifXsd__VideoOutput.
class onvifXsd__VideoOutput;

//  Forward declaration of class onvifXsd__VideoOutputExtension.
class onvifXsd__VideoOutputExtension;

//  Forward declaration of class onvifXsd__VideoOutputConfiguration.
class onvifXsd__VideoOutputConfiguration;

//  Forward declaration of class onvifXsd__VideoOutputConfigurationOptions.
class onvifXsd__VideoOutputConfigurationOptions;

//  Forward declaration of class onvifXsd__VideoDecoderConfigurationOptions.
class onvifXsd__VideoDecoderConfigurationOptions;

//  Forward declaration of class onvifXsd__H264DecOptions.
class onvifXsd__H264DecOptions;

//  Forward declaration of class onvifXsd__JpegDecOptions.
class onvifXsd__JpegDecOptions;

//  Forward declaration of class onvifXsd__Mpeg4DecOptions.
class onvifXsd__Mpeg4DecOptions;

//  Forward declaration of class onvifXsd__VideoDecoderConfigurationOptionsExtension.
class onvifXsd__VideoDecoderConfigurationOptionsExtension;

//  Forward declaration of class onvifXsd__AudioOutput.
class onvifXsd__AudioOutput;

//  Forward declaration of class onvifXsd__AudioOutputConfiguration.
class onvifXsd__AudioOutputConfiguration;

//  Forward declaration of class onvifXsd__AudioOutputConfigurationOptions.
class onvifXsd__AudioOutputConfigurationOptions;

//  Forward declaration of class onvifXsd__AudioDecoderConfiguration.
class onvifXsd__AudioDecoderConfiguration;

//  Forward declaration of class onvifXsd__AudioDecoderConfigurationOptions.
class onvifXsd__AudioDecoderConfigurationOptions;

//  Forward declaration of class onvifXsd__G711DecOptions.
class onvifXsd__G711DecOptions;

//  Forward declaration of class onvifXsd__AACDecOptions.
class onvifXsd__AACDecOptions;

//  Forward declaration of class onvifXsd__G726DecOptions.
class onvifXsd__G726DecOptions;

//  Forward declaration of class onvifXsd__AudioDecoderConfigurationOptionsExtension.
class onvifXsd__AudioDecoderConfigurationOptionsExtension;

//  Forward declaration of class onvifXsd__MulticastConfiguration.
class onvifXsd__MulticastConfiguration;

//  Forward declaration of class onvifXsd__StreamSetup.
class onvifXsd__StreamSetup;

//  Forward declaration of class onvifXsd__Transport.
class onvifXsd__Transport;

//  Forward declaration of class onvifXsd__MediaUri.
class onvifXsd__MediaUri;

//  Forward declaration of class onvifXsd__Scope.
class onvifXsd__Scope;

//  Forward declaration of class onvifXsd__NetworkInterface.
class onvifXsd__NetworkInterface;

//  Forward declaration of class onvifXsd__NetworkInterfaceExtension.
class onvifXsd__NetworkInterfaceExtension;

//  Forward declaration of class onvifXsd__Dot3Configuration.
class onvifXsd__Dot3Configuration;

//  Forward declaration of class onvifXsd__NetworkInterfaceExtension2.
class onvifXsd__NetworkInterfaceExtension2;

//  Forward declaration of class onvifXsd__NetworkInterfaceLink.
class onvifXsd__NetworkInterfaceLink;

//  Forward declaration of class onvifXsd__NetworkInterfaceConnectionSetting.
class onvifXsd__NetworkInterfaceConnectionSetting;

//  Forward declaration of class onvifXsd__NetworkInterfaceInfo.
class onvifXsd__NetworkInterfaceInfo;

//  Forward declaration of class onvifXsd__IPv6NetworkInterface.
class onvifXsd__IPv6NetworkInterface;

//  Forward declaration of class onvifXsd__IPv4NetworkInterface.
class onvifXsd__IPv4NetworkInterface;

//  Forward declaration of class onvifXsd__IPv4Configuration.
class onvifXsd__IPv4Configuration;

//  Forward declaration of class onvifXsd__IPv6Configuration.
class onvifXsd__IPv6Configuration;

//  Forward declaration of class onvifXsd__IPv6ConfigurationExtension.
class onvifXsd__IPv6ConfigurationExtension;

//  Forward declaration of class onvifXsd__NetworkProtocol.
class onvifXsd__NetworkProtocol;

//  Forward declaration of class onvifXsd__NetworkProtocolExtension.
class onvifXsd__NetworkProtocolExtension;

//  Forward declaration of class onvifXsd__NetworkHost.
class onvifXsd__NetworkHost;

//  Forward declaration of class onvifXsd__NetworkHostExtension.
class onvifXsd__NetworkHostExtension;

//  Forward declaration of class onvifXsd__IPAddress.
class onvifXsd__IPAddress;

//  Forward declaration of class onvifXsd__PrefixedIPv4Address.
class onvifXsd__PrefixedIPv4Address;

//  Forward declaration of class onvifXsd__PrefixedIPv6Address.
class onvifXsd__PrefixedIPv6Address;

//  Forward declaration of class onvifXsd__HostnameInformation.
class onvifXsd__HostnameInformation;

//  Forward declaration of class onvifXsd__HostnameInformationExtension.
class onvifXsd__HostnameInformationExtension;

//  Forward declaration of class onvifXsd__DNSInformation.
class onvifXsd__DNSInformation;

//  Forward declaration of class onvifXsd__DNSInformationExtension.
class onvifXsd__DNSInformationExtension;

//  Forward declaration of class onvifXsd__NTPInformation.
class onvifXsd__NTPInformation;

//  Forward declaration of class onvifXsd__NTPInformationExtension.
class onvifXsd__NTPInformationExtension;

//  Forward declaration of class onvifXsd__DynamicDNSInformation.
class onvifXsd__DynamicDNSInformation;

//  Forward declaration of class onvifXsd__DynamicDNSInformationExtension.
class onvifXsd__DynamicDNSInformationExtension;

//  Forward declaration of class onvifXsd__NetworkInterfaceSetConfiguration.
class onvifXsd__NetworkInterfaceSetConfiguration;

//  Forward declaration of class onvifXsd__NetworkInterfaceSetConfigurationExtension.
class onvifXsd__NetworkInterfaceSetConfigurationExtension;

//  Forward declaration of class onvifXsd__IPv6NetworkInterfaceSetConfiguration.
class onvifXsd__IPv6NetworkInterfaceSetConfiguration;

//  Forward declaration of class onvifXsd__IPv4NetworkInterfaceSetConfiguration.
class onvifXsd__IPv4NetworkInterfaceSetConfiguration;

//  Forward declaration of class onvifXsd__NetworkGateway.
class onvifXsd__NetworkGateway;

//  Forward declaration of class onvifXsd__NetworkZeroConfiguration.
class onvifXsd__NetworkZeroConfiguration;

//  Forward declaration of class onvifXsd__NetworkZeroConfigurationExtension.
class onvifXsd__NetworkZeroConfigurationExtension;

//  Forward declaration of class onvifXsd__NetworkZeroConfigurationExtension2.
class onvifXsd__NetworkZeroConfigurationExtension2;

//  Forward declaration of class onvifXsd__IPAddressFilter.
class onvifXsd__IPAddressFilter;

//  Forward declaration of class onvifXsd__IPAddressFilterExtension.
class onvifXsd__IPAddressFilterExtension;

//  Forward declaration of class onvifXsd__Dot11Configuration.
class onvifXsd__Dot11Configuration;

//  Forward declaration of class onvifXsd__Dot11SecurityConfiguration.
class onvifXsd__Dot11SecurityConfiguration;

//  Forward declaration of class onvifXsd__Dot11SecurityConfigurationExtension.
class onvifXsd__Dot11SecurityConfigurationExtension;

//  Forward declaration of class onvifXsd__Dot11PSKSet.
class onvifXsd__Dot11PSKSet;

//  Forward declaration of class onvifXsd__Dot11PSKSetExtension.
class onvifXsd__Dot11PSKSetExtension;

//  Forward declaration of class onvifXsd__NetworkInterfaceSetConfigurationExtension2.
class onvifXsd__NetworkInterfaceSetConfigurationExtension2;

//  Forward declaration of class onvifXsd__Dot11Capabilities.
class onvifXsd__Dot11Capabilities;

//  Forward declaration of class onvifXsd__Dot11Status.
class onvifXsd__Dot11Status;

//  Forward declaration of class onvifXsd__Dot11AvailableNetworks.
class onvifXsd__Dot11AvailableNetworks;

//  Forward declaration of class onvifXsd__Dot11AvailableNetworksExtension.
class onvifXsd__Dot11AvailableNetworksExtension;

//  Forward declaration of class onvifXsd__Capabilities.
class onvifXsd__Capabilities;

//  Forward declaration of class onvifXsd__CapabilitiesExtension.
class onvifXsd__CapabilitiesExtension;

//  Forward declaration of class onvifXsd__CapabilitiesExtension2.
class onvifXsd__CapabilitiesExtension2;

//  Forward declaration of class onvifXsd__AnalyticsCapabilities.
class onvifXsd__AnalyticsCapabilities;

//  Forward declaration of class onvifXsd__DeviceCapabilities.
class onvifXsd__DeviceCapabilities;

//  Forward declaration of class onvifXsd__DeviceCapabilitiesExtension.
class onvifXsd__DeviceCapabilitiesExtension;

//  Forward declaration of class onvifXsd__EventCapabilities.
class onvifXsd__EventCapabilities;

//  Forward declaration of class onvifXsd__IOCapabilities.
class onvifXsd__IOCapabilities;

//  Forward declaration of class onvifXsd__IOCapabilitiesExtension.
class onvifXsd__IOCapabilitiesExtension;

//  Forward declaration of class onvifXsd__IOCapabilitiesExtension2.
class onvifXsd__IOCapabilitiesExtension2;

//  Forward declaration of class onvifXsd__MediaCapabilities.
class onvifXsd__MediaCapabilities;

//  Forward declaration of class onvifXsd__MediaCapabilitiesExtension.
class onvifXsd__MediaCapabilitiesExtension;

//  Forward declaration of class onvifXsd__RealTimeStreamingCapabilities.
class onvifXsd__RealTimeStreamingCapabilities;

//  Forward declaration of class onvifXsd__RealTimeStreamingCapabilitiesExtension.
class onvifXsd__RealTimeStreamingCapabilitiesExtension;

//  Forward declaration of class onvifXsd__ProfileCapabilities.
class onvifXsd__ProfileCapabilities;

//  Forward declaration of class onvifXsd__NetworkCapabilities.
class onvifXsd__NetworkCapabilities;

//  Forward declaration of class onvifXsd__NetworkCapabilitiesExtension.
class onvifXsd__NetworkCapabilitiesExtension;

//  Forward declaration of class onvifXsd__NetworkCapabilitiesExtension2.
class onvifXsd__NetworkCapabilitiesExtension2;

//  Forward declaration of class onvifXsd__SecurityCapabilities.
class onvifXsd__SecurityCapabilities;

//  Forward declaration of class onvifXsd__SecurityCapabilitiesExtension.
class onvifXsd__SecurityCapabilitiesExtension;

//  Forward declaration of class onvifXsd__SecurityCapabilitiesExtension2.
class onvifXsd__SecurityCapabilitiesExtension2;

//  Forward declaration of class onvifXsd__SystemCapabilities.
class onvifXsd__SystemCapabilities;

//  Forward declaration of class onvifXsd__SystemCapabilitiesExtension.
class onvifXsd__SystemCapabilitiesExtension;

//  Forward declaration of class onvifXsd__SystemCapabilitiesExtension2.
class onvifXsd__SystemCapabilitiesExtension2;

//  Forward declaration of class onvifXsd__OnvifVersion.
class onvifXsd__OnvifVersion;

//  Forward declaration of class onvifXsd__ImagingCapabilities.
class onvifXsd__ImagingCapabilities;

//  Forward declaration of class onvifXsd__PTZCapabilities.
class onvifXsd__PTZCapabilities;

//  Forward declaration of class onvifXsd__DeviceIOCapabilities.
class onvifXsd__DeviceIOCapabilities;

//  Forward declaration of class onvifXsd__DisplayCapabilities.
class onvifXsd__DisplayCapabilities;

//  Forward declaration of class onvifXsd__RecordingCapabilities.
class onvifXsd__RecordingCapabilities;

//  Forward declaration of class onvifXsd__SearchCapabilities.
class onvifXsd__SearchCapabilities;

//  Forward declaration of class onvifXsd__ReplayCapabilities.
class onvifXsd__ReplayCapabilities;

//  Forward declaration of class onvifXsd__ReceiverCapabilities.
class onvifXsd__ReceiverCapabilities;

//  Forward declaration of class onvifXsd__AnalyticsDeviceCapabilities.
class onvifXsd__AnalyticsDeviceCapabilities;

//  Forward declaration of class onvifXsd__AnalyticsDeviceExtension.
class onvifXsd__AnalyticsDeviceExtension;

//  Forward declaration of class onvifXsd__SystemLog.
class onvifXsd__SystemLog;

//  Forward declaration of class onvifXsd__SupportInformation.
class onvifXsd__SupportInformation;

//  Forward declaration of class onvifXsd__BinaryData.
class onvifXsd__BinaryData;

//  Forward declaration of class onvifXsd__AttachmentData.
class onvifXsd__AttachmentData;

//  Forward declaration of class onvifXsd__BackupFile.
class onvifXsd__BackupFile;

//  Forward declaration of class onvifXsd__SystemLogUriList.
class onvifXsd__SystemLogUriList;

//  Forward declaration of class onvifXsd__SystemLogUri.
class onvifXsd__SystemLogUri;

//  Forward declaration of class onvifXsd__SystemDateTime.
class onvifXsd__SystemDateTime;

//  Forward declaration of class onvifXsd__SystemDateTimeExtension.
class onvifXsd__SystemDateTimeExtension;

//  Forward declaration of class onvifXsd__DateTime.
class onvifXsd__DateTime;

//  Forward declaration of class onvifXsd__Date.
class onvifXsd__Date;

//  Forward declaration of class onvifXsd__Time.
class onvifXsd__Time;

//  Forward declaration of class onvifXsd__TimeZone.
class onvifXsd__TimeZone;

//  Forward declaration of class onvifXsd__RemoteUser.
class onvifXsd__RemoteUser;

//  Forward declaration of class onvifXsd__User.
class onvifXsd__User;

//  Forward declaration of class onvifXsd__UserExtension.
class onvifXsd__UserExtension;

//  Forward declaration of class onvifXsd__CertificateGenerationParameters.
class onvifXsd__CertificateGenerationParameters;

//  Forward declaration of class onvifXsd__CertificateGenerationParametersExtension.
class onvifXsd__CertificateGenerationParametersExtension;

//  Forward declaration of class onvifXsd__Certificate.
class onvifXsd__Certificate;

//  Forward declaration of class onvifXsd__CertificateStatus.
class onvifXsd__CertificateStatus;

//  Forward declaration of class onvifXsd__CertificateWithPrivateKey.
class onvifXsd__CertificateWithPrivateKey;

//  Forward declaration of class onvifXsd__CertificateInformation.
class onvifXsd__CertificateInformation;

//  Forward declaration of class onvifXsd__CertificateUsage.
class onvifXsd__CertificateUsage;

//  Forward declaration of class onvifXsd__CertificateInformationExtension.
class onvifXsd__CertificateInformationExtension;

//  Forward declaration of class onvifXsd__Dot1XConfiguration.
class onvifXsd__Dot1XConfiguration;

//  Forward declaration of class onvifXsd__Dot1XConfigurationExtension.
class onvifXsd__Dot1XConfigurationExtension;

//  Forward declaration of class onvifXsd__EAPMethodConfiguration.
class onvifXsd__EAPMethodConfiguration;

//  Forward declaration of class onvifXsd__EapMethodExtension.
class onvifXsd__EapMethodExtension;

//  Forward declaration of class onvifXsd__TLSConfiguration.
class onvifXsd__TLSConfiguration;

//  Forward declaration of class onvifXsd__GenericEapPwdConfigurationExtension.
class onvifXsd__GenericEapPwdConfigurationExtension;

//  Forward declaration of class onvifXsd__RelayOutputSettings.
class onvifXsd__RelayOutputSettings;

//  Forward declaration of class onvifXsd__RelayOutput.
class onvifXsd__RelayOutput;

//  Forward declaration of class onvifXsd__DigitalInput.
class onvifXsd__DigitalInput;

//  Forward declaration of class onvifXsd__PTZNode.
class onvifXsd__PTZNode;

//  Forward declaration of class onvifXsd__PTZNodeExtension.
class onvifXsd__PTZNodeExtension;

//  Forward declaration of class onvifXsd__PTZNodeExtension2.
class onvifXsd__PTZNodeExtension2;

//  Forward declaration of class onvifXsd__PTZPresetTourSupported.
class onvifXsd__PTZPresetTourSupported;

//  Forward declaration of class onvifXsd__PTZPresetTourSupportedExtension.
class onvifXsd__PTZPresetTourSupportedExtension;

//  Forward declaration of class onvifXsd__PTZConfiguration.
class onvifXsd__PTZConfiguration;

//  Forward declaration of class onvifXsd__PTZConfigurationExtension.
class onvifXsd__PTZConfigurationExtension;

//  Forward declaration of class onvifXsd__PTZConfigurationExtension2.
class onvifXsd__PTZConfigurationExtension2;

//  Forward declaration of class onvifXsd__PTControlDirection.
class onvifXsd__PTControlDirection;

//  Forward declaration of class onvifXsd__PTControlDirectionExtension.
class onvifXsd__PTControlDirectionExtension;

//  Forward declaration of class onvifXsd__EFlip.
class onvifXsd__EFlip;

//  Forward declaration of class onvifXsd__Reverse.
class onvifXsd__Reverse;

//  Forward declaration of class onvifXsd__PTZConfigurationOptions.
class onvifXsd__PTZConfigurationOptions;

//  Forward declaration of class onvifXsd__PTZConfigurationOptions2.
class onvifXsd__PTZConfigurationOptions2;

//  Forward declaration of class onvifXsd__PTControlDirectionOptions.
class onvifXsd__PTControlDirectionOptions;

//  Forward declaration of class onvifXsd__PTControlDirectionOptionsExtension.
class onvifXsd__PTControlDirectionOptionsExtension;

//  Forward declaration of class onvifXsd__EFlipOptions.
class onvifXsd__EFlipOptions;

//  Forward declaration of class onvifXsd__EFlipOptionsExtension.
class onvifXsd__EFlipOptionsExtension;

//  Forward declaration of class onvifXsd__ReverseOptions.
class onvifXsd__ReverseOptions;

//  Forward declaration of class onvifXsd__ReverseOptionsExtension.
class onvifXsd__ReverseOptionsExtension;

//  Forward declaration of class onvifXsd__PanTiltLimits.
class onvifXsd__PanTiltLimits;

//  Forward declaration of class onvifXsd__ZoomLimits.
class onvifXsd__ZoomLimits;

//  Forward declaration of class onvifXsd__PTZSpaces.
class onvifXsd__PTZSpaces;

//  Forward declaration of class onvifXsd__PTZSpacesExtension.
class onvifXsd__PTZSpacesExtension;

//  Forward declaration of class onvifXsd__Space2DDescription.
class onvifXsd__Space2DDescription;

//  Forward declaration of class onvifXsd__Space1DDescription.
class onvifXsd__Space1DDescription;

//  Forward declaration of class onvifXsd__Vector2D.
class onvifXsd__Vector2D;

//  Forward declaration of class onvifXsd__Vector1D.
class onvifXsd__Vector1D;

//  Forward declaration of class onvifXsd__PTZVector.
class onvifXsd__PTZVector;

//  Forward declaration of class onvifXsd__PTZSpeed.
class onvifXsd__PTZSpeed;

//  Forward declaration of class onvifXsd__PTZStatus.
class onvifXsd__PTZStatus;

//  Forward declaration of class onvifXsd__PTZPreset.
class onvifXsd__PTZPreset;

//  Forward declaration of class onvifXsd__PTZMoveStatus.
class onvifXsd__PTZMoveStatus;

//  Forward declaration of class onvifXsd__PresetTour.
class onvifXsd__PresetTour;

//  Forward declaration of class onvifXsd__PTZPresetTourExtension.
class onvifXsd__PTZPresetTourExtension;

//  Forward declaration of class onvifXsd__PTZPresetTourSpot.
class onvifXsd__PTZPresetTourSpot;

//  Forward declaration of class onvifXsd__PTZPresetTourSpotExtension.
class onvifXsd__PTZPresetTourSpotExtension;

//  Forward declaration of class onvifXsd__PTZPresetTourPresetDetail.
class onvifXsd__PTZPresetTourPresetDetail;

//  Forward declaration of class onvifXsd__PTZPresetTourTypeExtension.
class onvifXsd__PTZPresetTourTypeExtension;

//  Forward declaration of class onvifXsd__PTZPresetTourStatus.
class onvifXsd__PTZPresetTourStatus;

//  Forward declaration of class onvifXsd__PTZPresetTourStatusExtension.
class onvifXsd__PTZPresetTourStatusExtension;

//  Forward declaration of class onvifXsd__PTZPresetTourStartingCondition.
class onvifXsd__PTZPresetTourStartingCondition;

//  Forward declaration of class onvifXsd__PTZPresetTourStartingConditionExtension.
class onvifXsd__PTZPresetTourStartingConditionExtension;

//  Forward declaration of class onvifXsd__PTZPresetTourOptions.
class onvifXsd__PTZPresetTourOptions;

//  Forward declaration of class onvifXsd__PTZPresetTourSpotOptions.
class onvifXsd__PTZPresetTourSpotOptions;

//  Forward declaration of class onvifXsd__PTZPresetTourPresetDetailOptions.
class onvifXsd__PTZPresetTourPresetDetailOptions;

//  Forward declaration of class onvifXsd__PTZPresetTourPresetDetailOptionsExtension.
class onvifXsd__PTZPresetTourPresetDetailOptionsExtension;

//  Forward declaration of class onvifXsd__PTZPresetTourStartingConditionOptions.
class onvifXsd__PTZPresetTourStartingConditionOptions;

//  Forward declaration of class onvifXsd__PTZPresetTourStartingConditionOptionsExtension.
class onvifXsd__PTZPresetTourStartingConditionOptionsExtension;

//  Forward declaration of class onvifXsd__ImagingStatus.
class onvifXsd__ImagingStatus;

//  Forward declaration of class onvifXsd__FocusStatus.
class onvifXsd__FocusStatus;

//  Forward declaration of class onvifXsd__FocusConfiguration.
class onvifXsd__FocusConfiguration;

//  Forward declaration of class onvifXsd__ImagingSettings.
class onvifXsd__ImagingSettings;

//  Forward declaration of class onvifXsd__ImagingSettingsExtension.
class onvifXsd__ImagingSettingsExtension;

//  Forward declaration of class onvifXsd__Exposure.
class onvifXsd__Exposure;

//  Forward declaration of class onvifXsd__WideDynamicRange.
class onvifXsd__WideDynamicRange;

//  Forward declaration of class onvifXsd__BacklightCompensation.
class onvifXsd__BacklightCompensation;

//  Forward declaration of class onvifXsd__ImagingOptions.
class onvifXsd__ImagingOptions;

//  Forward declaration of class onvifXsd__WideDynamicRangeOptions.
class onvifXsd__WideDynamicRangeOptions;

//  Forward declaration of class onvifXsd__BacklightCompensationOptions.
class onvifXsd__BacklightCompensationOptions;

//  Forward declaration of class onvifXsd__FocusOptions.
class onvifXsd__FocusOptions;

//  Forward declaration of class onvifXsd__ExposureOptions.
class onvifXsd__ExposureOptions;

//  Forward declaration of class onvifXsd__WhiteBalanceOptions.
class onvifXsd__WhiteBalanceOptions;

//  Forward declaration of class onvifXsd__FocusMove.
class onvifXsd__FocusMove;

//  Forward declaration of class onvifXsd__AbsoluteFocus.
class onvifXsd__AbsoluteFocus;

//  Forward declaration of class onvifXsd__RelativeFocus.
class onvifXsd__RelativeFocus;

//  Forward declaration of class onvifXsd__ContinuousFocus.
class onvifXsd__ContinuousFocus;

//  Forward declaration of class onvifXsd__MoveOptions.
class onvifXsd__MoveOptions;

//  Forward declaration of class onvifXsd__AbsoluteFocusOptions.
class onvifXsd__AbsoluteFocusOptions;

//  Forward declaration of class onvifXsd__RelativeFocusOptions.
class onvifXsd__RelativeFocusOptions;

//  Forward declaration of class onvifXsd__ContinuousFocusOptions.
class onvifXsd__ContinuousFocusOptions;

//  Forward declaration of class onvifXsd__WhiteBalance.
class onvifXsd__WhiteBalance;

//  Forward declaration of class onvifXsd__ImagingStatus20.
class onvifXsd__ImagingStatus20;

//  Forward declaration of class onvifXsd__ImagingStatus20Extension.
class onvifXsd__ImagingStatus20Extension;

//  Forward declaration of class onvifXsd__FocusStatus20.
class onvifXsd__FocusStatus20;

//  Forward declaration of class onvifXsd__FocusStatus20Extension.
class onvifXsd__FocusStatus20Extension;

//  Forward declaration of class onvifXsd__ImagingSettings20.
class onvifXsd__ImagingSettings20;

//  Forward declaration of class onvifXsd__ImagingSettingsExtension20.
class onvifXsd__ImagingSettingsExtension20;

//  Forward declaration of class onvifXsd__ImagingSettingsExtension202.
class onvifXsd__ImagingSettingsExtension202;

//  Forward declaration of class onvifXsd__ImageStabilization.
class onvifXsd__ImageStabilization;

//  Forward declaration of class onvifXsd__ImageStabilizationExtension.
class onvifXsd__ImageStabilizationExtension;

//  Forward declaration of class onvifXsd__WideDynamicRange20.
class onvifXsd__WideDynamicRange20;

//  Forward declaration of class onvifXsd__BacklightCompensation20.
class onvifXsd__BacklightCompensation20;

//  Forward declaration of class onvifXsd__Exposure20.
class onvifXsd__Exposure20;

//  Forward declaration of class onvifXsd__ImagingOptions20.
class onvifXsd__ImagingOptions20;

//  Forward declaration of class onvifXsd__ImagingOptions20Extension.
class onvifXsd__ImagingOptions20Extension;

//  Forward declaration of class onvifXsd__ImagingOptions20Extension2.
class onvifXsd__ImagingOptions20Extension2;

//  Forward declaration of class onvifXsd__ImageStabilizationOptions.
class onvifXsd__ImageStabilizationOptions;

//  Forward declaration of class onvifXsd__ImageStabilizationOptionsExtension.
class onvifXsd__ImageStabilizationOptionsExtension;

//  Forward declaration of class onvifXsd__WideDynamicRangeOptions20.
class onvifXsd__WideDynamicRangeOptions20;

//  Forward declaration of class onvifXsd__BacklightCompensationOptions20.
class onvifXsd__BacklightCompensationOptions20;

//  Forward declaration of class onvifXsd__ExposureOptions20.
class onvifXsd__ExposureOptions20;

//  Forward declaration of class onvifXsd__MoveOptions20.
class onvifXsd__MoveOptions20;

//  Forward declaration of class onvifXsd__RelativeFocusOptions20.
class onvifXsd__RelativeFocusOptions20;

//  Forward declaration of class onvifXsd__WhiteBalance20.
class onvifXsd__WhiteBalance20;

//  Forward declaration of class onvifXsd__WhiteBalance20Extension.
class onvifXsd__WhiteBalance20Extension;

//  Forward declaration of class onvifXsd__FocusConfiguration20.
class onvifXsd__FocusConfiguration20;

//  Forward declaration of class onvifXsd__FocusConfiguration20Extension.
class onvifXsd__FocusConfiguration20Extension;

//  Forward declaration of class onvifXsd__WhiteBalanceOptions20.
class onvifXsd__WhiteBalanceOptions20;

//  Forward declaration of class onvifXsd__WhiteBalanceOptions20Extension.
class onvifXsd__WhiteBalanceOptions20Extension;

//  Forward declaration of class onvifXsd__FocusOptions20.
class onvifXsd__FocusOptions20;

//  Forward declaration of class onvifXsd__FocusOptions20Extension.
class onvifXsd__FocusOptions20Extension;

//  Forward declaration of class onvifXsd__MessageExtension.
class onvifXsd__MessageExtension;

//  Forward declaration of class onvifXsd__ItemList.
class onvifXsd__ItemList;

//  Forward declaration of class onvifXsd__ItemListExtension.
class onvifXsd__ItemListExtension;

//  Forward declaration of class onvifXsd__MessageDescription.
class onvifXsd__MessageDescription;

//  Forward declaration of class onvifXsd__MessageDescriptionExtension.
class onvifXsd__MessageDescriptionExtension;

//  Forward declaration of class onvifXsd__ItemListDescription.
class onvifXsd__ItemListDescription;

//  Forward declaration of class onvifXsd__ItemListDescriptionExtension.
class onvifXsd__ItemListDescriptionExtension;

//  Forward declaration of class onvifXsd__Vector.
class onvifXsd__Vector;

//  Forward declaration of class onvifXsd__Rectangle.
class onvifXsd__Rectangle;

//  Forward declaration of class onvifXsd__Polygon.
class onvifXsd__Polygon;

//  Forward declaration of class onvifXsd__Polyline.
class onvifXsd__Polyline;

//  Forward declaration of class onvifXsd__Color.
class onvifXsd__Color;

//  Forward declaration of class onvifXsd__ColorCovariance.
class onvifXsd__ColorCovariance;

//  Forward declaration of class onvifXsd__Appearance.
class onvifXsd__Appearance;

//  Forward declaration of class onvifXsd__AppearanceExtension.
class onvifXsd__AppearanceExtension;

//  Forward declaration of class onvifXsd__ShapeDescriptor.
class onvifXsd__ShapeDescriptor;

//  Forward declaration of class onvifXsd__ShapeDescriptorExtension.
class onvifXsd__ShapeDescriptorExtension;

//  Forward declaration of class onvifXsd__ColorDescriptor.
class onvifXsd__ColorDescriptor;

//  Forward declaration of class onvifXsd__ColorDescriptorExtension.
class onvifXsd__ColorDescriptorExtension;

//  Forward declaration of class onvifXsd__ClassDescriptor.
class onvifXsd__ClassDescriptor;

//  Forward declaration of class onvifXsd__ClassDescriptorExtension.
class onvifXsd__ClassDescriptorExtension;

//  Forward declaration of class onvifXsd__ClassDescriptorExtension2.
class onvifXsd__ClassDescriptorExtension2;

//  Forward declaration of class onvifXsd__OtherType.
class onvifXsd__OtherType;

//  Forward declaration of class onvifXsd__Object.
class onvifXsd__Object;

//  Forward declaration of class onvifXsd__ObjectExtension.
class onvifXsd__ObjectExtension;

//  Forward declaration of class onvifXsd__Transformation.
class onvifXsd__Transformation;

//  Forward declaration of class onvifXsd__TransformationExtension.
class onvifXsd__TransformationExtension;

//  Forward declaration of class onvifXsd__Frame.
class onvifXsd__Frame;

//  Forward declaration of class onvifXsd__FrameExtension.
class onvifXsd__FrameExtension;

//  Forward declaration of class onvifXsd__FrameExtension2.
class onvifXsd__FrameExtension2;

//  Forward declaration of class onvifXsd__Merge.
class onvifXsd__Merge;

//  Forward declaration of class onvifXsd__Split.
class onvifXsd__Split;

//  Forward declaration of class onvifXsd__Rename.
class onvifXsd__Rename;

//  Forward declaration of class onvifXsd__ObjectId.
class onvifXsd__ObjectId;

//  Forward declaration of class onvifXsd__Behaviour.
class onvifXsd__Behaviour;

//  Forward declaration of class onvifXsd__BehaviourExtension.
class onvifXsd__BehaviourExtension;

//  Forward declaration of class onvifXsd__ObjectTree.
class onvifXsd__ObjectTree;

//  Forward declaration of class onvifXsd__ObjectTreeExtension.
class onvifXsd__ObjectTreeExtension;

//  Forward declaration of class onvifXsd__MotionInCells.
class onvifXsd__MotionInCells;

//  Forward declaration of class onvifXsd__AnalyticsEngineConfiguration.
class onvifXsd__AnalyticsEngineConfiguration;

//  Forward declaration of class onvifXsd__AnalyticsEngineConfigurationExtension.
class onvifXsd__AnalyticsEngineConfigurationExtension;

//  Forward declaration of class onvifXsd__RuleEngineConfiguration.
class onvifXsd__RuleEngineConfiguration;

//  Forward declaration of class onvifXsd__RuleEngineConfigurationExtension.
class onvifXsd__RuleEngineConfigurationExtension;

//  Forward declaration of class onvifXsd__Config.
class onvifXsd__Config;

//  Forward declaration of class onvifXsd__ConfigDescription.
class onvifXsd__ConfigDescription;

//  Forward declaration of class onvifXsd__ConfigDescriptionExtension.
class onvifXsd__ConfigDescriptionExtension;

//  Forward declaration of class onvifXsd__SupportedRules.
class onvifXsd__SupportedRules;

//  Forward declaration of class onvifXsd__SupportedRulesExtension.
class onvifXsd__SupportedRulesExtension;

//  Forward declaration of class onvifXsd__SupportedAnalyticsModules.
class onvifXsd__SupportedAnalyticsModules;

//  Forward declaration of class onvifXsd__SupportedAnalyticsModulesExtension.
class onvifXsd__SupportedAnalyticsModulesExtension;

//  Forward declaration of class onvifXsd__PolygonConfiguration.
class onvifXsd__PolygonConfiguration;

//  Forward declaration of class onvifXsd__PolylineArray.
class onvifXsd__PolylineArray;

//  Forward declaration of class onvifXsd__PolylineArrayExtension.
class onvifXsd__PolylineArrayExtension;

//  Forward declaration of class onvifXsd__PolylineArrayConfiguration.
class onvifXsd__PolylineArrayConfiguration;

//  Forward declaration of class onvifXsd__MotionExpression.
class onvifXsd__MotionExpression;

//  Forward declaration of class onvifXsd__MotionExpressionConfiguration.
class onvifXsd__MotionExpressionConfiguration;

//  Forward declaration of class onvifXsd__CellLayout.
class onvifXsd__CellLayout;

//  Forward declaration of class onvifXsd__MetadataStream.
class onvifXsd__MetadataStream;

//  Forward declaration of class onvifXsd__MetadataStreamExtension.
class onvifXsd__MetadataStreamExtension;

//  Forward declaration of class onvifXsd__VideoAnalyticsStream.
class onvifXsd__VideoAnalyticsStream;

//  Forward declaration of class onvifXsd__VideoAnalyticsStreamExtension.
class onvifXsd__VideoAnalyticsStreamExtension;

//  Forward declaration of class onvifXsd__PTZStream.
class onvifXsd__PTZStream;

//  Forward declaration of class onvifXsd__PTZStreamExtension.
class onvifXsd__PTZStreamExtension;

//  Forward declaration of class onvifXsd__EventStream.
class onvifXsd__EventStream;

//  Forward declaration of class onvifXsd__EventStreamExtension.
class onvifXsd__EventStreamExtension;

//  Forward declaration of class onvifXsd__PaneConfiguration.
class onvifXsd__PaneConfiguration;

//  Forward declaration of class onvifXsd__PaneLayout.
class onvifXsd__PaneLayout;

//  Forward declaration of class onvifXsd__Layout.
class onvifXsd__Layout;

//  Forward declaration of class onvifXsd__LayoutExtension.
class onvifXsd__LayoutExtension;

//  Forward declaration of class onvifXsd__CodingCapabilities.
class onvifXsd__CodingCapabilities;

//  Forward declaration of class onvifXsd__LayoutOptions.
class onvifXsd__LayoutOptions;

//  Forward declaration of class onvifXsd__LayoutOptionsExtension.
class onvifXsd__LayoutOptionsExtension;

//  Forward declaration of class onvifXsd__PaneLayoutOptions.
class onvifXsd__PaneLayoutOptions;

//  Forward declaration of class onvifXsd__PaneOptionExtension.
class onvifXsd__PaneOptionExtension;

//  Forward declaration of class onvifXsd__Receiver.
class onvifXsd__Receiver;

//  Forward declaration of class onvifXsd__ReceiverConfiguration.
class onvifXsd__ReceiverConfiguration;

//  Forward declaration of class onvifXsd__ReceiverStateInformation.
class onvifXsd__ReceiverStateInformation;

//  Forward declaration of class onvifXsd__SourceReference.
class onvifXsd__SourceReference;

//  Forward declaration of class onvifXsd__DateTimeRange.
class onvifXsd__DateTimeRange;

//  Forward declaration of class onvifXsd__RecordingSummary.
class onvifXsd__RecordingSummary;

//  Forward declaration of class onvifXsd__SearchScope.
class onvifXsd__SearchScope;

//  Forward declaration of class onvifXsd__SearchScopeExtension.
class onvifXsd__SearchScopeExtension;

//  Forward declaration of class onvifXsd__EventFilter.
class onvifXsd__EventFilter;

//  Forward declaration of class onvifXsd__PTZPositionFilter.
class onvifXsd__PTZPositionFilter;

//  Forward declaration of class onvifXsd__MetadataFilter.
class onvifXsd__MetadataFilter;

//  Forward declaration of class onvifXsd__FindRecordingResultList.
class onvifXsd__FindRecordingResultList;

//  Forward declaration of class onvifXsd__FindEventResultList.
class onvifXsd__FindEventResultList;

//  Forward declaration of class onvifXsd__FindEventResult.
class onvifXsd__FindEventResult;

//  Forward declaration of class onvifXsd__FindPTZPositionResultList.
class onvifXsd__FindPTZPositionResultList;

//  Forward declaration of class onvifXsd__FindPTZPositionResult.
class onvifXsd__FindPTZPositionResult;

//  Forward declaration of class onvifXsd__FindMetadataResultList.
class onvifXsd__FindMetadataResultList;

//  Forward declaration of class onvifXsd__FindMetadataResult.
class onvifXsd__FindMetadataResult;

//  Forward declaration of class onvifXsd__RecordingInformation.
class onvifXsd__RecordingInformation;

//  Forward declaration of class onvifXsd__RecordingSourceInformation.
class onvifXsd__RecordingSourceInformation;

//  Forward declaration of class onvifXsd__TrackInformation.
class onvifXsd__TrackInformation;

//  Forward declaration of class onvifXsd__MediaAttributes.
class onvifXsd__MediaAttributes;

//  Forward declaration of class onvifXsd__TrackAttributes.
class onvifXsd__TrackAttributes;

//  Forward declaration of class onvifXsd__TrackAttributesExtension.
class onvifXsd__TrackAttributesExtension;

//  Forward declaration of class onvifXsd__VideoAttributes.
class onvifXsd__VideoAttributes;

//  Forward declaration of class onvifXsd__AudioAttributes.
class onvifXsd__AudioAttributes;

//  Forward declaration of class onvifXsd__MetadataAttributes.
class onvifXsd__MetadataAttributes;

//  Forward declaration of class onvifXsd__RecordingConfiguration.
class onvifXsd__RecordingConfiguration;

//  Forward declaration of class onvifXsd__TrackConfiguration.
class onvifXsd__TrackConfiguration;

//  Forward declaration of class onvifXsd__GetRecordingsResponseItem.
class onvifXsd__GetRecordingsResponseItem;

//  Forward declaration of class onvifXsd__GetTracksResponseList.
class onvifXsd__GetTracksResponseList;

//  Forward declaration of class onvifXsd__GetTracksResponseItem.
class onvifXsd__GetTracksResponseItem;

//  Forward declaration of class onvifXsd__RecordingJobConfiguration.
class onvifXsd__RecordingJobConfiguration;

//  Forward declaration of class onvifXsd__RecordingJobConfigurationExtension.
class onvifXsd__RecordingJobConfigurationExtension;

//  Forward declaration of class onvifXsd__RecordingJobSource.
class onvifXsd__RecordingJobSource;

//  Forward declaration of class onvifXsd__RecordingJobSourceExtension.
class onvifXsd__RecordingJobSourceExtension;

//  Forward declaration of class onvifXsd__RecordingJobTrack.
class onvifXsd__RecordingJobTrack;

//  Forward declaration of class onvifXsd__RecordingJobStateInformation.
class onvifXsd__RecordingJobStateInformation;

//  Forward declaration of class onvifXsd__RecordingJobStateInformationExtension.
class onvifXsd__RecordingJobStateInformationExtension;

//  Forward declaration of class onvifXsd__RecordingJobStateSource.
class onvifXsd__RecordingJobStateSource;

//  Forward declaration of class onvifXsd__RecordingJobStateTracks.
class onvifXsd__RecordingJobStateTracks;

//  Forward declaration of class onvifXsd__RecordingJobStateTrack.
class onvifXsd__RecordingJobStateTrack;

//  Forward declaration of class onvifXsd__GetRecordingJobsResponseItem.
class onvifXsd__GetRecordingJobsResponseItem;

//  Forward declaration of class onvifXsd__ReplayConfiguration.
class onvifXsd__ReplayConfiguration;

//  Forward declaration of class onvifXsd__AnalyticsEngine.
class onvifXsd__AnalyticsEngine;

//  Forward declaration of class onvifXsd__AnalyticsDeviceEngineConfiguration.
class onvifXsd__AnalyticsDeviceEngineConfiguration;

//  Forward declaration of class onvifXsd__AnalyticsDeviceEngineConfigurationExtension.
class onvifXsd__AnalyticsDeviceEngineConfigurationExtension;

//  Forward declaration of class onvifXsd__EngineConfiguration.
class onvifXsd__EngineConfiguration;

//  Forward declaration of class onvifXsd__AnalyticsEngineInputInfo.
class onvifXsd__AnalyticsEngineInputInfo;

//  Forward declaration of class onvifXsd__AnalyticsEngineInputInfoExtension.
class onvifXsd__AnalyticsEngineInputInfoExtension;

//  Forward declaration of class onvifXsd__AnalyticsEngineInput.
class onvifXsd__AnalyticsEngineInput;

//  Forward declaration of class onvifXsd__SourceIdentification.
class onvifXsd__SourceIdentification;

//  Forward declaration of class onvifXsd__SourceIdentificationExtension.
class onvifXsd__SourceIdentificationExtension;

//  Forward declaration of class onvifXsd__MetadataInput.
class onvifXsd__MetadataInput;

//  Forward declaration of class onvifXsd__MetadataInputExtension.
class onvifXsd__MetadataInputExtension;

//  Forward declaration of class onvifXsd__AnalyticsEngineControl.
class onvifXsd__AnalyticsEngineControl;

//  Forward declaration of class onvifXsd__AnalyticsStateInformation.
class onvifXsd__AnalyticsStateInformation;

//  Forward declaration of class onvifXsd__AnalyticsState.
class onvifXsd__AnalyticsState;

//  Forward declaration of class onvifXsd__ActionEngineEventPayload.
class onvifXsd__ActionEngineEventPayload;

//  Forward declaration of class onvifXsd__ActionEngineEventPayloadExtension.
class onvifXsd__ActionEngineEventPayloadExtension;

//  Forward declaration of class _onvifXsd__Message.
class _onvifXsd__Message;

//  Forward declaration of class ns5__Include.
class ns5__Include;

//  Forward declaration of class onvifEvents__Capabilities.
class onvifEvents__Capabilities;

//  Forward declaration of class _onvifEvents__GetServiceCapabilities.
class _onvifEvents__GetServiceCapabilities;

//  Forward declaration of class _onvifEvents__GetServiceCapabilitiesResponse.
class _onvifEvents__GetServiceCapabilitiesResponse;

//  Forward declaration of class _onvifEvents__CreatePullPointSubscription.
class _onvifEvents__CreatePullPointSubscription;

//  Forward declaration of class _onvifEvents__CreatePullPointSubscriptionResponse.
class _onvifEvents__CreatePullPointSubscriptionResponse;

//  Forward declaration of class _onvifEvents__PullMessages.
class _onvifEvents__PullMessages;

//  Forward declaration of class _onvifEvents__PullMessagesResponse.
class _onvifEvents__PullMessagesResponse;

//  Forward declaration of class _onvifEvents__PullMessagesFaultResponse.
class _onvifEvents__PullMessagesFaultResponse;

//  Forward declaration of class _onvifEvents__SetSynchronizationPoint.
class _onvifEvents__SetSynchronizationPoint;

//  Forward declaration of class _onvifEvents__SetSynchronizationPointResponse.
class _onvifEvents__SetSynchronizationPointResponse;

//  Forward declaration of class _onvifEvents__GetEventProperties.
class _onvifEvents__GetEventProperties;

//  Forward declaration of class _onvifEvents__GetEventPropertiesResponse.
class _onvifEvents__GetEventPropertiesResponse;

//  Forward declaration of class onvifImg__Capabilities.
class onvifImg__Capabilities;

//  Forward declaration of class _onvifImg__GetServiceCapabilities.
class _onvifImg__GetServiceCapabilities;

//  Forward declaration of class _onvifImg__GetServiceCapabilitiesResponse.
class _onvifImg__GetServiceCapabilitiesResponse;

//  Forward declaration of class _onvifImg__GetImagingSettings.
class _onvifImg__GetImagingSettings;

//  Forward declaration of class _onvifImg__GetImagingSettingsResponse.
class _onvifImg__GetImagingSettingsResponse;

//  Forward declaration of class _onvifImg__SetImagingSettings.
class _onvifImg__SetImagingSettings;

//  Forward declaration of class _onvifImg__SetImagingSettingsResponse.
class _onvifImg__SetImagingSettingsResponse;

//  Forward declaration of class _onvifImg__GetOptions.
class _onvifImg__GetOptions;

//  Forward declaration of class _onvifImg__GetOptionsResponse.
class _onvifImg__GetOptionsResponse;

//  Forward declaration of class _onvifImg__Move.
class _onvifImg__Move;

//  Forward declaration of class _onvifImg__MoveResponse.
class _onvifImg__MoveResponse;

//  Forward declaration of class _onvifImg__GetMoveOptions.
class _onvifImg__GetMoveOptions;

//  Forward declaration of class _onvifImg__GetMoveOptionsResponse.
class _onvifImg__GetMoveOptionsResponse;

//  Forward declaration of class _onvifImg__Stop.
class _onvifImg__Stop;

//  Forward declaration of class _onvifImg__StopResponse.
class _onvifImg__StopResponse;

//  Forward declaration of class _onvifImg__GetStatus.
class _onvifImg__GetStatus;

//  Forward declaration of class _onvifImg__GetStatusResponse.
class _onvifImg__GetStatusResponse;

//  Forward declaration of class onvifMedia__Capabilities.
class onvifMedia__Capabilities;

//  Forward declaration of class onvifMedia__ProfileCapabilities.
class onvifMedia__ProfileCapabilities;

//  Forward declaration of class onvifMedia__StreamingCapabilities.
class onvifMedia__StreamingCapabilities;

//  Forward declaration of class _onvifMedia__GetServiceCapabilities.
class _onvifMedia__GetServiceCapabilities;

//  Forward declaration of class _onvifMedia__GetServiceCapabilitiesResponse.
class _onvifMedia__GetServiceCapabilitiesResponse;

//  Forward declaration of class _onvifMedia__GetVideoSources.
class _onvifMedia__GetVideoSources;

//  Forward declaration of class _onvifMedia__GetVideoSourcesResponse.
class _onvifMedia__GetVideoSourcesResponse;

//  Forward declaration of class _onvifMedia__GetAudioSources.
class _onvifMedia__GetAudioSources;

//  Forward declaration of class _onvifMedia__GetAudioSourcesResponse.
class _onvifMedia__GetAudioSourcesResponse;

//  Forward declaration of class _onvifMedia__GetAudioOutputs.
class _onvifMedia__GetAudioOutputs;

//  Forward declaration of class _onvifMedia__GetAudioOutputsResponse.
class _onvifMedia__GetAudioOutputsResponse;

//  Forward declaration of class _onvifMedia__CreateProfile.
class _onvifMedia__CreateProfile;

//  Forward declaration of class _onvifMedia__CreateProfileResponse.
class _onvifMedia__CreateProfileResponse;

//  Forward declaration of class _onvifMedia__GetProfile.
class _onvifMedia__GetProfile;

//  Forward declaration of class _onvifMedia__GetProfileResponse.
class _onvifMedia__GetProfileResponse;

//  Forward declaration of class _onvifMedia__GetProfiles.
class _onvifMedia__GetProfiles;

//  Forward declaration of class _onvifMedia__GetProfilesResponse.
class _onvifMedia__GetProfilesResponse;

//  Forward declaration of class _onvifMedia__AddVideoEncoderConfiguration.
class _onvifMedia__AddVideoEncoderConfiguration;

//  Forward declaration of class _onvifMedia__AddVideoEncoderConfigurationResponse.
class _onvifMedia__AddVideoEncoderConfigurationResponse;

//  Forward declaration of class _onvifMedia__RemoveVideoEncoderConfiguration.
class _onvifMedia__RemoveVideoEncoderConfiguration;

//  Forward declaration of class _onvifMedia__RemoveVideoEncoderConfigurationResponse.
class _onvifMedia__RemoveVideoEncoderConfigurationResponse;

//  Forward declaration of class _onvifMedia__AddVideoSourceConfiguration.
class _onvifMedia__AddVideoSourceConfiguration;

//  Forward declaration of class _onvifMedia__AddVideoSourceConfigurationResponse.
class _onvifMedia__AddVideoSourceConfigurationResponse;

//  Forward declaration of class _onvifMedia__RemoveVideoSourceConfiguration.
class _onvifMedia__RemoveVideoSourceConfiguration;

//  Forward declaration of class _onvifMedia__RemoveVideoSourceConfigurationResponse.
class _onvifMedia__RemoveVideoSourceConfigurationResponse;

//  Forward declaration of class _onvifMedia__AddAudioEncoderConfiguration.
class _onvifMedia__AddAudioEncoderConfiguration;

//  Forward declaration of class _onvifMedia__AddAudioEncoderConfigurationResponse.
class _onvifMedia__AddAudioEncoderConfigurationResponse;

//  Forward declaration of class _onvifMedia__RemoveAudioEncoderConfiguration.
class _onvifMedia__RemoveAudioEncoderConfiguration;

//  Forward declaration of class _onvifMedia__RemoveAudioEncoderConfigurationResponse.
class _onvifMedia__RemoveAudioEncoderConfigurationResponse;

//  Forward declaration of class _onvifMedia__AddAudioSourceConfiguration.
class _onvifMedia__AddAudioSourceConfiguration;

//  Forward declaration of class _onvifMedia__AddAudioSourceConfigurationResponse.
class _onvifMedia__AddAudioSourceConfigurationResponse;

//  Forward declaration of class _onvifMedia__RemoveAudioSourceConfiguration.
class _onvifMedia__RemoveAudioSourceConfiguration;

//  Forward declaration of class _onvifMedia__RemoveAudioSourceConfigurationResponse.
class _onvifMedia__RemoveAudioSourceConfigurationResponse;

//  Forward declaration of class _onvifMedia__AddPTZConfiguration.
class _onvifMedia__AddPTZConfiguration;

//  Forward declaration of class _onvifMedia__AddPTZConfigurationResponse.
class _onvifMedia__AddPTZConfigurationResponse;

//  Forward declaration of class _onvifMedia__RemovePTZConfiguration.
class _onvifMedia__RemovePTZConfiguration;

//  Forward declaration of class _onvifMedia__RemovePTZConfigurationResponse.
class _onvifMedia__RemovePTZConfigurationResponse;

//  Forward declaration of class _onvifMedia__AddVideoAnalyticsConfiguration.
class _onvifMedia__AddVideoAnalyticsConfiguration;

//  Forward declaration of class _onvifMedia__AddVideoAnalyticsConfigurationResponse.
class _onvifMedia__AddVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _onvifMedia__RemoveVideoAnalyticsConfiguration.
class _onvifMedia__RemoveVideoAnalyticsConfiguration;

//  Forward declaration of class _onvifMedia__RemoveVideoAnalyticsConfigurationResponse.
class _onvifMedia__RemoveVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _onvifMedia__AddMetadataConfiguration.
class _onvifMedia__AddMetadataConfiguration;

//  Forward declaration of class _onvifMedia__AddMetadataConfigurationResponse.
class _onvifMedia__AddMetadataConfigurationResponse;

//  Forward declaration of class _onvifMedia__RemoveMetadataConfiguration.
class _onvifMedia__RemoveMetadataConfiguration;

//  Forward declaration of class _onvifMedia__RemoveMetadataConfigurationResponse.
class _onvifMedia__RemoveMetadataConfigurationResponse;

//  Forward declaration of class _onvifMedia__AddAudioOutputConfiguration.
class _onvifMedia__AddAudioOutputConfiguration;

//  Forward declaration of class _onvifMedia__AddAudioOutputConfigurationResponse.
class _onvifMedia__AddAudioOutputConfigurationResponse;

//  Forward declaration of class _onvifMedia__RemoveAudioOutputConfiguration.
class _onvifMedia__RemoveAudioOutputConfiguration;

//  Forward declaration of class _onvifMedia__RemoveAudioOutputConfigurationResponse.
class _onvifMedia__RemoveAudioOutputConfigurationResponse;

//  Forward declaration of class _onvifMedia__AddAudioDecoderConfiguration.
class _onvifMedia__AddAudioDecoderConfiguration;

//  Forward declaration of class _onvifMedia__AddAudioDecoderConfigurationResponse.
class _onvifMedia__AddAudioDecoderConfigurationResponse;

//  Forward declaration of class _onvifMedia__RemoveAudioDecoderConfiguration.
class _onvifMedia__RemoveAudioDecoderConfiguration;

//  Forward declaration of class _onvifMedia__RemoveAudioDecoderConfigurationResponse.
class _onvifMedia__RemoveAudioDecoderConfigurationResponse;

//  Forward declaration of class _onvifMedia__DeleteProfile.
class _onvifMedia__DeleteProfile;

//  Forward declaration of class _onvifMedia__DeleteProfileResponse.
class _onvifMedia__DeleteProfileResponse;

//  Forward declaration of class _onvifMedia__GetVideoEncoderConfigurations.
class _onvifMedia__GetVideoEncoderConfigurations;

//  Forward declaration of class _onvifMedia__GetVideoEncoderConfigurationsResponse.
class _onvifMedia__GetVideoEncoderConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetVideoSourceConfigurations.
class _onvifMedia__GetVideoSourceConfigurations;

//  Forward declaration of class _onvifMedia__GetVideoSourceConfigurationsResponse.
class _onvifMedia__GetVideoSourceConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetAudioEncoderConfigurations.
class _onvifMedia__GetAudioEncoderConfigurations;

//  Forward declaration of class _onvifMedia__GetAudioEncoderConfigurationsResponse.
class _onvifMedia__GetAudioEncoderConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetAudioSourceConfigurations.
class _onvifMedia__GetAudioSourceConfigurations;

//  Forward declaration of class _onvifMedia__GetAudioSourceConfigurationsResponse.
class _onvifMedia__GetAudioSourceConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetVideoAnalyticsConfigurations.
class _onvifMedia__GetVideoAnalyticsConfigurations;

//  Forward declaration of class _onvifMedia__GetVideoAnalyticsConfigurationsResponse.
class _onvifMedia__GetVideoAnalyticsConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetMetadataConfigurations.
class _onvifMedia__GetMetadataConfigurations;

//  Forward declaration of class _onvifMedia__GetMetadataConfigurationsResponse.
class _onvifMedia__GetMetadataConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetAudioOutputConfigurations.
class _onvifMedia__GetAudioOutputConfigurations;

//  Forward declaration of class _onvifMedia__GetAudioOutputConfigurationsResponse.
class _onvifMedia__GetAudioOutputConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetAudioDecoderConfigurations.
class _onvifMedia__GetAudioDecoderConfigurations;

//  Forward declaration of class _onvifMedia__GetAudioDecoderConfigurationsResponse.
class _onvifMedia__GetAudioDecoderConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetVideoSourceConfiguration.
class _onvifMedia__GetVideoSourceConfiguration;

//  Forward declaration of class _onvifMedia__GetVideoSourceConfigurationResponse.
class _onvifMedia__GetVideoSourceConfigurationResponse;

//  Forward declaration of class _onvifMedia__GetVideoEncoderConfiguration.
class _onvifMedia__GetVideoEncoderConfiguration;

//  Forward declaration of class _onvifMedia__GetVideoEncoderConfigurationResponse.
class _onvifMedia__GetVideoEncoderConfigurationResponse;

//  Forward declaration of class _onvifMedia__GetAudioSourceConfiguration.
class _onvifMedia__GetAudioSourceConfiguration;

//  Forward declaration of class _onvifMedia__GetAudioSourceConfigurationResponse.
class _onvifMedia__GetAudioSourceConfigurationResponse;

//  Forward declaration of class _onvifMedia__GetAudioEncoderConfiguration.
class _onvifMedia__GetAudioEncoderConfiguration;

//  Forward declaration of class _onvifMedia__GetAudioEncoderConfigurationResponse.
class _onvifMedia__GetAudioEncoderConfigurationResponse;

//  Forward declaration of class _onvifMedia__GetVideoAnalyticsConfiguration.
class _onvifMedia__GetVideoAnalyticsConfiguration;

//  Forward declaration of class _onvifMedia__GetVideoAnalyticsConfigurationResponse.
class _onvifMedia__GetVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _onvifMedia__GetMetadataConfiguration.
class _onvifMedia__GetMetadataConfiguration;

//  Forward declaration of class _onvifMedia__GetMetadataConfigurationResponse.
class _onvifMedia__GetMetadataConfigurationResponse;

//  Forward declaration of class _onvifMedia__GetAudioOutputConfiguration.
class _onvifMedia__GetAudioOutputConfiguration;

//  Forward declaration of class _onvifMedia__GetAudioOutputConfigurationResponse.
class _onvifMedia__GetAudioOutputConfigurationResponse;

//  Forward declaration of class _onvifMedia__GetAudioDecoderConfiguration.
class _onvifMedia__GetAudioDecoderConfiguration;

//  Forward declaration of class _onvifMedia__GetAudioDecoderConfigurationResponse.
class _onvifMedia__GetAudioDecoderConfigurationResponse;

//  Forward declaration of class _onvifMedia__GetCompatibleVideoEncoderConfigurations.
class _onvifMedia__GetCompatibleVideoEncoderConfigurations;

//  Forward declaration of class _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse.
class _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetCompatibleVideoSourceConfigurations.
class _onvifMedia__GetCompatibleVideoSourceConfigurations;

//  Forward declaration of class _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse.
class _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetCompatibleAudioEncoderConfigurations.
class _onvifMedia__GetCompatibleAudioEncoderConfigurations;

//  Forward declaration of class _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse.
class _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetCompatibleAudioSourceConfigurations.
class _onvifMedia__GetCompatibleAudioSourceConfigurations;

//  Forward declaration of class _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse.
class _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetCompatibleVideoAnalyticsConfigurations.
class _onvifMedia__GetCompatibleVideoAnalyticsConfigurations;

//  Forward declaration of class _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse.
class _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetCompatibleMetadataConfigurations.
class _onvifMedia__GetCompatibleMetadataConfigurations;

//  Forward declaration of class _onvifMedia__GetCompatibleMetadataConfigurationsResponse.
class _onvifMedia__GetCompatibleMetadataConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetCompatibleAudioOutputConfigurations.
class _onvifMedia__GetCompatibleAudioOutputConfigurations;

//  Forward declaration of class _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse.
class _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse;

//  Forward declaration of class _onvifMedia__GetCompatibleAudioDecoderConfigurations.
class _onvifMedia__GetCompatibleAudioDecoderConfigurations;

//  Forward declaration of class _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse.
class _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse;

//  Forward declaration of class _onvifMedia__SetVideoEncoderConfiguration.
class _onvifMedia__SetVideoEncoderConfiguration;

//  Forward declaration of class _onvifMedia__SetVideoEncoderConfigurationResponse.
class _onvifMedia__SetVideoEncoderConfigurationResponse;

//  Forward declaration of class _onvifMedia__SetVideoSourceConfiguration.
class _onvifMedia__SetVideoSourceConfiguration;

//  Forward declaration of class _onvifMedia__SetVideoSourceConfigurationResponse.
class _onvifMedia__SetVideoSourceConfigurationResponse;

//  Forward declaration of class _onvifMedia__SetAudioEncoderConfiguration.
class _onvifMedia__SetAudioEncoderConfiguration;

//  Forward declaration of class _onvifMedia__SetAudioEncoderConfigurationResponse.
class _onvifMedia__SetAudioEncoderConfigurationResponse;

//  Forward declaration of class _onvifMedia__SetAudioSourceConfiguration.
class _onvifMedia__SetAudioSourceConfiguration;

//  Forward declaration of class _onvifMedia__SetAudioSourceConfigurationResponse.
class _onvifMedia__SetAudioSourceConfigurationResponse;

//  Forward declaration of class _onvifMedia__SetVideoAnalyticsConfiguration.
class _onvifMedia__SetVideoAnalyticsConfiguration;

//  Forward declaration of class _onvifMedia__SetVideoAnalyticsConfigurationResponse.
class _onvifMedia__SetVideoAnalyticsConfigurationResponse;

//  Forward declaration of class _onvifMedia__SetMetadataConfiguration.
class _onvifMedia__SetMetadataConfiguration;

//  Forward declaration of class _onvifMedia__SetMetadataConfigurationResponse.
class _onvifMedia__SetMetadataConfigurationResponse;

//  Forward declaration of class _onvifMedia__SetAudioOutputConfiguration.
class _onvifMedia__SetAudioOutputConfiguration;

//  Forward declaration of class _onvifMedia__SetAudioOutputConfigurationResponse.
class _onvifMedia__SetAudioOutputConfigurationResponse;

//  Forward declaration of class _onvifMedia__SetAudioDecoderConfiguration.
class _onvifMedia__SetAudioDecoderConfiguration;

//  Forward declaration of class _onvifMedia__SetAudioDecoderConfigurationResponse.
class _onvifMedia__SetAudioDecoderConfigurationResponse;

//  Forward declaration of class _onvifMedia__GetVideoSourceConfigurationOptions.
class _onvifMedia__GetVideoSourceConfigurationOptions;

//  Forward declaration of class _onvifMedia__GetVideoSourceConfigurationOptionsResponse.
class _onvifMedia__GetVideoSourceConfigurationOptionsResponse;

//  Forward declaration of class _onvifMedia__GetVideoEncoderConfigurationOptions.
class _onvifMedia__GetVideoEncoderConfigurationOptions;

//  Forward declaration of class _onvifMedia__GetVideoEncoderConfigurationOptionsResponse.
class _onvifMedia__GetVideoEncoderConfigurationOptionsResponse;

//  Forward declaration of class _onvifMedia__GetAudioSourceConfigurationOptions.
class _onvifMedia__GetAudioSourceConfigurationOptions;

//  Forward declaration of class _onvifMedia__GetAudioSourceConfigurationOptionsResponse.
class _onvifMedia__GetAudioSourceConfigurationOptionsResponse;

//  Forward declaration of class _onvifMedia__GetAudioEncoderConfigurationOptions.
class _onvifMedia__GetAudioEncoderConfigurationOptions;

//  Forward declaration of class _onvifMedia__GetAudioEncoderConfigurationOptionsResponse.
class _onvifMedia__GetAudioEncoderConfigurationOptionsResponse;

//  Forward declaration of class _onvifMedia__GetMetadataConfigurationOptions.
class _onvifMedia__GetMetadataConfigurationOptions;

//  Forward declaration of class _onvifMedia__GetMetadataConfigurationOptionsResponse.
class _onvifMedia__GetMetadataConfigurationOptionsResponse;

//  Forward declaration of class _onvifMedia__GetAudioOutputConfigurationOptions.
class _onvifMedia__GetAudioOutputConfigurationOptions;

//  Forward declaration of class _onvifMedia__GetAudioOutputConfigurationOptionsResponse.
class _onvifMedia__GetAudioOutputConfigurationOptionsResponse;

//  Forward declaration of class _onvifMedia__GetAudioDecoderConfigurationOptions.
class _onvifMedia__GetAudioDecoderConfigurationOptions;

//  Forward declaration of class _onvifMedia__GetAudioDecoderConfigurationOptionsResponse.
class _onvifMedia__GetAudioDecoderConfigurationOptionsResponse;

//  Forward declaration of class _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances.
class _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances;

//  Forward declaration of class _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse.
class _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse;

//  Forward declaration of class _onvifMedia__GetStreamUri.
class _onvifMedia__GetStreamUri;

//  Forward declaration of class _onvifMedia__GetStreamUriResponse.
class _onvifMedia__GetStreamUriResponse;

//  Forward declaration of class _onvifMedia__StartMulticastStreaming.
class _onvifMedia__StartMulticastStreaming;

//  Forward declaration of class _onvifMedia__StartMulticastStreamingResponse.
class _onvifMedia__StartMulticastStreamingResponse;

//  Forward declaration of class _onvifMedia__StopMulticastStreaming.
class _onvifMedia__StopMulticastStreaming;

//  Forward declaration of class _onvifMedia__StopMulticastStreamingResponse.
class _onvifMedia__StopMulticastStreamingResponse;

//  Forward declaration of class _onvifMedia__SetSynchronizationPoint.
class _onvifMedia__SetSynchronizationPoint;

//  Forward declaration of class _onvifMedia__SetSynchronizationPointResponse.
class _onvifMedia__SetSynchronizationPointResponse;

//  Forward declaration of class _onvifMedia__GetSnapshotUri.
class _onvifMedia__GetSnapshotUri;

//  Forward declaration of class _onvifMedia__GetSnapshotUriResponse.
class _onvifMedia__GetSnapshotUriResponse;

//  Forward declaration of class onvifPtz__Capabilities.
class onvifPtz__Capabilities;

//  Forward declaration of class _onvifPtz__GetServiceCapabilities.
class _onvifPtz__GetServiceCapabilities;

//  Forward declaration of class _onvifPtz__GetServiceCapabilitiesResponse.
class _onvifPtz__GetServiceCapabilitiesResponse;

//  Forward declaration of class _onvifPtz__GetNodes.
class _onvifPtz__GetNodes;

//  Forward declaration of class _onvifPtz__GetNodesResponse.
class _onvifPtz__GetNodesResponse;

//  Forward declaration of class _onvifPtz__GetNode.
class _onvifPtz__GetNode;

//  Forward declaration of class _onvifPtz__GetNodeResponse.
class _onvifPtz__GetNodeResponse;

//  Forward declaration of class _onvifPtz__GetConfigurations.
class _onvifPtz__GetConfigurations;

//  Forward declaration of class _onvifPtz__GetConfigurationsResponse.
class _onvifPtz__GetConfigurationsResponse;

//  Forward declaration of class _onvifPtz__GetConfiguration.
class _onvifPtz__GetConfiguration;

//  Forward declaration of class _onvifPtz__GetConfigurationResponse.
class _onvifPtz__GetConfigurationResponse;

//  Forward declaration of class _onvifPtz__SetConfiguration.
class _onvifPtz__SetConfiguration;

//  Forward declaration of class _onvifPtz__SetConfigurationResponse.
class _onvifPtz__SetConfigurationResponse;

//  Forward declaration of class _onvifPtz__GetConfigurationOptions.
class _onvifPtz__GetConfigurationOptions;

//  Forward declaration of class _onvifPtz__GetConfigurationOptionsResponse.
class _onvifPtz__GetConfigurationOptionsResponse;

//  Forward declaration of class _onvifPtz__SendAuxiliaryCommand.
class _onvifPtz__SendAuxiliaryCommand;

//  Forward declaration of class _onvifPtz__SendAuxiliaryCommandResponse.
class _onvifPtz__SendAuxiliaryCommandResponse;

//  Forward declaration of class _onvifPtz__GetPresets.
class _onvifPtz__GetPresets;

//  Forward declaration of class _onvifPtz__GetPresetsResponse.
class _onvifPtz__GetPresetsResponse;

//  Forward declaration of class _onvifPtz__SetPreset.
class _onvifPtz__SetPreset;

//  Forward declaration of class _onvifPtz__SetPresetResponse.
class _onvifPtz__SetPresetResponse;

//  Forward declaration of class _onvifPtz__RemovePreset.
class _onvifPtz__RemovePreset;

//  Forward declaration of class _onvifPtz__RemovePresetResponse.
class _onvifPtz__RemovePresetResponse;

//  Forward declaration of class _onvifPtz__GotoPreset.
class _onvifPtz__GotoPreset;

//  Forward declaration of class _onvifPtz__GotoPresetResponse.
class _onvifPtz__GotoPresetResponse;

//  Forward declaration of class _onvifPtz__GetStatus.
class _onvifPtz__GetStatus;

//  Forward declaration of class _onvifPtz__GetStatusResponse.
class _onvifPtz__GetStatusResponse;

//  Forward declaration of class _onvifPtz__GotoHomePosition.
class _onvifPtz__GotoHomePosition;

//  Forward declaration of class _onvifPtz__GotoHomePositionResponse.
class _onvifPtz__GotoHomePositionResponse;

//  Forward declaration of class _onvifPtz__SetHomePosition.
class _onvifPtz__SetHomePosition;

//  Forward declaration of class _onvifPtz__SetHomePositionResponse.
class _onvifPtz__SetHomePositionResponse;

//  Forward declaration of class _onvifPtz__ContinuousMove.
class _onvifPtz__ContinuousMove;

//  Forward declaration of class _onvifPtz__ContinuousMoveResponse.
class _onvifPtz__ContinuousMoveResponse;

//  Forward declaration of class _onvifPtz__RelativeMove.
class _onvifPtz__RelativeMove;

//  Forward declaration of class _onvifPtz__RelativeMoveResponse.
class _onvifPtz__RelativeMoveResponse;

//  Forward declaration of class _onvifPtz__AbsoluteMove.
class _onvifPtz__AbsoluteMove;

//  Forward declaration of class _onvifPtz__AbsoluteMoveResponse.
class _onvifPtz__AbsoluteMoveResponse;

//  Forward declaration of class _onvifPtz__Stop.
class _onvifPtz__Stop;

//  Forward declaration of class _onvifPtz__StopResponse.
class _onvifPtz__StopResponse;

//  Forward declaration of class _onvifPtz__GetPresetTours.
class _onvifPtz__GetPresetTours;

//  Forward declaration of class _onvifPtz__GetPresetToursResponse.
class _onvifPtz__GetPresetToursResponse;

//  Forward declaration of class _onvifPtz__GetPresetTour.
class _onvifPtz__GetPresetTour;

//  Forward declaration of class _onvifPtz__GetPresetTourResponse.
class _onvifPtz__GetPresetTourResponse;

//  Forward declaration of class _onvifPtz__GetPresetTourOptions.
class _onvifPtz__GetPresetTourOptions;

//  Forward declaration of class _onvifPtz__GetPresetTourOptionsResponse.
class _onvifPtz__GetPresetTourOptionsResponse;

//  Forward declaration of class _onvifPtz__CreatePresetTour.
class _onvifPtz__CreatePresetTour;

//  Forward declaration of class _onvifPtz__CreatePresetTourResponse.
class _onvifPtz__CreatePresetTourResponse;

//  Forward declaration of class _onvifPtz__ModifyPresetTour.
class _onvifPtz__ModifyPresetTour;

//  Forward declaration of class _onvifPtz__ModifyPresetTourResponse.
class _onvifPtz__ModifyPresetTourResponse;

//  Forward declaration of class _onvifPtz__OperatePresetTour.
class _onvifPtz__OperatePresetTour;

//  Forward declaration of class _onvifPtz__OperatePresetTourResponse.
class _onvifPtz__OperatePresetTourResponse;

//  Forward declaration of class _onvifPtz__RemovePresetTour.
class _onvifPtz__RemovePresetTour;

//  Forward declaration of class _onvifPtz__RemovePresetTourResponse.
class _onvifPtz__RemovePresetTourResponse;

//  Forward declaration of class onvifDeviceIO__Capabilities.
class onvifDeviceIO__Capabilities;

//  Forward declaration of class onvifDeviceIO__RelayOutputOptions.
class onvifDeviceIO__RelayOutputOptions;

//  Forward declaration of class onvifDeviceIO__RelayOutputOptionsExtension.
class onvifDeviceIO__RelayOutputOptionsExtension;

//  Forward declaration of class onvifDeviceIO__SerialData.
class onvifDeviceIO__SerialData;

//  Forward declaration of class onvifDeviceIO__SerialPort.
class onvifDeviceIO__SerialPort;

//  Forward declaration of class onvifDeviceIO__SerialPortConfiguration.
class onvifDeviceIO__SerialPortConfiguration;

//  Forward declaration of class onvifDeviceIO__SerialPortConfigurationOptions.
class onvifDeviceIO__SerialPortConfigurationOptions;

//  Forward declaration of class onvifDeviceIO__ParityBitList.
class onvifDeviceIO__ParityBitList;

//  Forward declaration of class _onvifDeviceIO__GetServiceCapabilities.
class _onvifDeviceIO__GetServiceCapabilities;

//  Forward declaration of class _onvifDeviceIO__GetServiceCapabilitiesResponse.
class _onvifDeviceIO__GetServiceCapabilitiesResponse;

//  Forward declaration of class _onvifDeviceIO__GetRelayOutputOptions.
class _onvifDeviceIO__GetRelayOutputOptions;

//  Forward declaration of class _onvifDeviceIO__GetRelayOutputOptionsResponse.
class _onvifDeviceIO__GetRelayOutputOptionsResponse;

//  Forward declaration of class _onvifDeviceIO__GetVideoOutputs.
class _onvifDeviceIO__GetVideoOutputs;

//  Forward declaration of class _onvifDeviceIO__GetVideoOutputsResponse.
class _onvifDeviceIO__GetVideoOutputsResponse;

//  Forward declaration of class _onvifDeviceIO__GetAudioSourceConfiguration.
class _onvifDeviceIO__GetAudioSourceConfiguration;

//  Forward declaration of class _onvifDeviceIO__GetAudioSourceConfigurationResponse.
class _onvifDeviceIO__GetAudioSourceConfigurationResponse;

//  Forward declaration of class _onvifDeviceIO__GetAudioOutputConfiguration.
class _onvifDeviceIO__GetAudioOutputConfiguration;

//  Forward declaration of class _onvifDeviceIO__GetAudioOutputConfigurationResponse.
class _onvifDeviceIO__GetAudioOutputConfigurationResponse;

//  Forward declaration of class _onvifDeviceIO__GetVideoSourceConfiguration.
class _onvifDeviceIO__GetVideoSourceConfiguration;

//  Forward declaration of class _onvifDeviceIO__GetVideoSourceConfigurationResponse.
class _onvifDeviceIO__GetVideoSourceConfigurationResponse;

//  Forward declaration of class _onvifDeviceIO__GetVideoOutputConfiguration.
class _onvifDeviceIO__GetVideoOutputConfiguration;

//  Forward declaration of class _onvifDeviceIO__GetVideoOutputConfigurationResponse.
class _onvifDeviceIO__GetVideoOutputConfigurationResponse;

//  Forward declaration of class _onvifDeviceIO__SetAudioSourceConfiguration.
class _onvifDeviceIO__SetAudioSourceConfiguration;

//  Forward declaration of class _onvifDeviceIO__SetAudioSourceConfigurationResponse.
class _onvifDeviceIO__SetAudioSourceConfigurationResponse;

//  Forward declaration of class _onvifDeviceIO__SetAudioOutputConfiguration.
class _onvifDeviceIO__SetAudioOutputConfiguration;

//  Forward declaration of class _onvifDeviceIO__SetAudioOutputConfigurationResponse.
class _onvifDeviceIO__SetAudioOutputConfigurationResponse;

//  Forward declaration of class _onvifDeviceIO__SetVideoSourceConfiguration.
class _onvifDeviceIO__SetVideoSourceConfiguration;

//  Forward declaration of class _onvifDeviceIO__SetVideoSourceConfigurationResponse.
class _onvifDeviceIO__SetVideoSourceConfigurationResponse;

//  Forward declaration of class _onvifDeviceIO__SetVideoOutputConfiguration.
class _onvifDeviceIO__SetVideoOutputConfiguration;

//  Forward declaration of class _onvifDeviceIO__SetVideoOutputConfigurationResponse.
class _onvifDeviceIO__SetVideoOutputConfigurationResponse;

//  Forward declaration of class _onvifDeviceIO__GetVideoSourceConfigurationOptions.
class _onvifDeviceIO__GetVideoSourceConfigurationOptions;

//  Forward declaration of class _onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse.
class _onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse;

//  Forward declaration of class _onvifDeviceIO__GetVideoOutputConfigurationOptions.
class _onvifDeviceIO__GetVideoOutputConfigurationOptions;

//  Forward declaration of class _onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse.
class _onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse;

//  Forward declaration of class _onvifDeviceIO__GetAudioSourceConfigurationOptions.
class _onvifDeviceIO__GetAudioSourceConfigurationOptions;

//  Forward declaration of class _onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse.
class _onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse;

//  Forward declaration of class _onvifDeviceIO__GetAudioOutputConfigurationOptions.
class _onvifDeviceIO__GetAudioOutputConfigurationOptions;

//  Forward declaration of class _onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse.
class _onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse;

//  Forward declaration of class _onvifDeviceIO__SetRelayOutputSettings.
class _onvifDeviceIO__SetRelayOutputSettings;

//  Forward declaration of class _onvifDeviceIO__SetRelayOutputSettingsResponse.
class _onvifDeviceIO__SetRelayOutputSettingsResponse;

//  Forward declaration of class _onvifDeviceIO__GetDigitalInputs.
class _onvifDeviceIO__GetDigitalInputs;

//  Forward declaration of class _onvifDeviceIO__GetDigitalInputsResponse.
class _onvifDeviceIO__GetDigitalInputsResponse;

//  Forward declaration of class _onvifDeviceIO__GetSerialPorts.
class _onvifDeviceIO__GetSerialPorts;

//  Forward declaration of class _onvifDeviceIO__GetSerialPortsResponse.
class _onvifDeviceIO__GetSerialPortsResponse;

//  Forward declaration of class _onvifDeviceIO__GetSerialPortConfiguration.
class _onvifDeviceIO__GetSerialPortConfiguration;

//  Forward declaration of class _onvifDeviceIO__GetSerialPortConfigurationResponse.
class _onvifDeviceIO__GetSerialPortConfigurationResponse;

//  Forward declaration of class _onvifDeviceIO__SetSerialPortConfiguration.
class _onvifDeviceIO__SetSerialPortConfiguration;

//  Forward declaration of class _onvifDeviceIO__SetSerialPortConfigurationResponse.
class _onvifDeviceIO__SetSerialPortConfigurationResponse;

//  Forward declaration of class _onvifDeviceIO__GetSerialPortConfigurationOptions.
class _onvifDeviceIO__GetSerialPortConfigurationOptions;

//  Forward declaration of class _onvifDeviceIO__GetSerialPortConfigurationOptionsResponse.
class _onvifDeviceIO__GetSerialPortConfigurationOptionsResponse;

//  Forward declaration of class _onvifDeviceIO__SendReceiveSerialCommand.
class _onvifDeviceIO__SendReceiveSerialCommand;

//  Forward declaration of class _onvifDeviceIO__SendReceiveSerialCommandResponse.
class _onvifDeviceIO__SendReceiveSerialCommandResponse;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2005/08/addressing                                     *
 *                                                                            *
\******************************************************************************/


/// union of values "tns:RelationshipType xs:anyURI"
typedef std::string ns1__RelationshipTypeOpenEnum;

/// union of values "tns:FaultCodesType xs:QName"
typedef std::string ns1__FaultCodesOpenEnumType;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// union of values "xsd:dateTime xsd:duration"
typedef std::string oasisWsnB2__AbsoluteOrRelativeTimeType;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes is a simpleType containing a whitespace separated list of xs:int.
typedef std::string onvifDevice__EAPMethodTypes;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/schema":IntAttrList is a simpleType containing a whitespace separated list of xs:int.
typedef std::string onvifXsd__IntAttrList;

/// "http://www.onvif.org/ver10/schema":FloatAttrList is a simpleType containing a whitespace separated list of xs:float.
typedef std::string onvifXsd__FloatAttrList;

/// "http://www.onvif.org/ver10/schema":StringAttrList is a simpleType containing a whitespace separated list of xs:string.
typedef std::string onvifXsd__StringAttrList;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/deviceIO/wsdl":DelayTimes is a simpleType containing a whitespace separated list of xs:float.
typedef std::string onvifDeviceIO__DelayTimes;

/// "http://www.w3.org/2005/08/addressing":RelationshipType is a simpleType restriction of xs:anyURI.
/// Note: enum values are prefixed with 'ns1__RelationshipType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__RelationshipType
{
	ns1__RelationshipType__http_x003a_x002f_x002fwww_x002ew3_x002eorg_x002f2005_x002f08_x002faddressing_x002freply,	///< xs:anyURI value="http://www.w3.org/2005/08/addressing/reply"
};

/// Class wrapper
class ns1__RelationshipType_ : public xsd__anyType
{ public:
    enum ns1__RelationshipType           __item;                       
};

/// "http://www.w3.org/2005/08/addressing":FaultCodesType is a simpleType restriction of xs:QName.
/// Note: enum values are prefixed with 'ns1__FaultCodesType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns1__FaultCodesType
{
	ns1__FaultCodesType__ns1__InvalidAddressingHeader,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":InvalidAddressingHeader"
	ns1__FaultCodesType__ns1__InvalidAddress,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":InvalidAddress"
	ns1__FaultCodesType__ns1__InvalidEPR,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":InvalidEPR"
	ns1__FaultCodesType__ns1__InvalidCardinality,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":InvalidCardinality"
	ns1__FaultCodesType__ns1__MissingAddressInEPR,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":MissingAddressInEPR"
	ns1__FaultCodesType__ns1__DuplicateMessageID,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":DuplicateMessageID"
	ns1__FaultCodesType__ns1__ActionMismatch,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":ActionMismatch"
	ns1__FaultCodesType__ns1__MessageAddressingHeaderRequired,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":MessageAddressingHeaderRequired"
	ns1__FaultCodesType__ns1__DestinationUnreachable,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":DestinationUnreachable"
	ns1__FaultCodesType__ns1__ActionNotSupported,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":ActionNotSupported"
	ns1__FaultCodesType__ns1__EndpointUnavailable,	///< xs:QName value=""http://www.w3.org/2005/08/addressing":EndpointUnavailable"
};

/// Class wrapper
class ns1__FaultCodesType_ : public xsd__anyType
{ public:
    enum ns1__FaultCodesType             __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is a simpleType restriction of xs:token.
/// @brief TopicPathExpression ::= TopicPath ( '|' TopicPath )* TopicPath ::= RootTopic ChildTopicExpression* RootTopic ::= NamespacePrefix? ('//')? (NCName | '*') NamespacePrefix ::= NCName ':' ChildTopicExpression ::= '/' '/'? (QName | NCName | '*'| '.')
/// Content pattern is "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*" (note: not automatically enforced)
typedef xsd__token oasisWsnT1__FullTopicExpression "([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*(\\|([\\i-[:]][\\c-[:]]*:)?(//)?([\\i-[:]][\\c-[:]]*|\\*)((/|//)(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*|\\*|[.]))*)*";

/// Class wrapper
class oasisWsnT1__FullTopicExpression__ : public xsd__anyType
{ public:
    oasisWsnT1__FullTopicExpression      __item;                       
};

/// "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is a simpleType restriction of xs:token.
/// @brief The pattern allows strings matching the following EBNF: ConcreteTopicPath ::= RootTopic ChildTopic* RootTopic ::= QName ChildTopic ::= '/' (QName | NCName)
/// Content pattern is "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*" (note: not automatically enforced)
typedef xsd__token oasisWsnT1__ConcreteTopicExpression "(([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)(/([\\i-[:]][\\c-[:]]*:)?[\\i-[:]][\\c-[:]]*)*";

/// Class wrapper
class oasisWsnT1__ConcreteTopicExpression__ : public xsd__anyType
{ public:
    oasisWsnT1__ConcreteTopicExpression  __item;                       
};

/// "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is a simpleType restriction of xs:QName.
/// @brief The pattern allows strings matching the following EBNF: RootTopic ::= QName
typedef xsd__QName oasisWsnT1__SimpleTopicExpression;

/// Class wrapper
class oasisWsnT1__SimpleTopicExpression__ : public xsd__anyType
{ public:
    oasisWsnT1__SimpleTopicExpression    __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of xs:string.
/// @brief Unique identifier for a physical or logical resource. Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class. Length up to 64 characters.
/// Length of this string is within 0..64 characters
typedef std::string onvifXsd__ReferenceToken:64;

/// Class wrapper
class onvifXsd__ReferenceToken__ : public xsd__anyType
{ public:
    onvifXsd__ReferenceToken             __item;                       
};

/// "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of xs:string.
/// @brief User readable name. Length up to 64 characters.
/// Length of this string is within 0..64 characters
typedef std::string onvifXsd__Name:64;

/// Class wrapper
class onvifXsd__Name__ : public xsd__anyType
{ public:
    onvifXsd__Name                       __item;                       
};

/// "http://www.onvif.org/ver10/schema":RotateMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__RotateMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__RotateMode
{
	onvifXsd__RotateMode__OFF,	///< xs:string value="OFF"
	onvifXsd__RotateMode__ON,	///< xs:string value="ON"
	onvifXsd__RotateMode__AUTO,	///< xs:string value="AUTO"
};

/// Class wrapper
class onvifXsd__RotateMode_ : public xsd__anyType
{ public:
    enum onvifXsd__RotateMode            __item;                       
};

/// "http://www.onvif.org/ver10/schema":VideoEncoding is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__VideoEncoding' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__VideoEncoding
{
	onvifXsd__VideoEncoding__JPEG,	///< xs:string value="JPEG"
	onvifXsd__VideoEncoding__MPEG4,	///< xs:string value="MPEG4"
	onvifXsd__VideoEncoding__H264,	///< xs:string value="H264"
};

/// Class wrapper
class onvifXsd__VideoEncoding_ : public xsd__anyType
{ public:
    enum onvifXsd__VideoEncoding         __item;                       
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Profile is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__Mpeg4Profile' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__Mpeg4Profile
{
	onvifXsd__Mpeg4Profile__SP,	///< xs:string value="SP"
	onvifXsd__Mpeg4Profile__ASP,	///< xs:string value="ASP"
};

/// Class wrapper
class onvifXsd__Mpeg4Profile_ : public xsd__anyType
{ public:
    enum onvifXsd__Mpeg4Profile          __item;                       
};

/// "http://www.onvif.org/ver10/schema":H264Profile is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__H264Profile' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__H264Profile
{
	onvifXsd__H264Profile__Baseline,	///< xs:string value="Baseline"
	onvifXsd__H264Profile__Main,	///< xs:string value="Main"
	onvifXsd__H264Profile__Extended,	///< xs:string value="Extended"
	onvifXsd__H264Profile__High,	///< xs:string value="High"
};

/// Class wrapper
class onvifXsd__H264Profile_ : public xsd__anyType
{ public:
    enum onvifXsd__H264Profile           __item;                       
};

/// "http://www.onvif.org/ver10/schema":AudioEncoding is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__AudioEncoding' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__AudioEncoding
{
	onvifXsd__AudioEncoding__G711,	///< xs:string value="G711"
	onvifXsd__AudioEncoding__G726,	///< xs:string value="G726"
	onvifXsd__AudioEncoding__AAC,	///< xs:string value="AAC"
    onvifXsd__AudioEncoding__AMR	///< xs:string value="AMR"
};

/// Class wrapper
class onvifXsd__AudioEncoding_ : public xsd__anyType
{ public:
    enum onvifXsd__AudioEncoding         __item;                       
};

/// "http://www.onvif.org/ver10/schema":StreamType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__StreamType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__StreamType
{
	onvifXsd__StreamType__RTP_Unicast,	///< xs:string value="RTP-Unicast"
	onvifXsd__StreamType__RTP_Multicast,	///< xs:string value="RTP-Multicast"
};

/// Class wrapper
class onvifXsd__StreamType_ : public xsd__anyType
{ public:
    enum onvifXsd__StreamType            __item;                       
};

/// "http://www.onvif.org/ver10/schema":TransportProtocol is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__TransportProtocol' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__TransportProtocol
{
	onvifXsd__TransportProtocol__UDP,	///< xs:string value="UDP"
	onvifXsd__TransportProtocol__TCP,	///< xs:string value="TCP"
	onvifXsd__TransportProtocol__RTSP,	///< xs:string value="RTSP"
	onvifXsd__TransportProtocol__HTTP,	///< xs:string value="HTTP"
};

/// Class wrapper
class onvifXsd__TransportProtocol_ : public xsd__anyType
{ public:
    enum onvifXsd__TransportProtocol     __item;                       
};

/// "http://www.onvif.org/ver10/schema":ScopeDefinition is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__ScopeDefinition' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__ScopeDefinition
{
	onvifXsd__ScopeDefinition__Fixed,	///< xs:string value="Fixed"
	onvifXsd__ScopeDefinition__Configurable,	///< xs:string value="Configurable"
};

/// Class wrapper
class onvifXsd__ScopeDefinition_ : public xsd__anyType
{ public:
    enum onvifXsd__ScopeDefinition       __item;                       
};

/// "http://www.onvif.org/ver10/schema":DiscoveryMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__DiscoveryMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__DiscoveryMode
{
	onvifXsd__DiscoveryMode__Discoverable,	///< xs:string value="Discoverable"
	onvifXsd__DiscoveryMode__NonDiscoverable,	///< xs:string value="NonDiscoverable"
};

/// Class wrapper
class onvifXsd__DiscoveryMode_ : public xsd__anyType
{ public:
    enum onvifXsd__DiscoveryMode         __item;                       
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority is a simpleType restriction of xs:integer.
/// Value range is [0..31]
typedef xsd__integer onvifXsd__NetworkInterfaceConfigPriority;

/// Class wrapper
class onvifXsd__NetworkInterfaceConfigPriority__ : public xsd__anyType
{ public:
    onvifXsd__NetworkInterfaceConfigPriority  __item;                       
};

/// "http://www.onvif.org/ver10/schema":Duplex is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__Duplex' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__Duplex
{
	onvifXsd__Duplex__Full,	///< xs:string value="Full"
	onvifXsd__Duplex__Half,	///< xs:string value="Half"
};

/// Class wrapper
class onvifXsd__Duplex_ : public xsd__anyType
{ public:
    enum onvifXsd__Duplex                __item;                       
};

/// "http://www.onvif.org/ver10/schema":IANA-IfTypes is a simpleType restriction of xs:int.
/// @brief For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
typedef int onvifXsd__IANA_IfTypes;

/// Class wrapper
class onvifXsd__IANA_IfTypes__ : public xsd__anyType
{ public:
    onvifXsd__IANA_IfTypes               __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__IPv6DHCPConfiguration' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__IPv6DHCPConfiguration
{
	onvifXsd__IPv6DHCPConfiguration__Auto,	///< xs:string value="Auto"
	onvifXsd__IPv6DHCPConfiguration__Stateful,	///< xs:string value="Stateful"
	onvifXsd__IPv6DHCPConfiguration__Stateless,	///< xs:string value="Stateless"
	onvifXsd__IPv6DHCPConfiguration__Off,	///< xs:string value="Off"
};

/// Class wrapper
class onvifXsd__IPv6DHCPConfiguration_ : public xsd__anyType
{ public:
    enum onvifXsd__IPv6DHCPConfiguration  __item;                       
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocolType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__NetworkProtocolType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__NetworkProtocolType
{
	onvifXsd__NetworkProtocolType__HTTP,	///< xs:string value="HTTP"
	onvifXsd__NetworkProtocolType__HTTPS,	///< xs:string value="HTTPS"
	onvifXsd__NetworkProtocolType__RTSP,	///< xs:string value="RTSP"
};

/// Class wrapper
class onvifXsd__NetworkProtocolType_ : public xsd__anyType
{ public:
    enum onvifXsd__NetworkProtocolType   __item;                       
};

/// "http://www.onvif.org/ver10/schema":NetworkHostType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__NetworkHostType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__NetworkHostType
{
	onvifXsd__NetworkHostType__IPv4,	///< xs:string value="IPv4"
	onvifXsd__NetworkHostType__IPv6,	///< xs:string value="IPv6"
	onvifXsd__NetworkHostType__DNS,	///< xs:string value="DNS"
};

/// Class wrapper
class onvifXsd__NetworkHostType_ : public xsd__anyType
{ public:
    enum onvifXsd__NetworkHostType       __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of xs:token.
typedef xsd__token onvifXsd__IPv4Address;

/// Class wrapper
class onvifXsd__IPv4Address__ : public xsd__anyType
{ public:
    onvifXsd__IPv4Address                __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of xs:token.
typedef xsd__token onvifXsd__IPv6Address;

/// Class wrapper
class onvifXsd__IPv6Address__ : public xsd__anyType
{ public:
    onvifXsd__IPv6Address                __item;                       
};

/// "http://www.onvif.org/ver10/schema":HwAddress is a simpleType restriction of xs:token.
typedef xsd__token onvifXsd__HwAddress;

/// Class wrapper
class onvifXsd__HwAddress__ : public xsd__anyType
{ public:
    onvifXsd__HwAddress                  __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__IPType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__IPType
{
	onvifXsd__IPType__IPv4,	///< xs:string value="IPv4"
	onvifXsd__IPType__IPv6,	///< xs:string value="IPv6"
};

/// Class wrapper
class onvifXsd__IPType_ : public xsd__anyType
{ public:
    enum onvifXsd__IPType                __item;                       
};

/// "http://www.onvif.org/ver10/schema":DNSName is a simpleType restriction of xs:token.
typedef xsd__token onvifXsd__DNSName;

/// Class wrapper
class onvifXsd__DNSName__ : public xsd__anyType
{ public:
    onvifXsd__DNSName                    __item;                       
};

/// "http://www.onvif.org/ver10/schema":Domain is a simpleType restriction of xs:token.
typedef xsd__token onvifXsd__Domain;

/// Class wrapper
class onvifXsd__Domain__ : public xsd__anyType
{ public:
    onvifXsd__Domain                     __item;                       
};

/// "http://www.onvif.org/ver10/schema":IPAddressFilterType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__IPAddressFilterType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__IPAddressFilterType
{
	onvifXsd__IPAddressFilterType__Allow,	///< xs:string value="Allow"
	onvifXsd__IPAddressFilterType__Deny,	///< xs:string value="Deny"
};

/// Class wrapper
class onvifXsd__IPAddressFilterType_ : public xsd__anyType
{ public:
    enum onvifXsd__IPAddressFilterType   __item;                       
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__DynamicDNSType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__DynamicDNSType
{
	onvifXsd__DynamicDNSType__NoUpdate,	///< xs:string value="NoUpdate"
	onvifXsd__DynamicDNSType__ClientUpdates,	///< xs:string value="ClientUpdates"
	onvifXsd__DynamicDNSType__ServerUpdates,	///< xs:string value="ServerUpdates"
};

/// Class wrapper
class onvifXsd__DynamicDNSType_ : public xsd__anyType
{ public:
    enum onvifXsd__DynamicDNSType        __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11SSIDType is a simpleType restriction of xs:hexBinary.
/// Length of this string is within 1..32 characters
typedef xsd__hexBinary onvifXsd__Dot11SSIDType 1:32;

/// Class wrapper
class onvifXsd__Dot11SSIDType__ : public xsd__anyType
{ public:
    onvifXsd__Dot11SSIDType              __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11StationMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__Dot11StationMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__Dot11StationMode
{
	onvifXsd__Dot11StationMode__Ad_hoc,	///< xs:string value="Ad-hoc"
	onvifXsd__Dot11StationMode__Infrastructure,	///< xs:string value="Infrastructure"
	onvifXsd__Dot11StationMode__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onvifXsd__Dot11StationMode_ : public xsd__anyType
{ public:
    enum onvifXsd__Dot11StationMode      __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11SecurityMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__Dot11SecurityMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__Dot11SecurityMode
{
	onvifXsd__Dot11SecurityMode__None,	///< xs:string value="None"
	onvifXsd__Dot11SecurityMode__WEP,	///< xs:string value="WEP"
	onvifXsd__Dot11SecurityMode__PSK,	///< xs:string value="PSK"
	onvifXsd__Dot11SecurityMode__Dot1X,	///< xs:string value="Dot1X"
	onvifXsd__Dot11SecurityMode__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onvifXsd__Dot11SecurityMode_ : public xsd__anyType
{ public:
    enum onvifXsd__Dot11SecurityMode     __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11Cipher is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__Dot11Cipher' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__Dot11Cipher
{
	onvifXsd__Dot11Cipher__CCMP,	///< xs:string value="CCMP"
	onvifXsd__Dot11Cipher__TKIP,	///< xs:string value="TKIP"
	onvifXsd__Dot11Cipher__Any,	///< xs:string value="Any"
	onvifXsd__Dot11Cipher__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onvifXsd__Dot11Cipher_ : public xsd__anyType
{ public:
    enum onvifXsd__Dot11Cipher           __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11PSK is a simpleType restriction of xs:hexBinary.
/// Length of this string is exactly 32 characters
typedef xsd__hexBinary onvifXsd__Dot11PSK;

/// Class wrapper
class onvifXsd__Dot11PSK__ : public xsd__anyType
{ public:
    onvifXsd__Dot11PSK                   __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase is a simpleType restriction of xs:string.
/// Content pattern is "[ -~]{8,63}" (note: not automatically enforced)
typedef std::string onvifXsd__Dot11PSKPassphrase "[ -~]{8,63}";

/// Class wrapper
class onvifXsd__Dot11PSKPassphrase__ : public xsd__anyType
{ public:
    onvifXsd__Dot11PSKPassphrase         __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11SignalStrength is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__Dot11SignalStrength' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__Dot11SignalStrength
{
	onvifXsd__Dot11SignalStrength__None,	///< xs:string value="None"
	onvifXsd__Dot11SignalStrength__Very_x0020Bad,	///< xs:string value="Very Bad"
	onvifXsd__Dot11SignalStrength__Bad,	///< xs:string value="Bad"
	onvifXsd__Dot11SignalStrength__Good,	///< xs:string value="Good"
	onvifXsd__Dot11SignalStrength__Very_x0020Good,	///< xs:string value="Very Good"
	onvifXsd__Dot11SignalStrength__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onvifXsd__Dot11SignalStrength_ : public xsd__anyType
{ public:
    enum onvifXsd__Dot11SignalStrength   __item;                       
};

/// "http://www.onvif.org/ver10/schema":Dot11AuthAndMangementSuite is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__Dot11AuthAndMangementSuite' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__Dot11AuthAndMangementSuite
{
	onvifXsd__Dot11AuthAndMangementSuite__None,	///< xs:string value="None"
	onvifXsd__Dot11AuthAndMangementSuite__Dot1X,	///< xs:string value="Dot1X"
	onvifXsd__Dot11AuthAndMangementSuite__PSK,	///< xs:string value="PSK"
	onvifXsd__Dot11AuthAndMangementSuite__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onvifXsd__Dot11AuthAndMangementSuite_ : public xsd__anyType
{ public:
    enum onvifXsd__Dot11AuthAndMangementSuite  __item;                       
};

/// "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__CapabilityCategory' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__CapabilityCategory
{
	onvifXsd__CapabilityCategory__All,	///< xs:string value="All"
	onvifXsd__CapabilityCategory__Analytics,	///< xs:string value="Analytics"
	onvifXsd__CapabilityCategory__Device,	///< xs:string value="Device"
	onvifXsd__CapabilityCategory__Events,	///< xs:string value="Events"
	onvifXsd__CapabilityCategory__Imaging,	///< xs:string value="Imaging"
	onvifXsd__CapabilityCategory__Media,	///< xs:string value="Media"
	onvifXsd__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// Class wrapper
class onvifXsd__CapabilityCategory_ : public xsd__anyType
{ public:
    enum onvifXsd__CapabilityCategory    __item;                       
};

/// "http://www.onvif.org/ver10/schema":SystemLogType is a simpleType restriction of xs:string.
/// @brief Enumeration describing the available system log modes.
/// Note: enum values are prefixed with 'onvifXsd__SystemLogType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__SystemLogType
{
/// @brief Indicates that a system log is requested.
	onvifXsd__SystemLogType__System,	///< xs:string value="System"
/// @brief Indicates that a access log is requested.
	onvifXsd__SystemLogType__Access,	///< xs:string value="Access"
};

/// Class wrapper
class onvifXsd__SystemLogType_ : public xsd__anyType
{ public:
    enum onvifXsd__SystemLogType         __item;                       
};

/// "http://www.onvif.org/ver10/schema":FactoryDefaultType is a simpleType restriction of xs:string.
/// @brief Enumeration describing the available factory default modes.
/// Note: enum values are prefixed with 'onvifXsd__FactoryDefaultType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__FactoryDefaultType
{
/// @brief Indicates that a hard factory default is requested.
	onvifXsd__FactoryDefaultType__Hard,	///< xs:string value="Hard"
/// @brief Indicates that a soft factory default is requested.
	onvifXsd__FactoryDefaultType__Soft,	///< xs:string value="Soft"
};

/// Class wrapper
class onvifXsd__FactoryDefaultType_ : public xsd__anyType
{ public:
    enum onvifXsd__FactoryDefaultType    __item;                       
};

/// "http://www.onvif.org/ver10/schema":SetDateTimeType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__SetDateTimeType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__SetDateTimeType
{
/// @brief Indicates that the date and time are set manually.
	onvifXsd__SetDateTimeType__Manual,	///< xs:string value="Manual"
/// @brief Indicates that the date and time are set through NTP
	onvifXsd__SetDateTimeType__NTP,	///< xs:string value="NTP"
};

/// Class wrapper
class onvifXsd__SetDateTimeType_ : public xsd__anyType
{ public:
    enum onvifXsd__SetDateTimeType       __item;                       
};

/// "http://www.onvif.org/ver10/schema":UserLevel is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__UserLevel' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__UserLevel
{
	onvifXsd__UserLevel__Administrator,	///< xs:string value="Administrator"
	onvifXsd__UserLevel__Operator,	///< xs:string value="Operator"
	onvifXsd__UserLevel__User,	///< xs:string value="User"
	onvifXsd__UserLevel__Anonymous,	///< xs:string value="Anonymous"
	onvifXsd__UserLevel__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onvifXsd__UserLevel_ : public xsd__anyType
{ public:
    enum onvifXsd__UserLevel             __item;                       
};

/// "http://www.onvif.org/ver10/schema":RelayLogicalState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__RelayLogicalState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__RelayLogicalState
{
	onvifXsd__RelayLogicalState__active,	///< xs:string value="active"
	onvifXsd__RelayLogicalState__inactive,	///< xs:string value="inactive"
};

/// Class wrapper
class onvifXsd__RelayLogicalState_ : public xsd__anyType
{ public:
    enum onvifXsd__RelayLogicalState     __item;                       
};

/// "http://www.onvif.org/ver10/schema":RelayIdleState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__RelayIdleState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__RelayIdleState
{
	onvifXsd__RelayIdleState__closed,	///< xs:string value="closed"
	onvifXsd__RelayIdleState__open,	///< xs:string value="open"
};

/// Class wrapper
class onvifXsd__RelayIdleState_ : public xsd__anyType
{ public:
    enum onvifXsd__RelayIdleState        __item;                       
};

/// "http://www.onvif.org/ver10/schema":RelayMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__RelayMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__RelayMode
{
	onvifXsd__RelayMode__Monostable,	///< xs:string value="Monostable"
	onvifXsd__RelayMode__Bistable,	///< xs:string value="Bistable"
};

/// Class wrapper
class onvifXsd__RelayMode_ : public xsd__anyType
{ public:
    enum onvifXsd__RelayMode             __item;                       
};

/// "http://www.onvif.org/ver10/schema":EFlipMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__EFlipMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__EFlipMode
{
	onvifXsd__EFlipMode__OFF,	///< xs:string value="OFF"
	onvifXsd__EFlipMode__ON,	///< xs:string value="ON"
	onvifXsd__EFlipMode__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onvifXsd__EFlipMode_ : public xsd__anyType
{ public:
    enum onvifXsd__EFlipMode             __item;                       
};

/// "http://www.onvif.org/ver10/schema":ReverseMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__ReverseMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__ReverseMode
{
	onvifXsd__ReverseMode__OFF,	///< xs:string value="OFF"
	onvifXsd__ReverseMode__ON,	///< xs:string value="ON"
	onvifXsd__ReverseMode__AUTO,	///< xs:string value="AUTO"
	onvifXsd__ReverseMode__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onvifXsd__ReverseMode_ : public xsd__anyType
{ public:
    enum onvifXsd__ReverseMode           __item;                       
};

/// "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of xs:string.
/// Length of this string is within 0..128 characters
typedef std::string onvifXsd__AuxiliaryData:128;

/// Class wrapper
class onvifXsd__AuxiliaryData__ : public xsd__anyType
{ public:
    onvifXsd__AuxiliaryData              __item;                       
};

/// "http://www.onvif.org/ver10/schema":MoveStatus is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__MoveStatus' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__MoveStatus
{
	onvifXsd__MoveStatus__IDLE,	///< xs:string value="IDLE"
	onvifXsd__MoveStatus__MOVING,	///< xs:string value="MOVING"
	onvifXsd__MoveStatus__UNKNOWN,	///< xs:string value="UNKNOWN"
};

/// Class wrapper
class onvifXsd__MoveStatus_ : public xsd__anyType
{ public:
    enum onvifXsd__MoveStatus            __item;                       
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__PTZPresetTourState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__PTZPresetTourState
{
	onvifXsd__PTZPresetTourState__Idle,	///< xs:string value="Idle"
	onvifXsd__PTZPresetTourState__Touring,	///< xs:string value="Touring"
	onvifXsd__PTZPresetTourState__Paused,	///< xs:string value="Paused"
	onvifXsd__PTZPresetTourState__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onvifXsd__PTZPresetTourState_ : public xsd__anyType
{ public:
    enum onvifXsd__PTZPresetTourState    __item;                       
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourDirection is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__PTZPresetTourDirection' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__PTZPresetTourDirection
{
	onvifXsd__PTZPresetTourDirection__Forward,	///< xs:string value="Forward"
	onvifXsd__PTZPresetTourDirection__Backward,	///< xs:string value="Backward"
	onvifXsd__PTZPresetTourDirection__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onvifXsd__PTZPresetTourDirection_ : public xsd__anyType
{ public:
    enum onvifXsd__PTZPresetTourDirection  __item;                       
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourOperation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__PTZPresetTourOperation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__PTZPresetTourOperation
{
	onvifXsd__PTZPresetTourOperation__Start,	///< xs:string value="Start"
	onvifXsd__PTZPresetTourOperation__Stop,	///< xs:string value="Stop"
	onvifXsd__PTZPresetTourOperation__Pause,	///< xs:string value="Pause"
	onvifXsd__PTZPresetTourOperation__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onvifXsd__PTZPresetTourOperation_ : public xsd__anyType
{ public:
    enum onvifXsd__PTZPresetTourOperation  __item;                       
};

/// "http://www.onvif.org/ver10/schema":AutoFocusMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__AutoFocusMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__AutoFocusMode
{
	onvifXsd__AutoFocusMode__AUTO,	///< xs:string value="AUTO"
	onvifXsd__AutoFocusMode__MANUAL,	///< xs:string value="MANUAL"
};

/// Class wrapper
class onvifXsd__AutoFocusMode_ : public xsd__anyType
{ public:
    enum onvifXsd__AutoFocusMode         __item;                       
};

/// "http://www.onvif.org/ver10/schema":WideDynamicMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__WideDynamicMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__WideDynamicMode
{
	onvifXsd__WideDynamicMode__OFF,	///< xs:string value="OFF"
	onvifXsd__WideDynamicMode__ON,	///< xs:string value="ON"
};

/// Class wrapper
class onvifXsd__WideDynamicMode_ : public xsd__anyType
{ public:
    enum onvifXsd__WideDynamicMode       __item;                       
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationMode is a simpleType restriction of xs:string.
/// @brief Enumeration describing the available backlight compenstation modes.
/// Note: enum values are prefixed with 'onvifXsd__BacklightCompensationMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__BacklightCompensationMode
{
/// @brief Backlight compensation is disabled.
	onvifXsd__BacklightCompensationMode__OFF,	///< xs:string value="OFF"
/// @brief Backlight compensation is enabled.
	onvifXsd__BacklightCompensationMode__ON,	///< xs:string value="ON"
};

/// Class wrapper
class onvifXsd__BacklightCompensationMode_ : public xsd__anyType
{ public:
    enum onvifXsd__BacklightCompensationMode  __item;                       
};

/// "http://www.onvif.org/ver10/schema":ExposurePriority is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__ExposurePriority' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__ExposurePriority
{
	onvifXsd__ExposurePriority__LowNoise,	///< xs:string value="LowNoise"
	onvifXsd__ExposurePriority__FrameRate,	///< xs:string value="FrameRate"
};

/// Class wrapper
class onvifXsd__ExposurePriority_ : public xsd__anyType
{ public:
    enum onvifXsd__ExposurePriority      __item;                       
};

/// "http://www.onvif.org/ver10/schema":ExposureMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__ExposureMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__ExposureMode
{
	onvifXsd__ExposureMode__AUTO,	///< xs:string value="AUTO"
	onvifXsd__ExposureMode__MANUAL,	///< xs:string value="MANUAL"
};

/// Class wrapper
class onvifXsd__ExposureMode_ : public xsd__anyType
{ public:
    enum onvifXsd__ExposureMode          __item;                       
};

/// "http://www.onvif.org/ver10/schema":Enabled is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__Enabled' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__Enabled
{
	onvifXsd__Enabled__ENABLED,	///< xs:string value="ENABLED"
	onvifXsd__Enabled__DISABLED,	///< xs:string value="DISABLED"
};

/// Class wrapper
class onvifXsd__Enabled_ : public xsd__anyType
{ public:
    enum onvifXsd__Enabled               __item;                       
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__WhiteBalanceMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__WhiteBalanceMode
{
	onvifXsd__WhiteBalanceMode__AUTO,	///< xs:string value="AUTO"
	onvifXsd__WhiteBalanceMode__MANUAL,	///< xs:string value="MANUAL"
};

/// Class wrapper
class onvifXsd__WhiteBalanceMode_ : public xsd__anyType
{ public:
    enum onvifXsd__WhiteBalanceMode      __item;                       
};

/// "http://www.onvif.org/ver10/schema":IrCutFilterMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__IrCutFilterMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__IrCutFilterMode
{
	onvifXsd__IrCutFilterMode__ON,	///< xs:string value="ON"
	onvifXsd__IrCutFilterMode__OFF,	///< xs:string value="OFF"
	onvifXsd__IrCutFilterMode__AUTO,	///< xs:string value="AUTO"
};

/// Class wrapper
class onvifXsd__IrCutFilterMode_ : public xsd__anyType
{ public:
    enum onvifXsd__IrCutFilterMode       __item;                       
};

/// "http://www.onvif.org/ver10/schema":ImageStabilizationMode is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__ImageStabilizationMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__ImageStabilizationMode
{
	onvifXsd__ImageStabilizationMode__OFF,	///< xs:string value="OFF"
	onvifXsd__ImageStabilizationMode__ON,	///< xs:string value="ON"
	onvifXsd__ImageStabilizationMode__AUTO,	///< xs:string value="AUTO"
	onvifXsd__ImageStabilizationMode__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onvifXsd__ImageStabilizationMode_ : public xsd__anyType
{ public:
    enum onvifXsd__ImageStabilizationMode  __item;                       
};

/// "http://www.onvif.org/ver10/schema":TopicNamespaceLocation is a simpleType restriction of xs:anyURI.
typedef xsd__anyURI onvifXsd__TopicNamespaceLocation;

/// Class wrapper
class onvifXsd__TopicNamespaceLocation__ : public xsd__anyType
{ public:
    onvifXsd__TopicNamespaceLocation     __item;                       
};

/// "http://www.onvif.org/ver10/schema":PropertyOperation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__PropertyOperation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__PropertyOperation
{
	onvifXsd__PropertyOperation__Initialized,	///< xs:string value="Initialized"
	onvifXsd__PropertyOperation__Deleted,	///< xs:string value="Deleted"
	onvifXsd__PropertyOperation__Changed,	///< xs:string value="Changed"
};

/// Class wrapper
class onvifXsd__PropertyOperation_ : public xsd__anyType
{ public:
    enum onvifXsd__PropertyOperation     __item;                       
};

/// "http://www.onvif.org/ver10/schema":Direction is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__Direction' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__Direction
{
	onvifXsd__Direction__Left,	///< xs:string value="Left"
	onvifXsd__Direction__Right,	///< xs:string value="Right"
	onvifXsd__Direction__Any,	///< xs:string value="Any"
};

/// Class wrapper
class onvifXsd__Direction_ : public xsd__anyType
{ public:
    enum onvifXsd__Direction             __item;                       
};

/// "http://www.onvif.org/ver10/schema":ClassType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__ClassType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__ClassType
{
	onvifXsd__ClassType__Animal,	///< xs:string value="Animal"
	onvifXsd__ClassType__Face,	///< xs:string value="Face"
	onvifXsd__ClassType__Human,	///< xs:string value="Human"
	onvifXsd__ClassType__Vehical,	///< xs:string value="Vehical"
	onvifXsd__ClassType__Other,	///< xs:string value="Other"
};

/// Class wrapper
class onvifXsd__ClassType_ : public xsd__anyType
{ public:
    enum onvifXsd__ClassType             __item;                       
};

/// "http://www.onvif.org/ver10/schema":ReceiverMode is a simpleType restriction of xs:string.
/// @brief Specifies a receiver connection mode.
/// Note: enum values are prefixed with 'onvifXsd__ReceiverMode' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__ReceiverMode
{
/// @brief The receiver connects on demand, as required by consumers of the media streams.
	onvifXsd__ReceiverMode__AutoConnect,	///< xs:string value="AutoConnect"
/// @brief The receiver attempts to maintain a persistent connection to the configured endpoint.
	onvifXsd__ReceiverMode__AlwaysConnect,	///< xs:string value="AlwaysConnect"
/// @brief The receiver does not attempt to connect.
	onvifXsd__ReceiverMode__NeverConnect,	///< xs:string value="NeverConnect"
/// @brief This case should never happen.
	onvifXsd__ReceiverMode__Unknown,	///< xs:string value="Unknown"
};

/// Class wrapper
class onvifXsd__ReceiverMode_ : public xsd__anyType
{ public:
    enum onvifXsd__ReceiverMode          __item;                       
};

/// "http://www.onvif.org/ver10/schema":ReceiverState is a simpleType restriction of xs:string.
/// @brief Specifies the current connection state of the receiver.
/// Note: enum values are prefixed with 'onvifXsd__ReceiverState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__ReceiverState
{
/// @brief The receiver is not connected.
	onvifXsd__ReceiverState__NotConnected,	///< xs:string value="NotConnected"
/// @brief The receiver is attempting to connect.
	onvifXsd__ReceiverState__Connecting,	///< xs:string value="Connecting"
/// @brief The receiver is connected.
	onvifXsd__ReceiverState__Connected,	///< xs:string value="Connected"
/// @brief This case should never happen.
	onvifXsd__ReceiverState__Unknown,	///< xs:string value="Unknown"
};

/// Class wrapper
class onvifXsd__ReceiverState_ : public xsd__anyType
{ public:
    enum onvifXsd__ReceiverState         __item;                       
};

/// "http://www.onvif.org/ver10/schema":Description is a simpleType restriction of xs:string.
typedef std::string onvifXsd__Description;

/// Class wrapper
class onvifXsd__Description__ : public xsd__anyType
{ public:
    onvifXsd__Description                __item;                       
};

/// "http://www.onvif.org/ver10/schema":XPathExpression is a simpleType restriction of xs:string.
typedef std::string onvifXsd__XPathExpression;

/// Class wrapper
class onvifXsd__XPathExpression__ : public xsd__anyType
{ public:
    onvifXsd__XPathExpression            __item;                       
};

/// "http://www.onvif.org/ver10/schema":SearchState is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__SearchState' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__SearchState
{
/// @brief The search is queued and not yet started.
	onvifXsd__SearchState__Queued,	///< xs:string value="Queued"
/// @brief The search is underway and not yet completed.
	onvifXsd__SearchState__Searching,	///< xs:string value="Searching"
/// @brief The search has been completed and no new results will be found.
	onvifXsd__SearchState__Completed,	///< xs:string value="Completed"
/// @brief The state of the search is unknown. (This is not a valid response from GetSearchState.)
	onvifXsd__SearchState__Unknown,	///< xs:string value="Unknown"
};

/// Class wrapper
class onvifXsd__SearchState_ : public xsd__anyType
{ public:
    enum onvifXsd__SearchState           __item;                       
};

/// "http://www.onvif.org/ver10/schema":RecordingStatus is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__RecordingStatus' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__RecordingStatus
{
	onvifXsd__RecordingStatus__Initiated,	///< xs:string value="Initiated"
	onvifXsd__RecordingStatus__Recording,	///< xs:string value="Recording"
	onvifXsd__RecordingStatus__Stopped,	///< xs:string value="Stopped"
	onvifXsd__RecordingStatus__Removing,	///< xs:string value="Removing"
	onvifXsd__RecordingStatus__Removed,	///< xs:string value="Removed"
/// @brief This case should never happen.
	onvifXsd__RecordingStatus__Unknown,	///< xs:string value="Unknown"
};

/// Class wrapper
class onvifXsd__RecordingStatus_ : public xsd__anyType
{ public:
    enum onvifXsd__RecordingStatus       __item;                       
};

/// "http://www.onvif.org/ver10/schema":TrackType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__TrackType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__TrackType
{
	onvifXsd__TrackType__Video,	///< xs:string value="Video"
	onvifXsd__TrackType__Audio,	///< xs:string value="Audio"
	onvifXsd__TrackType__Metadata,	///< xs:string value="Metadata"
/// @brief Placeholder for future extension.
	onvifXsd__TrackType__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onvifXsd__TrackType_ : public xsd__anyType
{ public:
    enum onvifXsd__TrackType             __item;                       
};

/// "http://www.onvif.org/ver10/schema":RecordingJobMode is a simpleType restriction of xs:string.
typedef std::string onvifXsd__RecordingJobMode;

/// Class wrapper
class onvifXsd__RecordingJobMode__ : public xsd__anyType
{ public:
    onvifXsd__RecordingJobMode           __item;                       
};

/// "http://www.onvif.org/ver10/schema":RecordingJobState is a simpleType restriction of xs:string.
typedef std::string onvifXsd__RecordingJobState;

/// Class wrapper
class onvifXsd__RecordingJobState__ : public xsd__anyType
{ public:
    onvifXsd__RecordingJobState          __item;                       
};

/// "http://www.onvif.org/ver10/schema":ModeOfOperation is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'onvifXsd__ModeOfOperation' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifXsd__ModeOfOperation
{
	onvifXsd__ModeOfOperation__Idle,	///< xs:string value="Idle"
	onvifXsd__ModeOfOperation__Active,	///< xs:string value="Active"
/// @brief This case should never happen.
	onvifXsd__ModeOfOperation__Unknown,	///< xs:string value="Unknown"
};

/// Class wrapper
class onvifXsd__ModeOfOperation_ : public xsd__anyType
{ public:
    enum onvifXsd__ModeOfOperation       __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortType is a simpleType restriction of xs:string.
/// @brief The type of serial port.Generic can be signaled as a vendor specific serial port type.
/// Note: enum values are prefixed with 'onvifDeviceIO__SerialPortType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifDeviceIO__SerialPortType
{
	onvifDeviceIO__SerialPortType__RS232,	///< xs:string value="RS232"
	onvifDeviceIO__SerialPortType__RS422HalfDuplex,	///< xs:string value="RS422HalfDuplex"
	onvifDeviceIO__SerialPortType__RS422FullDuplex,	///< xs:string value="RS422FullDuplex"
	onvifDeviceIO__SerialPortType__RS485HalfDuplex,	///< xs:string value="RS485HalfDuplex"
	onvifDeviceIO__SerialPortType__RS485FullDuplex,	///< xs:string value="RS485FullDuplex"
	onvifDeviceIO__SerialPortType__Generic,	///< xs:string value="Generic"
};

/// Class wrapper
class onvifDeviceIO__SerialPortType_ : public xsd__anyType
{ public:
    enum onvifDeviceIO__SerialPortType   __item;                       
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBit is a simpleType restriction of xs:string.
/// @brief The parity for the data error detection.
/// Note: enum values are prefixed with 'onvifDeviceIO__ParityBit' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum onvifDeviceIO__ParityBit
{
	onvifDeviceIO__ParityBit__None,	///< xs:string value="None"
	onvifDeviceIO__ParityBit__Even,	///< xs:string value="Even"
	onvifDeviceIO__ParityBit__Odd,	///< xs:string value="Odd"
	onvifDeviceIO__ParityBit__Mark,	///< xs:string value="Mark"
	onvifDeviceIO__ParityBit__Space,	///< xs:string value="Space"
	onvifDeviceIO__ParityBit__Extended,	///< xs:string value="Extended"
};

/// Class wrapper
class onvifDeviceIO__ParityBit_ : public xsd__anyType
{ public:
    enum onvifDeviceIO__ParityBit        __item;                       
};

/// "http://www.onvif.org/ver10/schema":ReceiverReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef onvifXsd__ReferenceToken onvifXsd__ReceiverReference;

/// Class wrapper
class onvifXsd__ReceiverReference__ : public xsd__anyType
{ public:
    onvifXsd__ReceiverReference          __item;                       
};

/// "http://www.onvif.org/ver10/schema":RecordingReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef onvifXsd__ReferenceToken onvifXsd__RecordingReference;

/// Class wrapper
class onvifXsd__RecordingReference__ : public xsd__anyType
{ public:
    onvifXsd__RecordingReference         __item;                       
};

/// "http://www.onvif.org/ver10/schema":TrackReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef onvifXsd__ReferenceToken onvifXsd__TrackReference;

/// Class wrapper
class onvifXsd__TrackReference__ : public xsd__anyType
{ public:
    onvifXsd__TrackReference             __item;                       
};

/// "http://www.onvif.org/ver10/schema":JobToken is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef onvifXsd__ReferenceToken onvifXsd__JobToken;

/// Class wrapper
class onvifXsd__JobToken__ : public xsd__anyType
{ public:
    onvifXsd__JobToken                   __item;                       
};

/// "http://www.onvif.org/ver10/schema":RecordingJobReference is a simpleType restriction of "http://www.onvif.org/ver10/schema":ReferenceToken.
typedef onvifXsd__ReferenceToken onvifXsd__RecordingJobReference;

/// Class wrapper
class onvifXsd__RecordingJobReference__ : public xsd__anyType
{ public:
    onvifXsd__RecordingJobReference      __item;                       
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.w3.org/2005/08/addressing                                     *
 *                                                                            *
\******************************************************************************/


/// "http://www.w3.org/2005/08/addressing":EndpointReferenceType is a complexType.
class ns1__EndpointReferenceType : public xsd__anyType
{ public:
/// Element Address of type "http://www.w3.org/2005/08/addressing":AttributedURIType.
    ns1__AttributedURIType*              Address                        1;	///< Required element.
/// Element reference "http://www.w3.org/2005/08/addressing":ReferenceParameters.
    ns1__ReferenceParametersType*        ns1__ReferenceParameters       0;	///< Optional element.
/// Element reference "http://www.w3.org/2005/08/addressing":Metadata.
    ns1__MetadataType*                   ns1__Metadata                  0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.w3.org/2005/08/addressing":ReferenceParametersType is a complexType.
class ns1__ReferenceParametersType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.w3.org/2005/08/addressing":MetadataType is a complexType.
class ns1__MetadataType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.w3.org/2005/08/addressing":ProblemActionType is a complexType.
class ns1__ProblemActionType : public xsd__anyType
{ public:
/// Element reference "http://www.w3.org/2005/08/addressing":Action.
    ns1__AttributedURIType*              ns1__Action                    0;	///< Optional element.
/// Element SoapAction of type xs:anyURI.
    xsd__anyURI*                         SoapAction                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
class oasisWsrf__BaseFaultType : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__BaseFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__BaseFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__BaseFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType.
class oasisWsnB2__QueryExpressionType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType.
class oasisWsnB2__TopicExpressionType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
class oasisWsnB2__FilterType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
class oasisWsnB2__SubscriptionPolicyType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
class oasisWsnB2__NotificationMessageHolderType : public xsd__anyType
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    ns1__EndpointReferenceType*          oasisWsnB2__SubscriptionReference 0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":Topic.
    oasisWsnB2__TopicExpressionType*     oasisWsnB2__Topic              0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":ProducerReference.
    ns1__EndpointReferenceType*          oasisWsnB2__ProducerReference  0;	///< Optional element.
    class _oasisWsnB2__NotificationMessageHolderType_Message
    {
/// TODO: <any namespace="##any" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                    Message                        1;	///< Required element.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP

/// "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is a complexType.
class _oasisWsnB2__NotificationProducerRP
{ public:
/// Vector of oasisWsnB2__TopicExpressionType* element refs with length 0..unbounded
    std::vector<oasisWsnB2__TopicExpressionType*> oasisWsnB2__TopicExpression    0;
/// Element reference "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    bool*                                oasisWsnB2__FixedTopicSet      0;	///< Optional element.
/// Vector of xsd__anyURI element refs with length 0..unbounded
    std::vector<xsd__anyURI            > oasisWsnB2__TopicExpressionDialect 0;
/// Element reference "http://docs.oasis-open.org/wsn/t-1":TopicSet.
    oasisWsnT1__TopicSetType*            oasisWsnT1__TopicSet           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP

/// "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
class _oasisWsnB2__SubscriptionManagerRP
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":ConsumerReference.
    ns1__EndpointReferenceType*          oasisWsnB2__ConsumerReference  1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":Filter.
    oasisWsnB2__FilterType*              oasisWsnB2__Filter             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy.
    oasisWsnB2__SubscriptionPolicyType*  oasisWsnB2__SubscriptionPolicy 0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CreationTime.
    time_t*                              oasisWsnB2__CreationTime       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify

/// "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
class _oasisWsnB2__Notify
{ public:
/// Vector of oasisWsnB2__NotificationMessageHolderType* element refs with length 1..unbounded
    std::vector<oasisWsnB2__NotificationMessageHolderType*> oasisWsnB2__NotificationMessage 1;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw

/// "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
class _oasisWsnB2__UseRaw
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe

/// "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
class _oasisWsnB2__Subscribe
{ public:
/// Element ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          ConsumerReference              1;	///< Required element.
/// Element Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    oasisWsnB2__FilterType*              Filter                         0;	///< Optional element.
/// Element InitialTerminationTime of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    oasisWsnB2__AbsoluteOrRelativeTimeType*  InitialTerminationTime         0;	///< Nullable pointer.
    class _oasisWsnB2__Subscribe_SubscriptionPolicy
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse

/// "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
class _oasisWsnB2__SubscribeResponse
{ public:
/// Element SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              oasisWsnB2__CurrentTime        0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t*                              oasisWsnB2__TerminationTime    0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage

/// "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
class _oasisWsnB2__GetCurrentMessage
{ public:
/// Element Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    oasisWsnB2__TopicExpressionType*     Topic                          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse

/// "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
class _oasisWsnB2__GetCurrentMessageResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages

/// "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
class _oasisWsnB2__GetMessages
{ public:
/// Element MaximumNumber of type xs:nonNegativeInteger.
    xsd__nonNegativeInteger*             MaximumNumber                  0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse

/// "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
class _oasisWsnB2__GetMessagesResponse
{ public:
/// Vector of oasisWsnB2__NotificationMessageHolderType* element refs with length 0..unbounded
    std::vector<oasisWsnB2__NotificationMessageHolderType*> oasisWsnB2__NotificationMessage 0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint

/// "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
class _oasisWsnB2__DestroyPullPoint
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse

/// "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
class _oasisWsnB2__DestroyPullPointResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint

/// "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
class _oasisWsnB2__CreatePullPoint
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse

/// "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
class _oasisWsnB2__CreatePullPointResponse
{ public:
/// Element PullPoint of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          PullPoint                      1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew

/// "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
class _oasisWsnB2__Renew
{ public:
/// Element TerminationTime of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    oasisWsnB2__AbsoluteOrRelativeTimeType*  TerminationTime                1;	///< Nullable pointer.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse

/// "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
class _oasisWsnB2__RenewResponse
{ public:
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               oasisWsnB2__TerminationTime    1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              oasisWsnB2__CurrentTime        0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe

/// "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
class _oasisWsnB2__Unsubscribe
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse

/// "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
class _oasisWsnB2__UnsubscribeResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription

/// "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
class _oasisWsnB2__PauseSubscription
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse

/// "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
class _oasisWsnB2__PauseSubscriptionResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription

/// "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
class _oasisWsnB2__ResumeSubscription
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse

/// "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
class _oasisWsnB2__ResumeSubscriptionResponse
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/t-1":Documentation is a complexType.
class oasisWsnT1__Documentation : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is an abstract complexType.
class oasisWsnT1__ExtensibleDocumented : public xsd__anyType
{ public:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    oasisWsnT1__Documentation*           documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is a complexType.
class oasisWsnT1__QueryExpressionType : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// Attribute Dialect of type xs:anyURI.
   @xsd__anyURI                          Dialect                        1;	///< Required attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/device/wsdl":Service is a complexType.
class onvifDevice__Service : public xsd__anyType
{ public:
/// @brief Namespace of the service being described. This parameter allows to match the service capabilities to the service. Note that only one set of capabilities is supported per namespace.
/// Element Namespace of type xs:anyURI.
    xsd__anyURI                          Namespace                      1;	///< Required element.
/// @brief The transport addresses where the service can be reached. The schema and IP part shall match the one used in the request (i.e. the GetServices request).
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
    class _onvifDevice__Service_Capabilities
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *Capabilities                   0;	///< Optional element.
/// @brief The version of the service (not the ONVIF core spec version).
/// Element Version of type "http://www.onvif.org/ver10/schema":OnvifVersion.
    onvifXsd__OnvifVersion*              Version                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities is a complexType.
class onvifDevice__DeviceServiceCapabilities : public xsd__anyType
{ public:
/// @brief Network capabilities.
/// Element Network of type "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities.
    onvifDevice__NetworkCapabilities*    Network                        1;	///< Required element.
/// @brief Security capabilities.
/// Element Security of type "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities.
    onvifDevice__SecurityCapabilities*   Security                       1;	///< Required element.
/// @brief System capabilities.
/// Element System of type "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities.
    onvifDevice__SystemCapabilities*     System                         1;	///< Required element.
/// @brief Capabilities that do not fit in any of the other categories.
/// Element Misc of type "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities.
    onvifDevice__MiscCapabilities*       Misc                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities is a complexType.
class onvifDevice__NetworkCapabilities : public xsd__anyType
{ public:
/// @brief Indicates support for IP filtering.
/// Attribute IPFilter of type xs:boolean.
   @bool*                                IPFilter                       0;	///< Optional attribute.
/// @brief Indicates support for zeroconf.
/// Attribute ZeroConfiguration of type xs:boolean.
   @bool*                                ZeroConfiguration              0;	///< Optional attribute.
/// @brief Indicates support for IPv6.
/// Attribute IPVersion6 of type xs:boolean.
   @bool*                                IPVersion6                     0;	///< Optional attribute.
/// @brief Indicates support for dynamic DNS configuration.
/// Attribute DynDNS of type xs:boolean.
   @bool*                                DynDNS                         0;	///< Optional attribute.
/// @brief Indicates support for IEEE 802.11 configuration.
/// Attribute Dot11Configuration of type xs:boolean.
   @bool*                                Dot11Configuration             0;	///< Optional attribute.
/// @brief Indicates support for retrieval of hostname from DHCP.
/// Attribute HostnameFromDHCP of type xs:boolean.
   @bool*                                HostnameFromDHCP               0;	///< Optional attribute.
/// @brief Maximum number of NTP servers supported by the devices SetNTP command.
/// Attribute NTP of type xs:int.
   @int*                                 NTP                            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities is a complexType.
class onvifDevice__SecurityCapabilities : public xsd__anyType
{ public:
/// @brief Indicates support for TLS 1.0.
/// Attribute TLS1.0 of type xs:boolean.
   @bool*                                TLS1_x002e0                    0;	///< Optional attribute.
/// @brief Indicates support for TLS 1.1.
/// Attribute TLS1.1 of type xs:boolean.
   @bool*                                TLS1_x002e1                    0;	///< Optional attribute.
/// @brief Indicates support for TLS 1.2.
/// Attribute TLS1.2 of type xs:boolean.
   @bool*                                TLS1_x002e2                    0;	///< Optional attribute.
/// @brief Indicates support for onboard key generation.
/// Attribute OnboardKeyGeneration of type xs:boolean.
   @bool*                                OnboardKeyGeneration           0;	///< Optional attribute.
/// @brief Indicates support for access policy configuration.
/// Attribute AccessPolicyConfig of type xs:boolean.
   @bool*                                AccessPolicyConfig             0;	///< Optional attribute.
/// @brief Indicates support for the ONVIF default access policy.
/// Attribute DefaultAccessPolicy of type xs:boolean.
   @bool*                                DefaultAccessPolicy            0;	///< Optional attribute.
/// @brief Indicates support for IEEE 802.1X configuration.
/// Attribute Dot1X of type xs:boolean.
   @bool*                                Dot1X                          0;	///< Optional attribute.
/// @brief Indicates support for remote user configuration. Used when accessing another device.
/// Attribute RemoteUserHandling of type xs:boolean.
   @bool*                                RemoteUserHandling             0;	///< Optional attribute.
/// @brief Indicates support for WS-Security X.509 token.
/// Attribute X.509Token of type xs:boolean.
   @bool*                                X_x002e509Token                0;	///< Optional attribute.
/// @brief Indicates support for WS-Security SAML token.
/// Attribute SAMLToken of type xs:boolean.
   @bool*                                SAMLToken                      0;	///< Optional attribute.
/// @brief Indicates support for WS-Security Kerberos token.
/// Attribute KerberosToken of type xs:boolean.
   @bool*                                KerberosToken                  0;	///< Optional attribute.
/// @brief Indicates support for WS-Security Username token.
/// Attribute UsernameToken of type xs:boolean.
   @bool*                                UsernameToken                  0;	///< Optional attribute.
/// @brief Indicates support for WS over HTTP digest authenticated communication layer.
/// Attribute HttpDigest of type xs:boolean.
   @bool*                                HttpDigest                     0;	///< Optional attribute.
/// @brief Indicates support for WS-Security REL token.
/// Attribute RELToken of type xs:boolean.
   @bool*                                RELToken                       0;	///< Optional attribute.
/// @brief EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// Attribute SupportedEAPMethods of type "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes.
   @onvifDevice__EAPMethodTypes*         SupportedEAPMethods            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities is a complexType.
class onvifDevice__SystemCapabilities : public xsd__anyType
{ public:
/// @brief Indicates support for WS Discovery resolve requests.
/// Attribute DiscoveryResolve of type xs:boolean.
   @bool*                                DiscoveryResolve               0;	///< Optional attribute.
/// @brief Indicates support for WS-Discovery Bye.
/// Attribute DiscoveryBye of type xs:boolean.
   @bool*                                DiscoveryBye                   0;	///< Optional attribute.
/// @brief Indicates support for remote discovery, see WS-Discovery.
/// Attribute RemoteDiscovery of type xs:boolean.
   @bool*                                RemoteDiscovery                0;	///< Optional attribute.
/// @brief Indicates support for system backup through MTOM.
/// Attribute SystemBackup of type xs:boolean.
   @bool*                                SystemBackup                   0;	///< Optional attribute.
/// @brief Indicates support for retrieval of system logging through MTOM.
/// Attribute SystemLogging of type xs:boolean.
   @bool*                                SystemLogging                  0;	///< Optional attribute.
/// @brief Indicates support for firmware upgrade through MTOM.
/// Attribute FirmwareUpgrade of type xs:boolean.
   @bool*                                FirmwareUpgrade                0;	///< Optional attribute.
/// @brief Indicates support for system backup through MTOM.
/// Attribute HttpFirmwareUpgrade of type xs:boolean.
   @bool*                                HttpFirmwareUpgrade            0;	///< Optional attribute.
/// @brief Indicates support for system backup through HTTP.
/// Attribute HttpSystemBackup of type xs:boolean.
   @bool*                                HttpSystemBackup               0;	///< Optional attribute.
/// @brief Indicates support for retrieval of system logging through HTTP.
/// Attribute HttpSystemLogging of type xs:boolean.
   @bool*                                HttpSystemLogging              0;	///< Optional attribute.
/// @brief Indicates support for retrieving support information through HTTP.
/// Attribute HttpSupportInformation of type xs:boolean.
   @bool*                                HttpSupportInformation         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities is a complexType.
class onvifDevice__MiscCapabilities : public xsd__anyType
{ public:
/// @brief Lists of commands supported by SendAuxiliaryCommand.
/// Attribute AuxiliaryCommands of type "http://www.onvif.org/ver10/schema":StringAttrList.
   @onvifXsd__StringAttrList*            AuxiliaryCommands              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServices

/// "http://www.onvif.org/ver10/device/wsdl":GetServices is a complexType.
class _onvifDevice__GetServices
{ public:
/// @brief Indicates if the service capabilities (untyped) should be included in the response.
/// Element IncludeCapability of type xs:boolean.
    bool                                 IncludeCapability              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse is a complexType.
class _onvifDevice__GetServicesResponse
{ public:
/// @brief Each Service element contains information about one service.
/// Vector of onvifDevice__Service* with length 1..unbounded
    std::vector<onvifDevice__Service*  > Service                        1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities is a complexType.
class _onvifDevice__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse is a complexType.
class _onvifDevice__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the device service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
    onvifDevice__DeviceServiceCapabilities*  Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation

/// "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation is a complexType.
class _onvifDevice__GetDeviceInformation
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse is a complexType.
class _onvifDevice__GetDeviceInformationResponse
{ public:
/// @brief The manufactor of the device.
/// Element Manufacturer of type xs:string.
    std::string                          Manufacturer                   1;	///< Required element.
/// @brief The device model.
/// Element Model of type xs:string.
    std::string                          Model                          1;	///< Required element.
/// @brief The firmware version in the device.
/// Element FirmwareVersion of type xs:string.
    std::string                          FirmwareVersion                1;	///< Required element.
/// @brief The serial number of the device.
/// Element SerialNumber of type xs:string.
    std::string                          SerialNumber                   1;	///< Required element.
/// @brief The hardware ID of the device.
/// Element HardwareId of type xs:string.
    std::string                          HardwareId                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime

/// "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime is a complexType.
class _onvifDevice__SetSystemDateAndTime
{ public:
/// @brief Defines if the date and time is set via NTP or manually.
/// Element DateTimeType of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum onvifXsd__SetDateTimeType       DateTimeType                   1;	///< Required element.
/// @brief Automatically adjust Daylight savings if defined in TimeZone.
/// Element DaylightSavings of type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// @brief The time zone in POSIX 1003.1 format
/// Element TimeZone of type "http://www.onvif.org/ver10/schema":TimeZone.
    onvifXsd__TimeZone*                  TimeZone                       0;	///< Optional element.
/// @brief Date and time in UTC. If time is obtained via NTP, UTCDateTime has no meaning
/// Element UTCDateTime of type "http://www.onvif.org/ver10/schema":DateTime.
    onvifXsd__DateTime*                  UTCDateTime                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse is a complexType.
class _onvifDevice__SetSystemDateAndTimeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime is a complexType.
class _onvifDevice__GetSystemDateAndTime
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse is a complexType.
class _onvifDevice__GetSystemDateAndTimeResponse
{ public:
/// @brief Contains information whether system date and time are set manually or by NTP, daylight savings is on or off, time zone in POSIX 1003.1 format and system date and time in UTC and also local system date and time.
/// Element SystemDateAndTime of type "http://www.onvif.org/ver10/schema":SystemDateTime.
    onvifXsd__SystemDateTime*            SystemDateAndTime              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault

/// "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault is a complexType.
class _onvifDevice__SetSystemFactoryDefault
{ public:
/// @brief Specifies the factory default action type.
/// Element FactoryDefault of type "http://www.onvif.org/ver10/schema":FactoryDefaultType.
    enum onvifXsd__FactoryDefaultType    FactoryDefault                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse is a complexType.
class _onvifDevice__SetSystemFactoryDefaultResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware

/// "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware is a complexType.
class _onvifDevice__UpgradeSystemFirmware
{ public:
/// Element Firmware of type "http://www.onvif.org/ver10/schema":AttachmentData.
    onvifXsd__AttachmentData*            Firmware                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse

/// "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse is a complexType.
class _onvifDevice__UpgradeSystemFirmwareResponse
{ public:
/// Element Message of type xs:string.
    std::string*                         Message                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemReboot

/// "http://www.onvif.org/ver10/device/wsdl":SystemReboot is a complexType.
class _onvifDevice__SystemReboot
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse

/// "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse is a complexType.
class _onvifDevice__SystemRebootResponse
{ public:
/// @brief Contains the reboot message sent by the device.
/// Element Message of type xs:string.
    std::string                          Message                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystem

/// "http://www.onvif.org/ver10/device/wsdl":RestoreSystem is a complexType.
class _onvifDevice__RestoreSystem
{ public:
/// Vector of onvifXsd__BackupFile* with length 1..unbounded
    std::vector<onvifXsd__BackupFile*  > BackupFiles                    1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse

/// "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse is a complexType.
class _onvifDevice__RestoreSystemResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup is a complexType.
class _onvifDevice__GetSystemBackup
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse is a complexType.
class _onvifDevice__GetSystemBackupResponse
{ public:
/// Vector of onvifXsd__BackupFile* with length 1..unbounded
    std::vector<onvifXsd__BackupFile*  > BackupFiles                    1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation is a complexType.
class _onvifDevice__GetSystemSupportInformation
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse is a complexType.
class _onvifDevice__GetSystemSupportInformationResponse
{ public:
/// @brief Contains the arbitary device diagnostics information.
/// Element SupportInformation of type "http://www.onvif.org/ver10/schema":SupportInformation.
    onvifXsd__SupportInformation*        SupportInformation             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLog

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemLog is a complexType.
class _onvifDevice__GetSystemLog
{ public:
/// @brief Specifies the type of system log to get.
/// Element LogType of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum onvifXsd__SystemLogType         LogType                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse is a complexType.
class _onvifDevice__GetSystemLogResponse
{ public:
/// @brief Contains the system log information.
/// Element SystemLog of type "http://www.onvif.org/ver10/schema":SystemLog.
    onvifXsd__SystemLog*                 SystemLog                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopes

/// "http://www.onvif.org/ver10/device/wsdl":GetScopes is a complexType.
class _onvifDevice__GetScopes
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse is a complexType.
class _onvifDevice__GetScopesResponse
{ public:
/// @brief Contains a list of URI definining the device scopes. Scope parameters can be of two types: fixed and configurable. Fixed parameters can not be altered.
/// Vector of onvifXsd__Scope* with length 1..unbounded
    std::vector<onvifXsd__Scope*       > Scopes                         1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopes

/// "http://www.onvif.org/ver10/device/wsdl":SetScopes is a complexType.
class _onvifDevice__SetScopes
{ public:
/// @brief Contains a list of scope parameters that will replace all existing configurable scope parameters.
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > Scopes                         1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse is a complexType.
class _onvifDevice__SetScopesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopes

/// "http://www.onvif.org/ver10/device/wsdl":AddScopes is a complexType.
class _onvifDevice__AddScopes
{ public:
/// @brief Contains a list of new configurable scope parameters that will be added to the existing configurable scope.
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > ScopeItem                      1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse

/// "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse is a complexType.
class _onvifDevice__AddScopesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopes

/// "http://www.onvif.org/ver10/device/wsdl":RemoveScopes is a complexType.
class _onvifDevice__RemoveScopes
{ public:
/// @brief Contains a list of URIs that should be removed from the device scope.<br/> Note that the response message always will match the request or an error will be returned. The use of the response is for that reason deprecated.
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > ScopeItem                      1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse

/// "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse is a complexType.
class _onvifDevice__RemoveScopesResponse
{ public:
/// @brief Contains a list of URIs that has been removed from the device scope
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > ScopeItem                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode

/// "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode is a complexType.
class _onvifDevice__GetDiscoveryMode
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse is a complexType.
class _onvifDevice__GetDiscoveryModeResponse
{ public:
/// @brief Indicator of discovery mode: Discoverable, NonDiscoverable.
/// Element DiscoveryMode of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum onvifXsd__DiscoveryMode         DiscoveryMode                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode

/// "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode is a complexType.
class _onvifDevice__SetDiscoveryMode
{ public:
/// @brief Indicator of discovery mode: Discoverable, NonDiscoverable.
/// Element DiscoveryMode of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum onvifXsd__DiscoveryMode         DiscoveryMode                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse is a complexType.
class _onvifDevice__SetDiscoveryModeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode

/// "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode is a complexType.
class _onvifDevice__GetRemoteDiscoveryMode
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse is a complexType.
class _onvifDevice__GetRemoteDiscoveryModeResponse
{ public:
/// @brief Indicator of discovery mode: Discoverable, NonDiscoverable.
/// Element RemoteDiscoveryMode of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum onvifXsd__DiscoveryMode         RemoteDiscoveryMode            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode

/// "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode is a complexType.
class _onvifDevice__SetRemoteDiscoveryMode
{ public:
/// @brief Indicator of discovery mode: Discoverable, NonDiscoverable.
/// Element RemoteDiscoveryMode of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum onvifXsd__DiscoveryMode         RemoteDiscoveryMode            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse is a complexType.
class _onvifDevice__SetRemoteDiscoveryModeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses

/// "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses is a complexType.
class _onvifDevice__GetDPAddresses
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse is a complexType.
class _onvifDevice__GetDPAddressesResponse
{ public:
/// Vector of onvifXsd__NetworkHost* with length 0..unbounded
    std::vector<onvifXsd__NetworkHost* > DPAddress                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses

/// "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses is a complexType.
class _onvifDevice__SetDPAddresses
{ public:
/// Vector of onvifXsd__NetworkHost* with length 0..unbounded
    std::vector<onvifXsd__NetworkHost* > DPAddress                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse is a complexType.
class _onvifDevice__SetDPAddressesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference

/// "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference is a complexType.
class _onvifDevice__GetEndpointReference
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse is a complexType.
class _onvifDevice__GetEndpointReferenceResponse
{ public:
/// Element GUID of type xs:string.
    std::string                          GUID                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser

/// "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser is a complexType.
class _onvifDevice__GetRemoteUser
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse is a complexType.
class _onvifDevice__GetRemoteUserResponse
{ public:
/// Element RemoteUser of type "http://www.onvif.org/ver10/schema":RemoteUser.
    onvifXsd__RemoteUser*                RemoteUser                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser

/// "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser is a complexType.
class _onvifDevice__SetRemoteUser
{ public:
/// Element RemoteUser of type "http://www.onvif.org/ver10/schema":RemoteUser.
    onvifXsd__RemoteUser*                RemoteUser                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse is a complexType.
class _onvifDevice__SetRemoteUserResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsers

/// "http://www.onvif.org/ver10/device/wsdl":GetUsers is a complexType.
class _onvifDevice__GetUsers
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse is a complexType.
class _onvifDevice__GetUsersResponse
{ public:
/// @brief Contains a list of the onvif users and following information is included in each entry: username and user level.
/// Vector of onvifXsd__User* with length 0..unbounded
    std::vector<onvifXsd__User*        > User                           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsers

/// "http://www.onvif.org/ver10/device/wsdl":CreateUsers is a complexType.
class _onvifDevice__CreateUsers
{ public:
/// @brief Creates new device users and corresponding credentials. Each user entry includes: username, password and user level. Either all users are created successfully or a fault message MUST be returned without creating any user. If trying to create several users with exactly the same username the request is rejected and no users are created. If password is missing, then fault message Too weak password is returned.
/// Vector of onvifXsd__User* with length 1..unbounded
    std::vector<onvifXsd__User*        > User                           1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse

/// "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse is a complexType.
class _onvifDevice__CreateUsersResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsers

/// "http://www.onvif.org/ver10/device/wsdl":DeleteUsers is a complexType.
class _onvifDevice__DeleteUsers
{ public:
/// @brief Deletes users on an device and there may exist users that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a fault message MUST be returned and no users be deleted. If a username exists multiple times in the request, then a fault message is returned.
/// Vector of std::string with length 1..unbounded
    std::vector<std::string            > Username                       1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse

/// "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse is a complexType.
class _onvifDevice__DeleteUsersResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUser

/// "http://www.onvif.org/ver10/device/wsdl":SetUser is a complexType.
class _onvifDevice__SetUser
{ public:
/// @brief Updates the credentials for one or several users on an device. Either all change requests are processed successfully or a fault message MUST be returned. If the request contains the same username multiple times, a fault message is returned.
/// Vector of onvifXsd__User* with length 1..unbounded
    std::vector<onvifXsd__User*        > User                           1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUserResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetUserResponse is a complexType.
class _onvifDevice__SetUserResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl

/// "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl is a complexType.
class _onvifDevice__GetWsdlUrl
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse is a complexType.
class _onvifDevice__GetWsdlUrlResponse
{ public:
/// Element WsdlUrl of type xs:anyURI.
    xsd__anyURI                          WsdlUrl                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilities

/// "http://www.onvif.org/ver10/device/wsdl":GetCapabilities is a complexType.
class _onvifDevice__GetCapabilities
{ public:
/// @brief List of categories to retrieve capability information on.
/// Vector of enum onvifXsd__CapabilityCategory with length 0..unbounded
    std::vector<enum onvifXsd__CapabilityCategory> Category                       0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse is a complexType.
class _onvifDevice__GetCapabilitiesResponse
{ public:
/// @brief Capability information.
/// Element Capabilities of type "http://www.onvif.org/ver10/schema":Capabilities.
    onvifXsd__Capabilities*              Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostname

/// "http://www.onvif.org/ver10/device/wsdl":GetHostname is a complexType.
class _onvifDevice__GetHostname
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse is a complexType.
class _onvifDevice__GetHostnameResponse
{ public:
/// @brief Contains the hostname information.
/// Element HostnameInformation of type "http://www.onvif.org/ver10/schema":HostnameInformation.
    onvifXsd__HostnameInformation*       HostnameInformation            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostname

/// "http://www.onvif.org/ver10/device/wsdl":SetHostname is a complexType.
class _onvifDevice__SetHostname
{ public:
/// @brief The hostname to set.
/// Element Name of type xs:token.
    xsd__token                           Name                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse is a complexType.
class _onvifDevice__SetHostnameResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP

/// "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP is a complexType.
class _onvifDevice__SetHostnameFromDHCP
{ public:
/// @brief True if the hostname shall be obtained via DHCP.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse is a complexType.
class _onvifDevice__SetHostnameFromDHCPResponse
{ public:
/// @brief Indicates whether or not a reboot is required after configuration updates.
/// Element RebootNeeded of type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNS

/// "http://www.onvif.org/ver10/device/wsdl":GetDNS is a complexType.
class _onvifDevice__GetDNS
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse is a complexType.
class _onvifDevice__GetDNSResponse
{ public:
/// @brief DNS information.
/// Element DNSInformation of type "http://www.onvif.org/ver10/schema":DNSInformation.
    onvifXsd__DNSInformation*            DNSInformation                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNS

/// "http://www.onvif.org/ver10/device/wsdl":SetDNS is a complexType.
class _onvifDevice__SetDNS
{ public:
/// @brief Indicate if the DNS address is to be retrieved using DHCP.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief DNS search domain.
/// Vector of xsd__token with length 0..unbounded
    std::vector<xsd__token             > SearchDomain                   0;
/// @brief DNS address(es) set manually.
/// Vector of onvifXsd__IPAddress* with length 0..unbounded
    std::vector<onvifXsd__IPAddress*   > DNSManual                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse is a complexType.
class _onvifDevice__SetDNSResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTP

/// "http://www.onvif.org/ver10/device/wsdl":GetNTP is a complexType.
class _onvifDevice__GetNTP
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse is a complexType.
class _onvifDevice__GetNTPResponse
{ public:
/// @brief NTP information.
/// Element NTPInformation of type "http://www.onvif.org/ver10/schema":NTPInformation.
    onvifXsd__NTPInformation*            NTPInformation                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTP

/// "http://www.onvif.org/ver10/device/wsdl":SetNTP is a complexType.
class _onvifDevice__SetNTP
{ public:
/// @brief Indicate if NTP address information is to be retrieved using DHCP.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief Manual NTP settings.
/// Vector of onvifXsd__NetworkHost* with length 0..unbounded
    std::vector<onvifXsd__NetworkHost* > NTPManual                      0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse is a complexType.
class _onvifDevice__SetNTPResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS

/// "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS is a complexType.
class _onvifDevice__GetDynamicDNS
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse is a complexType.
class _onvifDevice__GetDynamicDNSResponse
{ public:
/// @brief Dynamic DNS information.
/// Element DynamicDNSInformation of type "http://www.onvif.org/ver10/schema":DynamicDNSInformation.
    onvifXsd__DynamicDNSInformation*     DynamicDNSInformation          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS

/// "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS is a complexType.
class _onvifDevice__SetDynamicDNS
{ public:
/// @brief Dynamic DNS type.
/// Element Type of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum onvifXsd__DynamicDNSType        Type                           1;	///< Required element.
/// @brief DNS name.
/// Element Name of type "http://www.onvif.org/ver10/schema":DNSName.
    onvifXsd__DNSName*                   Name                           0;	///< Optional element.
/// @brief DNS record time to live.
/// Element TTL of type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse is a complexType.
class _onvifDevice__SetDynamicDNSResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces is a complexType.
class _onvifDevice__GetNetworkInterfaces
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse is a complexType.
class _onvifDevice__GetNetworkInterfacesResponse
{ public:
/// @brief List of network interfaces.
/// Vector of onvifXsd__NetworkInterface* with length 1..unbounded
    std::vector<onvifXsd__NetworkInterface*> NetworkInterfaces              1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces is a complexType.
class _onvifDevice__SetNetworkInterfaces
{ public:
/// @brief Symbolic network interface name.
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             InterfaceToken                 1;	///< Required element.
/// @brief Network interface name.
/// Element NetworkInterface of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration.
    onvifXsd__NetworkInterfaceSetConfiguration*  NetworkInterface               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse is a complexType.
class _onvifDevice__SetNetworkInterfacesResponse
{ public:
/// @brief Indicates whether or not a reboot is required after configuration updates.
/// Element RebootNeeded of type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols is a complexType.
class _onvifDevice__GetNetworkProtocols
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse is a complexType.
class _onvifDevice__GetNetworkProtocolsResponse
{ public:
/// @brief Contains an array of defined protocols supported by the device. There are three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be retrieved for each protocol: port and enable/disable.
/// Vector of onvifXsd__NetworkProtocol* with length 0..unbounded
    std::vector<onvifXsd__NetworkProtocol*> NetworkProtocols               0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols is a complexType.
class _onvifDevice__SetNetworkProtocols
{ public:
/// @brief Configures one or more defined network protocols supported by the device. There are currently three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be set for each protocol: port and enable/disable.
/// Vector of onvifXsd__NetworkProtocol* with length 1..unbounded
    std::vector<onvifXsd__NetworkProtocol*> NetworkProtocols               1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse is a complexType.
class _onvifDevice__SetNetworkProtocolsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway is a complexType.
class _onvifDevice__GetNetworkDefaultGateway
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse is a complexType.
class _onvifDevice__GetNetworkDefaultGatewayResponse
{ public:
/// @brief Gets the default IPv4 and IPv6 gateway settings from the device.
/// Element NetworkGateway of type "http://www.onvif.org/ver10/schema":NetworkGateway.
    onvifXsd__NetworkGateway*            NetworkGateway                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway is a complexType.
class _onvifDevice__SetNetworkDefaultGateway
{ public:
/// @brief Sets IPv4 gateway address used as default setting.
/// Vector of onvifXsd__IPv4Address with length 0..unbounded
    std::vector<onvifXsd__IPv4Address  > IPv4Address                    0;
/// @brief Sets IPv6 gateway address used as default setting.
/// Vector of onvifXsd__IPv6Address with length 0..unbounded
    std::vector<onvifXsd__IPv6Address  > IPv6Address                    0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse is a complexType.
class _onvifDevice__SetNetworkDefaultGatewayResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration is a complexType.
class _onvifDevice__GetZeroConfiguration
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse is a complexType.
class _onvifDevice__GetZeroConfigurationResponse
{ public:
/// @brief Contains the zero-configuration.
/// Element ZeroConfiguration of type "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration.
    onvifXsd__NetworkZeroConfiguration*  ZeroConfiguration              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration is a complexType.
class _onvifDevice__SetZeroConfiguration
{ public:
/// @brief Unique identifier referencing the physical interface.
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             InterfaceToken                 1;	///< Required element.
/// @brief Specifies if the zero-configuration should be enabled or not.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse is a complexType.
class _onvifDevice__SetZeroConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter

/// "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter is a complexType.
class _onvifDevice__GetIPAddressFilter
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse is a complexType.
class _onvifDevice__GetIPAddressFilterResponse
{ public:
/// Element IPAddressFilter of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    onvifXsd__IPAddressFilter*           IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter

/// "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter is a complexType.
class _onvifDevice__SetIPAddressFilter
{ public:
/// Element IPAddressFilter of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    onvifXsd__IPAddressFilter*           IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse is a complexType.
class _onvifDevice__SetIPAddressFilterResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter

/// "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter is a complexType.
class _onvifDevice__AddIPAddressFilter
{ public:
/// Element IPAddressFilter of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    onvifXsd__IPAddressFilter*           IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse

/// "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse is a complexType.
class _onvifDevice__AddIPAddressFilterResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter

/// "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter is a complexType.
class _onvifDevice__RemoveIPAddressFilter
{ public:
/// Element IPAddressFilter of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    onvifXsd__IPAddressFilter*           IPAddressFilter                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse

/// "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse is a complexType.
class _onvifDevice__RemoveIPAddressFilterResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy

/// "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy is a complexType.
class _onvifDevice__GetAccessPolicy
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse is a complexType.
class _onvifDevice__GetAccessPolicyResponse
{ public:
/// Element PolicyFile of type "http://www.onvif.org/ver10/schema":BinaryData.
    onvifXsd__BinaryData*                PolicyFile                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy

/// "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy is a complexType.
class _onvifDevice__SetAccessPolicy
{ public:
/// Element PolicyFile of type "http://www.onvif.org/ver10/schema":BinaryData.
    onvifXsd__BinaryData*                PolicyFile                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse is a complexType.
class _onvifDevice__SetAccessPolicyResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificate

/// "http://www.onvif.org/ver10/device/wsdl":CreateCertificate is a complexType.
class _onvifDevice__CreateCertificate
{ public:
/// @brief Certificate id.
/// Element CertificateID of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// @brief Identification of the entity associated with the public-key.
/// Element Subject of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// @brief Certificate validity start date.
/// Element ValidNotBefore of type xs:dateTime.
    time_t*                              ValidNotBefore                 0;	///< Optional element.
/// @brief Certificate expiry start date.
/// Element ValidNotAfter of type xs:dateTime.
    time_t*                              ValidNotAfter                  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse

/// "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse is a complexType.
class _onvifDevice__CreateCertificateResponse
{ public:
/// @brief base64 encoded DER representation of certificate.
/// Element NvtCertificate of type "http://www.onvif.org/ver10/schema":Certificate.
    onvifXsd__Certificate*               NvtCertificate                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificates

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificates is a complexType.
class _onvifDevice__GetCertificates
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse is a complexType.
class _onvifDevice__GetCertificatesResponse
{ public:
/// @brief Id and base64 encoded DER representation of all available certificates.
/// Vector of onvifXsd__Certificate* with length 0..unbounded
    std::vector<onvifXsd__Certificate* > NvtCertificate                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus is a complexType.
class _onvifDevice__GetCertificatesStatus
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse is a complexType.
class _onvifDevice__GetCertificatesStatusResponse
{ public:
/// @brief Indicates if a certificate is used in an optional HTTPS configuration of the device.
/// Vector of onvifXsd__CertificateStatus* with length 0..unbounded
    std::vector<onvifXsd__CertificateStatus*> CertificateStatus              0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus

/// "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus is a complexType.
class _onvifDevice__SetCertificatesStatus
{ public:
/// @brief Indicates if a certificate is to be used in an optional HTTPS configuration of the device.
/// Vector of onvifXsd__CertificateStatus* with length 0..unbounded
    std::vector<onvifXsd__CertificateStatus*> CertificateStatus              0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse is a complexType.
class _onvifDevice__SetCertificatesStatusResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates

/// "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates is a complexType.
class _onvifDevice__DeleteCertificates
{ public:
/// @brief List of ids of certificates to delete.
/// Vector of xsd__token with length 1..unbounded
    std::vector<xsd__token             > CertificateID                  1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse

/// "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse is a complexType.
class _onvifDevice__DeleteCertificatesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request

/// "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request is a complexType.
class _onvifDevice__GetPkcs10Request
{ public:
/// @brief List of ids of certificates to delete.
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// @brief Relative Dinstinguished Name(RDN) CommonName(CN).
/// Element Subject of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// @brief Optional base64 encoded DER attributes.
/// Element Attributes of type "http://www.onvif.org/ver10/schema":BinaryData.
    onvifXsd__BinaryData*                Attributes                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse is a complexType.
class _onvifDevice__GetPkcs10RequestResponse
{ public:
/// @brief base64 encoded DER representation of certificate.
/// Element Pkcs10Request of type "http://www.onvif.org/ver10/schema":BinaryData.
    onvifXsd__BinaryData*                Pkcs10Request                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificates

/// "http://www.onvif.org/ver10/device/wsdl":LoadCertificates is a complexType.
class _onvifDevice__LoadCertificates
{ public:
/// @brief Optional id and base64 encoded DER representation of certificate.
/// Vector of onvifXsd__Certificate* with length 1..unbounded
    std::vector<onvifXsd__Certificate* > NVTCertificate                 1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse

/// "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse is a complexType.
class _onvifDevice__LoadCertificatesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode

/// "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode is a complexType.
class _onvifDevice__GetClientCertificateMode
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse is a complexType.
class _onvifDevice__GetClientCertificateModeResponse
{ public:
/// @brief Indicates whether or not client certificates are required by device.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode

/// "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode is a complexType.
class _onvifDevice__SetClientCertificateMode
{ public:
/// @brief Indicates whether or not client certificates are required by device.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse is a complexType.
class _onvifDevice__SetClientCertificateModeResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificates

/// "http://www.onvif.org/ver10/device/wsdl":GetCACertificates is a complexType.
class _onvifDevice__GetCACertificates
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse is a complexType.
class _onvifDevice__GetCACertificatesResponse
{ public:
/// Vector of onvifXsd__Certificate* with length 0..unbounded
    std::vector<onvifXsd__Certificate* > CACertificate                  0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey

/// "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey is a complexType.
class _onvifDevice__LoadCertificateWithPrivateKey
{ public:
/// Vector of onvifXsd__CertificateWithPrivateKey* with length 1..unbounded
    std::vector<onvifXsd__CertificateWithPrivateKey*> CertificateWithPrivateKey      1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse

/// "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse is a complexType.
class _onvifDevice__LoadCertificateWithPrivateKeyResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation is a complexType.
class _onvifDevice__GetCertificateInformation
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse is a complexType.
class _onvifDevice__GetCertificateInformationResponse
{ public:
/// Element CertificateInformation of type "http://www.onvif.org/ver10/schema":CertificateInformation.
    onvifXsd__CertificateInformation*    CertificateInformation         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates

/// "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates is a complexType.
class _onvifDevice__LoadCACertificates
{ public:
/// Vector of onvifXsd__Certificate* with length 1..unbounded
    std::vector<onvifXsd__Certificate* > CACertificate                  1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse

/// "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse is a complexType.
class _onvifDevice__LoadCACertificatesResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration is a complexType.
class _onvifDevice__CreateDot1XConfiguration
{ public:
/// Element Dot1XConfiguration of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    onvifXsd__Dot1XConfiguration*        Dot1XConfiguration             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse is a complexType.
class _onvifDevice__CreateDot1XConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration is a complexType.
class _onvifDevice__SetDot1XConfiguration
{ public:
/// Element Dot1XConfiguration of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    onvifXsd__Dot1XConfiguration*        Dot1XConfiguration             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse is a complexType.
class _onvifDevice__SetDot1XConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration is a complexType.
class _onvifDevice__GetDot1XConfiguration
{ public:
/// Element Dot1XConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             Dot1XConfigurationToken        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse is a complexType.
class _onvifDevice__GetDot1XConfigurationResponse
{ public:
/// Element Dot1XConfiguration of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    onvifXsd__Dot1XConfiguration*        Dot1XConfiguration             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations

/// "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations is a complexType.
class _onvifDevice__GetDot1XConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse is a complexType.
class _onvifDevice__GetDot1XConfigurationsResponse
{ public:
/// Vector of onvifXsd__Dot1XConfiguration* with length 0..unbounded
    std::vector<onvifXsd__Dot1XConfiguration*> Dot1XConfiguration             0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration

/// "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration is a complexType.
class _onvifDevice__DeleteDot1XConfiguration
{ public:
/// Vector of onvifXsd__ReferenceToken with length 0..unbounded
    std::vector<onvifXsd__ReferenceToken> Dot1XConfigurationToken        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse

/// "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse is a complexType.
class _onvifDevice__DeleteDot1XConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs

/// "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs is a complexType.
class _onvifDevice__GetRelayOutputs
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse is a complexType.
class _onvifDevice__GetRelayOutputsResponse
{ public:
/// Vector of onvifXsd__RelayOutput* with length 0..unbounded
    std::vector<onvifXsd__RelayOutput* > RelayOutputs                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings

/// "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings is a complexType.
class _onvifDevice__SetRelayOutputSettings
{ public:
/// Element RelayOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             RelayOutputToken               1;	///< Required element.
/// Element Properties of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    onvifXsd__RelayOutputSettings*       Properties                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse is a complexType.
class _onvifDevice__SetRelayOutputSettingsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState

/// "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState is a complexType.
class _onvifDevice__SetRelayOutputState
{ public:
/// Element RelayOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             RelayOutputToken               1;	///< Required element.
/// Element LogicalState of type "http://www.onvif.org/ver10/schema":RelayLogicalState.
    enum onvifXsd__RelayLogicalState     LogicalState                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse

/// "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse is a complexType.
class _onvifDevice__SetRelayOutputStateResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand

/// "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand is a complexType.
class _onvifDevice__SendAuxiliaryCommand
{ public:
/// Element AuxiliaryCommand of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    onvifXsd__AuxiliaryData              AuxiliaryCommand               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse

/// "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse is a complexType.
class _onvifDevice__SendAuxiliaryCommandResponse
{ public:
/// Element AuxiliaryCommandResponse of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    onvifXsd__AuxiliaryData*             AuxiliaryCommandResponse       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities

/// "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities is a complexType.
class _onvifDevice__GetDot11Capabilities
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse is a complexType.
class _onvifDevice__GetDot11CapabilitiesResponse
{ public:
/// Element Capabilities of type "http://www.onvif.org/ver10/schema":Dot11Capabilities.
    onvifXsd__Dot11Capabilities*         Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Status

/// "http://www.onvif.org/ver10/device/wsdl":GetDot11Status is a complexType.
class _onvifDevice__GetDot11Status
{ public:
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             InterfaceToken                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse is a complexType.
class _onvifDevice__GetDot11StatusResponse
{ public:
/// Element Status of type "http://www.onvif.org/ver10/schema":Dot11Status.
    onvifXsd__Dot11Status*               Status                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks

/// "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks is a complexType.
class _onvifDevice__ScanAvailableDot11Networks
{ public:
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             InterfaceToken                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse

/// "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse is a complexType.
class _onvifDevice__ScanAvailableDot11NetworksResponse
{ public:
/// Vector of onvifXsd__Dot11AvailableNetworks* with length 0..unbounded
    std::vector<onvifXsd__Dot11AvailableNetworks*> Networks                       0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUris

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemUris is a complexType.
class _onvifDevice__GetSystemUris
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse

/// "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse is a complexType.
class _onvifDevice__GetSystemUrisResponse
{ public:
/// Element SystemLogUris of type "http://www.onvif.org/ver10/schema":SystemLogUriList.
    onvifXsd__SystemLogUriList*          SystemLogUris                  0;	///< Optional element.
/// Element SupportInfoUri of type xs:anyURI.
    xsd__anyURI*                         SupportInfoUri                 0;	///< Optional element.
/// Element SystemBackupUri of type xs:anyURI.
    xsd__anyURI*                         SystemBackupUri                0;	///< Optional element.
    class _onvifDevice__GetSystemUrisResponse_Extension
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    }                                   *Extension                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade

/// "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade is a complexType.
class _onvifDevice__StartFirmwareUpgrade
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse

/// "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse is a complexType.
class _onvifDevice__StartFirmwareUpgradeResponse
{ public:
/// Element UploadUri of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element UploadDelay of type xs:duration.
    xsd__duration                        UploadDelay                    1;	///< Required element.
/// Element ExpectedDownTime of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore

/// "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore is a complexType.
class _onvifDevice__StartSystemRestore
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse

/// "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse is a complexType.
class _onvifDevice__StartSystemRestoreResponse
{ public:
/// Element UploadUri of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element ExpectedDownTime of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
/// @brief Base class for physical entities like inputs and outputs.
class onvifXsd__DeviceEntity : public xsd__anyType
{ public:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
};

/// "http://www.onvif.org/ver10/schema":IntRectangle is a complexType.
/// @brief Rectangle defined by lower left corner position and size. Units are pixel.
class onvifXsd__IntRectangle : public xsd__anyType
{ public:
/// Attribute x of type xs:int.
   @int                                  x                              1;	///< Required attribute.
/// Attribute y of type xs:int.
   @int                                  y                              1;	///< Required attribute.
/// Attribute width of type xs:int.
   @int                                  width                          1;	///< Required attribute.
/// Attribute height of type xs:int.
   @int                                  height                         1;	///< Required attribute.
};

/// "http://www.onvif.org/ver10/schema":IntRectangleRange is a complexType.
/// @brief Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.
class onvifXsd__IntRectangleRange : public xsd__anyType
{ public:
/// @brief Range of X-axis.
/// Element XRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  XRange                         1;	///< Required element.
/// @brief Range of Y-axis.
/// Element YRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  YRange                         1;	///< Required element.
/// @brief Range of width.
/// Element WidthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  WidthRange                     1;	///< Required element.
/// @brief Range of height.
/// Element HeightRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  HeightRange                    1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":IntRange is a complexType.
/// @brief Range of values greater equal Min value and less equal Max value.
class onvifXsd__IntRange : public xsd__anyType
{ public:
/// Element Min of type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element Max of type xs:int.
    int                                  Max                            1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
/// @brief Range of values greater equal Min value and less equal Max value.
class onvifXsd__FloatRange : public xsd__anyType
{ public:
/// Element Min of type xs:float.
    float                                Min                            1;	///< Required element.
/// Element Max of type xs:float.
    float                                Max                            1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
/// @brief Range of duration greater equal Min duration and less equal Max duration.
class onvifXsd__DurationRange : public xsd__anyType
{ public:
/// Element Min of type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element Max of type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":IntList is a complexType.
/// @brief List of values.
class onvifXsd__IntList : public xsd__anyType
{ public:
/// Vector of int with length 0..unbounded
    std::vector<int                    > Items                          0;
};

/// "http://www.onvif.org/ver10/schema":FloatList is a complexType.
class onvifXsd__FloatList : public xsd__anyType
{ public:
/// Vector of float with length 0..unbounded
    std::vector<float                  > Items                          0;
};

/// "http://www.onvif.org/ver10/schema":AnyHolder is a complexType.
class onvifXsd__AnyHolder : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceExtension is a complexType.
class onvifXsd__VideoSourceExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Optional configuration of the image sensor. To be used if imaging service 2.00 is supported.
/// Element Imaging of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    onvifXsd__ImagingSettings20*         Imaging                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceExtension2.
    onvifXsd__VideoSourceExtension2*     Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is a complexType.
class onvifXsd__VideoSourceExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Profile is a complexType.
/// @brief A media profile consists of a set of media configurations. Media profiles are used by a client to configure properties of a media stream from an NVT.<br/> An NVT shall provide at least one media profile at boot. An NVT should provide ready to use profiles for the most common media configurations that the device offers.<br/> A profile consists of a set of interconnected configuration entities. Configurations are provided by the NVT and can be either static or created dynamically by the NVT. For example, the dynamic configurations can be created by the NVT depending on current available encoding resources.
class onvifXsd__Profile : public xsd__anyType
{ public:
/// @brief User readable name of the profile.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Optional configuration of the Video input.
/// Element VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    onvifXsd__VideoSourceConfiguration*  VideoSourceConfiguration       0;	///< Optional element.
/// @brief Optional configuration of the Audio input.
/// Element AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    onvifXsd__AudioSourceConfiguration*  AudioSourceConfiguration       0;	///< Optional element.
/// @brief Optional configuration of the Video encoder.
/// Element VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    onvifXsd__VideoEncoderConfiguration*  VideoEncoderConfiguration      0;	///< Optional element.
/// @brief Optional configuration of the Audio encoder.
/// Element AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    onvifXsd__AudioEncoderConfiguration*  AudioEncoderConfiguration      0;	///< Optional element.
/// @brief Optional configuration of the video analytics module and rule engine.
/// Element VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    onvifXsd__VideoAnalyticsConfiguration*  VideoAnalyticsConfiguration    0;	///< Optional element.
/// @brief Optional configuration of the pan tilt zoom unit.
/// Element PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    onvifXsd__PTZConfiguration*          PTZConfiguration               0;	///< Optional element.
/// @brief Optional configuration of the metadata stream.
/// Element MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    onvifXsd__MetadataConfiguration*     MetadataConfiguration          0;	///< Optional element.
/// @brief Extensions defined in ONVIF 2.0
/// Element Extension of type "http://www.onvif.org/ver10/schema":ProfileExtension.
    onvifXsd__ProfileExtension*          Extension                      0;	///< Optional element.
/// @brief Unique identifier of the profile.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
/// @brief A value of true signals that the profile cannot be deleted. Default is false.
/// Attribute fixed of type xs:boolean.
   @bool*                                fixed                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ProfileExtension is a complexType.
class onvifXsd__ProfileExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Optional configuration of the Audio output.
/// Element AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    onvifXsd__AudioOutputConfiguration*  AudioOutputConfiguration       0;	///< Optional element.
/// @brief Optional configuration of the Audio decoder.
/// Element AudioDecoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    onvifXsd__AudioDecoderConfiguration*  AudioDecoderConfiguration      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ProfileExtension2.
    onvifXsd__ProfileExtension2*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ProfileExtension2 is a complexType.
class onvifXsd__ProfileExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
/// @brief Base type defining the common properties of a configuration.
class onvifXsd__ConfigurationEntity : public xsd__anyType
{ public:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension is a complexType.
class onvifXsd__VideoSourceConfigurationExtension : public xsd__anyType
{ public:
/// @brief Optional element to configure rotation of captured image.
/// Element Rotate of type "http://www.onvif.org/ver10/schema":Rotate.
    onvifXsd__Rotate*                    Rotate                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2.
    onvifXsd__VideoSourceConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2 is a complexType.
class onvifXsd__VideoSourceConfigurationExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Rotate is a complexType.
class onvifXsd__Rotate : public xsd__anyType
{ public:
/// @brief Parameter to enable/disable Rotation feature.
/// Element Mode of type "http://www.onvif.org/ver10/schema":RotateMode.
    enum onvifXsd__RotateMode            Mode                           1;	///< Required element.
/// @brief Optional parameter to configure how much degree of clockwise rotation of image for On mode. Omitting this parameter for On mode means 180 degree rotation.
/// Element Degree of type xs:int.
    int*                                 Degree                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":RotateExtension.
    onvifXsd__RotateExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RotateExtension is a complexType.
class onvifXsd__RotateExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is a complexType.
class onvifXsd__VideoSourceConfigurationOptions : public xsd__anyType
{ public:
/// @brief Supported range for the capturing area.
/// Element BoundsRange of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
    onvifXsd__IntRectangleRange*         BoundsRange                    1;	///< Required element.
/// @brief List of physical inputs.
/// Vector of onvifXsd__ReferenceToken with length 1..unbounded
    std::vector<onvifXsd__ReferenceToken> VideoSourceTokensAvailable     1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension.
    onvifXsd__VideoSourceConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is a complexType.
class onvifXsd__VideoSourceConfigurationOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Options of parameters for Rotation feature.
/// Element Rotate of type "http://www.onvif.org/ver10/schema":RotateOptions.
    onvifXsd__RotateOptions*             Rotate                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2.
    onvifXsd__VideoSourceConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2 is a complexType.
class onvifXsd__VideoSourceConfigurationOptionsExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":RotateOptions is a complexType.
class onvifXsd__RotateOptions : public xsd__anyType
{ public:
/// @brief Supported options of Rotate mode parameter.
/// Vector of enum onvifXsd__RotateMode with length 1..unbounded
    std::vector<enum onvifXsd__RotateMode> Mode                           1;
/// @brief List of supported degree value for rotation.
/// Element DegreeList of type "http://www.onvif.org/ver10/schema":IntList.
    onvifXsd__IntList*                   DegreeList                     0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":RotateOptionsExtension.
    onvifXsd__RotateOptionsExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RotateOptionsExtension is a complexType.
class onvifXsd__RotateOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":VideoResolution is a complexType.
class onvifXsd__VideoResolution : public xsd__anyType
{ public:
/// @brief Number of the columns of the Video image.
/// Element Width of type xs:int.
    int                                  Width                          1;	///< Required element.
/// @brief Number of the lines of the Video image.
/// Element Height of type xs:int.
    int                                  Height                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":VideoRateControl is a complexType.
class onvifXsd__VideoRateControl : public xsd__anyType
{ public:
/// @brief Maximum output framerate in fps. If an EncodingInterval is provided the resulting encoded framerate will be reduced by the given factor.
/// Element FrameRateLimit of type xs:int.
    int                                  FrameRateLimit                 1;	///< Required element.
/// @brief Interval at which images are encoded and transmitted. (A value of 1 means that every frame is encoded, a value of 2 means that every 2nd frame is encoded ...)
/// Element EncodingInterval of type xs:int.
    int                                  EncodingInterval               1;	///< Required element.
/// @brief the maximum output bitrate in kbps
/// Element BitrateLimit of type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Configuration is a complexType.
class onvifXsd__Mpeg4Configuration : public xsd__anyType
{ public:
/// @brief Determines the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// Element GovLength of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// @brief the Mpeg4 profile, either simple profile (SP) or advanced simple profile (ASP)
/// Element Mpeg4Profile of type "http://www.onvif.org/ver10/schema":Mpeg4Profile.
    enum onvifXsd__Mpeg4Profile          Mpeg4Profile                   1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":H264Configuration is a complexType.
class onvifXsd__H264Configuration : public xsd__anyType
{ public:
/// @brief Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// Element GovLength of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// @brief the H.264 profile, either baseline, main, extended or high
/// Element H264Profile of type "http://www.onvif.org/ver10/schema":H264Profile.
    enum onvifXsd__H264Profile           H264Profile                    1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is a complexType.
class onvifXsd__VideoEncoderConfigurationOptions : public xsd__anyType
{ public:
/// @brief Range of the quality values. A high value means higher quality.
/// Element QualityRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  QualityRange                   1;	///< Required element.
/// @brief Optional JPEG encoder settings ranges (See also Extension element).
/// Element JPEG of type "http://www.onvif.org/ver10/schema":JpegOptions.
    onvifXsd__JpegOptions*               JPEG                           0;	///< Optional element.
/// @brief Optional MPEG-4 encoder settings ranges (See also Extension element).
/// Element MPEG4 of type "http://www.onvif.org/ver10/schema":Mpeg4Options.
    onvifXsd__Mpeg4Options*              MPEG4                          0;	///< Optional element.
/// @brief Optional H.264 encoder settings ranges (See also Extension element).
/// Element H264 of type "http://www.onvif.org/ver10/schema":H264Options.
    onvifXsd__H264Options*               H264                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension.
    onvifXsd__VideoEncoderOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is a complexType.
class onvifXsd__VideoEncoderOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Optional JPEG encoder settings ranges.
/// Element JPEG of type "http://www.onvif.org/ver10/schema":JpegOptions2.
    onvifXsd__JpegOptions2*              JPEG                           0;	///< Optional element.
/// @brief Optional MPEG-4 encoder settings ranges.
/// Element MPEG4 of type "http://www.onvif.org/ver10/schema":Mpeg4Options2.
    onvifXsd__Mpeg4Options2*             MPEG4                          0;	///< Optional element.
/// @brief Optional H.264 encoder settings ranges.
/// Element H264 of type "http://www.onvif.org/ver10/schema":H264Options2.
    onvifXsd__H264Options2*              H264                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2.
    onvifXsd__VideoEncoderOptionsExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is a complexType.
class onvifXsd__VideoEncoderOptionsExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":JpegOptions is a complexType.
class onvifXsd__JpegOptions : public xsd__anyType
{ public:
/// @brief List of supported image sizes.
/// Vector of onvifXsd__VideoResolution* with length 1..unbounded
    std::vector<onvifXsd__VideoResolution*> ResolutionsAvailable           1;
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  EncodingIntervalRange          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Options is a complexType.
class onvifXsd__Mpeg4Options : public xsd__anyType
{ public:
/// @brief List of supported image sizes.
/// Vector of onvifXsd__VideoResolution* with length 1..unbounded
    std::vector<onvifXsd__VideoResolution*> ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported MPEG-4 profiles.
/// Vector of enum onvifXsd__Mpeg4Profile with length 1..unbounded
    std::vector<enum onvifXsd__Mpeg4Profile> Mpeg4ProfilesSupported         1;
};

/// "http://www.onvif.org/ver10/schema":H264Options is a complexType.
class onvifXsd__H264Options : public xsd__anyType
{ public:
/// @brief List of supported image sizes.
/// Vector of onvifXsd__VideoResolution* with length 1..unbounded
    std::vector<onvifXsd__VideoResolution*> ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported H.264 profiles.
/// Vector of enum onvifXsd__H264Profile with length 1..unbounded
    std::vector<enum onvifXsd__H264Profile> H264ProfilesSupported          1;
};

/// "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is a complexType.
class onvifXsd__AudioSourceConfigurationOptions : public xsd__anyType
{ public:
/// @brief Tokens of the audio source the configuration can be used for.
/// Vector of onvifXsd__ReferenceToken with length 1..unbounded
    std::vector<onvifXsd__ReferenceToken> InputTokensAvailable           1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension.
    onvifXsd__AudioSourceOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is a complexType.
class onvifXsd__AudioSourceOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is a complexType.
class onvifXsd__AudioEncoderConfigurationOptions : public xsd__anyType
{ public:
/// @brief list of supported AudioEncoderConfigurations
/// Vector of onvifXsd__AudioEncoderConfigurationOption* with length 0..unbounded
    std::vector<onvifXsd__AudioEncoderConfigurationOption*> Options                        0;
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is a complexType.
class onvifXsd__AudioEncoderConfigurationOption : public xsd__anyType
{ public:
/// @brief The enoding used for audio data (either G.711, G.726 or AAC)
/// Element Encoding of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum onvifXsd__AudioEncoding         Encoding                       1;	///< Required element.
/// @brief List of supported bitrates in kbps for the specified Encoding
/// Element BitrateList of type "http://www.onvif.org/ver10/schema":IntList.
    onvifXsd__IntList*                   BitrateList                    1;	///< Required element.
/// @brief List of supported Sample Rates in kHz for the specified Encoding
/// Element SampleRateList of type "http://www.onvif.org/ver10/schema":IntList.
    onvifXsd__IntList*                   SampleRateList                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension is a complexType.
class onvifXsd__MetadataConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZFilter is a complexType.
class onvifXsd__PTZFilter : public xsd__anyType
{ public:
/// @brief True if the metadata stream shall contain the PTZ status (IDLE, MOVING or UNKNOWN)
/// Element Status of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// @brief True if the metadata stream shall contain the PTZ position
/// Element Position of type xs:boolean.
    bool                                 Position                       1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":EventSubscription is a complexType.
/// @brief Subcription handling in the same way as base notification subscription.
class onvifXsd__EventSubscription : public xsd__anyType
{ public:
/// Element Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    oasisWsnB2__FilterType*              Filter                         0;	///< Optional element.
    class _onvifXsd__EventSubscription_SubscriptionPolicy
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is a complexType.
class onvifXsd__MetadataConfigurationOptions : public xsd__anyType
{ public:
/// Element PTZStatusFilterOptions of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions.
    onvifXsd__PTZStatusFilterOptions*    PTZStatusFilterOptions         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is a complexType.
class onvifXsd__PTZStatusFilterOptions : public xsd__anyType
{ public:
/// @brief True if the device is able to stream pan or tilt status information.
/// Element PanTiltStatusSupported of type xs:boolean.
    bool                                 PanTiltStatusSupported         1;	///< Required element.
/// @brief True if the device is able to stream zoom status inforamtion.
/// Element ZoomStatusSupported of type xs:boolean.
    bool                                 ZoomStatusSupported            1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief True if the device is able to stream the pan or tilt position.
/// Element PanTiltPositionSupported of type xs:boolean.
    bool*                                PanTiltPositionSupported       0;	///< Optional element.
/// @brief True if the device is able to stream zoom position information.
/// Element ZoomPositionSupported of type xs:boolean.
    bool*                                ZoomPositionSupported          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension.
    onvifXsd__PTZStatusFilterOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension is a complexType.
class onvifXsd__PTZStatusFilterOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":VideoOutputExtension is a complexType.
class onvifXsd__VideoOutputExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions is a complexType.
class onvifXsd__VideoOutputConfigurationOptions : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions is a complexType.
class onvifXsd__VideoDecoderConfigurationOptions : public xsd__anyType
{ public:
/// @brief If the device is able to decode Jpeg streams this element describes the supported codecs and configurations
/// Element JpegDecOptions of type "http://www.onvif.org/ver10/schema":JpegDecOptions.
    onvifXsd__JpegDecOptions*            JpegDecOptions                 0;	///< Optional element.
/// @brief If the device is able to decode H.264 streams this element describes the supported codecs and configurations
/// Element H264DecOptions of type "http://www.onvif.org/ver10/schema":H264DecOptions.
    onvifXsd__H264DecOptions*            H264DecOptions                 0;	///< Optional element.
/// @brief If the device is able to decode Mpeg4 streams this element describes the supported codecs and configurations
/// Element Mpeg4DecOptions of type "http://www.onvif.org/ver10/schema":Mpeg4DecOptions.
    onvifXsd__Mpeg4DecOptions*           Mpeg4DecOptions                0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension.
    onvifXsd__VideoDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":H264DecOptions is a complexType.
class onvifXsd__H264DecOptions : public xsd__anyType
{ public:
/// @brief List of supported H.264 Video Resolutions
/// Vector of onvifXsd__VideoResolution* with length 1..unbounded
    std::vector<onvifXsd__VideoResolution*> ResolutionsAvailable           1;
/// @brief List of supported H264 Profiles (either baseline, main, extended or high)
/// Vector of enum onvifXsd__H264Profile with length 1..unbounded
    std::vector<enum onvifXsd__H264Profile> SupportedH264Profiles          1;
/// @brief Supported H.264 bitrate range in kbps
/// Element SupportedInputBitrate of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  SupportedInputBitrate          1;	///< Required element.
/// @brief Supported H.264 framerate range in fps
/// Element SupportedFrameRate of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  SupportedFrameRate             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":JpegDecOptions is a complexType.
class onvifXsd__JpegDecOptions : public xsd__anyType
{ public:
/// @brief List of supported Jpeg Video Resolutions
/// Vector of onvifXsd__VideoResolution* with length 1..unbounded
    std::vector<onvifXsd__VideoResolution*> ResolutionsAvailable           1;
/// @brief Supported Jpeg bitrate range in kbps
/// Element SupportedInputBitrate of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  SupportedInputBitrate          1;	///< Required element.
/// @brief Supported Jpeg framerate range in fps
/// Element SupportedFrameRate of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  SupportedFrameRate             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Mpeg4DecOptions is a complexType.
class onvifXsd__Mpeg4DecOptions : public xsd__anyType
{ public:
/// @brief List of supported Mpeg4 Video Resolutions
/// Vector of onvifXsd__VideoResolution* with length 1..unbounded
    std::vector<onvifXsd__VideoResolution*> ResolutionsAvailable           1;
/// @brief List of supported Mpeg4 Profiles (either SP or ASP)
/// Vector of enum onvifXsd__Mpeg4Profile with length 1..unbounded
    std::vector<enum onvifXsd__Mpeg4Profile> SupportedMpeg4Profiles         1;
/// @brief Supported Mpeg4 bitrate range in kbps
/// Element SupportedInputBitrate of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  SupportedInputBitrate          1;	///< Required element.
/// @brief Supported Mpeg4 framerate range in fps
/// Element SupportedFrameRate of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  SupportedFrameRate             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension is a complexType.
class onvifXsd__VideoDecoderConfigurationOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions is a complexType.
class onvifXsd__AudioOutputConfigurationOptions : public xsd__anyType
{ public:
/// @brief Tokens of the physical Audio outputs (typically one).
/// Vector of onvifXsd__ReferenceToken with length 1..unbounded
    std::vector<onvifXsd__ReferenceToken> OutputTokensAvailable          1;
/// @brief An <b>audio</b> channel MAY support different types of audio transmission. While for full duplex operation no special handling is required, in half duplex operation the transmission direction needs to be switched. The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which direction is currently active. An NVC can switch between different modes by setting the AudioOutputConfiguration.<br/> The following modes for the Send-Primacy are defined:<ul> <li>www.onvif.org/ver20/HalfDuplex/Server The server is allowed to send audio data to the client. The client shall not send audio data via the backchannel to the NVT in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Client The client is allowed to send audio data via the backchannel to the server. The NVT shall not send audio data to the client in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Auto It is up to the device how to deal with sending and receiving audio data.</li> </ul> Acoustic echo cancellation is out of ONVIF scope.
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > SendPrimacyOptions             0;
/// @brief Minimum and maximum level range supported for this Output.
/// Element OutputLevelRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  OutputLevelRange               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions is a complexType.
class onvifXsd__AudioDecoderConfigurationOptions : public xsd__anyType
{ public:
/// @brief If the device is able to decode AAC encoded audio this section describes the supported configurations
/// Element AACDecOptions of type "http://www.onvif.org/ver10/schema":AACDecOptions.
    onvifXsd__AACDecOptions*             AACDecOptions                  0;	///< Optional element.
/// @brief If the device is able to decode G711 encoded audio this section describes the supported configurations
/// Element G711DecOptions of type "http://www.onvif.org/ver10/schema":G711DecOptions.
    onvifXsd__G711DecOptions*            G711DecOptions                 0;	///< Optional element.
/// @brief If the device is able to decode G726 encoded audio this section describes the supported configurations
/// Element G726DecOptions of type "http://www.onvif.org/ver10/schema":G726DecOptions.
    onvifXsd__G726DecOptions*            G726DecOptions                 0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension.
    onvifXsd__AudioDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":G711DecOptions is a complexType.
class onvifXsd__G711DecOptions : public xsd__anyType
{ public:
/// @brief List of supported bitrates in kbps
/// Element Bitrate of type "http://www.onvif.org/ver10/schema":IntList.
    onvifXsd__IntList*                   Bitrate                        1;	///< Required element.
/// @brief List of supported sample rates in kHz
/// Element SampleRateRange of type "http://www.onvif.org/ver10/schema":IntList.
    onvifXsd__IntList*                   SampleRateRange                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AACDecOptions is a complexType.
class onvifXsd__AACDecOptions : public xsd__anyType
{ public:
/// @brief List of supported bitrates in kbps
/// Element Bitrate of type "http://www.onvif.org/ver10/schema":IntList.
    onvifXsd__IntList*                   Bitrate                        1;	///< Required element.
/// @brief List of supported sample rates in kHz
/// Element SampleRateRange of type "http://www.onvif.org/ver10/schema":IntList.
    onvifXsd__IntList*                   SampleRateRange                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":G726DecOptions is a complexType.
class onvifXsd__G726DecOptions : public xsd__anyType
{ public:
/// @brief List of supported bitrates in kbps
/// Element Bitrate of type "http://www.onvif.org/ver10/schema":IntList.
    onvifXsd__IntList*                   Bitrate                        1;	///< Required element.
/// @brief List of supported sample rates in kHz
/// Element SampleRateRange of type "http://www.onvif.org/ver10/schema":IntList.
    onvifXsd__IntList*                   SampleRateRange                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension is a complexType.
class onvifXsd__AudioDecoderConfigurationOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MulticastConfiguration is a complexType.
class onvifXsd__MulticastConfiguration : public xsd__anyType
{ public:
/// @brief The multicast address (if this address is set to 0 no multicast streaming is enaled)
/// Element Address of type "http://www.onvif.org/ver10/schema":IPAddress.
    onvifXsd__IPAddress*                 Address                        1;	///< Required element.
/// @brief The RTP mutlicast destination port. A device may support RTCP. In this case the port value shall be even to allow the corresponding RTCP stream to be mapped to the next higher (odd) destination port number as defined in the RTSP specification.
/// Element Port of type xs:int.
    int                                  Port                           1;	///< Required element.
/// @brief In case of IPv6 the TTL value is assumed as the hop limit. Note that for IPV6 and administratively scoped IPv4 multicast the primary use for hop limit / TTL is to prevent packets from (endlessly) circulating and not limiting scope. In these cases the address contains the scope.
/// Element TTL of type xs:int.
    int                                  TTL                            1;	///< Required element.
/// @brief Read only property signalling that streaming is persistant. Use the methods StartMulticastStreaming and StopMulticastStreaming to switch its state.
/// Element AutoStart of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":StreamSetup is a complexType.
class onvifXsd__StreamSetup : public xsd__anyType
{ public:
/// @brief Defines if a multicast or unicast stream is requested
/// Element Stream of type "http://www.onvif.org/ver10/schema":StreamType.
    enum onvifXsd__StreamType            Stream                         1;	///< Required element.
/// Element Transport of type "http://www.onvif.org/ver10/schema":Transport.
    onvifXsd__Transport*                 Transport                      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Transport is a complexType.
class onvifXsd__Transport : public xsd__anyType
{ public:
/// @brief Defines the network protocol for streaming, either UDP=RTP/UDP, RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP
/// Element Protocol of type "http://www.onvif.org/ver10/schema":TransportProtocol.
    enum onvifXsd__TransportProtocol     Protocol                       1;	///< Required element.
/// @brief Optional element to describe further tunnel options. This element is normally not needed
/// Element Tunnel of type "http://www.onvif.org/ver10/schema":Transport.
    onvifXsd__Transport*                 Tunnel                         0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":MediaUri is a complexType.
class onvifXsd__MediaUri : public xsd__anyType
{ public:
/// @brief Stable Uri to be used for requesting the media stream
/// Element Uri of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// @brief Indicates if the Uri is only valid until the connection is established. The value shall be set to "false".
/// Element InvalidAfterConnect of type xs:boolean.
    bool                                 InvalidAfterConnect            1;	///< Required element.
/// @brief Indicates if the Uri is invalid after a reboot of the device. The value shall be set to "false".
/// Element InvalidAfterReboot of type xs:boolean.
    bool                                 InvalidAfterReboot             1;	///< Required element.
/// @brief Duration how long the Uri is valid. This parameter shall be set to PT0S to indicate that this stream URI is indefinitely valid even if the profile changes
/// Element Timeout of type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Scope is a complexType.
class onvifXsd__Scope : public xsd__anyType
{ public:
/// @brief Indicates if the scope is fixed or configurable.
/// Element ScopeDef of type "http://www.onvif.org/ver10/schema":ScopeDefinition.
    enum onvifXsd__ScopeDefinition       ScopeDef                       1;	///< Required element.
/// @brief Scope item URI.
/// Element ScopeItem of type xs:anyURI.
    xsd__anyURI                          ScopeItem                      1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is a complexType.
class onvifXsd__NetworkInterfaceExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element InterfaceType of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    onvifXsd__IANA_IfTypes               InterfaceType                  1;	///< Required element.
/// @brief Extension point prepared for future 802.3 configuration.
/// Vector of onvifXsd__Dot3Configuration* with length 0..unbounded
    std::vector<onvifXsd__Dot3Configuration*> Dot3                           0;
/// Vector of onvifXsd__Dot11Configuration* with length 0..unbounded
    std::vector<onvifXsd__Dot11Configuration*> Dot11                          0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2.
    onvifXsd__NetworkInterfaceExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":Dot3Configuration is a complexType.
class onvifXsd__Dot3Configuration : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2 is a complexType.
class onvifXsd__NetworkInterfaceExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is a complexType.
class onvifXsd__NetworkInterfaceLink : public xsd__anyType
{ public:
/// @brief Configured link settings.
/// Element AdminSettings of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    onvifXsd__NetworkInterfaceConnectionSetting*  AdminSettings                  1;	///< Required element.
/// @brief Current active link settings.
/// Element OperSettings of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    onvifXsd__NetworkInterfaceConnectionSetting*  OperSettings                   1;	///< Required element.
/// @brief Integer indicating interface type, for example: 6 is ethernet.
/// Element InterfaceType of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    onvifXsd__IANA_IfTypes               InterfaceType                  1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is a complexType.
class onvifXsd__NetworkInterfaceConnectionSetting : public xsd__anyType
{ public:
/// @brief Auto negotiation on/off.
/// Element AutoNegotiation of type xs:boolean.
    bool                                 AutoNegotiation                1;	///< Required element.
/// @brief Speed.
/// Element Speed of type xs:int.
    int                                  Speed                          1;	///< Required element.
/// @brief Duplex type, Half or Full.
/// Element Duplex of type "http://www.onvif.org/ver10/schema":Duplex.
    enum onvifXsd__Duplex                Duplex                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is a complexType.
class onvifXsd__NetworkInterfaceInfo : public xsd__anyType
{ public:
/// @brief Network interface name, for example eth0.
/// Element Name of type xs:string.
    std::string*                         Name                           0;	///< Optional element.
/// @brief Network interface MAC address.
/// Element HwAddress of type "http://www.onvif.org/ver10/schema":HwAddress.
    onvifXsd__HwAddress                  HwAddress                      1;	///< Required element.
/// @brief Maximum transmission unit.
/// Element MTU of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is a complexType.
class onvifXsd__IPv6NetworkInterface : public xsd__anyType
{ public:
/// @brief Indicates whether or not IPv6 is enabled.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief IPv6 configuration.
/// Element Config of type "http://www.onvif.org/ver10/schema":IPv6Configuration.
    onvifXsd__IPv6Configuration*         Config                         0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is a complexType.
class onvifXsd__IPv4NetworkInterface : public xsd__anyType
{ public:
/// @brief Indicates whether or not IPv4 is enabled.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief IPv4 configuration.
/// Element Config of type "http://www.onvif.org/ver10/schema":IPv4Configuration.
    onvifXsd__IPv4Configuration*         Config                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":IPv4Configuration is a complexType.
class onvifXsd__IPv4Configuration : public xsd__anyType
{ public:
/// @brief List of manually added IPv4 addresses.
/// Vector of onvifXsd__PrefixedIPv4Address* with length 0..unbounded
    std::vector<onvifXsd__PrefixedIPv4Address*> Manual                         0;
/// @brief Link local address.
/// Element LinkLocal of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    onvifXsd__PrefixedIPv4Address*       LinkLocal                      0;	///< Optional element.
/// @brief IPv4 address configured by using DHCP.
/// Element FromDHCP of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    onvifXsd__PrefixedIPv4Address*       FromDHCP                       0;	///< Optional element.
/// @brief Indicates whether or not DHCP is used.
/// Element DHCP of type xs:boolean.
    bool                                 DHCP                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IPv6Configuration is a complexType.
class onvifXsd__IPv6Configuration : public xsd__anyType
{ public:
/// @brief Indicates whether router advertisment is used.
/// Element AcceptRouterAdvert of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// @brief DHCP configuration.
/// Element DHCP of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum onvifXsd__IPv6DHCPConfiguration  DHCP                           1;	///< Required element.
/// @brief List of manually entered IPv6 addresses.
/// Vector of onvifXsd__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onvifXsd__PrefixedIPv6Address*> Manual                         0;
/// @brief List of link local IPv6 addresses.
/// Vector of onvifXsd__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onvifXsd__PrefixedIPv6Address*> LinkLocal                      0;
/// @brief List of IPv6 addresses configured by using DHCP.
/// Vector of onvifXsd__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onvifXsd__PrefixedIPv6Address*> FromDHCP                       0;
/// @brief List of IPv6 addresses configured by using router advertisment.
/// Vector of onvifXsd__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onvifXsd__PrefixedIPv6Address*> FromRA                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension.
    onvifXsd__IPv6ConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is a complexType.
class onvifXsd__IPv6ConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocol is a complexType.
class onvifXsd__NetworkProtocol : public xsd__anyType
{ public:
/// @brief Network protocol type string.
/// Element Name of type "http://www.onvif.org/ver10/schema":NetworkProtocolType.
    enum onvifXsd__NetworkProtocolType   Name                           1;	///< Required element.
/// @brief Indicates if the protocol is enabled or not.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief The port that is used by the protocol.
/// Vector of int with length 1..unbounded
    std::vector<int                    > Port                           1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkProtocolExtension.
    onvifXsd__NetworkProtocolExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is a complexType.
class onvifXsd__NetworkProtocolExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NetworkHost is a complexType.
class onvifXsd__NetworkHost : public xsd__anyType
{ public:
/// @brief Network host type: IPv4, IPv6 or DNS.
/// Element Type of type "http://www.onvif.org/ver10/schema":NetworkHostType.
    enum onvifXsd__NetworkHostType       Type                           1;	///< Required element.
/// @brief IPv4 address.
/// Element IPv4Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    onvifXsd__IPv4Address*               IPv4Address                    0;	///< Optional element.
/// @brief IPv6 address.
/// Element IPv6Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    onvifXsd__IPv6Address*               IPv6Address                    0;	///< Optional element.
/// @brief DNS name.
/// Element DNSname of type "http://www.onvif.org/ver10/schema":DNSName.
    onvifXsd__DNSName*                   DNSname                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkHostExtension.
    onvifXsd__NetworkHostExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkHostExtension is a complexType.
class onvifXsd__NetworkHostExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
class onvifXsd__IPAddress : public xsd__anyType
{ public:
/// @brief Indicates if the address is an IPv4 or IPv6 address.
/// Element Type of type "http://www.onvif.org/ver10/schema":IPType.
    enum onvifXsd__IPType                Type                           1;	///< Required element.
/// @brief IPv4 address.
/// Element IPv4Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    onvifXsd__IPv4Address*               IPv4Address                    0;	///< Optional element.
/// @brief IPv6 address
/// Element IPv6Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    onvifXsd__IPv6Address*               IPv6Address                    0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is a complexType.
class onvifXsd__PrefixedIPv4Address : public xsd__anyType
{ public:
/// @brief IPv4 address
/// Element Address of type "http://www.onvif.org/ver10/schema":IPv4Address.
    onvifXsd__IPv4Address                Address                        1;	///< Required element.
/// @brief Prefix/submask length
/// Element PrefixLength of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is a complexType.
class onvifXsd__PrefixedIPv6Address : public xsd__anyType
{ public:
/// @brief IPv6 address
/// Element Address of type "http://www.onvif.org/ver10/schema":IPv6Address.
    onvifXsd__IPv6Address                Address                        1;	///< Required element.
/// @brief Prefix/submask length
/// Element PrefixLength of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":HostnameInformation is a complexType.
class onvifXsd__HostnameInformation : public xsd__anyType
{ public:
/// @brief Indicates whether the hostname is obtained from DHCP or not.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief Indicates the hostname.
/// Element Name of type xs:token.
    xsd__token*                          Name                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":HostnameInformationExtension.
    onvifXsd__HostnameInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":HostnameInformationExtension is a complexType.
class onvifXsd__HostnameInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":DNSInformation is a complexType.
class onvifXsd__DNSInformation : public xsd__anyType
{ public:
/// @brief Indicates whether or not DNS information is retrieved from DHCP.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief Search domain.
/// Vector of xsd__token with length 0..unbounded
    std::vector<xsd__token             > SearchDomain                   0;
/// @brief List of DNS addresses received from DHCP.
/// Vector of onvifXsd__IPAddress* with length 0..unbounded
    std::vector<onvifXsd__IPAddress*   > DNSFromDHCP                    0;
/// @brief List of manually entered DNS addresses.
/// Vector of onvifXsd__IPAddress* with length 0..unbounded
    std::vector<onvifXsd__IPAddress*   > DNSManual                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":DNSInformationExtension.
    onvifXsd__DNSInformationExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DNSInformationExtension is a complexType.
class onvifXsd__DNSInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NTPInformation is a complexType.
class onvifXsd__NTPInformation : public xsd__anyType
{ public:
/// @brief Indicates if NTP information is to be retrieved by using DHCP.
/// Element FromDHCP of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// @brief List of NTP addresses retrieved by using DHCP.
/// Vector of onvifXsd__NetworkHost* with length 0..unbounded
    std::vector<onvifXsd__NetworkHost* > NTPFromDHCP                    0;
/// @brief List of manually entered NTP addresses.
/// Vector of onvifXsd__NetworkHost* with length 0..unbounded
    std::vector<onvifXsd__NetworkHost* > NTPManual                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NTPInformationExtension.
    onvifXsd__NTPInformationExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NTPInformationExtension is a complexType.
class onvifXsd__NTPInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSInformation is a complexType.
class onvifXsd__DynamicDNSInformation : public xsd__anyType
{ public:
/// @brief Dynamic DNS type.
/// Element Type of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum onvifXsd__DynamicDNSType        Type                           1;	///< Required element.
/// @brief DNS name.
/// Element Name of type "http://www.onvif.org/ver10/schema":DNSName.
    onvifXsd__DNSName*                   Name                           0;	///< Optional element.
/// @brief Time to live.
/// Element TTL of type xs:duration.
    xsd__duration*                       TTL                            0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension.
    onvifXsd__DynamicDNSInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is a complexType.
class onvifXsd__DynamicDNSInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is a complexType.
class onvifXsd__NetworkInterfaceSetConfiguration : public xsd__anyType
{ public:
/// @brief Indicates whether or not an interface is enabled.
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// @brief Link configuration.
/// Element Link of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    onvifXsd__NetworkInterfaceConnectionSetting*  Link                           0;	///< Optional element.
/// @brief Maximum transmission unit.
/// Element MTU of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// @brief IPv4 network interface configuration.
/// Element IPv4 of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration.
    onvifXsd__IPv4NetworkInterfaceSetConfiguration*  IPv4                           0;	///< Optional element.
/// @brief IPv6 network interface configuration.
/// Element IPv6 of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration.
    onvifXsd__IPv6NetworkInterfaceSetConfiguration*  IPv6                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension.
    onvifXsd__NetworkInterfaceSetConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is a complexType.
class onvifXsd__NetworkInterfaceSetConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Vector of onvifXsd__Dot3Configuration* with length 0..unbounded
    std::vector<onvifXsd__Dot3Configuration*> Dot3                           0;
/// Vector of onvifXsd__Dot11Configuration* with length 0..unbounded
    std::vector<onvifXsd__Dot11Configuration*> Dot11                          0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2.
    onvifXsd__NetworkInterfaceSetConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is a complexType.
class onvifXsd__IPv6NetworkInterfaceSetConfiguration : public xsd__anyType
{ public:
/// @brief Indicates whether or not IPv6 is enabled.
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// @brief Indicates whether router advertisment is used.
/// Element AcceptRouterAdvert of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// @brief List of manually added IPv6 addresses.
/// Vector of onvifXsd__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onvifXsd__PrefixedIPv6Address*> Manual                         0;
/// @brief DHCP configuration.
/// Element DHCP of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum onvifXsd__IPv6DHCPConfiguration*  DHCP                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is a complexType.
class onvifXsd__IPv4NetworkInterfaceSetConfiguration : public xsd__anyType
{ public:
/// @brief Indicates whether or not IPv4 is enabled.
/// Element Enabled of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// @brief List of manually added IPv4 addresses.
/// Vector of onvifXsd__PrefixedIPv4Address* with length 0..unbounded
    std::vector<onvifXsd__PrefixedIPv4Address*> Manual                         0;
/// @brief Indicates whether or not DHCP is used.
/// Element DHCP of type xs:boolean.
    bool*                                DHCP                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":NetworkGateway is a complexType.
class onvifXsd__NetworkGateway : public xsd__anyType
{ public:
/// @brief IPv4 address string.
/// Vector of onvifXsd__IPv4Address with length 0..unbounded
    std::vector<onvifXsd__IPv4Address  > IPv4Address                    0;
/// @brief IPv6 address string.
/// Vector of onvifXsd__IPv6Address with length 0..unbounded
    std::vector<onvifXsd__IPv6Address  > IPv6Address                    0;
};

/// "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is a complexType.
class onvifXsd__NetworkZeroConfiguration : public xsd__anyType
{ public:
/// @brief Unique identifier of network interface.
/// Element InterfaceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             InterfaceToken                 1;	///< Required element.
/// @brief Indicates whether the zero-configuration is enabled or not.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief The zero-configuration IPv4 address(es)
/// Vector of onvifXsd__IPv4Address with length 0..unbounded
    std::vector<onvifXsd__IPv4Address  > Addresses                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension.
    onvifXsd__NetworkZeroConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is a complexType.
class onvifXsd__NetworkZeroConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Optional array holding the configuration for the second and possibly further interfaces.
/// Vector of onvifXsd__NetworkZeroConfiguration* with length 0..unbounded
    std::vector<onvifXsd__NetworkZeroConfiguration*> Additional                     0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2.
    onvifXsd__NetworkZeroConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2 is a complexType.
class onvifXsd__NetworkZeroConfigurationExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":IPAddressFilter is a complexType.
class onvifXsd__IPAddressFilter : public xsd__anyType
{ public:
/// Element Type of type "http://www.onvif.org/ver10/schema":IPAddressFilterType.
    enum onvifXsd__IPAddressFilterType   Type                           1;	///< Required element.
/// Vector of onvifXsd__PrefixedIPv4Address* with length 0..unbounded
    std::vector<onvifXsd__PrefixedIPv4Address*> IPv4Address                    0;
/// Vector of onvifXsd__PrefixedIPv6Address* with length 0..unbounded
    std::vector<onvifXsd__PrefixedIPv6Address*> IPv6Address                    0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":IPAddressFilterExtension.
    onvifXsd__IPAddressFilterExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is a complexType.
class onvifXsd__IPAddressFilterExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Dot11Configuration is a complexType.
class onvifXsd__Dot11Configuration : public xsd__anyType
{ public:
/// Element SSID of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    onvifXsd__Dot11SSIDType              SSID                           1;	///< Required element.
/// Element Mode of type "http://www.onvif.org/ver10/schema":Dot11StationMode.
    enum onvifXsd__Dot11StationMode      Mode                           1;	///< Required element.
/// Element Alias of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Alias                          1;	///< Required element.
/// Element Priority of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority.
    onvifXsd__NetworkInterfaceConfigPriority  Priority                       1;	///< Required element.
/// Element Security of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration.
    onvifXsd__Dot11SecurityConfiguration*  Security                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration is a complexType.
class onvifXsd__Dot11SecurityConfiguration : public xsd__anyType
{ public:
/// Element Mode of type "http://www.onvif.org/ver10/schema":Dot11SecurityMode.
    enum onvifXsd__Dot11SecurityMode     Mode                           1;	///< Required element.
/// Element Algorithm of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum onvifXsd__Dot11Cipher*          Algorithm                      0;	///< Optional element.
/// Element PSK of type "http://www.onvif.org/ver10/schema":Dot11PSKSet.
    onvifXsd__Dot11PSKSet*               PSK                            0;	///< Optional element.
/// Element Dot1X of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            Dot1X                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension.
    onvifXsd__Dot11SecurityConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension is a complexType.
class onvifXsd__Dot11SecurityConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot11PSKSet is a complexType.
class onvifXsd__Dot11PSKSet : public xsd__anyType
{ public:
/// @brief According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of 256 bits, or 64 octets when represented in hex<br/> Either Key or Passphrase shall be given, if both are supplied Key shall be used by the device and Passphrase ignored.
/// Element Key of type "http://www.onvif.org/ver10/schema":Dot11PSK.
    onvifXsd__Dot11PSK*                  Key                            0;	///< Optional element.
/// @brief According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence of between 8 and 63 ASCII-encoded characters and each character in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive.<br/> If only Passpharse is supplied the Key shall be derived using the algorithm described in IEEE802.11-2007 section H.4
/// Element Passphrase of type "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase.
    onvifXsd__Dot11PSKPassphrase*        Passphrase                     0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension.
    onvifXsd__Dot11PSKSetExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension is a complexType.
class onvifXsd__Dot11PSKSetExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2 is a complexType.
class onvifXsd__NetworkInterfaceSetConfigurationExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Dot11Capabilities is a complexType.
class onvifXsd__Dot11Capabilities : public xsd__anyType
{ public:
/// Element TKIP of type xs:boolean.
    bool                                 TKIP                           1;	///< Required element.
/// Element ScanAvailableNetworks of type xs:boolean.
    bool                                 ScanAvailableNetworks          1;	///< Required element.
/// Element MultipleConfiguration of type xs:boolean.
    bool                                 MultipleConfiguration          1;	///< Required element.
/// Element AdHocStationMode of type xs:boolean.
    bool                                 AdHocStationMode               1;	///< Required element.
/// Element WEP of type xs:boolean.
    bool                                 WEP                            1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot11Status is a complexType.
class onvifXsd__Dot11Status : public xsd__anyType
{ public:
/// Element SSID of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    onvifXsd__Dot11SSIDType              SSID                           1;	///< Required element.
/// Element BSSID of type xs:string.
    std::string*                         BSSID                          0;	///< Optional element.
/// Element PairCipher of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum onvifXsd__Dot11Cipher*          PairCipher                     0;	///< Optional element.
/// Element GroupCipher of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum onvifXsd__Dot11Cipher*          GroupCipher                    0;	///< Optional element.
/// Element SignalStrength of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum onvifXsd__Dot11SignalStrength*  SignalStrength                 0;	///< Optional element.
/// Element ActiveConfigAlias of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ActiveConfigAlias              1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot11AvailableNetworks is a complexType.
class onvifXsd__Dot11AvailableNetworks : public xsd__anyType
{ public:
/// Element SSID of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    onvifXsd__Dot11SSIDType              SSID                           1;	///< Required element.
/// Element BSSID of type xs:string.
    std::string*                         BSSID                          0;	///< Optional element.
/// @brief See IEEE802.11 7.3.2.25.2 for details.
/// Vector of enum onvifXsd__Dot11AuthAndMangementSuite with length 0..unbounded
    std::vector<enum onvifXsd__Dot11AuthAndMangementSuite> AuthAndMangementSuite          0;
/// Vector of enum onvifXsd__Dot11Cipher with length 0..unbounded
    std::vector<enum onvifXsd__Dot11Cipher> PairCipher                     0;
/// Vector of enum onvifXsd__Dot11Cipher with length 0..unbounded
    std::vector<enum onvifXsd__Dot11Cipher> GroupCipher                    0;
/// Element SignalStrength of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum onvifXsd__Dot11SignalStrength*  SignalStrength                 0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension.
    onvifXsd__Dot11AvailableNetworksExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension is a complexType.
class onvifXsd__Dot11AvailableNetworksExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
class onvifXsd__Capabilities : public xsd__anyType
{ public:
/// @brief Analytics capabilities
/// Element Analytics of type "http://www.onvif.org/ver10/schema":AnalyticsCapabilities.
    onvifXsd__AnalyticsCapabilities*     Analytics                      0;	///< Optional element.
/// @brief Device capabilities
/// Element Device of type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    onvifXsd__DeviceCapabilities*        Device                         0;	///< Optional element.
/// @brief Event capabilities
/// Element Events of type "http://www.onvif.org/ver10/schema":EventCapabilities.
    onvifXsd__EventCapabilities*         Events                         0;	///< Optional element.
/// @brief Imaging capabilities
/// Element Imaging of type "http://www.onvif.org/ver10/schema":ImagingCapabilities.
    onvifXsd__ImagingCapabilities*       Imaging                        0;	///< Optional element.
/// @brief Media capabilities
/// Element Media of type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    onvifXsd__MediaCapabilities*         Media                          0;	///< Optional element.
/// @brief PTZ capabilities
/// Element PTZ of type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    onvifXsd__PTZCapabilities*           PTZ                            0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension.
    onvifXsd__CapabilitiesExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CapabilitiesExtension is a complexType.
class onvifXsd__CapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element DeviceIO of type "http://www.onvif.org/ver10/schema":DeviceIOCapabilities.
    onvifXsd__DeviceIOCapabilities*      DeviceIO                       0;	///< Optional element.
/// Element Display of type "http://www.onvif.org/ver10/schema":DisplayCapabilities.
    onvifXsd__DisplayCapabilities*       Display                        0;	///< Optional element.
/// Element Recording of type "http://www.onvif.org/ver10/schema":RecordingCapabilities.
    onvifXsd__RecordingCapabilities*     Recording                      0;	///< Optional element.
/// Element Search of type "http://www.onvif.org/ver10/schema":SearchCapabilities.
    onvifXsd__SearchCapabilities*        Search                         0;	///< Optional element.
/// Element Replay of type "http://www.onvif.org/ver10/schema":ReplayCapabilities.
    onvifXsd__ReplayCapabilities*        Replay                         0;	///< Optional element.
/// Element Receiver of type "http://www.onvif.org/ver10/schema":ReceiverCapabilities.
    onvifXsd__ReceiverCapabilities*      Receiver                       0;	///< Optional element.
/// Element AnalyticsDevice of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities.
    onvifXsd__AnalyticsDeviceCapabilities*  AnalyticsDevice                0;	///< Optional element.
/// Element Extensions of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension2.
    onvifXsd__CapabilitiesExtension2*    Extensions                     0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":CapabilitiesExtension2 is a complexType.
class onvifXsd__CapabilitiesExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is a complexType.
class onvifXsd__AnalyticsCapabilities : public xsd__anyType
{ public:
/// @brief Analytics service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indicates whether or not rules are supported.
/// Element RuleSupport of type xs:boolean.
    bool                                 RuleSupport                    1;	///< Required element.
/// @brief Indicates whether or not modules are supported.
/// Element AnalyticsModuleSupport of type xs:boolean.
    bool                                 AnalyticsModuleSupport         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
class onvifXsd__DeviceCapabilities : public xsd__anyType
{ public:
/// @brief Device service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Network capabilities.
/// Element Network of type "http://www.onvif.org/ver10/schema":NetworkCapabilities.
    onvifXsd__NetworkCapabilities*       Network                        0;	///< Optional element.
/// @brief System capabilities.
/// Element System of type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    onvifXsd__SystemCapabilities*        System                         0;	///< Optional element.
/// @brief I/O capabilities.
/// Element IO of type "http://www.onvif.org/ver10/schema":IOCapabilities.
    onvifXsd__IOCapabilities*            IO                             0;	///< Optional element.
/// @brief Security capabilities.
/// Element Security of type "http://www.onvif.org/ver10/schema":SecurityCapabilities.
    onvifXsd__SecurityCapabilities*      Security                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension.
    onvifXsd__DeviceCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is a complexType.
class onvifXsd__DeviceCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
class onvifXsd__EventCapabilities : public xsd__anyType
{ public:
/// @brief Event service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indicates whether or not WS Subscription policy is supported.
/// Element WSSubscriptionPolicySupport of type xs:boolean.
    bool                                 WSSubscriptionPolicySupport    1;	///< Required element.
/// @brief Indicates whether or not WS Pull Point is supported.
/// Element WSPullPointSupport of type xs:boolean.
    bool                                 WSPullPointSupport             1;	///< Required element.
/// @brief Indicates whether or not WS Pausable Subscription Manager Interface is supported.
/// Element WSPausableSubscriptionManagerInterfaceSupport of type xs:boolean.
    bool                                 WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IOCapabilities is a complexType.
class onvifXsd__IOCapabilities : public xsd__anyType
{ public:
/// @brief Number of input connectors.
/// Element InputConnectors of type xs:int.
    int*                                 InputConnectors                0;	///< Optional element.
/// @brief Number of relay outputs.
/// Element RelayOutputs of type xs:int.
    int*                                 RelayOutputs                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension.
    onvifXsd__IOCapabilitiesExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is a complexType.
class onvifXsd__IOCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Auxiliary of type xs:boolean.
    bool*                                Auxiliary                      0;	///< Optional element.
/// Vector of onvifXsd__AuxiliaryData with length 0..unbounded
    std::vector<onvifXsd__AuxiliaryData> AuxiliaryCommands              0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2.
    onvifXsd__IOCapabilitiesExtension2*  Extension                      1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2 is a complexType.
class onvifXsd__IOCapabilitiesExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
class onvifXsd__MediaCapabilities : public xsd__anyType
{ public:
/// @brief Media service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Streaming capabilities.
/// Element StreamingCapabilities of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    onvifXsd__RealTimeStreamingCapabilities*  StreamingCapabilities          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    onvifXsd__MediaCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
class onvifXsd__MediaCapabilitiesExtension : public xsd__anyType
{ public:
/// Element ProfileCapabilities of type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    onvifXsd__ProfileCapabilities*       ProfileCapabilities            1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
class onvifXsd__RealTimeStreamingCapabilities : public xsd__anyType
{ public:
/// @brief Indicates whether or not RTP multicast is supported.
/// Element RTPMulticast of type xs:boolean.
    bool*                                RTPMulticast                   0;	///< Optional element.
/// @brief Indicates whether or not RTP over TCP is supported.
/// Element RTP_TCP of type xs:boolean.
    bool*                                RTP_USCORETCP                  0;	///< Optional element.
/// @brief Indicates whether or not RTP/RTSP/TCP is supported.
/// Element RTP_RTSP_TCP of type xs:boolean.
    bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension.
    onvifXsd__RealTimeStreamingCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is a complexType.
class onvifXsd__RealTimeStreamingCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
class onvifXsd__ProfileCapabilities : public xsd__anyType
{ public:
/// @brief Maximum number of profiles.
/// Element MaximumNumberOfProfiles of type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkCapabilities is a complexType.
class onvifXsd__NetworkCapabilities : public xsd__anyType
{ public:
/// @brief Indicates whether or not IP filtering is supported.
/// Element IPFilter of type xs:boolean.
    bool*                                IPFilter                       0;	///< Optional element.
/// @brief Indicates whether or not zeroconf is supported.
/// Element ZeroConfiguration of type xs:boolean.
    bool*                                ZeroConfiguration              0;	///< Optional element.
/// @brief Indicates whether or not IPv6 is supported.
/// Element IPVersion6 of type xs:boolean.
    bool*                                IPVersion6                     0;	///< Optional element.
/// @brief Indicates whether or not is supported.
/// Element DynDNS of type xs:boolean.
    bool*                                DynDNS                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension.
    onvifXsd__NetworkCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is a complexType.
class onvifXsd__NetworkCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Dot11Configuration of type xs:boolean.
    bool*                                Dot11Configuration             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2.
    onvifXsd__NetworkCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2 is a complexType.
class onvifXsd__NetworkCapabilitiesExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SecurityCapabilities is a complexType.
class onvifXsd__SecurityCapabilities : public xsd__anyType
{ public:
/// @brief Indicates whether or not TLS 1.1 is supported.
/// Element TLS1.1 of type xs:boolean.
    bool                                 TLS1_x002e1                    1;	///< Required element.
/// @brief Indicates whether or not TLS 1.2 is supported.
/// Element TLS1.2 of type xs:boolean.
    bool                                 TLS1_x002e2                    1;	///< Required element.
/// @brief Indicates whether or not onboard key generation is supported.
/// Element OnboardKeyGeneration of type xs:boolean.
    bool                                 OnboardKeyGeneration           1;	///< Required element.
/// @brief Indicates whether or not access policy configuration is supported.
/// Element AccessPolicyConfig of type xs:boolean.
    bool                                 AccessPolicyConfig             1;	///< Required element.
/// @brief Indicates whether or not WS-Security X.509 token is supported.
/// Element X.509Token of type xs:boolean.
    bool                                 X_x002e509Token                1;	///< Required element.
/// @brief Indicates whether or not WS-Security SAML token is supported.
/// Element SAMLToken of type xs:boolean.
    bool                                 SAMLToken                      1;	///< Required element.
/// @brief Indicates whether or not WS-Security Kerberos token is supported.
/// Element KerberosToken of type xs:boolean.
    bool                                 KerberosToken                  1;	///< Required element.
/// @brief Indicates whether or not WS-Security REL token is supported.
/// Element RELToken of type xs:boolean.
    bool                                 RELToken                       1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension.
    onvifXsd__SecurityCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is a complexType.
class onvifXsd__SecurityCapabilitiesExtension : public xsd__anyType
{ public:
/// Element TLS1.0 of type xs:boolean.
    bool                                 TLS1_x002e0                    1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2.
    onvifXsd__SecurityCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2 is a complexType.
class onvifXsd__SecurityCapabilitiesExtension2 : public xsd__anyType
{ public:
/// Element Dot1X of type xs:boolean.
    bool                                 Dot1X                          1;	///< Required element.
/// @brief EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// Vector of int with length 0..unbounded
    std::vector<int                    > SupportedEAPMethod             0;
/// Element RemoteUserHandling of type xs:boolean.
    bool                                 RemoteUserHandling             1;	///< Required element.
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
class onvifXsd__SystemCapabilities : public xsd__anyType
{ public:
/// @brief Indicates whether or not WS Discovery resolve requests are supported.
/// Element DiscoveryResolve of type xs:boolean.
    bool                                 DiscoveryResolve               1;	///< Required element.
/// @brief Indicates whether or not WS-Discovery Bye is supported.
/// Element DiscoveryBye of type xs:boolean.
    bool                                 DiscoveryBye                   1;	///< Required element.
/// @brief Indicates whether or not remote discovery, see WS-Discovery, is supported.
/// Element RemoteDiscovery of type xs:boolean.
    bool                                 RemoteDiscovery                1;	///< Required element.
/// @brief Indicates whether or not system backup is supported.
/// Element SystemBackup of type xs:boolean.
    bool                                 SystemBackup                   1;	///< Required element.
/// @brief Indicates whether or not system logging is supported.
/// Element SystemLogging of type xs:boolean.
    bool                                 SystemLogging                  1;	///< Required element.
/// @brief Indicates whether or not firmware upgrade is supported.
/// Element FirmwareUpgrade of type xs:boolean.
    bool                                 FirmwareUpgrade                1;	///< Required element.
/// @brief Indicates supported ONVIF version(s).
/// Vector of onvifXsd__OnvifVersion* with length 1..unbounded
    std::vector<onvifXsd__OnvifVersion*> SupportedVersions              1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension.
    onvifXsd__SystemCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is a complexType.
class onvifXsd__SystemCapabilitiesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element HttpFirmwareUpgrade of type xs:boolean.
    bool*                                HttpFirmwareUpgrade            0;	///< Optional element.
/// Element HttpSystemBackup of type xs:boolean.
    bool*                                HttpSystemBackup               0;	///< Optional element.
/// Element HttpSystemLogging of type xs:boolean.
    bool*                                HttpSystemLogging              0;	///< Optional element.
/// Element HttpSupportInformation of type xs:boolean.
    bool*                                HttpSupportInformation         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2.
    onvifXsd__SystemCapabilitiesExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2 is a complexType.
class onvifXsd__SystemCapabilitiesExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
class onvifXsd__OnvifVersion : public xsd__anyType
{ public:
/// @brief Major version number.
/// Element Major of type xs:int.
    int                                  Major                          1;	///< Required element.
/// @brief Two digit minor version number (e.g. 1 maps to "01" and 20 maps to "20").
/// Element Minor of type xs:int.
    int                                  Minor                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ImagingCapabilities is a complexType.
class onvifXsd__ImagingCapabilities : public xsd__anyType
{ public:
/// @brief Imaging service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
class onvifXsd__PTZCapabilities : public xsd__anyType
{ public:
/// @brief PTZ service URI.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DeviceIOCapabilities is a complexType.
class onvifXsd__DeviceIOCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element VideoSources of type xs:int.
    int                                  VideoSources                   1;	///< Required element.
/// Element VideoOutputs of type xs:int.
    int                                  VideoOutputs                   1;	///< Required element.
/// Element AudioSources of type xs:int.
    int                                  AudioSources                   1;	///< Required element.
/// Element AudioOutputs of type xs:int.
    int                                  AudioOutputs                   1;	///< Required element.
/// Element RelayOutputs of type xs:int.
    int                                  RelayOutputs                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DisplayCapabilities is a complexType.
class onvifXsd__DisplayCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indication that the SetLayout command supports only predefined layouts.
/// Element FixedLayout of type xs:boolean.
    bool                                 FixedLayout                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingCapabilities is a complexType.
class onvifXsd__RecordingCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element ReceiverSource of type xs:boolean.
    bool                                 ReceiverSource                 1;	///< Required element.
/// Element MediaProfileSource of type xs:boolean.
    bool                                 MediaProfileSource             1;	///< Required element.
/// Element DynamicRecordings of type xs:boolean.
    bool                                 DynamicRecordings              1;	///< Required element.
/// Element DynamicTracks of type xs:boolean.
    bool                                 DynamicTracks                  1;	///< Required element.
/// Element MaxStringLength of type xs:int.
    int                                  MaxStringLength                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SearchCapabilities is a complexType.
class onvifXsd__SearchCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element MetadataSearch of type xs:boolean.
    bool                                 MetadataSearch                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ReplayCapabilities is a complexType.
class onvifXsd__ReplayCapabilities : public xsd__anyType
{ public:
/// @brief The address of the replay service.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ReceiverCapabilities is a complexType.
class onvifXsd__ReceiverCapabilities : public xsd__anyType
{ public:
/// @brief The address of the receiver service.
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Indicates whether the device can receive RTP multicast streams.
/// Element RTP_Multicast of type xs:boolean.
    bool                                 RTP_USCOREMulticast            1;	///< Required element.
/// @brief Indicates whether the device can receive RTP/TCP streams
/// Element RTP_TCP of type xs:boolean.
    bool                                 RTP_USCORETCP                  1;	///< Required element.
/// @brief Indicates whether the device can receive RTP/RTSP/TCP streams.
/// Element RTP_RTSP_TCP of type xs:boolean.
    bool                                 RTP_USCORERTSP_USCORETCP       1;	///< Required element.
/// @brief The maximum number of receivers supported by the device.
/// Element SupportedReceivers of type xs:int.
    int                                  SupportedReceivers             1;	///< Required element.
/// @brief The maximum allowed length for RTSP URIs.
/// Element MaximumRTSPURILength of type xs:int.
    int                                  MaximumRTSPURILength           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities is a complexType.
class onvifXsd__AnalyticsDeviceCapabilities : public xsd__anyType
{ public:
/// Element XAddr of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @brief Obsolete property.
/// Element RuleSupport of type xs:boolean.
    bool*                                RuleSupport                    0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension.
    onvifXsd__AnalyticsDeviceExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension is a complexType.
class onvifXsd__AnalyticsDeviceExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SystemLog is a complexType.
class onvifXsd__SystemLog : public xsd__anyType
{ public:
/// @brief The log information as attachment data.
/// Element Binary of type "http://www.onvif.org/ver10/schema":AttachmentData.
    onvifXsd__AttachmentData*            Binary                         0;	///< Optional element.
/// @brief The log information as character data.
/// Element String of type xs:string.
    std::string*                         String                         0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":SupportInformation is a complexType.
class onvifXsd__SupportInformation : public xsd__anyType
{ public:
/// @brief The support information as attachment data.
/// Element Binary of type "http://www.onvif.org/ver10/schema":AttachmentData.
    onvifXsd__AttachmentData*            Binary                         0;	///< Optional element.
/// @brief The support information as character data.
/// Element String of type xs:string.
    std::string*                         String                         0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":BinaryData is a complexType.
class onvifXsd__BinaryData : public xsd__anyType
{ public:
/// @brief base64 encoded binary data.
/// Element Data of type xs:base64Binary.
    xsd__base64Binary                    Data                           1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @_xmime__contentType*                 xmime__contentType             0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":AttachmentData is a complexType.
class onvifXsd__AttachmentData : public xsd__anyType
{ public:
/// Element reference "http://www.w3.org/2004/08/xop/include":Include.
    ns5__Include*                        ns5__Include_                  1;	///< Required element.
/// Imported attribute reference xmime:contentType.
   @_xmime__contentType*                 xmime__contentType             0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":BackupFile is a complexType.
class onvifXsd__BackupFile : public xsd__anyType
{ public:
/// Element Name of type xs:string.
    std::string                          Name                           1;	///< Required element.
/// Element Data of type "http://www.onvif.org/ver10/schema":AttachmentData.
    onvifXsd__AttachmentData*            Data                           1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":SystemLogUriList is a complexType.
class onvifXsd__SystemLogUriList : public xsd__anyType
{ public:
/// Vector of onvifXsd__SystemLogUri* with length 0..unbounded
    std::vector<onvifXsd__SystemLogUri*> SystemLog                      0;
};

/// "http://www.onvif.org/ver10/schema":SystemLogUri is a complexType.
class onvifXsd__SystemLogUri : public xsd__anyType
{ public:
/// Element Type of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum onvifXsd__SystemLogType         Type                           1;	///< Required element.
/// Element Uri of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SystemDateTime is a complexType.
/// @brief General date time inforamtion returned by the GetSystemDateTime method.
class onvifXsd__SystemDateTime : public xsd__anyType
{ public:
/// @brief Indicates if the time is set manully or through NTP.
/// Element DateTimeType of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum onvifXsd__SetDateTimeType       DateTimeType                   1;	///< Required element.
/// @brief Informative indicator whether daylight savings is currently on/off.
/// Element DaylightSavings of type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// @brief Timezone information in Posix format.
/// Element TimeZone of type "http://www.onvif.org/ver10/schema":TimeZone.
    onvifXsd__TimeZone*                  TimeZone                       0;	///< Optional element.
/// @brief Current system date and time in UTC format. This field is mandatory since version 2.0.
/// Element UTCDateTime of type "http://www.onvif.org/ver10/schema":DateTime.
    onvifXsd__DateTime*                  UTCDateTime                    0;	///< Optional element.
/// @brief Date and time in local format.
/// Element LocalDateTime of type "http://www.onvif.org/ver10/schema":DateTime.
    onvifXsd__DateTime*                  LocalDateTime                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":SystemDateTimeExtension.
    onvifXsd__SystemDateTimeExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is a complexType.
class onvifXsd__SystemDateTimeExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":DateTime is a complexType.
class onvifXsd__DateTime : public xsd__anyType
{ public:
/// Element Time of type "http://www.onvif.org/ver10/schema":Time.
    onvifXsd__Time*                      Time                           1;	///< Required element.
/// Element Date of type "http://www.onvif.org/ver10/schema":Date.
    onvifXsd__Date*                      Date                           1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Date is a complexType.
class onvifXsd__Date : public xsd__anyType
{ public:
/// Element Year of type xs:int.
    int                                  Year                           1;	///< Required element.
/// @brief Range is 1 to 12.
/// Element Month of type xs:int.
    int                                  Month                          1;	///< Required element.
/// @brief Range is 1 to 31.
/// Element Day of type xs:int.
    int                                  Day                            1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Time is a complexType.
class onvifXsd__Time : public xsd__anyType
{ public:
/// @brief Range is 0 to 23.
/// Element Hour of type xs:int.
    int                                  Hour                           1;	///< Required element.
/// @brief Range is 0 to 59.
/// Element Minute of type xs:int.
    int                                  Minute                         1;	///< Required element.
/// @brief Range is 0 to 61 (typically 59).
/// Element Second of type xs:int.
    int                                  Second                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":TimeZone is a complexType.
/// @brief The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3<br/> Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3<br/> CET = designation for standard time when daylight saving is not in force<br/> -1 = offset in hours = negative so 1 hour east of Greenwich meridian<br/> CEST = designation when daylight saving is in force ("Central European Summer Time")<br/> , = no offset number between code and comma, so default to one hour ahead for daylight saving<br/> M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)<br/> /2, = the local time when the switch occurs = 2 a.m. in this case<br/> M10.5.0 = when daylight saving ends = the last Sunday in October.<br/> /3, = the local time when the switch occurs = 3 a.m. in this case<br/>
class onvifXsd__TimeZone : public xsd__anyType
{ public:
/// @brief Posix timezone string.
/// Element TZ of type xs:token.
    xsd__token                           TZ                             1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":RemoteUser is a complexType.
class onvifXsd__RemoteUser : public xsd__anyType
{ public:
/// Element Username of type xs:string.
    std::string                          Username                       1;	///< Required element.
/// Element Password of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// Element UseDerivedPassword of type xs:boolean.
    bool                                 UseDerivedPassword             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":User is a complexType.
class onvifXsd__User : public xsd__anyType
{ public:
/// @brief Username string.
/// Element Username of type xs:string.
    std::string                          Username                       1;	///< Required element.
/// @brief Password string.
/// Element Password of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// @brief User level string.
/// Element UserLevel of type "http://www.onvif.org/ver10/schema":UserLevel.
    enum onvifXsd__UserLevel             UserLevel                      1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":UserExtension.
    onvifXsd__UserExtension*             Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":UserExtension is a complexType.
class onvifXsd__UserExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is a complexType.
class onvifXsd__CertificateGenerationParameters : public xsd__anyType
{ public:
/// Element CertificateID of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// Element Subject of type xs:string.
    std::string*                         Subject                        0;	///< Optional element.
/// Element ValidNotBefore of type xs:token.
    xsd__token*                          ValidNotBefore                 0;	///< Optional element.
/// Element ValidNotAfter of type xs:token.
    xsd__token*                          ValidNotAfter                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension.
    onvifXsd__CertificateGenerationParametersExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is a complexType.
class onvifXsd__CertificateGenerationParametersExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Certificate is a complexType.
class onvifXsd__Certificate : public xsd__anyType
{ public:
/// @brief Certificate id.
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// @brief base64 encoded DER representation of certificate.
/// Element Certificate of type "http://www.onvif.org/ver10/schema":BinaryData.
    onvifXsd__BinaryData*                Certificate                    1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":CertificateStatus is a complexType.
class onvifXsd__CertificateStatus : public xsd__anyType
{ public:
/// @brief Certificate id.
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// @brief Indicates whether or not a certificate is used in a HTTPS configuration.
/// Element Status of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CertificateWithPrivateKey is a complexType.
class onvifXsd__CertificateWithPrivateKey : public xsd__anyType
{ public:
/// Element CertificateID of type xs:token.
    xsd__token*                          CertificateID                  0;	///< Optional element.
/// Element Certificate of type "http://www.onvif.org/ver10/schema":BinaryData.
    onvifXsd__BinaryData*                Certificate                    1;	///< Required element.
/// Element PrivateKey of type "http://www.onvif.org/ver10/schema":BinaryData.
    onvifXsd__BinaryData*                PrivateKey                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CertificateInformation is a complexType.
class onvifXsd__CertificateInformation : public xsd__anyType
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element IssuerDN of type xs:string.
    std::string*                         IssuerDN                       0;	///< Optional element.
/// Element SubjectDN of type xs:string.
    std::string*                         SubjectDN                      0;	///< Optional element.
/// Element KeyUsage of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    onvifXsd__CertificateUsage*          KeyUsage                       0;	///< Optional element.
/// Element ExtendedKeyUsage of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    onvifXsd__CertificateUsage*          ExtendedKeyUsage               0;	///< Optional element.
/// Element KeyLength of type xs:int.
    int*                                 KeyLength                      0;	///< Optional element.
/// Element Version of type xs:string.
    std::string*                         Version                        0;	///< Optional element.
/// Element SerialNum of type xs:string.
    std::string*                         SerialNum                      0;	///< Optional element.
/// @brief Validity Range is from "NotBefore" to "NotAfter"; the corresponding DateTimeRange is from "From" to "Until"
/// Element SignatureAlgorithm of type xs:string.
    std::string*                         SignatureAlgorithm             0;	///< Optional element.
/// Element Validity of type "http://www.onvif.org/ver10/schema":DateTimeRange.
    onvifXsd__DateTimeRange*             Validity                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":CertificateInformationExtension.
    onvifXsd__CertificateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CertificateInformationExtension is a complexType.
class onvifXsd__CertificateInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Dot1XConfiguration is a complexType.
class onvifXsd__Dot1XConfiguration : public xsd__anyType
{ public:
/// Element Dot1XConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             Dot1XConfigurationToken        1;	///< Required element.
/// Element Identity of type xs:string.
    std::string                          Identity                       1;	///< Required element.
/// Element AnonymousID of type xs:string.
    std::string*                         AnonymousID                    0;	///< Optional element.
/// @brief EAP Method type as defined in <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// Element EAPMethod of type xs:int.
    int                                  EAPMethod                      1;	///< Required element.
/// Vector of xsd__token with length 0..unbounded
    std::vector<xsd__token             > CACertificateID                0;
/// Element EAPMethodConfiguration of type "http://www.onvif.org/ver10/schema":EAPMethodConfiguration.
    onvifXsd__EAPMethodConfiguration*    EAPMethodConfiguration         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension.
    onvifXsd__Dot1XConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension is a complexType.
class onvifXsd__Dot1XConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":EAPMethodConfiguration is a complexType.
class onvifXsd__EAPMethodConfiguration : public xsd__anyType
{ public:
/// @brief Confgiuration information for TLS Method.
/// Element TLSConfiguration of type "http://www.onvif.org/ver10/schema":TLSConfiguration.
    onvifXsd__TLSConfiguration*          TLSConfiguration               0;	///< Optional element.
/// @brief Password for those EAP Methods that require a password. The password shall never be returned on a get method.
/// Element Password of type xs:string.
    std::string*                         Password                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":EapMethodExtension.
    onvifXsd__EapMethodExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":EapMethodExtension is a complexType.
class onvifXsd__EapMethodExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":TLSConfiguration is a complexType.
class onvifXsd__TLSConfiguration : public xsd__anyType
{ public:
/// Element CertificateID of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":GenericEapPwdConfigurationExtension is a complexType.
class onvifXsd__GenericEapPwdConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":RelayOutputSettings is a complexType.
class onvifXsd__RelayOutputSettings : public xsd__anyType
{ public:
/// @brief 'Bistable' or 'Monostable' <ul> <li>Bistable After setting the state, the relay remains in this state.</li> <li>Monostable After setting the state, the relay returns to its idle state after the specified time.</li> </ul>
/// Element Mode of type "http://www.onvif.org/ver10/schema":RelayMode.
    enum onvifXsd__RelayMode             Mode                           1;	///< Required element.
/// @brief Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.
/// Element DelayTime of type xs:duration.
    xsd__duration                        DelayTime                      1;	///< Required element.
/// @brief 'open' or 'closed' <ul> <li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li> <li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li> </ul>
/// Element IdleState of type "http://www.onvif.org/ver10/schema":RelayIdleState.
    enum onvifXsd__RelayIdleState        IdleState                      1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":PTZNodeExtension is a complexType.
class onvifXsd__PTZNodeExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Detail of supported Preset Tour feature.
/// Element SupportedPresetTour of type "http://www.onvif.org/ver10/schema":PTZPresetTourSupported.
    onvifXsd__PTZPresetTourSupported*    SupportedPresetTour            1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZNodeExtension2.
    onvifXsd__PTZNodeExtension2*         Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":PTZNodeExtension2 is a complexType.
class onvifXsd__PTZNodeExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSupported is a complexType.
class onvifXsd__PTZPresetTourSupported : public xsd__anyType
{ public:
/// @brief Indicates number of preset tours that can be created. Required preset tour operations shall be available for this PTZ Node if one or more preset tour is supported.
/// Element MaximumNumberOfPresetTours of type xs:int.
    int                                  MaximumNumberOfPresetTours     1;	///< Required element.
/// @brief Indicates which preset tour operations are available for this PTZ Node.
/// Vector of enum onvifXsd__PTZPresetTourOperation with length 0..unbounded
    std::vector<enum onvifXsd__PTZPresetTourOperation> PTZPresetTourOperation         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension.
    onvifXsd__PTZPresetTourSupportedExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension is a complexType.
class onvifXsd__PTZPresetTourSupportedExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is a complexType.
class onvifXsd__PTZConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Optional element to configure PT Control Direction related features.
/// Element PTControlDirection of type "http://www.onvif.org/ver10/schema":PTControlDirection.
    onvifXsd__PTControlDirection*        PTControlDirection             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2.
    onvifXsd__PTZConfigurationExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2 is a complexType.
class onvifXsd__PTZConfigurationExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTControlDirection is a complexType.
class onvifXsd__PTControlDirection : public xsd__anyType
{ public:
/// @brief Optional element to configure related parameters for E-Flip.
/// Element EFlip of type "http://www.onvif.org/ver10/schema":EFlip.
    onvifXsd__EFlip*                     EFlip                          0;	///< Optional element.
/// @brief Optional element to configure related parameters for reversing of PT Control Direction.
/// Element Reverse of type "http://www.onvif.org/ver10/schema":Reverse.
    onvifXsd__Reverse*                   Reverse                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTControlDirectionExtension.
    onvifXsd__PTControlDirectionExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTControlDirectionExtension is a complexType.
class onvifXsd__PTControlDirectionExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":EFlip is a complexType.
class onvifXsd__EFlip : public xsd__anyType
{ public:
/// @brief Parameter to enable/disable E-Flip feature.
/// Element Mode of type "http://www.onvif.org/ver10/schema":EFlipMode.
    enum onvifXsd__EFlipMode             Mode                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Reverse is a complexType.
class onvifXsd__Reverse : public xsd__anyType
{ public:
/// @brief Parameter to enable/disable Reverse feature.
/// Element Mode of type "http://www.onvif.org/ver10/schema":ReverseMode.
    enum onvifXsd__ReverseMode           Mode                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is a complexType.
class onvifXsd__PTZConfigurationOptions : public xsd__anyType
{ public:
/// @brief A list of supported coordinate systems including their range limitations.
/// Element Spaces of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    onvifXsd__PTZSpaces*                 Spaces                         1;	///< Required element.
/// @brief A timeout Range within which Timeouts are accepted by the PTZ Node.
/// Element PTZTimeout of type "http://www.onvif.org/ver10/schema":DurationRange.
    onvifXsd__DurationRange*             PTZTimeout                     1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Supported options for PT Direction Control.
/// Element PTControlDirection of type "http://www.onvif.org/ver10/schema":PTControlDirectionOptions.
    onvifXsd__PTControlDirectionOptions*  PTControlDirection             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2.
    onvifXsd__PTZConfigurationOptions2*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2 is a complexType.
class onvifXsd__PTZConfigurationOptions2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTControlDirectionOptions is a complexType.
class onvifXsd__PTControlDirectionOptions : public xsd__anyType
{ public:
/// @brief Supported options for EFlip feature.
/// Element EFlip of type "http://www.onvif.org/ver10/schema":EFlipOptions.
    onvifXsd__EFlipOptions*              EFlip                          0;	///< Optional element.
/// @brief Supported options for Reverse feature.
/// Element Reverse of type "http://www.onvif.org/ver10/schema":ReverseOptions.
    onvifXsd__ReverseOptions*            Reverse                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension.
    onvifXsd__PTControlDirectionOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension is a complexType.
class onvifXsd__PTControlDirectionOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":EFlipOptions is a complexType.
class onvifXsd__EFlipOptions : public xsd__anyType
{ public:
/// @brief Options of EFlip mode parameter.
/// Vector of enum onvifXsd__EFlipMode with length 0..unbounded
    std::vector<enum onvifXsd__EFlipMode> Mode                           0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":EFlipOptionsExtension.
    onvifXsd__EFlipOptionsExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":EFlipOptionsExtension is a complexType.
class onvifXsd__EFlipOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ReverseOptions is a complexType.
class onvifXsd__ReverseOptions : public xsd__anyType
{ public:
/// @brief Options of Reverse mode parameter.
/// Vector of enum onvifXsd__ReverseMode with length 0..unbounded
    std::vector<enum onvifXsd__ReverseMode> Mode                           0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ReverseOptionsExtension.
    onvifXsd__ReverseOptionsExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ReverseOptionsExtension is a complexType.
class onvifXsd__ReverseOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PanTiltLimits is a complexType.
class onvifXsd__PanTiltLimits : public xsd__anyType
{ public:
/// @brief A range of pan tilt limits.
/// Element Range of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    onvifXsd__Space2DDescription*        Range                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ZoomLimits is a complexType.
class onvifXsd__ZoomLimits : public xsd__anyType
{ public:
/// @brief A range of zoom limit
/// Element Range of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    onvifXsd__Space1DDescription*        Range                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":PTZSpaces is a complexType.
class onvifXsd__PTZSpaces : public xsd__anyType
{ public:
/// @brief The Generic Pan/Tilt Position space is provided by every PTZ node that supports absolute Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the PTZ unit normalized to the range -1 to 1 resulting in the following space description.
/// Vector of onvifXsd__Space2DDescription* with length 0..unbounded
    std::vector<onvifXsd__Space2DDescription*> AbsolutePanTiltPositionSpace   0;
/// @brief The Generic Zoom Position Space is provided by every PTZ node that supports absolute Zoom, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the Zoom normalized to the range 0 (wide) to 1 (tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension.
/// Vector of onvifXsd__Space1DDescription* with length 0..unbounded
    std::vector<onvifXsd__Space1DDescription*> AbsoluteZoomPositionSpace      0;
/// @brief The Generic Pan/Tilt translation space is provided by every PTZ node that supports relative Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full positive and negative translation range of the PTZ unit normalized to the range -1 to 1, where positive translation would mean clockwise rotation or movement in right/up direction resulting in the following space description.
/// Vector of onvifXsd__Space2DDescription* with length 0..unbounded
    std::vector<onvifXsd__Space2DDescription*> RelativePanTiltTranslationSpace 0;
/// @brief The Generic Zoom Translation Space is provided by every PTZ node that supports relative Zoom, since it does not relate to a specific physical range. Instead, the corresponding absolute range should be defined as the full positive and negative translation range of the Zoom normalized to the range -1 to1, where a positive translation maps to a movement in TELE direction. The translation is signed to indicate direction (negative is to wide, positive is to tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension. This results in the following space description.
/// Vector of onvifXsd__Space1DDescription* with length 0..unbounded
    std::vector<onvifXsd__Space1DDescription*> RelativeZoomTranslationSpace   0;
/// @brief The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range. Instead, the range should be defined as a range of the PTZ units speed normalized to the range -1 to 1, where a positive velocity would map to clockwise rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.
/// Vector of onvifXsd__Space2DDescription* with length 0..unbounded
    std::vector<onvifXsd__Space2DDescription*> ContinuousPanTiltVelocitySpace 0;
/// @brief The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1, where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.
/// Vector of onvifXsd__Space1DDescription* with length 0..unbounded
    std::vector<onvifXsd__Space1DDescription*> ContinuousZoomVelocitySpace    0;
/// @brief The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt movement is represented by a single non-negative scalar value.
/// Vector of onvifXsd__Space1DDescription* with length 0..unbounded
    std::vector<onvifXsd__Space1DDescription*> PanTiltSpeedSpace              0;
/// @brief The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information.
/// Vector of onvifXsd__Space1DDescription* with length 0..unbounded
    std::vector<onvifXsd__Space1DDescription*> ZoomSpeedSpace                 0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZSpacesExtension.
    onvifXsd__PTZSpacesExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZSpacesExtension is a complexType.
class onvifXsd__PTZSpacesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Space2DDescription is a complexType.
class onvifXsd__Space2DDescription : public xsd__anyType
{ public:
/// @brief A URI of coordinate systems.
/// Element URI of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// @brief A range of x-axis.
/// Element XRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                XRange                         1;	///< Required element.
/// @brief A range of y-axis.
/// Element YRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                YRange                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Space1DDescription is a complexType.
class onvifXsd__Space1DDescription : public xsd__anyType
{ public:
/// @brief A URI of coordinate systems.
/// Element URI of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// @brief A range of x-axis.
/// Element XRange of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                XRange                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Vector2D is a complexType.
class onvifXsd__Vector2D : public xsd__anyType
{ public:
/// Attribute x of type xs:float.
   @float                                x                              1;	///< Required attribute.
/// Attribute y of type xs:float.
   @float                                y                              1;	///< Required attribute.
/// @brief Pan/tilt coordinate space selector. The following options are defined:<ul> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li> </ul>
/// Attribute space of type xs:anyURI.
   @xsd__anyURI*                         space                          0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Vector1D is a complexType.
class onvifXsd__Vector1D : public xsd__anyType
{ public:
/// Attribute x of type xs:float.
   @float                                x                              1;	///< Required attribute.
/// @brief Pan/tilt coordinate space selector. The following options are defined:<ul style=""> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li> <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li> </ul>
/// Attribute space of type xs:anyURI.
   @xsd__anyURI*                         space                          0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":PTZVector is a complexType.
class onvifXsd__PTZVector : public xsd__anyType
{ public:
/// @brief Pan and tilt position. The x component corresponds to pan and the y component to tilt.
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":Vector2D.
    onvifXsd__Vector2D*                  PanTilt                        0;	///< Optional element.
/// @brief A zoom position.
/// Element Zoom of type "http://www.onvif.org/ver10/schema":Vector1D.
    onvifXsd__Vector1D*                  Zoom                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":PTZSpeed is a complexType.
class onvifXsd__PTZSpeed : public xsd__anyType
{ public:
/// @brief Pan and tilt speed. The x component corresponds to pan and the y component to tilt.
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":Vector2D.
    onvifXsd__Vector2D*                  PanTilt                        0;	///< Optional element.
/// @brief A zoom speed.
/// Element Zoom of type "http://www.onvif.org/ver10/schema":Vector1D.
    onvifXsd__Vector1D*                  Zoom                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":PTZStatus is a complexType.
class onvifXsd__PTZStatus : public xsd__anyType
{ public:
/// @brief Specifies the absolute position of the PTZ unit together with the Space references. The default absolute spaces of the corresponding PTZ configuration MUST be referenced within the Position element.
/// Element Position of type "http://www.onvif.org/ver10/schema":PTZVector.
    onvifXsd__PTZVector*                 Position                       0;	///< Optional element.
/// @brief Indicates if the Pan/Tilt/Zoom device unit is currently moving, idle or in an unknown state.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":PTZMoveStatus.
    onvifXsd__PTZMoveStatus*             MoveStatus                     0;	///< Optional element.
/// @brief States a current PTZ error.
/// Element Error of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// @brief Specifies the UTC time when this status was generated.
/// Element UtcTime of type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZPreset is a complexType.
class onvifXsd__PTZPreset : public xsd__anyType
{ public:
/// @brief A list of preset position name.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name*                      Name                           0;	///< Optional element.
/// @brief A list of preset position.
/// Element PTZPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    onvifXsd__PTZVector*                 PTZPosition                    0;	///< Optional element.
/// @brief
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken*            token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZMoveStatus is a complexType.
class onvifXsd__PTZMoveStatus : public xsd__anyType
{ public:
/// @brief
/// Element PanTilt of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum onvifXsd__MoveStatus*           PanTilt                        0;	///< Optional element.
/// @brief
/// Element Zoom of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum onvifXsd__MoveStatus*           Zoom                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":PresetTour is a complexType.
class onvifXsd__PresetTour : public xsd__anyType
{ public:
/// @brief Readable name of the preset tour.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name*                      Name                           0;	///< Optional element.
/// @brief Read only parameters to indicate the status of the preset tour.
/// Element Status of type "http://www.onvif.org/ver10/schema":PTZPresetTourStatus.
    onvifXsd__PTZPresetTourStatus*       Status                         1;	///< Required element.
/// @brief Auto Start flag of the preset tour. True allows the preset tour to be activated always.
/// Element AutoStart of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// @brief Parameters to specify the detail behavior of the preset tour.
/// Element StartingCondition of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition.
    onvifXsd__PTZPresetTourStartingCondition*  StartingCondition              1;	///< Required element.
/// @brief A list of detail of touring spots including preset positions.
/// Vector of onvifXsd__PTZPresetTourSpot* with length 0..unbounded
    std::vector<onvifXsd__PTZPresetTourSpot*> TourSpot                       0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourExtension.
    onvifXsd__PTZPresetTourExtension*    Extension                      0;	///< Optional element.
/// @brief Unique identifier of this preset tour.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken*            token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourExtension is a complexType.
class onvifXsd__PTZPresetTourExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSpot is a complexType.
class onvifXsd__PTZPresetTourSpot : public xsd__anyType
{ public:
/// @brief Detail definition of preset position of the tour spot.
/// Element PresetDetail of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail.
    onvifXsd__PTZPresetTourPresetDetail*  PresetDetail                   1;	///< Required element.
/// @brief Optional parameter to specify Pan/Tilt and Zoom speed on moving toward this tour spot.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    onvifXsd__PTZSpeed*                  Speed                          0;	///< Optional element.
/// @brief Optional parameter to specify time duration of staying on this tour sport.
/// Element StayTime of type xs:duration.
    xsd__duration*                       StayTime                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension.
    onvifXsd__PTZPresetTourSpotExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension is a complexType.
class onvifXsd__PTZPresetTourSpotExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail is a complexType.
class onvifXsd__PTZPresetTourPresetDetail : public xsd__anyType
{ public:
/// CHOICE OF ELEMENTS <xs:choice>
   $int                                  __union_PTZPresetTourPresetDetail;	///< Union _onvifXsd__union_PTZPresetTourPresetDetail selector: set to SOAP_UNION__onvifXsd__union_PTZPresetTourPresetDetail_<fieldname>
    union _onvifXsd__union_PTZPresetTourPresetDetail
    {
/// @brief Option to specify the preset position with Preset Token defined in advance.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            PresetToken                    1;	///< Required element.
/// @brief Option to specify the preset position with the home position of this PTZ Node. "False" to this parameter shall be treated as an invalid argument.
/// Element Home of type xs:boolean.
    bool                                 Home                           1;	///< Required element.
/// @brief Option to specify the preset position with vector of PTZ node directly.
/// Element PTZPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    onvifXsd__PTZVector*                 PTZPosition                    1;	///< Required element.
/// Element TypeExtension of type "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension.
    onvifXsd__PTZPresetTourTypeExtension*  TypeExtension                  1;	///< Required element.
    }                                    union_PTZPresetTourPresetDetail;
//  END OF CHOICE
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension is a complexType.
class onvifXsd__PTZPresetTourTypeExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStatus is a complexType.
class onvifXsd__PTZPresetTourStatus : public xsd__anyType
{ public:
/// @brief Indicates state of this preset tour by Idle/Touring/Paused.
/// Element State of type "http://www.onvif.org/ver10/schema":PTZPresetTourState.
    enum onvifXsd__PTZPresetTourState    State                          1;	///< Required element.
/// @brief Indicates a tour spot currently staying.
/// Element CurrentTourSpot of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpot.
    onvifXsd__PTZPresetTourSpot*         CurrentTourSpot                0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension.
    onvifXsd__PTZPresetTourStatusExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension is a complexType.
class onvifXsd__PTZPresetTourStatusExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition is a complexType.
class onvifXsd__PTZPresetTourStartingCondition : public xsd__anyType
{ public:
/// @brief Optional parameter to specify how many times the preset tour is recurred.
/// Element RecurringTime of type xs:int.
    int*                                 RecurringTime                  0;	///< Optional element.
/// @brief Optional parameter to specify how long time duration the preset tour is recurred.
/// Element RecurringDuration of type xs:duration.
    xsd__duration*                       RecurringDuration              0;	///< Optional element.
/// @brief Optional parameter to choose which direction the preset tour goes. Forward shall be chosen in case it is omitted.
/// Element Direction of type "http://www.onvif.org/ver10/schema":PTZPresetTourDirection.
    enum onvifXsd__PTZPresetTourDirection*  Direction                      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension.
    onvifXsd__PTZPresetTourStartingConditionExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension is a complexType.
class onvifXsd__PTZPresetTourStartingConditionExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourOptions is a complexType.
class onvifXsd__PTZPresetTourOptions : public xsd__anyType
{ public:
/// @brief Indicates whether or not the AutoStart is supported.
/// Element AutoStart of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// @brief Supported options for Preset Tour Starting Condition.
/// Element StartingCondition of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions.
    onvifXsd__PTZPresetTourStartingConditionOptions*  StartingCondition              1;	///< Required element.
/// @brief Supported options for Preset Tour Spot.
/// Element TourSpot of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions.
    onvifXsd__PTZPresetTourSpotOptions*  TourSpot                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions is a complexType.
class onvifXsd__PTZPresetTourSpotOptions : public xsd__anyType
{ public:
/// @brief Supported options for detail definition of preset position of the tour spot.
/// Element PresetDetail of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions.
    onvifXsd__PTZPresetTourPresetDetailOptions*  PresetDetail                   1;	///< Required element.
/// @brief Supported range of stay time for a tour spot.
/// Element StayTime of type "http://www.onvif.org/ver10/schema":DurationRange.
    onvifXsd__DurationRange*             StayTime                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions is a complexType.
class onvifXsd__PTZPresetTourPresetDetailOptions : public xsd__anyType
{ public:
/// @brief A list of available Preset Tokens for tour spots.
/// Vector of onvifXsd__ReferenceToken with length 0..unbounded
    std::vector<onvifXsd__ReferenceToken> PresetToken                    0;
/// @brief An option to indicate Home postion for tour spots.
/// Element Home of type xs:boolean.
    bool*                                Home                           0;	///< Optional element.
/// @brief Supported range of Pan and Tilt for tour spots.
/// Element PanTiltPositionSpace of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    onvifXsd__Space2DDescription*        PanTiltPositionSpace           0;	///< Optional element.
/// @brief Supported range of Zoom for a tour spot.
/// Element ZoomPositionSpace of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    onvifXsd__Space1DDescription*        ZoomPositionSpace              0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension.
    onvifXsd__PTZPresetTourPresetDetailOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension is a complexType.
class onvifXsd__PTZPresetTourPresetDetailOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions is a complexType.
class onvifXsd__PTZPresetTourStartingConditionOptions : public xsd__anyType
{ public:
/// @brief Supported range of Recurring Time.
/// Element RecurringTime of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  RecurringTime                  0;	///< Optional element.
/// @brief Supported range of Recurring Duration.
/// Element RecurringDuration of type "http://www.onvif.org/ver10/schema":DurationRange.
    onvifXsd__DurationRange*             RecurringDuration              0;	///< Optional element.
/// @brief Supported options for Direction of Preset Tour.
/// Vector of enum onvifXsd__PTZPresetTourDirection with length 0..unbounded
    std::vector<enum onvifXsd__PTZPresetTourDirection> Direction                      0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension.
    onvifXsd__PTZPresetTourStartingConditionOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension is a complexType.
class onvifXsd__PTZPresetTourStartingConditionOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus is a complexType.
class onvifXsd__ImagingStatus : public xsd__anyType
{ public:
/// Element FocusStatus of type "http://www.onvif.org/ver10/schema":FocusStatus.
    onvifXsd__FocusStatus*               FocusStatus                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FocusStatus is a complexType.
class onvifXsd__FocusStatus : public xsd__anyType
{ public:
/// @brief Status of focus position.
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// @brief Status of focus MoveStatus.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum onvifXsd__MoveStatus            MoveStatus                     1;	///< Required element.
/// @brief Error status of focus.
/// Element Error of type xs:string.
    std::string                          Error                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration is a complexType.
class onvifXsd__FocusConfiguration : public xsd__anyType
{ public:
/// Element AutoFocusMode of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum onvifXsd__AutoFocusMode         AutoFocusMode                  1;	///< Required element.
/// Element DefaultSpeed of type xs:float.
    float                                DefaultSpeed                   1;	///< Required element.
/// @brief Parameter to set autofocus near limit (unit: meter).
/// Element NearLimit of type xs:float.
    float                                NearLimit                      1;	///< Required element.
/// @brief Parameter to set autofocus far limit (unit: meter). If set to 0.0, infinity will be used.
/// Element FarLimit of type xs:float.
    float                                FarLimit                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingSettings is a complexType.
class onvifXsd__ImagingSettings : public xsd__anyType
{ public:
/// @brief Enabled/disabled BLC mode (on/off).
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensation.
    onvifXsd__BacklightCompensation*     BacklightCompensation          0;	///< Optional element.
/// @brief Image brightness (unit unspecified).
/// Element Brightness of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// @brief Color saturation of the image (unit unspecified).
/// Element ColorSaturation of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// @brief Contrast of the image (unit unspecified).
/// Element Contrast of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// @brief Exposure mode of the device.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":Exposure.
    onvifXsd__Exposure*                  Exposure                       0;	///< Optional element.
/// @brief Focus configuration.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusConfiguration.
    onvifXsd__FocusConfiguration*        Focus                          0;	///< Optional element.
/// @brief Infrared Cutoff Filter settings.
/// Element IrCutFilter of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum onvifXsd__IrCutFilterMode*      IrCutFilter                    0;	///< Optional element.
/// @brief Sharpness of the Video image.
/// Element Sharpness of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// @brief WDR settings.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRange.
    onvifXsd__WideDynamicRange*          WideDynamicRange               0;	///< Optional element.
/// @brief White balance settings.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalance.
    onvifXsd__WhiteBalance*              WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension.
    onvifXsd__ImagingSettingsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is a complexType.
class onvifXsd__ImagingSettingsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Exposure is a complexType.
class onvifXsd__Exposure : public xsd__anyType
{ public:
/// @brief Exposure Mode <ul> <li>Auto Enabled the exposure algorithm on the NVT.</li> <li>Manual Disabled exposure algorithm on the NVT.</li> </ul>
/// Element Mode of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum onvifXsd__ExposureMode          Mode                           1;	///< Required element.
/// @brief The exposure priority mode (low noise/framerate).
/// Element Priority of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum onvifXsd__ExposurePriority      Priority                       1;	///< Required element.
/// @brief Rectangular exposure mask.
/// Element Window of type "http://www.onvif.org/ver10/schema":Rectangle.
    onvifXsd__Rectangle*                 Window                         1;	///< Required element.
/// @brief Minimum value of exposure time range allowed to be used by the algorithm.
/// Element MinExposureTime of type xs:float.
    float                                MinExposureTime                1;	///< Required element.
/// @brief Maximum value of exposure time range allowed to be used by the algorithm.
/// Element MaxExposureTime of type xs:float.
    float                                MaxExposureTime                1;	///< Required element.
/// @brief Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MinGain of type xs:float.
    float                                MinGain                        1;	///< Required element.
/// @brief Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MaxGain of type xs:float.
    float                                MaxGain                        1;	///< Required element.
/// @brief Minimum value of the iris range allowed to be used by the algorithm.
/// Element MinIris of type xs:float.
    float                                MinIris                        1;	///< Required element.
/// @brief Maximum value of the iris range allowed to be used by the algorithm.
/// Element MaxIris of type xs:float.
    float                                MaxIris                        1;	///< Required element.
/// @brief The fixed exposure time used by the image sensor (s).
/// Element ExposureTime of type xs:float.
    float                                ExposureTime                   1;	///< Required element.
/// @brief The fixed gain used by the image sensor (dB).
/// Element Gain of type xs:float.
    float                                Gain                           1;	///< Required element.
/// @brief The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// Element Iris of type xs:float.
    float                                Iris                           1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRange is a complexType.
class onvifXsd__WideDynamicRange : public xsd__anyType
{ public:
/// @brief White dynamic range (on/off)
/// Element Mode of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum onvifXsd__WideDynamicMode       Mode                           1;	///< Required element.
/// @brief Optional level parameter (unitless)
/// Element Level of type xs:float.
    float                                Level                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensation is a complexType.
class onvifXsd__BacklightCompensation : public xsd__anyType
{ public:
/// @brief Backlight compensation mode (on/off).
/// Element Mode of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum onvifXsd__BacklightCompensationMode  Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified).
/// Element Level of type xs:float.
    float                                Level                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions is a complexType.
class onvifXsd__ImagingOptions : public xsd__anyType
{ public:
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions.
    onvifXsd__BacklightCompensationOptions*  BacklightCompensation          1;	///< Required element.
/// Element Brightness of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Brightness                     1;	///< Required element.
/// Element ColorSaturation of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                ColorSaturation                1;	///< Required element.
/// Element Contrast of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Contrast                       1;	///< Required element.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":ExposureOptions.
    onvifXsd__ExposureOptions*           Exposure                       1;	///< Required element.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusOptions.
    onvifXsd__FocusOptions*              Focus                          1;	///< Required element.
/// Vector of enum onvifXsd__IrCutFilterMode with length 1..unbounded
    std::vector<enum onvifXsd__IrCutFilterMode> IrCutFilterModes               1;
/// Element Sharpness of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Sharpness                      1;	///< Required element.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions.
    onvifXsd__WideDynamicRangeOptions*   WideDynamicRange               1;	///< Required element.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions.
    onvifXsd__WhiteBalanceOptions*       WhiteBalance                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is a complexType.
class onvifXsd__WideDynamicRangeOptions : public xsd__anyType
{ public:
/// Vector of enum onvifXsd__WideDynamicMode with length 1..unbounded
    std::vector<enum onvifXsd__WideDynamicMode> Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Level                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is a complexType.
class onvifXsd__BacklightCompensationOptions : public xsd__anyType
{ public:
/// Vector of enum onvifXsd__WideDynamicMode with length 1..unbounded
    std::vector<enum onvifXsd__WideDynamicMode> Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Level                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":FocusOptions is a complexType.
class onvifXsd__FocusOptions : public xsd__anyType
{ public:
/// Vector of enum onvifXsd__AutoFocusMode with length 0..unbounded
    std::vector<enum onvifXsd__AutoFocusMode> AutoFocusModes                 0;
/// Element DefaultSpeed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                DefaultSpeed                   1;	///< Required element.
/// Element NearLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                NearLimit                      1;	///< Required element.
/// Element FarLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                FarLimit                       1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ExposureOptions is a complexType.
class onvifXsd__ExposureOptions : public xsd__anyType
{ public:
/// Vector of enum onvifXsd__ExposureMode with length 1..unbounded
    std::vector<enum onvifXsd__ExposureMode> Mode                           1;
/// Vector of enum onvifXsd__ExposurePriority with length 1..unbounded
    std::vector<enum onvifXsd__ExposurePriority> Priority                       1;
/// Element MinExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                MinExposureTime                1;	///< Required element.
/// Element MaxExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                MaxExposureTime                1;	///< Required element.
/// Element MinGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                MinGain                        1;	///< Required element.
/// Element MaxGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                MaxGain                        1;	///< Required element.
/// Element MinIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                MinIris                        1;	///< Required element.
/// Element MaxIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                MaxIris                        1;	///< Required element.
/// Element ExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                ExposureTime                   1;	///< Required element.
/// Element Gain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Gain                           1;	///< Required element.
/// Element Iris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Iris                           1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is a complexType.
class onvifXsd__WhiteBalanceOptions : public xsd__anyType
{ public:
/// Vector of enum onvifXsd__WhiteBalanceMode with length 1..unbounded
    std::vector<enum onvifXsd__WhiteBalanceMode> Mode                           1;
/// Element YrGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                YrGain                         1;	///< Required element.
/// Element YbGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                YbGain                         1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":FocusMove is a complexType.
class onvifXsd__FocusMove : public xsd__anyType
{ public:
/// @brief Parameters for the absolute focus control.
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocus.
    onvifXsd__AbsoluteFocus*             Absolute                       0;	///< Optional element.
/// @brief Parameters for the relative focus control.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocus.
    onvifXsd__RelativeFocus*             Relative                       0;	///< Optional element.
/// @brief Parameter for the continuous focus control.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocus.
    onvifXsd__ContinuousFocus*           Continuous                     0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":AbsoluteFocus is a complexType.
class onvifXsd__AbsoluteFocus : public xsd__anyType
{ public:
/// @brief Position parameter for the absolute focus control.
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// @brief Speed parameter for the absolute focus control.
/// Element Speed of type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":RelativeFocus is a complexType.
class onvifXsd__RelativeFocus : public xsd__anyType
{ public:
/// @brief Distance parameter for the relative focus control.
/// Element Distance of type xs:float.
    float                                Distance                       1;	///< Required element.
/// @brief Speed parameter for the relative focus control.
/// Element Speed of type xs:float.
    float*                               Speed                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ContinuousFocus is a complexType.
class onvifXsd__ContinuousFocus : public xsd__anyType
{ public:
/// @brief Speed parameter for the Continuous focus control.
/// Element Speed of type xs:float.
    float                                Speed                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":MoveOptions is a complexType.
class onvifXsd__MoveOptions : public xsd__anyType
{ public:
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    onvifXsd__AbsoluteFocusOptions*      Absolute                       0;	///< Optional element.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocusOptions.
    onvifXsd__RelativeFocusOptions*      Relative                       0;	///< Optional element.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    onvifXsd__ContinuousFocusOptions*    Continuous                     0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is a complexType.
class onvifXsd__AbsoluteFocusOptions : public xsd__anyType
{ public:
/// @brief Valid ranges of the position.
/// Element Position of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Position                       1;	///< Required element.
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Speed                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":RelativeFocusOptions is a complexType.
class onvifXsd__RelativeFocusOptions : public xsd__anyType
{ public:
/// @brief Valid ranges of the distance.
/// Element Distance of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Distance                       1;	///< Required element.
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Speed                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is a complexType.
class onvifXsd__ContinuousFocusOptions : public xsd__anyType
{ public:
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Speed                          1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance is a complexType.
class onvifXsd__WhiteBalance : public xsd__anyType
{ public:
/// @brief Auto whitebalancing mode (auto/manual).
/// Element Mode of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum onvifXsd__WhiteBalanceMode      Mode                           1;	///< Required element.
/// @brief Rgain (unitless).
/// Element CrGain of type xs:float.
    float                                CrGain                         1;	///< Required element.
/// @brief Bgain (unitless).
/// Element CbGain of type xs:float.
    float                                CbGain                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus20 is a complexType.
class onvifXsd__ImagingStatus20 : public xsd__anyType
{ public:
/// @brief Status of focus.
/// Element FocusStatus20 of type "http://www.onvif.org/ver10/schema":FocusStatus20.
    onvifXsd__FocusStatus20*             FocusStatus20                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingStatus20Extension.
    onvifXsd__ImagingStatus20Extension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is a complexType.
class onvifXsd__ImagingStatus20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":FocusStatus20 is a complexType.
class onvifXsd__FocusStatus20 : public xsd__anyType
{ public:
/// @brief Status of focus position.
/// Element Position of type xs:float.
    float                                Position                       1;	///< Required element.
/// @brief Status of focus MoveStatus.
/// Element MoveStatus of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum onvifXsd__MoveStatus            MoveStatus                     1;	///< Required element.
/// @brief Error status of focus.
/// Element Error of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusStatus20Extension.
    onvifXsd__FocusStatus20Extension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FocusStatus20Extension is a complexType.
class onvifXsd__FocusStatus20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ImagingSettings20 is a complexType.
/// @brief Type describing the ImagingSettings of a VideoSource. The supported options and ranges can be obtained via the GetOptions command.
class onvifXsd__ImagingSettings20 : public xsd__anyType
{ public:
/// @brief Enabled/disabled BLC mode (on/off).
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensation20.
    onvifXsd__BacklightCompensation20*   BacklightCompensation          0;	///< Optional element.
/// @brief Image brightness (unit unspecified).
/// Element Brightness of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// @brief Color saturation of the image (unit unspecified).
/// Element ColorSaturation of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// @brief Contrast of the image (unit unspecified).
/// Element Contrast of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// @brief Exposure mode of the device.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":Exposure20.
    onvifXsd__Exposure20*                Exposure                       0;	///< Optional element.
/// @brief Focus configuration.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusConfiguration20.
    onvifXsd__FocusConfiguration20*      Focus                          0;	///< Optional element.
/// @brief Infrared Cutoff Filter settings.
/// Element IrCutFilter of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum onvifXsd__IrCutFilterMode*      IrCutFilter                    0;	///< Optional element.
/// @brief Sharpness of the Video image.
/// Element Sharpness of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// @brief WDR settings.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRange20.
    onvifXsd__WideDynamicRange20*        WideDynamicRange               0;	///< Optional element.
/// @brief White balance settings.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalance20.
    onvifXsd__WhiteBalance20*            WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20.
    onvifXsd__ImagingSettingsExtension20*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is a complexType.
class onvifXsd__ImagingSettingsExtension20 : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Optional element to configure Image Stabilization feature.
/// Element ImageStabilization of type "http://www.onvif.org/ver10/schema":ImageStabilization.
    onvifXsd__ImageStabilization*        ImageStabilization             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202.
    onvifXsd__ImagingSettingsExtension202*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202 is a complexType.
class onvifXsd__ImagingSettingsExtension202 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ImageStabilization is a complexType.
class onvifXsd__ImageStabilization : public xsd__anyType
{ public:
/// @brief Parameter to enable/disable Image Stabilization feature.
/// Element Mode of type "http://www.onvif.org/ver10/schema":ImageStabilizationMode.
    enum onvifXsd__ImageStabilizationMode  Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified)
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImageStabilizationExtension.
    onvifXsd__ImageStabilizationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImageStabilizationExtension is a complexType.
class onvifXsd__ImageStabilizationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRange20 is a complexType.
/// @brief Type describing whether WDR mode is enabled or disabled (on/off).
class onvifXsd__WideDynamicRange20 : public xsd__anyType
{ public:
/// @brief Wide dynamic range mode (on/off).
/// Element Mode of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum onvifXsd__WideDynamicMode       Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified).
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensation20 is a complexType.
/// @brief Type describing whether BLC mode is enabled or disabled (on/off).
class onvifXsd__BacklightCompensation20 : public xsd__anyType
{ public:
/// @brief Backlight compensation mode (on/off).
/// Element Mode of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum onvifXsd__BacklightCompensationMode  Mode                           1;	///< Required element.
/// @brief Optional level parameter (unit unspecified).
/// Element Level of type xs:float.
    float*                               Level                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":Exposure20 is a complexType.
/// @brief Type describing the exposure settings.
class onvifXsd__Exposure20 : public xsd__anyType
{ public:
/// @brief Exposure Mode <ul> <li>Auto Enabled the exposure algorithm on the device.</li> <li>Manual Disabled exposure algorithm on the device.</li> </ul>
/// Element Mode of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum onvifXsd__ExposureMode          Mode                           1;	///< Required element.
/// @brief The exposure priority mode (low noise/framerate).
/// Element Priority of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum onvifXsd__ExposurePriority*     Priority                       0;	///< Optional element.
/// @brief Rectangular exposure mask.
/// Element Window of type "http://www.onvif.org/ver10/schema":Rectangle.
    onvifXsd__Rectangle*                 Window                         0;	///< Optional element.
/// @brief Minimum value of exposure time range allowed to be used by the algorithm.
/// Element MinExposureTime of type xs:float.
    float*                               MinExposureTime                0;	///< Optional element.
/// @brief Maximum value of exposure time range allowed to be used by the algorithm.
/// Element MaxExposureTime of type xs:float.
    float*                               MaxExposureTime                0;	///< Optional element.
/// @brief Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MinGain of type xs:float.
    float*                               MinGain                        0;	///< Optional element.
/// @brief Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// Element MaxGain of type xs:float.
    float*                               MaxGain                        0;	///< Optional element.
/// @brief Minimum value of the iris range allowed to be used by the algorithm.
/// Element MinIris of type xs:float.
    float*                               MinIris                        0;	///< Optional element.
/// @brief Maximum value of the iris range allowed to be used by the algorithm.
/// Element MaxIris of type xs:float.
    float*                               MaxIris                        0;	///< Optional element.
/// @brief The fixed exposure time used by the image sensor (s).
/// Element ExposureTime of type xs:float.
    float*                               ExposureTime                   0;	///< Optional element.
/// @brief The fixed gain used by the image sensor (dB).
/// Element Gain of type xs:float.
    float*                               Gain                           0;	///< Optional element.
/// @brief The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// Element Iris of type xs:float.
    float*                               Iris                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20 is a complexType.
class onvifXsd__ImagingOptions20 : public xsd__anyType
{ public:
/// @brief Valid range of Backlight Compensation.
/// Element BacklightCompensation of type "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20.
    onvifXsd__BacklightCompensationOptions20*  BacklightCompensation          0;	///< Optional element.
/// @brief Valid range of Brightness.
/// Element Brightness of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Brightness                     0;	///< Optional element.
/// @brief Valid range of Color Saturation.
/// Element ColorSaturation of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                ColorSaturation                0;	///< Optional element.
/// @brief Valid range of Contrast.
/// Element Contrast of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Contrast                       0;	///< Optional element.
/// @brief Valid range of Exposure.
/// Element Exposure of type "http://www.onvif.org/ver10/schema":ExposureOptions20.
    onvifXsd__ExposureOptions20*         Exposure                       0;	///< Optional element.
/// @brief Valid range of Focus.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusOptions20.
    onvifXsd__FocusOptions20*            Focus                          0;	///< Optional element.
/// @brief Valid range of IrCutFilterModes.
/// Vector of enum onvifXsd__IrCutFilterMode with length 0..unbounded
    std::vector<enum onvifXsd__IrCutFilterMode> IrCutFilterModes               0;
/// @brief Valid range of Sharpness.
/// Element Sharpness of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Sharpness                      0;	///< Optional element.
/// @brief Valid range of WideDynamicRange.
/// Element WideDynamicRange of type "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20.
    onvifXsd__WideDynamicRangeOptions20*  WideDynamicRange               0;	///< Optional element.
/// @brief Valid range of WhiteBalance.
/// Element WhiteBalance of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20.
    onvifXsd__WhiteBalanceOptions20*     WhiteBalance                   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension.
    onvifXsd__ImagingOptions20Extension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is a complexType.
class onvifXsd__ImagingOptions20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Options of parameters for Image Stabilization feature.
/// Element ImageStabilization of type "http://www.onvif.org/ver10/schema":ImageStabilizationOptions.
    onvifXsd__ImageStabilizationOptions*  ImageStabilization             0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2.
    onvifXsd__ImagingOptions20Extension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2 is a complexType.
class onvifXsd__ImagingOptions20Extension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ImageStabilizationOptions is a complexType.
class onvifXsd__ImageStabilizationOptions : public xsd__anyType
{ public:
/// @brief Supported options of Image Stabilization mode parameter.
/// Vector of enum onvifXsd__ImageStabilizationMode with length 1..unbounded
    std::vector<enum onvifXsd__ImageStabilizationMode> Mode                           1;
/// @brief Wide dynamic range mode (on/off).
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Level                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension.
    onvifXsd__ImageStabilizationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension is a complexType.
class onvifXsd__ImageStabilizationOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is a complexType.
class onvifXsd__WideDynamicRangeOptions20 : public xsd__anyType
{ public:
/// Vector of enum onvifXsd__WideDynamicMode with length 1..unbounded
    std::vector<enum onvifXsd__WideDynamicMode> Mode                           1;
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Level                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is a complexType.
class onvifXsd__BacklightCompensationOptions20 : public xsd__anyType
{ public:
/// @brief 'ON' or 'OFF'
/// Vector of enum onvifXsd__BacklightCompensationMode with length 1..unbounded
    std::vector<enum onvifXsd__BacklightCompensationMode> Mode                           1;
/// @brief Level range of BacklightCompensation.
/// Element Level of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Level                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ExposureOptions20 is a complexType.
class onvifXsd__ExposureOptions20 : public xsd__anyType
{ public:
/// @brief Exposure Mode <ul> <li>Auto Enabled the exposure algorithm on the device.</li> <li>Manual Disabled exposure algorithm on the device.</li> </ul>
/// Vector of enum onvifXsd__ExposureMode with length 1..unbounded
    std::vector<enum onvifXsd__ExposureMode> Mode                           1;
/// @brief The exposure priority mode (low noise/framerate).
/// Vector of enum onvifXsd__ExposurePriority with length 0..unbounded
    std::vector<enum onvifXsd__ExposurePriority> Priority                       0;
/// @brief Valid range of the Minimum ExposureTime.
/// Element MinExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                MinExposureTime                0;	///< Optional element.
/// @brief Valid range of the Maximum ExposureTime.
/// Element MaxExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                MaxExposureTime                0;	///< Optional element.
/// @brief Valid range of the Minimum Gain.
/// Element MinGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                MinGain                        0;	///< Optional element.
/// @brief Valid range of the Maximum Gain.
/// Element MaxGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                MaxGain                        0;	///< Optional element.
/// @brief Valid range of the Minimum Iris.
/// Element MinIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                MinIris                        0;	///< Optional element.
/// @brief Valid range of the Maximum Iris.
/// Element MaxIris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                MaxIris                        0;	///< Optional element.
/// @brief Valid range of the ExposureTime.
/// Element ExposureTime of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                ExposureTime                   0;	///< Optional element.
/// @brief Valid range of the Gain.
/// Element Gain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Gain                           0;	///< Optional element.
/// @brief Valid range of the Iris.
/// Element Iris of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Iris                           0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":MoveOptions20 is a complexType.
class onvifXsd__MoveOptions20 : public xsd__anyType
{ public:
/// @brief Valid ranges for the absolute control.
/// Element Absolute of type "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions.
    onvifXsd__AbsoluteFocusOptions*      Absolute                       0;	///< Optional element.
/// @brief Valid ranges for the relative control.
/// Element Relative of type "http://www.onvif.org/ver10/schema":RelativeFocusOptions20.
    onvifXsd__RelativeFocusOptions20*    Relative                       0;	///< Optional element.
/// @brief Valid ranges for the continuous control.
/// Element Continuous of type "http://www.onvif.org/ver10/schema":ContinuousFocusOptions.
    onvifXsd__ContinuousFocusOptions*    Continuous                     0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is a complexType.
class onvifXsd__RelativeFocusOptions20 : public xsd__anyType
{ public:
/// @brief Valid ranges of the distance.
/// Element Distance of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Distance                       1;	///< Required element.
/// @brief Valid ranges of the speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                Speed                          0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance20 is a complexType.
class onvifXsd__WhiteBalance20 : public xsd__anyType
{ public:
/// @brief 'AUTO' or 'MANUAL'
/// Element Mode of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum onvifXsd__WhiteBalanceMode      Mode                           1;	///< Required element.
/// @brief Rgain (unitless).
/// Element CrGain of type xs:float.
    float*                               CrGain                         0;	///< Optional element.
/// @brief Bgain (unitless).
/// Element CbGain of type xs:float.
    float*                               CbGain                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":WhiteBalance20Extension.
    onvifXsd__WhiteBalance20Extension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is a complexType.
class onvifXsd__WhiteBalance20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration20 is a complexType.
class onvifXsd__FocusConfiguration20 : public xsd__anyType
{ public:
/// @brief Mode of auto fucus. <ul> <li>AUTO</li> <li>MANUAL</li> </ul>
/// Element AutoFocusMode of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum onvifXsd__AutoFocusMode         AutoFocusMode                  1;	///< Required element.
/// Element DefaultSpeed of type xs:float.
    float*                               DefaultSpeed                   0;	///< Optional element.
/// @brief Parameter to set autofocus near limit (unit: meter).
/// Element NearLimit of type xs:float.
    float*                               NearLimit                      0;	///< Optional element.
/// @brief Parameter to set autofocus far limit (unit: meter).
/// Element FarLimit of type xs:float.
    float*                               FarLimit                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension.
    onvifXsd__FocusConfiguration20Extension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is a complexType.
class onvifXsd__FocusConfiguration20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is a complexType.
class onvifXsd__WhiteBalanceOptions20 : public xsd__anyType
{ public:
/// @brief Mode of WhiteBalance. <ul> <li>AUTO</li> <li>MANUAL</li> </ul>
/// Vector of enum onvifXsd__WhiteBalanceMode with length 1..unbounded
    std::vector<enum onvifXsd__WhiteBalanceMode> Mode                           1;
/// Element YrGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                YrGain                         0;	///< Optional element.
/// Element YbGain of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                YbGain                         0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension.
    onvifXsd__WhiteBalanceOptions20Extension*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is a complexType.
class onvifXsd__WhiteBalanceOptions20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":FocusOptions20 is a complexType.
class onvifXsd__FocusOptions20 : public xsd__anyType
{ public:
/// @brief Mode of Auto Focus. <ul> <li>AUTO</li> <li>MANUAL</li> </ul>
/// Vector of enum onvifXsd__AutoFocusMode with length 0..unbounded
    std::vector<enum onvifXsd__AutoFocusMode> AutoFocusModes                 0;
/// @brief Valid range of DefaultSpeed.
/// Element DefaultSpeed of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                DefaultSpeed                   0;	///< Optional element.
/// @brief Valid range of NearLimit.
/// Element NearLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                NearLimit                      0;	///< Optional element.
/// @brief Valid range of FarLimit.
/// Element FarLimit of type "http://www.onvif.org/ver10/schema":FloatRange.
    onvifXsd__FloatRange*                FarLimit                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FocusOptions20Extension.
    onvifXsd__FocusOptions20Extension*   Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":FocusOptions20Extension is a complexType.
class onvifXsd__FocusOptions20Extension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MessageExtension is a complexType.
class onvifXsd__MessageExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ItemList is a complexType.
/// @brief List of parameters according to the corresponding ItemListDescription. Each item in the list shall have a unique name.
class onvifXsd__ItemList : public xsd__anyType
{ public:
/// @brief Value name pair as defined by the corresponding description.
/// Vector SimpleItem with length 0..unbounded
    std::vector<
    class _onvifXsd__ItemList_SimpleItem
    {
/// @brief Item name.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// @brief Item value. The type is defined in the corresponding description.
/// Attribute Value of type xs:anySimpleType.
   @xsd__anySimpleType                   Value                          1;	///< Required attribute.
    }>                                  *SimpleItem                     0;
/// @brief Complex value structure.
/// Vector ElementItem with length 0..unbounded
    std::vector<
    class _onvifXsd__ItemList_ElementItem
    {
/// TODO: <any namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
/// @brief Item name.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
    }>                                  *ElementItem                    0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ItemListExtension.
    onvifXsd__ItemListExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ItemListExtension is a complexType.
class onvifXsd__ItemListExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MessageDescription is a complexType.
class onvifXsd__MessageDescription : public xsd__anyType
{ public:
/// @brief Set of tokens producing this message. The list may only contain SimpleItemDescription items. The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/> For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken and the name of the analytics module or rule.
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onvifXsd__ItemListDescription*       Source                         0;	///< Optional element.
/// @brief Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onvifXsd__ItemListDescription*       Key                            0;	///< Optional element.
/// @brief Describes the payload of the message.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onvifXsd__ItemListDescription*       Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    onvifXsd__MessageDescriptionExtension*  Extension                      0;	///< Optional element.
/// @brief Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// Attribute IsProperty of type xs:boolean.
   @bool*                                IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is a complexType.
class onvifXsd__MessageDescriptionExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ItemListDescription is a complexType.
/// @brief Describes a list of items. Each item in the list shall have a unique name. The list is designed as linear structure without optional or unbounded elements. Use ElementItems only when complex structures are inevitable.
class onvifXsd__ItemListDescription : public xsd__anyType
{ public:
/// @brief Description of a simple item. The type must be of cathegory simpleType (xs:string, xs:integer, xs:float, ...).
/// Vector SimpleItemDescription with length 0..unbounded
    std::vector<
    class _onvifXsd__ItemListDescription_SimpleItemDescription
    {
/// @brief Item name. Must be unique within a list.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// Attribute Type of type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
    }>                                  *SimpleItemDescription          0;
/// @brief Description of a complex type. The Type must reference a defined type.
/// Vector ElementItemDescription with length 0..unbounded
    std::vector<
    class _onvifXsd__ItemListDescription_ElementItemDescription
    {
/// @brief Item name. Must be unique within a list.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// @brief The type of the item. The Type must reference a defined type.
/// Attribute Type of type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
    }>                                  *ElementItemDescription         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension.
    onvifXsd__ItemListDescriptionExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is a complexType.
class onvifXsd__ItemListDescriptionExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Vector is a complexType.
class onvifXsd__Vector : public xsd__anyType
{ public:
/// Attribute x of type xs:float.
   @float*                               x                              0;	///< Optional attribute.
/// Attribute y of type xs:float.
   @float*                               y                              0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Rectangle is a complexType.
class onvifXsd__Rectangle : public xsd__anyType
{ public:
/// Attribute bottom of type xs:float.
   @float*                               bottom                         0;	///< Optional attribute.
/// Attribute top of type xs:float.
   @float*                               top                            0;	///< Optional attribute.
/// Attribute right of type xs:float.
   @float*                               right                          0;	///< Optional attribute.
/// Attribute left of type xs:float.
   @float*                               left                           0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Polygon is a complexType.
class onvifXsd__Polygon : public xsd__anyType
{ public:
/// Vector of onvifXsd__Vector* with length 3..unbounded
    std::vector<onvifXsd__Vector*      > Point                          3;
};

/// "http://www.onvif.org/ver10/schema":Polyline is a complexType.
class onvifXsd__Polyline : public xsd__anyType
{ public:
/// Vector of onvifXsd__Vector* with length 2..unbounded
    std::vector<onvifXsd__Vector*      > Point                          2;
};

/// "http://www.onvif.org/ver10/schema":Color is a complexType.
class onvifXsd__Color : public xsd__anyType
{ public:
/// Attribute X of type xs:float.
   @float                                X                              1;	///< Required attribute.
/// Attribute Y of type xs:float.
   @float                                Y                              1;	///< Required attribute.
/// Attribute Z of type xs:float.
   @float                                Z                              1;	///< Required attribute.
/// Attribute Colorspace of type xs:anyURI.
   @xsd__anyURI*                         Colorspace                     0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":ColorCovariance is a complexType.
class onvifXsd__ColorCovariance : public xsd__anyType
{ public:
/// Attribute XX of type xs:float.
   @float                                XX                             1;	///< Required attribute.
/// Attribute YY of type xs:float.
   @float                                YY                             1;	///< Required attribute.
/// Attribute ZZ of type xs:float.
   @float                                ZZ                             1;	///< Required attribute.
/// Attribute XY of type xs:float.
   @float*                               XY                             0;	///< Optional attribute.
/// Attribute XZ of type xs:float.
   @float*                               XZ                             0;	///< Optional attribute.
/// Attribute YZ of type xs:float.
   @float*                               YZ                             0;	///< Optional attribute.
/// Attribute Colorspace of type xs:anyURI.
   @xsd__anyURI*                         Colorspace                     0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Appearance is a complexType.
class onvifXsd__Appearance : public xsd__anyType
{ public:
/// Element Transformation of type "http://www.onvif.org/ver10/schema":Transformation.
    onvifXsd__Transformation*            Transformation                 0;	///< Optional element.
/// Element Shape of type "http://www.onvif.org/ver10/schema":ShapeDescriptor.
    onvifXsd__ShapeDescriptor*           Shape                          0;	///< Optional element.
/// Element Color of type "http://www.onvif.org/ver10/schema":ColorDescriptor.
    onvifXsd__ColorDescriptor*           Color                          0;	///< Optional element.
/// Element Class of type "http://www.onvif.org/ver10/schema":ClassDescriptor.
    onvifXsd__ClassDescriptor*           Class                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AppearanceExtension.
    onvifXsd__AppearanceExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AppearanceExtension is a complexType.
class onvifXsd__AppearanceExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ShapeDescriptor is a complexType.
class onvifXsd__ShapeDescriptor : public xsd__anyType
{ public:
/// Element BoundingBox of type "http://www.onvif.org/ver10/schema":Rectangle.
    onvifXsd__Rectangle*                 BoundingBox                    1;	///< Required element.
/// Element CenterOfGravity of type "http://www.onvif.org/ver10/schema":Vector.
    onvifXsd__Vector*                    CenterOfGravity                1;	///< Required element.
/// Vector of onvifXsd__Polygon* with length 0..unbounded
    std::vector<onvifXsd__Polygon*     > Polygon                        0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension.
    onvifXsd__ShapeDescriptorExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ShapeDescriptorExtension is a complexType.
class onvifXsd__ShapeDescriptorExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ColorDescriptor is a complexType.
class onvifXsd__ColorDescriptor : public xsd__anyType
{ public:
/// Vector ColorCluster with length 0..unbounded
    std::vector<
    class _onvifXsd__ColorDescriptor_ColorCluster
    {
/// Element Color of type "http://www.onvif.org/ver10/schema":Color.
    onvifXsd__Color*                     Color                          1;	///< Required element.
/// Element Weight of type xs:float.
    float*                               Weight                         0;	///< Optional element.
/// Element Covariance of type "http://www.onvif.org/ver10/schema":ColorCovariance.
    onvifXsd__ColorCovariance*           Covariance                     0;	///< Optional element.
    }>                                  *ColorCluster                   0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ColorDescriptorExtension.
    onvifXsd__ColorDescriptorExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ColorDescriptorExtension is a complexType.
class onvifXsd__ColorDescriptorExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ClassDescriptor is a complexType.
class onvifXsd__ClassDescriptor : public xsd__anyType
{ public:
/// Vector ClassCandidate with length 0..unbounded
    std::vector<
    class _onvifXsd__ClassDescriptor_ClassCandidate
    {
/// Element Type of type "http://www.onvif.org/ver10/schema":ClassType.
    enum onvifXsd__ClassType             Type                           1;	///< Required element.
/// Element Likelihood of type xs:float.
    float                                Likelihood                     1;	///< Required element.
    }>                                  *ClassCandidate                 0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ClassDescriptorExtension.
    onvifXsd__ClassDescriptorExtension*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ClassDescriptorExtension is a complexType.
class onvifXsd__ClassDescriptorExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Vector of onvifXsd__OtherType* with length 1..unbounded
    std::vector<onvifXsd__OtherType*   > OtherTypes                     1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ClassDescriptorExtension2.
    onvifXsd__ClassDescriptorExtension2*  Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":ClassDescriptorExtension2 is a complexType.
class onvifXsd__ClassDescriptorExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":OtherType is a complexType.
class onvifXsd__OtherType : public xsd__anyType
{ public:
/// @brief Object Class Type
/// Element Type of type xs:string.
    std::string                          Type                           1;	///< Required element.
/// @brief A likelihood/probability that the corresponding object belongs to this class. The sum of the likelihoods shall NOT exceed 1
/// Element Likelihood of type xs:float.
    float                                Likelihood                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="1" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 1..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ObjectExtension is a complexType.
class onvifXsd__ObjectExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Transformation is a complexType.
class onvifXsd__Transformation : public xsd__anyType
{ public:
/// Element Translate of type "http://www.onvif.org/ver10/schema":Vector.
    onvifXsd__Vector*                    Translate                      0;	///< Optional element.
/// Element Scale of type "http://www.onvif.org/ver10/schema":Vector.
    onvifXsd__Vector*                    Scale                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":TransformationExtension.
    onvifXsd__TransformationExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":TransformationExtension is a complexType.
class onvifXsd__TransformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Frame is a complexType.
class onvifXsd__Frame : public xsd__anyType
{ public:
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZStatus.
    onvifXsd__PTZStatus*                 PTZStatus                      0;	///< Optional element.
/// Element Transformation of type "http://www.onvif.org/ver10/schema":Transformation.
    onvifXsd__Transformation*            Transformation                 0;	///< Optional element.
/// Vector of onvifXsd__Object* with length 0..unbounded
    std::vector<onvifXsd__Object*      > Object                         0;
/// Element ObjectTree of type "http://www.onvif.org/ver10/schema":ObjectTree.
    onvifXsd__ObjectTree*                ObjectTree                     0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FrameExtension.
    onvifXsd__FrameExtension*            Extension                      0;	///< Optional element.
/// Attribute UtcTime of type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FrameExtension is a complexType.
class onvifXsd__FrameExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element MotionInCells of type "http://www.onvif.org/ver10/schema":MotionInCells.
    onvifXsd__MotionInCells*             MotionInCells                  0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":FrameExtension2.
    onvifXsd__FrameExtension2*           Extension                      0;	///< Optional element.
};

/// "http://www.onvif.org/ver10/schema":FrameExtension2 is a complexType.
class onvifXsd__FrameExtension2 : public xsd__anyType
{ public:
/// TODO: <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Merge is a complexType.
class onvifXsd__Merge : public xsd__anyType
{ public:
/// Vector of onvifXsd__ObjectId* with length 2..unbounded
    std::vector<onvifXsd__ObjectId*    > from                           2;
/// Element to of type "http://www.onvif.org/ver10/schema":ObjectId.
    onvifXsd__ObjectId*                  to                             1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":Split is a complexType.
class onvifXsd__Split : public xsd__anyType
{ public:
/// Element from of type "http://www.onvif.org/ver10/schema":ObjectId.
    onvifXsd__ObjectId*                  from                           1;	///< Required element.
/// Vector of onvifXsd__ObjectId* with length 2..unbounded
    std::vector<onvifXsd__ObjectId*    > to                             2;
};

/// "http://www.onvif.org/ver10/schema":Rename is a complexType.
class onvifXsd__Rename : public xsd__anyType
{ public:
/// Element from of type "http://www.onvif.org/ver10/schema":ObjectId.
    onvifXsd__ObjectId*                  from                           1;	///< Required element.
/// Element to of type "http://www.onvif.org/ver10/schema":ObjectId.
    onvifXsd__ObjectId*                  to                             1;	///< Required element.
};

/// "http://www.onvif.org/ver10/schema":ObjectId is a complexType.
class onvifXsd__ObjectId : public xsd__anyType
{ public:
/// Attribute ObjectId of type xs:integer.
   @xsd__integer*                        ObjectId                       0;	///< Optional attribute.
};

/// "http://www.onvif.org/ver10/schema":Behaviour is a complexType.
class onvifXsd__Behaviour : public xsd__anyType
{ public:
    class _onvifXsd__Behaviour_Removed
    {
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    }                                   *Removed                        0;	///< Optional element.
    class _onvifXsd__Behaviour_Idle
    {
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    }                                   *Idle                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":BehaviourExtension.
    onvifXsd__BehaviourExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":BehaviourExtension is a complexType.
class onvifXsd__BehaviourExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":ObjectTree is a complexType.
class onvifXsd__ObjectTree : public xsd__anyType
{ public:
/// Vector of onvifXsd__Rename* with length 0..unbounded
    std::vector<onvifXsd__Rename*      > Rename                         0;
/// Vector of onvifXsd__Split* with length 0..unbounded
    std::vector<onvifXsd__Split*       > Split                          0;
/// Vector of onvifXsd__Merge* with length 0..unbounded
    std::vector<onvifXsd__Merge*       > Merge                          0;
/// Vector of onvifXsd__ObjectId* with length 0..unbounded
    std::vector<onvifXsd__ObjectId*    > Delete                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ObjectTreeExtension.
    onvifXsd__ObjectTreeExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ObjectTreeExtension is a complexType.
class onvifXsd__ObjectTreeExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MotionInCells is a complexType.
class onvifXsd__MotionInCells : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Number of columns of the cell grid (x dimension)
/// Attribute Columns of type xs:integer.
   @xsd__integer                         Columns                        1;	///< Required attribute.
/// @brief Number of rows of the cell grid (y dimension)
/// Attribute Rows of type xs:integer.
   @xsd__integer                         Rows                           1;	///< Required attribute.
/// @brief A 1 denotes a cell where motion is detected and a 0 an empty cell. The first cell is in the upper left corner. Then the cell order goes first from left to right and then from up to down. If the number of cells is not a multiple of 8 the last byte is filled with zeros. The information is run length encoded according to Packbit coding in ISO 12369 (TIFF, Revision 6.0).
/// Attribute Cells of type xs:base64Binary.
   @xsd__base64Binary                    Cells                          1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is a complexType.
class onvifXsd__AnalyticsEngineConfiguration : public xsd__anyType
{ public:
/// Vector of onvifXsd__Config* with length 0..unbounded
    std::vector<onvifXsd__Config*      > AnalyticsModule                0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension.
    onvifXsd__AnalyticsEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is a complexType.
class onvifXsd__AnalyticsEngineConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is a complexType.
class onvifXsd__RuleEngineConfiguration : public xsd__anyType
{ public:
/// Vector of onvifXsd__Config* with length 0..unbounded
    std::vector<onvifXsd__Config*      > Rule                           0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension.
    onvifXsd__RuleEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is a complexType.
class onvifXsd__RuleEngineConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Config is a complexType.
class onvifXsd__Config : public xsd__anyType
{ public:
/// @brief List of configuration parameters as defined in the correspding description.
/// Element Parameters of type "http://www.onvif.org/ver10/schema":ItemList.
    onvifXsd__ItemList*                  Parameters                     1;	///< Required element.
/// @brief Name of the configuration.
/// Attribute Name of type xs:string.
   @std::string                          Name                           1;	///< Required attribute.
/// @brief Type of the configuration represented by a unique QName. The Type characterizes a ConfigDescription defining the Parameters.
/// Attribute Type of type xs:QName.
   @xsd__QName                           Type                           1;	///< Required attribute.
};

/// "http://www.onvif.org/ver10/schema":ConfigDescription is a complexType.
class onvifXsd__ConfigDescription : public xsd__anyType
{ public:
/// @brief List describing the configuration parameters. The names of the parameters must be unique. If possible SimpleItems should be used to transport the information to ease parsing of dynamically defined messages by a client application.
/// Element Parameters of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onvifXsd__ItemListDescription*       Parameters                     1;	///< Required element.
/// @brief The analytics modules and rule engine produce Events, which must be listed within the Analytics Module Description. In order to do so the structure of the Message is defined and consists of three groups: Source, Key, and Data. It is recommended to use SimpleItemDescriptions wherever applicable. The name of all Items must be unique within all Items contained in any group of this Message. Depending on the component multiple parameters or none may be needed to identify the component uniquely.
/// Vector Messages with length 0..unbounded
    std::vector<
    class _onvifXsd__ConfigDescription_Messages
    {
/// INHERITED FROM onvifXsd__MessageDescription:
/// @brief Set of tokens producing this message. The list may only contain SimpleItemDescription items. The set of tokens identify the component within the WS-Endpoint, which is responsible for the producing the message.<br/> For analytics events the token set shall include the VideoSourceConfigurationToken, the VideoAnalyticsConfigurationToken and the name of the analytics module or rule.
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onvifXsd__ItemListDescription*       Source                         0;	///< Optional element.
/// @brief Describes optional message payload parameters that may be used as key. E.g. object IDs of tracked objects are conveyed as key.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onvifXsd__ItemListDescription*       Key                            0;	///< Optional element.
/// @brief Describes the payload of the message.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemListDescription.
    onvifXsd__ItemListDescription*       Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageDescriptionExtension.
    onvifXsd__MessageDescriptionExtension*  Extension                      0;	///< Optional element.
/// @brief Must be set to true when the described Message relates to a property. An alternative term of "property" is a "state" in contrast to a pure event, which contains relevant information for only a single point in time.<br/>Default is false.
/// Attribute IsProperty of type xs:boolean.
   @bool*                                IsProperty                     0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM onvifXsd__MessageDescription
/// @brief The ParentTopic labels the message (e.g. "nn:RuleEngine/LineCrossing"). The real message can extend the ParentTopic by for example the name of the instaniated rule (e.g. "nn:RuleEngine/LineCrossing/corssMyFirstLine"). Even without knowing the complete topic name, the subscriber will be able to distiguish the messages produced by different rule instances of the same type via the Source fields of the message. There the name of the rule instance, which produced the message, must be listed.
/// Element ParentTopic of type xs:string.
    std::string                          ParentTopic                    1;	///< Required element.
    }>                                  *Messages                       0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension.
    onvifXsd__ConfigDescriptionExtension*  Extension                      0;	///< Optional element.
/// @brief XML Type of the Configuration (e.g. "tt::LineDetector").
/// Attribute Name of type xs:QName.
   @xsd__QName                           Name                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is a complexType.
class onvifXsd__ConfigDescriptionExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SupportedRules is a complexType.
class onvifXsd__SupportedRules : public xsd__anyType
{ public:
/// @brief Lists the location of all schemas that are referenced in the rules.
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > RuleContentSchemaLocation      0;
/// @brief List of rules supported by the Video Analytics configuration..
/// Vector of onvifXsd__ConfigDescription* with length 0..unbounded
    std::vector<onvifXsd__ConfigDescription*> RuleDescription                0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SupportedRulesExtension.
    onvifXsd__SupportedRulesExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SupportedRulesExtension is a complexType.
class onvifXsd__SupportedRulesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is a complexType.
class onvifXsd__SupportedAnalyticsModules : public xsd__anyType
{ public:
/// @brief It optionally contains a list of URLs that provide the location of schema files. These schema files describe the types and elements used in the analytics module descriptions. If the analytics module descriptions reference types or elements of the ONVIF schema file, the ONVIF schema file MUST be explicitly listed.
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > AnalyticsModuleContentSchemaLocation 0;
/// Vector of onvifXsd__ConfigDescription* with length 0..unbounded
    std::vector<onvifXsd__ConfigDescription*> AnalyticsModuleDescription     0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension.
    onvifXsd__SupportedAnalyticsModulesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is a complexType.
class onvifXsd__SupportedAnalyticsModulesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PolygonConfiguration is a complexType.
class onvifXsd__PolygonConfiguration : public xsd__anyType
{ public:
/// @brief Contains Polygon configuration for rule parameters
/// Element Polygon of type "http://www.onvif.org/ver10/schema":Polygon.
    onvifXsd__Polygon*                   Polygon                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PolylineArray is a complexType.
class onvifXsd__PolylineArray : public xsd__anyType
{ public:
/// @brief Contains array of Polyline
/// Vector of onvifXsd__Polyline* with length 1..unbounded
    std::vector<onvifXsd__Polyline*    > Segment                        1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PolylineArrayExtension.
    onvifXsd__PolylineArrayExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PolylineArrayExtension is a complexType.
class onvifXsd__PolylineArrayExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PolylineArrayConfiguration is a complexType.
class onvifXsd__PolylineArrayConfiguration : public xsd__anyType
{ public:
/// @brief Contains PolylineArray configuration data
/// Element PolylineArray of type "http://www.onvif.org/ver10/schema":PolylineArray.
    onvifXsd__PolylineArray*             PolylineArray                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MotionExpression is a complexType.
class onvifXsd__MotionExpression : public xsd__anyType
{ public:
/// @brief Motion Expression data structure contains motion expression which is based on Scene Descriptor schema with XPATH syntax. The Type argument could allow introduction of different dialects
/// Element Expression of type xs:string.
    std::string                          Expression                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute Type of type xs:string.
   @std::string*                         Type                           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MotionExpressionConfiguration is a complexType.
class onvifXsd__MotionExpressionConfiguration : public xsd__anyType
{ public:
/// @brief Contains Rule MotionExpression configuration
/// Element MotionExpression of type "http://www.onvif.org/ver10/schema":MotionExpression.
    onvifXsd__MotionExpression*          MotionExpression               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CellLayout is a complexType.
class onvifXsd__CellLayout : public xsd__anyType
{ public:
/// @brief Mapping of the cell grid to the Video frame. The cell grid is starting from the upper left corner and x dimension is going from left to right and the y dimension from up to down.
/// Element Transformation of type "http://www.onvif.org/ver10/schema":Transformation.
    onvifXsd__Transformation*            Transformation                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Number of columns of the cell grid (x dimension)
/// Attribute Columns of type xs:integer.
   @xsd__integer                         Columns                        1;	///< Required attribute.
/// @brief Number of rows of the cell grid (y dimension)
/// Attribute Rows of type xs:integer.
   @xsd__integer                         Rows                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataStream is a complexType.
class onvifXsd__MetadataStream : public xsd__anyType
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_MetadataStream          0;
    class __onvifXsd__union_MetadataStream
    {
   $int                                  __union_MetadataStream         0;	///< Union _onvifXsd__union_MetadataStream selector: set to SOAP_UNION__onvifXsd__union_MetadataStream_<fieldname> or 0
    union _onvifXsd__union_MetadataStream
    {
/// Element VideoAnalytics of type "http://www.onvif.org/ver10/schema":VideoAnalyticsStream.
    onvifXsd__VideoAnalyticsStream*      VideoAnalytics                 1;	///< Required element.
/// Element PTZ of type "http://www.onvif.org/ver10/schema":PTZStream.
    onvifXsd__PTZStream*                 PTZ                            1;	///< Required element.
/// Element Event of type "http://www.onvif.org/ver10/schema":EventStream.
    onvifXsd__EventStream*               Event                          1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MetadataStreamExtension.
    onvifXsd__MetadataStreamExtension*   Extension                      1;	///< Required element.
    }                                    union_MetadataStream          ;
    }                                   *__union_MetadataStream        ;
//  END OF CHOICE
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataStreamExtension is a complexType.
class onvifXsd__MetadataStreamExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":VideoAnalyticsStream is a complexType.
class onvifXsd__VideoAnalyticsStream : public xsd__anyType
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_VideoAnalyticsStream    0;
    class __onvifXsd__union_VideoAnalyticsStream
    {
   $int                                  __union_VideoAnalyticsStream   0;	///< Union _onvifXsd__union_VideoAnalyticsStream selector: set to SOAP_UNION__onvifXsd__union_VideoAnalyticsStream_<fieldname> or 0
/// Union for choice in type onvifXsd__VideoAnalyticsStream
    union _onvifXsd__union_VideoAnalyticsStream
    {
/// Element Frame of type "http://www.onvif.org/ver10/schema":Frame.
    onvifXsd__Frame*                     Frame                          1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension.
    onvifXsd__VideoAnalyticsStreamExtension*  Extension                      1;	///< Required element.
    }                                    union_VideoAnalyticsStream    ;
    }                                   *__union_VideoAnalyticsStream  ;
//  END OF CHOICE
};

/// "http://www.onvif.org/ver10/schema":VideoAnalyticsStreamExtension is a complexType.
class onvifXsd__VideoAnalyticsStreamExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZStream is a complexType.
class onvifXsd__PTZStream : public xsd__anyType
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_PTZStream               0;
    class __onvifXsd__union_PTZStream
    {
   $int                                  __union_PTZStream              0;	///< Union _onvifXsd__union_PTZStream selector: set to SOAP_UNION__onvifXsd__union_PTZStream_<fieldname> or 0
/// Union for choice in type onvifXsd__PTZStream
    union _onvifXsd__union_PTZStream
    {
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZStatus.
    onvifXsd__PTZStatus*                 PTZStatus                      1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZStreamExtension.
    onvifXsd__PTZStreamExtension*        Extension                      1;	///< Required element.
    }                                    union_PTZStream               ;
    }                                   *__union_PTZStream             ;
//  END OF CHOICE
};

/// "http://www.onvif.org/ver10/schema":PTZStreamExtension is a complexType.
class onvifXsd__PTZStreamExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":EventStream is a complexType.
class onvifXsd__EventStream : public xsd__anyType
{ public:
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_EventStream             0;
    class __onvifXsd__union_EventStream
    {
   $int                                  __union_EventStream            0;	///< Union _onvifXsd__union_EventStream selector: set to SOAP_UNION__onvifXsd__union_EventStream_<fieldname> or 0
/// Union for choice in type onvifXsd__EventStream
    union _onvifXsd__union_EventStream
    {
/// Element reference "http://docs.oasis-open.org/wsn/b-2":NotificationMessage.
    oasisWsnB2__NotificationMessageHolderType*  oasisWsnB2__NotificationMessage 1;	///< Required element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":EventStreamExtension.
    onvifXsd__EventStreamExtension*      Extension                      1;	///< Required element.
    }                                    union_EventStream             ;
    }                                   *__union_EventStream           ;
//  END OF CHOICE
};

/// "http://www.onvif.org/ver10/schema":EventStreamExtension is a complexType.
class onvifXsd__EventStreamExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PaneConfiguration is a complexType.
/// @brief Configuration of the streaming and coding settings of a Video window.
class onvifXsd__PaneConfiguration : public xsd__anyType
{ public:
/// @brief Optional name of the pane configuration.
/// Element PaneName of type xs:string.
    std::string*                         PaneName                       0;	///< Optional element.
/// @brief If the device has audio outputs, this element contains a pointer to the audio output that is associated with the pane. A client can retrieve the available audio outputs of a device using the GetAudioOutputs command of the DeviceIO service.
/// Element AudioOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            AudioOutputToken               0;	///< Optional element.
/// @brief If the device has audio sources, this element contains a pointer to the audio source that is associated with this pane. The audio connection from a decoder device to the NVT is established using the backchannel mechanism. A client can retrieve the available audio sources of a device using the GetAudioSources command of the DeviceIO service.
/// Element AudioSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            AudioSourceToken               0;	///< Optional element.
/// @brief The configuration of the audio encoder including codec, bitrate and sample rate.
/// Element AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    onvifXsd__AudioEncoderConfiguration*  AudioEncoderConfiguration      0;	///< Optional element.
/// @brief A pointer to a Receiver that has the necessary information to receive data from a Transmitter. This Receiver can be connected and the network video decoder displays the received data on the specified outputs. A client can retrieve the available Receivers using the GetReceivers command of the Receiver Service.
/// Element ReceiverToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ReceiverToken                  0;	///< Optional element.
/// @brief A unique identifier in the display device.
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             Token                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PaneLayout is a complexType.
/// @brief A pane layout describes one Video window of a display. It links a pane configuration to a region of the screen.
class onvifXsd__PaneLayout : public xsd__anyType
{ public:
/// @brief Reference to the configuration of the streaming and coding parameters.
/// Element Pane of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             Pane                           1;	///< Required element.
/// @brief Describes the location and size of the area on the monitor. The area coordinate values are espressed in normalized units [-1.0, 1.0].
/// Element Area of type "http://www.onvif.org/ver10/schema":Rectangle.
    onvifXsd__Rectangle*                 Area                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Layout is a complexType.
/// @brief A layout describes a set of Video windows that are displayed simultaniously on a display.
class onvifXsd__Layout : public xsd__anyType
{ public:
/// @brief List of panes assembling the display layout.
/// Vector of onvifXsd__PaneLayout* with length 1..unbounded
    std::vector<onvifXsd__PaneLayout*  > PaneLayout                     1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":LayoutExtension.
    onvifXsd__LayoutExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":LayoutExtension is a complexType.
class onvifXsd__LayoutExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":CodingCapabilities is a complexType.
/// @brief This type contains the Audio and Video coding capabilities of a display service.
class onvifXsd__CodingCapabilities : public xsd__anyType
{ public:
/// @brief If the device supports audio encoding this section describes the supported codecs and their configuration.
/// Element AudioEncodingCapabilities of type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    onvifXsd__AudioEncoderConfigurationOptions*  AudioEncodingCapabilities      0;	///< Optional element.
/// @brief If the device supports audio decoding this section describes the supported codecs and their settings.
/// Element AudioDecodingCapabilities of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    onvifXsd__AudioDecoderConfigurationOptions*  AudioDecodingCapabilities      0;	///< Optional element.
/// @brief This section describes the supported video codesc and their configuration.
/// Element VideoDecodingCapabilities of type "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions.
    onvifXsd__VideoDecoderConfigurationOptions*  VideoDecodingCapabilities      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":LayoutOptions is a complexType.
/// @brief The options supported for a display layout.
class onvifXsd__LayoutOptions : public xsd__anyType
{ public:
/// @brief Lists the possible Pane Layouts of the Video Output
/// Vector of onvifXsd__PaneLayoutOptions* with length 1..unbounded
    std::vector<onvifXsd__PaneLayoutOptions*> PaneLayoutOptions              1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":LayoutOptionsExtension.
    onvifXsd__LayoutOptionsExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":LayoutOptionsExtension is a complexType.
class onvifXsd__LayoutOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PaneLayoutOptions is a complexType.
/// @brief Description of a pane layout describing a complete display layout.
class onvifXsd__PaneLayoutOptions : public xsd__anyType
{ public:
/// @brief List of areas assembling a layout. Coordinate values are in the range [-1.0, 1.0].
/// Vector of onvifXsd__Rectangle* with length 1..unbounded
    std::vector<onvifXsd__Rectangle*   > Area                           1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PaneOptionExtension.
    onvifXsd__PaneOptionExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PaneOptionExtension is a complexType.
class onvifXsd__PaneOptionExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":Receiver is a complexType.
/// @brief Description of a receiver, including its token and configuration.
class onvifXsd__Receiver : public xsd__anyType
{ public:
/// @brief Unique identifier of the receiver.
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             Token                          1;	///< Required element.
/// @brief Describes the configuration of the receiver.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":ReceiverConfiguration.
    onvifXsd__ReceiverConfiguration*     Configuration                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ReceiverConfiguration is a complexType.
/// @brief Describes the configuration of a receiver.
class onvifXsd__ReceiverConfiguration : public xsd__anyType
{ public:
/// @brief The following connection modes are defined:
/// Element Mode of type "http://www.onvif.org/ver10/schema":ReceiverMode.
    enum onvifXsd__ReceiverMode          Mode                           1;	///< Required element.
/// @brief Details of the URI to which the receiver should connect.
/// Element MediaUri of type xs:anyURI.
    xsd__anyURI                          MediaUri                       1;	///< Required element.
/// @brief Stream connection parameters.
/// Element StreamSetup of type "http://www.onvif.org/ver10/schema":StreamSetup.
    onvifXsd__StreamSetup*               StreamSetup                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ReceiverStateInformation is a complexType.
/// @brief Contains information about a receiver's current state.
class onvifXsd__ReceiverStateInformation : public xsd__anyType
{ public:
/// @brief The connection state of the receiver may have one of the following states:
/// Element State of type "http://www.onvif.org/ver10/schema":ReceiverState.
    enum onvifXsd__ReceiverState         State                          1;	///< Required element.
/// @brief Indicates whether or not the receiver was created automatically.
/// Element AutoCreated of type xs:boolean.
    bool                                 AutoCreated                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SourceReference is a complexType.
class onvifXsd__SourceReference : public xsd__anyType
{ public:
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             Token                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute Type of type xs:anyURI.
   @xsd__anyURI                          Type                           0;	///< Default value="http://www.onvif.org/ver10/schema/Receiver".
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DateTimeRange is a complexType.
class onvifXsd__DateTimeRange : public xsd__anyType
{ public:
/// Element From of type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// Element Until of type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingSummary is a complexType.
class onvifXsd__RecordingSummary : public xsd__anyType
{ public:
/// @brief The earliest point in time where there is recorded data on the device.
/// Element DataFrom of type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// @brief The most recent point in time where there is recorded data on the device.
/// Element DataUntil of type xs:dateTime.
    time_t                               DataUntil                      1;	///< Required element.
/// @brief The device contains at least this many recordings.
/// Element NumberRecordings of type xs:int.
    int                                  NumberRecordings               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SearchScope is a complexType.
/// @brief A structure for defining a limited scope when searching in recorded data.
class onvifXsd__SearchScope : public xsd__anyType
{ public:
/// @brief A list of sources that are included in the scope. If this list is included, only data from one of these sources shall be searched.
/// Vector of onvifXsd__SourceReference* with length 0..unbounded
    std::vector<onvifXsd__SourceReference*> IncludedSources                0;
/// @brief A list of recordings that are included in the scope. If this list is included, only data from one of these recordings shall be searched.
/// Vector of onvifXsd__RecordingReference with length 0..unbounded
    std::vector<onvifXsd__RecordingReference> IncludedRecordings             0;
/// @brief An xpath expression used to specify what recordings to search. Only those recordings with an RecordingInformation structure that matches the filter shall be searched.
/// Element RecordingInformationFilter of type "http://www.onvif.org/ver10/schema":XPathExpression.
    onvifXsd__XPathExpression*           RecordingInformationFilter     0;	///< Optional element.
/// @brief Extension point
/// Element Extension of type "http://www.onvif.org/ver10/schema":SearchScopeExtension.
    onvifXsd__SearchScopeExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SearchScopeExtension is a complexType.
class onvifXsd__SearchScopeExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":PTZPositionFilter is a complexType.
class onvifXsd__PTZPositionFilter : public xsd__anyType
{ public:
/// @brief The lower boundary of the PTZ volume to look for.
/// Element MinPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    onvifXsd__PTZVector*                 MinPosition                    1;	///< Required element.
/// @brief The upper boundary of the PTZ volume to look for.
/// Element MaxPosition of type "http://www.onvif.org/ver10/schema":PTZVector.
    onvifXsd__PTZVector*                 MaxPosition                    1;	///< Required element.
/// @brief If true, search for when entering the specified PTZ volume.
/// Element EnterOrExit of type xs:boolean.
    bool                                 EnterOrExit                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataFilter is a complexType.
class onvifXsd__MetadataFilter : public xsd__anyType
{ public:
/// Element MetadataStreamFilter of type "http://www.onvif.org/ver10/schema":XPathExpression.
    onvifXsd__XPathExpression            MetadataStreamFilter           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FindRecordingResultList is a complexType.
class onvifXsd__FindRecordingResultList : public xsd__anyType
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum onvifXsd__SearchState           SearchState                    1;	///< Required element.
/// @brief A RecordingInformation structure for each found recording matching the search.
/// Vector of onvifXsd__RecordingInformation* with length 0..unbounded
    std::vector<onvifXsd__RecordingInformation*> RecordingInformation           0;
};

/// "http://www.onvif.org/ver10/schema":FindEventResultList is a complexType.
class onvifXsd__FindEventResultList : public xsd__anyType
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum onvifXsd__SearchState           SearchState                    1;	///< Required element.
/// @brief A FindEventResult structure for each found event matching the search.
/// Vector of onvifXsd__FindEventResult* with length 0..unbounded
    std::vector<onvifXsd__FindEventResult*> Result                         0;
};

/// "http://www.onvif.org/ver10/schema":FindEventResult is a complexType.
class onvifXsd__FindEventResult : public xsd__anyType
{ public:
/// @brief The recording where this event was found. Empty string if no recording is associated with this event.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onvifXsd__RecordingReference         RecordingToken                 1;	///< Required element.
/// @brief A reference to the track where this event was found. Empty string if no track is associated with this event.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    onvifXsd__TrackReference             TrackToken                     1;	///< Required element.
/// @brief The time when the event occured.
/// Element Time of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// @brief The description of the event.
/// Element Event of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
    oasisWsnB2__NotificationMessageHolderType*  Event                          1;	///< Required element.
/// @brief If true, indicates that the event is a virtual event generated for this particular search session to give the state of a property at the start time of the search.
/// Element StartStateEvent of type xs:boolean.
    bool                                 StartStateEvent                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FindPTZPositionResultList is a complexType.
class onvifXsd__FindPTZPositionResultList : public xsd__anyType
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum onvifXsd__SearchState           SearchState                    1;	///< Required element.
/// @brief A FindPTZPositionResult structure for each found PTZ position matching the search.
/// Vector of onvifXsd__FindPTZPositionResult* with length 0..unbounded
    std::vector<onvifXsd__FindPTZPositionResult*> Result                         0;
};

/// "http://www.onvif.org/ver10/schema":FindPTZPositionResult is a complexType.
class onvifXsd__FindPTZPositionResult : public xsd__anyType
{ public:
/// @brief A reference to the recording containing the PTZ position.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onvifXsd__RecordingReference         RecordingToken                 1;	///< Required element.
/// @brief A reference to the metadata track containing the PTZ position.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    onvifXsd__TrackReference             TrackToken                     1;	///< Required element.
/// @brief The time when the PTZ position was valid.
/// Element Time of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// @brief The PTZ position.
/// Element Position of type "http://www.onvif.org/ver10/schema":PTZVector.
    onvifXsd__PTZVector*                 Position                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":FindMetadataResultList is a complexType.
class onvifXsd__FindMetadataResultList : public xsd__anyType
{ public:
/// @brief The state of the search when the result is returned. Indicates if there can be more results, or if the search is completed.
/// Element SearchState of type "http://www.onvif.org/ver10/schema":SearchState.
    enum onvifXsd__SearchState           SearchState                    1;	///< Required element.
/// @brief A FindMetadataResult structure for each found set of Metadata matching the search.
/// Vector of onvifXsd__FindMetadataResult* with length 0..unbounded
    std::vector<onvifXsd__FindMetadataResult*> Result                         0;
};

/// "http://www.onvif.org/ver10/schema":FindMetadataResult is a complexType.
class onvifXsd__FindMetadataResult : public xsd__anyType
{ public:
/// @brief A reference to the recording containing the metadata.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onvifXsd__RecordingReference         RecordingToken                 1;	///< Required element.
/// @brief A reference to the metadata track containing the matching metadata.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    onvifXsd__TrackReference             TrackToken                     1;	///< Required element.
/// @brief The point in time when the matching metadata occurs in the metadata track.
/// Element Time of type xs:dateTime.
    time_t                               Time                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingInformation is a complexType.
class onvifXsd__RecordingInformation : public xsd__anyType
{ public:
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onvifXsd__RecordingReference         RecordingToken                 1;	///< Required element.
/// @brief Information about the source of the recording. This gives a description of where the data in the recording comes from. Since a single recording is intended to record related material, there is just one source. It is indicates the physical location or the major data source for the recording. Currently the recordingconfiguration cannot describe each individual data source.
/// Element Source of type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    onvifXsd__RecordingSourceInformation*  Source                         1;	///< Required element.
/// Element EarliestRecording of type xs:dateTime.
    time_t*                              EarliestRecording              0;	///< Optional element.
/// Element LatestRecording of type xs:dateTime.
    time_t*                              LatestRecording                0;	///< Optional element.
/// Element Content of type "http://www.onvif.org/ver10/schema":Description.
    onvifXsd__Description                Content                        1;	///< Required element.
/// @brief Basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// Vector of onvifXsd__TrackInformation* with length 0..unbounded
    std::vector<onvifXsd__TrackInformation*> Track                          0;
/// Element RecordingStatus of type "http://www.onvif.org/ver10/schema":RecordingStatus.
    enum onvifXsd__RecordingStatus       RecordingStatus                1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingSourceInformation is a complexType.
/// @brief A set of informative desciptions of a data source. The Search searvice allows a client to filter on recordings based on information in this structure.
class onvifXsd__RecordingSourceInformation : public xsd__anyType
{ public:
/// @brief Identifier for the source chosen by the client that creates the structure. This identifier is opaque to the device. Clients may use any type of URI for this field.
/// Element SourceId of type xs:anyURI.
    xsd__anyURI                          SourceId                       1;	///< Required element.
/// @brief Informative user readable name of the source, e.g. "Camera23".
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Informative description of the physical location of the source, e.g. the coordinates on a map.
/// Element Location of type "http://www.onvif.org/ver10/schema":Description.
    onvifXsd__Description                Location                       1;	///< Required element.
/// @brief Informative description of the source.
/// Element Description of type "http://www.onvif.org/ver10/schema":Description.
    onvifXsd__Description                Description                    1;	///< Required element.
/// @brief URI provided by the service supplying data to be recorded.
/// Element Address of type xs:anyURI.
    xsd__anyURI                          Address                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":TrackInformation is a complexType.
class onvifXsd__TrackInformation : public xsd__anyType
{ public:
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    onvifXsd__TrackReference             TrackToken                     1;	///< Required element.
/// @brief Type of the track: "Video", "Audio" or "Metadata". The track shall only be able to hold data of that type.
/// Element TrackType of type "http://www.onvif.org/ver10/schema":TrackType.
    enum onvifXsd__TrackType             TrackType                      1;	///< Required element.
/// @brief Informative description of the contents of the track.
/// Element Description of type "http://www.onvif.org/ver10/schema":Description.
    onvifXsd__Description                Description                    1;	///< Required element.
/// @brief The start date and time of the oldest recorded data in the track.
/// Element DataFrom of type xs:dateTime.
    time_t                               DataFrom                       1;	///< Required element.
/// @brief The stop date and time of the newest recorded data in the track.
/// Element DataTo of type xs:dateTime.
    time_t                               DataTo                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MediaAttributes is a complexType.
/// @brief A set of media attributes valid for a recording at a point in time or for a time interval.
class onvifXsd__MediaAttributes : public xsd__anyType
{ public:
/// @brief A reference to the recording that has these attributes.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onvifXsd__RecordingReference         RecordingToken                 1;	///< Required element.
/// @brief A set of attributes for each track.
/// Vector of onvifXsd__TrackAttributes* with length 0..unbounded
    std::vector<onvifXsd__TrackAttributes*> TrackAttributes                0;
/// @brief The attributes are valid from this point in time in the recording.
/// Element From of type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// @brief The attributes are valid until this point in time in the recording. Can be equal to 'From' to indicate that the attributes are only known to be valid for this particular point in time.
/// Element Until of type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":TrackAttributes is a complexType.
class onvifXsd__TrackAttributes : public xsd__anyType
{ public:
/// @brief The basic information about the track. Note that a track may represent a single contiguous time span or consist of multiple slices.
/// Element TrackInformation of type "http://www.onvif.org/ver10/schema":TrackInformation.
    onvifXsd__TrackInformation*          TrackInformation               1;	///< Required element.
/// @brief If the track is a video track, exactly one of this structure shall be present and contain the video attributes.
/// Element VideoAttributes of type "http://www.onvif.org/ver10/schema":VideoAttributes.
    onvifXsd__VideoAttributes*           VideoAttributes                0;	///< Optional element.
/// @brief If the track is an audio track, exactly one of this structure shall be present and contain the audio attributes.
/// Element AudioAttributes of type "http://www.onvif.org/ver10/schema":AudioAttributes.
    onvifXsd__AudioAttributes*           AudioAttributes                0;	///< Optional element.
/// @brief If the track is an metadata track, exactly one of this structure shall be present and contain the metadata attributes.
/// Element MetadataAttributes of type "http://www.onvif.org/ver10/schema":MetadataAttributes.
    onvifXsd__MetadataAttributes*        MetadataAttributes             0;	///< Optional element.
/// @brief
/// Element Extension of type "http://www.onvif.org/ver10/schema":TrackAttributesExtension.
    onvifXsd__TrackAttributesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":TrackAttributesExtension is a complexType.
class onvifXsd__TrackAttributesExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":VideoAttributes is a complexType.
class onvifXsd__VideoAttributes : public xsd__anyType
{ public:
/// @brief Average bitrate in kbps.
/// Element Bitrate of type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// @brief The width of the video in pixels.
/// Element Width of type xs:int.
    int                                  Width                          1;	///< Required element.
/// @brief The height of the video in pixels.
/// Element Height of type xs:int.
    int                                  Height                         1;	///< Required element.
/// @brief Used video codec, either Jpeg, H.264 or Mpeg4
/// Element Encoding of type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum onvifXsd__VideoEncoding         Encoding                       1;	///< Required element.
/// @brief Average framerate in frames per second.
/// Element Framerate of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioAttributes is a complexType.
class onvifXsd__AudioAttributes : public xsd__anyType
{ public:
/// @brief The bitrate in kbps.
/// Element Bitrate of type xs:int.
    int*                                 Bitrate                        0;	///< Optional element.
/// @brief Audio codec used for encoding the audio (either G.711, G.726 or AAC)
/// Element Encoding of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum onvifXsd__AudioEncoding         Encoding                       1;	///< Required element.
/// @brief The sample rate in kHz.
/// Element Samplerate of type xs:int.
    int                                  Samplerate                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataAttributes is a complexType.
class onvifXsd__MetadataAttributes : public xsd__anyType
{ public:
/// @brief Indicates that there can be PTZ data in the metadata track in the specified time interval.
/// Element CanContainPTZ of type xs:boolean.
    bool                                 CanContainPTZ                  1;	///< Required element.
/// @brief Indicates that there can be analytics data in the metadata track in the specified time interval.
/// Element CanContainAnalytics of type xs:boolean.
    bool                                 CanContainAnalytics            1;	///< Required element.
/// @brief Indicates that there can be notifications in the metadata track in the specified time interval.
/// Element CanContainNotifications of type xs:boolean.
    bool                                 CanContainNotifications        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingConfiguration is a complexType.
class onvifXsd__RecordingConfiguration : public xsd__anyType
{ public:
/// @brief Information about the source of the recording.
/// Element Source of type "http://www.onvif.org/ver10/schema":RecordingSourceInformation.
    onvifXsd__RecordingSourceInformation*  Source                         1;	///< Required element.
/// @brief Informative description of the source.
/// Element Content of type "http://www.onvif.org/ver10/schema":Description.
    onvifXsd__Description                Content                        1;	///< Required element.
/// @brief Sspecifies the maximum time that data in any track within the recording shall be stored. The device shall delete any data older than the maximum retention time. Such data shall not be accessible anymore. If the MaximumRetentionPeriod is set to 0, the device shall not limit the retention time of stored data, except by resource constraints. Whatever the value of MaximumRetentionTime, the device may automatically delete recordings to free up storage space for new recordings.
/// Element MaximumRetentionTime of type xs:duration.
    xsd__duration                        MaximumRetentionTime           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":TrackConfiguration is a complexType.
class onvifXsd__TrackConfiguration : public xsd__anyType
{ public:
/// @brief Type of the track. It shall be equal to the strings Video, Audio or Metadata. The track shall only be able to hold data of that type.
/// Element TrackType of type "http://www.onvif.org/ver10/schema":TrackType.
    enum onvifXsd__TrackType             TrackType                      1;	///< Required element.
/// @brief Informative description of the track.
/// Element Description of type "http://www.onvif.org/ver10/schema":Description.
    onvifXsd__Description                Description                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":GetRecordingsResponseItem is a complexType.
class onvifXsd__GetRecordingsResponseItem : public xsd__anyType
{ public:
/// @brief Token of the recording.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onvifXsd__RecordingReference         RecordingToken                 1;	///< Required element.
/// @brief Configuration of the recording.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":RecordingConfiguration.
    onvifXsd__RecordingConfiguration*    Configuration                  1;	///< Required element.
/// @brief List of tracks.
/// Element Tracks of type "http://www.onvif.org/ver10/schema":GetTracksResponseList.
    onvifXsd__GetTracksResponseList*     Tracks                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":GetTracksResponseList is a complexType.
class onvifXsd__GetTracksResponseList : public xsd__anyType
{ public:
/// @brief Configuration of a track.
/// Vector of onvifXsd__GetTracksResponseItem* with length 0..unbounded
    std::vector<onvifXsd__GetTracksResponseItem*> Track                          0;
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":GetTracksResponseItem is a complexType.
class onvifXsd__GetTracksResponseItem : public xsd__anyType
{ public:
/// @brief Token of the track.
/// Element TrackToken of type "http://www.onvif.org/ver10/schema":TrackReference.
    onvifXsd__TrackReference             TrackToken                     1;	///< Required element.
/// @brief Configuration of the track.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":TrackConfiguration.
    onvifXsd__TrackConfiguration*        Configuration                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobConfiguration is a complexType.
class onvifXsd__RecordingJobConfiguration : public xsd__anyType
{ public:
/// @brief Identifies the recording to which this job shall store the received data.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onvifXsd__RecordingReference         RecordingToken                 1;	///< Required element.
/// @brief The mode of the job. If it is idle, nothing shall happen. If it is active, the device shall try to obtain data from the receivers. A client shall use GetRecordingJobState to determine if data transfer is really taking place.<br/> The only valid values for Mode shall be Idle and Active.
/// Element Mode of type "http://www.onvif.org/ver10/schema":RecordingJobMode.
    onvifXsd__RecordingJobMode           Mode                           1;	///< Required element.
/// @brief This shall be a positive number. If there are multiple recording jobs that store data to the same track, the device will only store the data for the recording job with the highest priority. The priority is specified per recording job, but the device shall determine the priority of each track individually. If there are two recording jobs with the same priority, the device shall record the data corresponding to the recording job that was activated the latest.
/// Element Priority of type xs:int.
    int                                  Priority                       1;	///< Required element.
/// @brief Source of the recording.
/// Vector of onvifXsd__RecordingJobSource* with length 0..unbounded
    std::vector<onvifXsd__RecordingJobSource*> Source                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension.
    onvifXsd__RecordingJobConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension is a complexType.
class onvifXsd__RecordingJobConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobSource is a complexType.
class onvifXsd__RecordingJobSource : public xsd__anyType
{ public:
/// @brief This field shall be a reference to the source of the data. The type of the source is determined by the attribute Type in the SourceToken structure. If Type is http://www.onvif.org/ver10/schema/Receiver, the token is a ReceiverReference. In this case the device shall receive the data over the network. If Type is http://www.onvif.org/ver10/schema/Profile, the token identifies a media profile, instructing the device to obtain data from a profile that exists on the local device.
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":SourceReference.
    onvifXsd__SourceReference*           SourceToken                    0;	///< Optional element.
/// @brief If this field is TRUE, and if the SourceToken is omitted, the device shall create a receiver object (through the receiver service) and assign the ReceiverReference to the SourceToken field. When retrieving the RecordingJobConfiguration from the device, the AutoCreateReceiver field shall never be present.
/// Element AutoCreateReceiver of type xs:boolean.
    bool*                                AutoCreateReceiver             0;	///< Optional element.
/// @brief List of tracks associated with the recording.
/// Vector of onvifXsd__RecordingJobTrack* with length 0..unbounded
    std::vector<onvifXsd__RecordingJobTrack*> Tracks                         0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension.
    onvifXsd__RecordingJobSourceExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension is a complexType.
class onvifXsd__RecordingJobSourceExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobTrack is a complexType.
class onvifXsd__RecordingJobTrack : public xsd__anyType
{ public:
/// @brief If the received RTSP stream contains multiple tracks of the same type, the SourceTag differentiates between those Tracks.
/// Element SourceTag of type xs:string.
    std::string                          SourceTag                      1;	///< Required element.
/// @brief The destination is the tracktoken of the track to which the device shall store the received data.
/// Element Destination of type "http://www.onvif.org/ver10/schema":TrackReference.
    onvifXsd__TrackReference             Destination                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateInformation is a complexType.
class onvifXsd__RecordingJobStateInformation : public xsd__anyType
{ public:
/// @brief Identification of the recording that the recording job records to.
/// Element RecordingToken of type "http://www.onvif.org/ver10/schema":RecordingReference.
    onvifXsd__RecordingReference         RecordingToken                 1;	///< Required element.
/// @brief Holds the aggregated state over the whole RecordingJobInformation structure.
/// Element State of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    onvifXsd__RecordingJobState          State                          1;	///< Required element.
/// @brief Identifies the data source of the recording job.
/// Vector of onvifXsd__RecordingJobStateSource* with length 0..unbounded
    std::vector<onvifXsd__RecordingJobStateSource*> Sources                        0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension.
    onvifXsd__RecordingJobStateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension is a complexType.
class onvifXsd__RecordingJobStateInformationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateSource is a complexType.
class onvifXsd__RecordingJobStateSource : public xsd__anyType
{ public:
/// @brief Identifies the data source of the recording job.
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":SourceReference.
    onvifXsd__SourceReference*           SourceToken                    1;	///< Required element.
/// @brief Holds the aggregated state over all substructures of RecordingJobStateSource.
/// Element State of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    onvifXsd__RecordingJobState          State                          1;	///< Required element.
/// @brief List of track items.
/// Element Tracks of type "http://www.onvif.org/ver10/schema":RecordingJobStateTracks.
    onvifXsd__RecordingJobStateTracks*   Tracks                         1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateTracks is a complexType.
class onvifXsd__RecordingJobStateTracks : public xsd__anyType
{ public:
/// Vector of onvifXsd__RecordingJobStateTrack* with length 0..unbounded
    std::vector<onvifXsd__RecordingJobStateTrack*> Track                          0;
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":RecordingJobStateTrack is a complexType.
class onvifXsd__RecordingJobStateTrack : public xsd__anyType
{ public:
/// @brief Identifies the track of the data source that provides the data.
/// Element SourceTag of type xs:string.
    std::string                          SourceTag                      1;	///< Required element.
/// @brief Indicates the destination track.
/// Element Destination of type "http://www.onvif.org/ver10/schema":TrackReference.
    onvifXsd__TrackReference             Destination                    1;	///< Required element.
/// @brief Optionally holds an implementation defined string value that describes the error. The string should be in the English language.
/// Element Error of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// @brief Provides the job state of the track. The valid values of state shall be Idle, Active and Error. If state equals Error, the Error field may be filled in with an implementation defined value.
/// Element State of type "http://www.onvif.org/ver10/schema":RecordingJobState.
    onvifXsd__RecordingJobState          State                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":GetRecordingJobsResponseItem is a complexType.
class onvifXsd__GetRecordingJobsResponseItem : public xsd__anyType
{ public:
/// Element JobToken of type "http://www.onvif.org/ver10/schema":RecordingJobReference.
    onvifXsd__RecordingJobReference      JobToken                       1;	///< Required element.
/// Element JobConfiguration of type "http://www.onvif.org/ver10/schema":RecordingJobConfiguration.
    onvifXsd__RecordingJobConfiguration*  JobConfiguration               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ReplayConfiguration is a complexType.
/// @brief Configuration parameters for the replay service.
class onvifXsd__ReplayConfiguration : public xsd__anyType
{ public:
/// @brief The RTSP session timeout.
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration is a complexType.
class onvifXsd__AnalyticsDeviceEngineConfiguration : public xsd__anyType
{ public:
/// Vector of onvifXsd__EngineConfiguration* with length 1..unbounded
    std::vector<onvifXsd__EngineConfiguration*> EngineConfiguration            1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension.
    onvifXsd__AnalyticsDeviceEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension is a complexType.
class onvifXsd__AnalyticsDeviceEngineConfigurationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":EngineConfiguration is a complexType.
class onvifXsd__EngineConfiguration : public xsd__anyType
{ public:
/// Element VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    onvifXsd__VideoAnalyticsConfiguration*  VideoAnalyticsConfiguration    1;	///< Required element.
/// Element AnalyticsEngineInputInfo of type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo.
    onvifXsd__AnalyticsEngineInputInfo*  AnalyticsEngineInputInfo       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo is a complexType.
class onvifXsd__AnalyticsEngineInputInfo : public xsd__anyType
{ public:
/// Element InputInfo of type "http://www.onvif.org/ver10/schema":Config.
    onvifXsd__Config*                    InputInfo                      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension.
    onvifXsd__AnalyticsEngineInputInfoExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension is a complexType.
class onvifXsd__AnalyticsEngineInputInfoExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":SourceIdentification is a complexType.
class onvifXsd__SourceIdentification : public xsd__anyType
{ public:
/// Element Name of type xs:string.
    std::string                          Name                           1;	///< Required element.
/// Vector of onvifXsd__ReferenceToken with length 1..unbounded
    std::vector<onvifXsd__ReferenceToken> Token                          1;
/// Element Extension of type "http://www.onvif.org/ver10/schema":SourceIdentificationExtension.
    onvifXsd__SourceIdentificationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":SourceIdentificationExtension is a complexType.
class onvifXsd__SourceIdentificationExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":MetadataInput is a complexType.
class onvifXsd__MetadataInput : public xsd__anyType
{ public:
/// Vector of onvifXsd__Config* with length 0..unbounded
    std::vector<onvifXsd__Config*      > MetadataConfig                 0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":MetadataInputExtension.
    onvifXsd__MetadataInputExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataInputExtension is a complexType.
class onvifXsd__MetadataInputExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsStateInformation is a complexType.
class onvifXsd__AnalyticsStateInformation : public xsd__anyType
{ public:
/// @brief Token of the control object whose status is requested.
/// Element AnalyticsEngineControlToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             AnalyticsEngineControlToken    1;	///< Required element.
/// Element State of type "http://www.onvif.org/ver10/schema":AnalyticsState.
    onvifXsd__AnalyticsState*            State                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsState is a complexType.
class onvifXsd__AnalyticsState : public xsd__anyType
{ public:
/// Element Error of type xs:string.
    std::string*                         Error                          0;	///< Optional element.
/// Element State of type xs:string.
    std::string                          State                          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ActionEngineEventPayload is a complexType.
/// @brief Action Engine Event Payload data structure contains the information about the ONVIF command invocations. Since this event could be generated by other or proprietary actions, the command invocation specific fields are defined as optional and additional extension mechanism is provided for future or additional action definitions.
class onvifXsd__ActionEngineEventPayload : public xsd__anyType
{ public:
/// @brief Request Message
/// Element RequestInfo of type SOAP-ENV:Envelope.
    SOAP_ENV__Envelope*                  RequestInfo                    0;	///< Optional element.
/// @brief Response Message
/// Element ResponseInfo of type SOAP-ENV:Envelope.
    SOAP_ENV__Envelope*                  ResponseInfo                   0;	///< Optional element.
/// @brief Fault Message
/// Element Fault of type SOAP-ENV:Fault.
    struct SOAP_ENV__Fault*              Fault                          0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension.
    onvifXsd__ActionEngineEventPayloadExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension is a complexType.
class onvifXsd__ActionEngineEventPayloadExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/// Top-level root element "http://www.onvif.org/ver10/schema":Message

/// "http://www.onvif.org/ver10/schema":Message is a complexType.
class _onvifXsd__Message
{ public:
/// @brief Token value pairs that triggered this message. Typically only one item is present.
/// Element Source of type "http://www.onvif.org/ver10/schema":ItemList.
    onvifXsd__ItemList*                  Source                         0;	///< Optional element.
/// Element Key of type "http://www.onvif.org/ver10/schema":ItemList.
    onvifXsd__ItemList*                  Key                            0;	///< Optional element.
/// Element Data of type "http://www.onvif.org/ver10/schema":ItemList.
    onvifXsd__ItemList*                  Data                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MessageExtension.
    onvifXsd__MessageExtension*          Extension                      0;	///< Optional element.
/// Attribute UtcTime of type xs:dateTime.
   @time_t                               UtcTime                        1;	///< Required attribute.
/// Attribute PropertyOperation of type "http://www.onvif.org/ver10/schema":PropertyOperation.
   @enum onvifXsd__PropertyOperation*    PropertyOperation              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/// "http://www.w3.org/2004/08/xop/include":Include is a complexType.
class ns5__Include : public xsd__anyType
{ public:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute href of type xs:anyURI.
   @xsd__anyURI                          href                           1;	///< Required attribute.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/events/wsdl":Capabilities is a complexType.
class onvifEvents__Capabilities : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Indicates that the WS Subscription policy is supported.
/// Attribute WSSubscriptionPolicySupport of type xs:boolean.
   @bool*                                WSSubscriptionPolicySupport    0;	///< Optional attribute.
/// @brief Indicates that the WS Pull Point is supported.
/// Attribute WSPullPointSupport of type xs:boolean.
   @bool*                                WSPullPointSupport             0;	///< Optional attribute.
/// @brief Indicates that the WS Pausable Subscription Manager Interface is supported.
/// Attribute WSPausableSubscriptionManagerInterfaceSupport of type xs:boolean.
   @bool*                                WSPausableSubscriptionManagerInterfaceSupport 0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilities is a complexType.
class _onvifEvents__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver10/events/wsdl":GetServiceCapabilitiesResponse is a complexType.
class _onvifEvents__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the event service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
    onvifEvents__Capabilities*           Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription

/// "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscription is a complexType.
class _onvifEvents__CreatePullPointSubscription
{ public:
/// @brief Optional XPATH expression to select specific topics.
/// Element Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    oasisWsnB2__FilterType*              Filter                         0;	///< Optional element.
/// @brief Initial termination time.
/// Element InitialTerminationTime of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    oasisWsnB2__AbsoluteOrRelativeTimeType*  InitialTerminationTime         0;	///< Nullable pointer.
/// @brief Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a>.
    class _onvifEvents__CreatePullPointSubscription_SubscriptionPolicy
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse

/// "http://www.onvif.org/ver10/events/wsdl":CreatePullPointSubscriptionResponse is a complexType.
class _onvifEvents__CreatePullPointSubscriptionResponse
{ public:
/// @brief Endpoint reference of the subscription to be used for pulling the messages.
/// Element SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          SubscriptionReference          1;	///< Required element.
/// @brief Current time of the server for synchronization purposes.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t                               oasisWsnB2__CurrentTime        1;	///< Required element.
/// @brief Date time when the PullPoint will be shut down without further pull requests.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               oasisWsnB2__TerminationTime    1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessages

/// "http://www.onvif.org/ver10/events/wsdl":PullMessages is a complexType.
class _onvifEvents__PullMessages
{ public:
/// @brief Maximum time to block until this method returns.
/// Element Timeout of type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// @brief Upper limit for the number of messages to return at once. A server implementation may decide to return less messages.
/// Element MessageLimit of type xs:int.
    int                                  MessageLimit                   1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse

/// "http://www.onvif.org/ver10/events/wsdl":PullMessagesResponse is a complexType.
class _onvifEvents__PullMessagesResponse
{ public:
/// @brief The date and time when the messages have been delivered by the web server to the client.
/// Element CurrentTime of type xs:dateTime.
    time_t                               CurrentTime                    1;	///< Required element.
/// @brief Date time when the PullPoint will be shut down without further pull requests.
/// Element TerminationTime of type xs:dateTime.
    time_t                               TerminationTime                1;	///< Required element.
/// @brief List of messages. This list shall be empty in case of a timeout.
/// Vector of oasisWsnB2__NotificationMessageHolderType* element refs with length 0..unbounded
    std::vector<oasisWsnB2__NotificationMessageHolderType*> oasisWsnB2__NotificationMessage 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse

/// "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse is a complexType.
class _onvifEvents__PullMessagesFaultResponse
{ public:
/// @brief Maximum timeout supported by the device.
/// Element MaxTimeout of type xs:duration.
    xsd__duration                        MaxTimeout                     1;	///< Required element.
/// @brief Maximum message limit supported by the device.
/// Element MaxMessageLimit of type xs:int.
    int                                  MaxMessageLimit                1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint

/// "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPoint is a complexType.
class _onvifEvents__SetSynchronizationPoint
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse

/// "http://www.onvif.org/ver10/events/wsdl":SetSynchronizationPointResponse is a complexType.
class _onvifEvents__SetSynchronizationPointResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventProperties

/// "http://www.onvif.org/ver10/events/wsdl":GetEventProperties is a complexType.
class _onvifEvents__GetEventProperties
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse

/// "http://www.onvif.org/ver10/events/wsdl":GetEventPropertiesResponse is a complexType.
class _onvifEvents__GetEventPropertiesResponse
{ public:
/// @brief List of topic namespaces supported.
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > TopicNamespaceLocation         1;
/// @brief True when topicset is fixed for all times.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet.
    bool                                 oasisWsnB2__FixedTopicSet      1;	///< Required element.
/// @brief Set of topics supported.
/// Element reference "http://docs.oasis-open.org/wsn/t-1":TopicSet.
    oasisWsnT1__TopicSetType*            oasisWsnT1__TopicSet           1;	///< Required element.
/// @brief Defines the XPath expression syntax supported for matching topic expressions. <br/> The following TopicExpressionDialects are mandatory for an ONVIF compliant device (see Section 15.7.3): <ul type="disc"> <li>http://docs.oasis-open.org/wsn/t-1/TopicExpression/Concrete</li> <li>http://www.onvif.org/ver10/tev/topicExpression/ConcreteSet.</li> </ul>
/// Vector of xsd__anyURI element refs with length 1..unbounded
    std::vector<xsd__anyURI            > oasisWsnB2__TopicExpressionDialect 1;
/// @brief Defines the XPath function set supported for message content filtering.<br/> The following MessageContentFilterDialects are mandatory for an ONVIF compliant device(see Section 15.5.5): <ul type="disc"> <li>http://www.onvif.org/ver10/tev/messageContentFilter/ItemFilter.</li> </ul>
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > MessageContentFilterDialect    1;
/// @brief Optional ProducerPropertiesDialects. Refer to <a href="http://docs.oasis-open.org/wsn/wsn-ws_base_notification-1.3-spec-os.htm">Web Services Base Notification 1.3 (WS-BaseNotification)</a> for advanced filtering.
/// Vector of xsd__anyURI with length 0..unbounded
    std::vector<xsd__anyURI            > ProducerPropertiesFilterDialect 0;
/// @brief The Message Content Description Language, introduced in Section 15.5.4, allows referencing of vendor-specific types. In order to ease the integration of such types into a client application, the GetEventPropertiesResponse shall list all URI locations to schema files whose types are used in the description of notifications, with MessageContentSchemaLocation elements.<br/> This list shall at least contain the URI of the ONVIF schema file.
/// Vector of xsd__anyURI with length 1..unbounded
    std::vector<xsd__anyURI            > MessageContentSchemaLocation   1;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver20/imaging/wsdl":Capabilities is a complexType.
class onvifImg__Capabilities : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Indicates whether or not Image Stabilization feature is supported.
/// Attribute ImageStabilization of type xs:boolean.
   @bool*                                ImageStabilization             0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilities is a complexType.
class _onvifImg__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetServiceCapabilitiesResponse is a complexType.
class _onvifImg__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the imaging service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver20/imaging/wsdl":Capabilities.
    onvifImg__Capabilities*              Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettings

/// "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettings is a complexType.
class _onvifImg__GetImagingSettings
{ public:
/// @brief Reference token to the VideoSource for which the ImagingSettings.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettingsResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetImagingSettingsResponse is a complexType.
class _onvifImg__GetImagingSettingsResponse
{ public:
/// @brief ImagingSettings for the VideoSource that was requested.
/// Element ImagingSettings of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    onvifXsd__ImagingSettings20*         ImagingSettings                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettings

/// "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettings is a complexType.
class _onvifImg__SetImagingSettings
{ public:
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             VideoSourceToken               1;	///< Required element.
/// Element ImagingSettings of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    onvifXsd__ImagingSettings20*         ImagingSettings                1;	///< Required element.
/// Element ForcePersistence  of type xs:boolean.
    bool*                                ForcePersistence_x0020         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettingsResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":SetImagingSettingsResponse is a complexType.
class _onvifImg__SetImagingSettingsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetOptions

/// "http://www.onvif.org/ver20/imaging/wsdl":GetOptions is a complexType.
class _onvifImg__GetOptions
{ public:
/// @brief Reference token to the VideoSource for which the imaging parameter options are requested.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetOptionsResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetOptionsResponse is a complexType.
class _onvifImg__GetOptionsResponse
{ public:
/// @brief Valid ranges for the imaging parameters that are categorized as device specific.
/// Element ImagingOptions of type "http://www.onvif.org/ver10/schema":ImagingOptions20.
    onvifXsd__ImagingOptions20*          ImagingOptions                 1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Move

/// "http://www.onvif.org/ver20/imaging/wsdl":Move is a complexType.
class _onvifImg__Move
{ public:
/// @brief Reference to the VideoSource for the requested move (focus) operation.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             VideoSourceToken               1;	///< Required element.
/// @brief Content of the requested move (focus) operation.
/// Element Focus of type "http://www.onvif.org/ver10/schema":FocusMove.
    onvifXsd__FocusMove*                 Focus                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":MoveResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":MoveResponse is a complexType.
class _onvifImg__MoveResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptions

/// "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptions is a complexType.
class _onvifImg__GetMoveOptions
{ public:
/// @brief Reference token to the VideoSource for the requested move options.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptionsResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetMoveOptionsResponse is a complexType.
class _onvifImg__GetMoveOptionsResponse
{ public:
/// @brief Valid ranges for the focus lens move options.
/// Element MoveOptions of type "http://www.onvif.org/ver10/schema":MoveOptions20.
    onvifXsd__MoveOptions20*             MoveOptions                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Stop

/// "http://www.onvif.org/ver20/imaging/wsdl":Stop is a complexType.
class _onvifImg__Stop
{ public:
/// @brief Reference token to the VideoSource where the focus movement should be stopped.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":StopResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":StopResponse is a complexType.
class _onvifImg__StopResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetStatus

/// "http://www.onvif.org/ver20/imaging/wsdl":GetStatus is a complexType.
class _onvifImg__GetStatus
{ public:
/// @brief Reference token to the VideoSource where the imaging status should be requested.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             VideoSourceToken               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":GetStatusResponse

/// "http://www.onvif.org/ver20/imaging/wsdl":GetStatusResponse is a complexType.
class _onvifImg__GetStatusResponse
{ public:
/// @brief Requested imaging status.
/// Element Status of type "http://www.onvif.org/ver10/schema":ImagingStatus20.
    onvifXsd__ImagingStatus20*           Status                         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/media/wsdl":Capabilities is a complexType.
class onvifMedia__Capabilities : public xsd__anyType
{ public:
/// @brief Media profile capabilities.
/// Element ProfileCapabilities of type "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities.
    onvifMedia__ProfileCapabilities*     ProfileCapabilities            1;	///< Required element.
/// @brief Streaming capabilities.
/// Element StreamingCapabilities of type "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities.
    onvifMedia__StreamingCapabilities*   StreamingCapabilities          1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Indicates if GetSnapshotUri is supported.
/// Attribute SnapshotUri of type xs:boolean.
   @bool*                                SnapshotUri                    0;	///< Optional attribute.
/// @brief Indicates whether or not Rotation feature is supported.
/// Attribute Rotation of type xs:boolean.
   @bool*                                Rotation                       0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities is a complexType.
class onvifMedia__ProfileCapabilities : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Maximum number of profiles supported.
/// Attribute MaximumNumberOfProfiles of type xs:int.
   @int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities is a complexType.
class onvifMedia__StreamingCapabilities : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Indicates support for RTP multicast.
/// Attribute RTPMulticast of type xs:boolean.
   @bool*                                RTPMulticast                   0;	///< Optional attribute.
/// @brief Indicates support for RTP over TCP.
/// Attribute RTP_TCP of type xs:boolean.
   @bool*                                RTP_USCORETCP                  0;	///< Optional attribute.
/// @brief Indicates support for RTP/RTSP/TCP.
/// Attribute RTP_RTSP_TCP of type xs:boolean.
   @bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// @brief Indicates support for non aggregate RTSP control.
/// Attribute NonAggregateControl of type xs:boolean.
   @bool*                                NonAggregateControl            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities is a complexType.
class _onvifMedia__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse is a complexType.
class _onvifMedia__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the media service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
    onvifMedia__Capabilities*            Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSources

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSources is a complexType.
class _onvifMedia__GetVideoSources
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse is a complexType.
class _onvifMedia__GetVideoSourcesResponse
{ public:
/// @brief List of existing Video Sources
/// Vector of onvifXsd__VideoSource* with length 0..unbounded
    std::vector<onvifXsd__VideoSource* > VideoSources                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSources

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSources is a complexType.
class _onvifMedia__GetAudioSources
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse is a complexType.
class _onvifMedia__GetAudioSourcesResponse
{ public:
/// @brief List of existing Audio Sources
/// Vector of onvifXsd__AudioSource* with length 0..unbounded
    std::vector<onvifXsd__AudioSource* > AudioSources                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs is a complexType.
class _onvifMedia__GetAudioOutputs
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse is a complexType.
class _onvifMedia__GetAudioOutputsResponse
{ public:
/// @brief List of existing Audio Outputs
/// Vector of onvifXsd__AudioOutput* with length 0..unbounded
    std::vector<onvifXsd__AudioOutput* > AudioOutputs                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfile

/// "http://www.onvif.org/ver10/media/wsdl":CreateProfile is a complexType.
class _onvifMedia__CreateProfile
{ public:
/// @brief friendly name of the profile to be created
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Optional token, specifying the unique identifier of the new profile. <br/>A device supports at least a token length of 12 characters and characters "A-Z" | "a-z" | "0-9" | "-.".
/// Element Token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            Token                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse

/// "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse is a complexType.
class _onvifMedia__CreateProfileResponse
{ public:
/// @brief returns the new created profile
/// Element Profile of type "http://www.onvif.org/ver10/schema":Profile.
    onvifXsd__Profile*                   Profile                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfile

/// "http://www.onvif.org/ver10/media/wsdl":GetProfile is a complexType.
class _onvifMedia__GetProfile
{ public:
/// @brief this command requests a specific profile
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse is a complexType.
class _onvifMedia__GetProfileResponse
{ public:
/// @brief returns the requested media profile
/// Element Profile of type "http://www.onvif.org/ver10/schema":Profile.
    onvifXsd__Profile*                   Profile                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfiles

/// "http://www.onvif.org/ver10/media/wsdl":GetProfiles is a complexType.
class _onvifMedia__GetProfiles
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse is a complexType.
class _onvifMedia__GetProfilesResponse
{ public:
/// @brief lists all profiles that exist in the media service
/// Vector of onvifXsd__Profile* with length 0..unbounded
    std::vector<onvifXsd__Profile*     > Profiles                       0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration is a complexType.
class _onvifMedia__AddVideoEncoderConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the VideoEncoderConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse is a complexType.
class _onvifMedia__AddVideoEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration is a complexType.
class _onvifMedia__RemoveVideoEncoderConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the VideoEncoderConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse is a complexType.
class _onvifMedia__RemoveVideoEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration is a complexType.
class _onvifMedia__AddVideoSourceConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the VideoSourceConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse is a complexType.
class _onvifMedia__AddVideoSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration is a complexType.
class _onvifMedia__RemoveVideoSourceConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the VideoSourceConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse is a complexType.
class _onvifMedia__RemoveVideoSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration is a complexType.
class _onvifMedia__AddAudioEncoderConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the AudioEncoderConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse is a complexType.
class _onvifMedia__AddAudioEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration is a complexType.
class _onvifMedia__RemoveAudioEncoderConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the AudioEncoderConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse is a complexType.
class _onvifMedia__RemoveAudioEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration is a complexType.
class _onvifMedia__AddAudioSourceConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the AudioSourceConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse is a complexType.
class _onvifMedia__AddAudioSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration is a complexType.
class _onvifMedia__RemoveAudioSourceConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the AudioSourceConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse is a complexType.
class _onvifMedia__RemoveAudioSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration is a complexType.
class _onvifMedia__AddPTZConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the PTZConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse is a complexType.
class _onvifMedia__AddPTZConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration is a complexType.
class _onvifMedia__RemovePTZConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the PTZConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse is a complexType.
class _onvifMedia__RemovePTZConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration is a complexType.
class _onvifMedia__AddVideoAnalyticsConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the VideoAnalyticsConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse is a complexType.
class _onvifMedia__AddVideoAnalyticsConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration is a complexType.
class _onvifMedia__RemoveVideoAnalyticsConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the VideoAnalyticsConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse is a complexType.
class _onvifMedia__RemoveVideoAnalyticsConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration is a complexType.
class _onvifMedia__AddMetadataConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the MetadataConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse is a complexType.
class _onvifMedia__AddMetadataConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration is a complexType.
class _onvifMedia__RemoveMetadataConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the MetadataConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse is a complexType.
class _onvifMedia__RemoveMetadataConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration is a complexType.
class _onvifMedia__AddAudioOutputConfiguration
{ public:
/// @brief Reference to the profile where the configuration should be added
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief Contains a reference to the AudioOutputConfiguration to add
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse is a complexType.
class _onvifMedia__AddAudioOutputConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration is a complexType.
class _onvifMedia__RemoveAudioOutputConfiguration
{ public:
/// @brief Contains a reference to the media profile from which the AudioOutputConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse is a complexType.
class _onvifMedia__RemoveAudioOutputConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration is a complexType.
class _onvifMedia__AddAudioDecoderConfiguration
{ public:
/// @brief This element contains a reference to the profile where the configuration should be added.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief This element contains a reference to the AudioDecoderConfiguration to add.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse is a complexType.
class _onvifMedia__AddAudioDecoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration is a complexType.
class _onvifMedia__RemoveAudioDecoderConfiguration
{ public:
/// @brief This element contains a reference to the media profile from which the AudioDecoderConfiguration shall be removed.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse is a complexType.
class _onvifMedia__RemoveAudioDecoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfile

/// "http://www.onvif.org/ver10/media/wsdl":DeleteProfile is a complexType.
class _onvifMedia__DeleteProfile
{ public:
/// @brief This element contains a reference to the profile that should be deleted.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse

/// "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse is a complexType.
class _onvifMedia__DeleteProfileResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations is a complexType.
class _onvifMedia__GetVideoEncoderConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse is a complexType.
class _onvifMedia__GetVideoEncoderConfigurationsResponse
{ public:
/// @brief This element contains a list of video encoder configurations.
/// Vector of onvifXsd__VideoEncoderConfiguration* with length 0..unbounded
    std::vector<onvifXsd__VideoEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations is a complexType.
class _onvifMedia__GetVideoSourceConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse is a complexType.
class _onvifMedia__GetVideoSourceConfigurationsResponse
{ public:
/// @brief This element contains a list of video source configurations.
/// Vector of onvifXsd__VideoSourceConfiguration* with length 0..unbounded
    std::vector<onvifXsd__VideoSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations is a complexType.
class _onvifMedia__GetAudioEncoderConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse is a complexType.
class _onvifMedia__GetAudioEncoderConfigurationsResponse
{ public:
/// @brief This element contains a list of audio encoder configurations.
/// Vector of onvifXsd__AudioEncoderConfiguration* with length 0..unbounded
    std::vector<onvifXsd__AudioEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations is a complexType.
class _onvifMedia__GetAudioSourceConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse is a complexType.
class _onvifMedia__GetAudioSourceConfigurationsResponse
{ public:
/// @brief This element contains a list of audio source configurations.
/// Vector of onvifXsd__AudioSourceConfiguration* with length 0..unbounded
    std::vector<onvifXsd__AudioSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations is a complexType.
class _onvifMedia__GetVideoAnalyticsConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse is a complexType.
class _onvifMedia__GetVideoAnalyticsConfigurationsResponse
{ public:
/// @brief This element contains a list of VideoAnalytics configurations.
/// Vector of onvifXsd__VideoAnalyticsConfiguration* with length 0..unbounded
    std::vector<onvifXsd__VideoAnalyticsConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations is a complexType.
class _onvifMedia__GetMetadataConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse is a complexType.
class _onvifMedia__GetMetadataConfigurationsResponse
{ public:
/// @brief This element contains a list of metadata configurations
/// Vector of onvifXsd__MetadataConfiguration* with length 0..unbounded
    std::vector<onvifXsd__MetadataConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations is a complexType.
class _onvifMedia__GetAudioOutputConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse is a complexType.
class _onvifMedia__GetAudioOutputConfigurationsResponse
{ public:
/// @brief This element contains a list of audio output configurations
/// Vector of onvifXsd__AudioOutputConfiguration* with length 0..unbounded
    std::vector<onvifXsd__AudioOutputConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations is a complexType.
class _onvifMedia__GetAudioDecoderConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse is a complexType.
class _onvifMedia__GetAudioDecoderConfigurationsResponse
{ public:
/// @brief This element contains a list of audio decoder configurations
/// Vector of onvifXsd__AudioDecoderConfiguration* with length 0..unbounded
    std::vector<onvifXsd__AudioDecoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration is a complexType.
class _onvifMedia__GetVideoSourceConfiguration
{ public:
/// @brief Token of the requested video source configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse is a complexType.
class _onvifMedia__GetVideoSourceConfigurationResponse
{ public:
/// @brief The requested video source configuration.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    onvifXsd__VideoSourceConfiguration*  Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration is a complexType.
class _onvifMedia__GetVideoEncoderConfiguration
{ public:
/// @brief Token of the requested video encoder configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse is a complexType.
class _onvifMedia__GetVideoEncoderConfigurationResponse
{ public:
/// @brief The requested video encoder configuration.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    onvifXsd__VideoEncoderConfiguration*  Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration is a complexType.
class _onvifMedia__GetAudioSourceConfiguration
{ public:
/// @brief Token of the requested audio source configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse is a complexType.
class _onvifMedia__GetAudioSourceConfigurationResponse
{ public:
/// @brief The requested audio source configuration.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    onvifXsd__AudioSourceConfiguration*  Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration is a complexType.
class _onvifMedia__GetAudioEncoderConfiguration
{ public:
/// @brief Token of the requested audio encoder configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse is a complexType.
class _onvifMedia__GetAudioEncoderConfigurationResponse
{ public:
/// @brief The requested audio encoder configuration
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    onvifXsd__AudioEncoderConfiguration*  Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration is a complexType.
class _onvifMedia__GetVideoAnalyticsConfiguration
{ public:
/// @brief Token of the requested video analytics configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse is a complexType.
class _onvifMedia__GetVideoAnalyticsConfigurationResponse
{ public:
/// @brief The requested video analytics configuration.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    onvifXsd__VideoAnalyticsConfiguration*  Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration is a complexType.
class _onvifMedia__GetMetadataConfiguration
{ public:
/// @brief Token of the requested metadata configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse is a complexType.
class _onvifMedia__GetMetadataConfigurationResponse
{ public:
/// @brief The requested metadata configuration.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    onvifXsd__MetadataConfiguration*     Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration is a complexType.
class _onvifMedia__GetAudioOutputConfiguration
{ public:
/// @brief Token of the requested audio output configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse is a complexType.
class _onvifMedia__GetAudioOutputConfigurationResponse
{ public:
/// @brief The requested audio output configuration.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    onvifXsd__AudioOutputConfiguration*  Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration is a complexType.
class _onvifMedia__GetAudioDecoderConfiguration
{ public:
/// @brief Token of the requested audio decoder configuration.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse is a complexType.
class _onvifMedia__GetAudioDecoderConfigurationResponse
{ public:
/// @brief The requested audio decoder configuration
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    onvifXsd__AudioDecoderConfiguration*  Configuration                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations is a complexType.
class _onvifMedia__GetCompatibleVideoEncoderConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse is a complexType.
class _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse
{ public:
/// @brief Contains a list of video encoder configurations that are compatible with the specified media profile.
/// Vector of onvifXsd__VideoEncoderConfiguration* with length 0..unbounded
    std::vector<onvifXsd__VideoEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations is a complexType.
class _onvifMedia__GetCompatibleVideoSourceConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse is a complexType.
class _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse
{ public:
/// @brief Contains a list of video source configurations that are compatible with the specified media profile.
/// Vector of onvifXsd__VideoSourceConfiguration* with length 0..unbounded
    std::vector<onvifXsd__VideoSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations is a complexType.
class _onvifMedia__GetCompatibleAudioEncoderConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse is a complexType.
class _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse
{ public:
/// @brief Contains a list of audio encoder configurations that are compatible with the specified media profile.
/// Vector of onvifXsd__AudioEncoderConfiguration* with length 0..unbounded
    std::vector<onvifXsd__AudioEncoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations is a complexType.
class _onvifMedia__GetCompatibleAudioSourceConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse is a complexType.
class _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse
{ public:
/// @brief Contains a list of audio source configurations that are compatible with the specified media profile.
/// Vector of onvifXsd__AudioSourceConfiguration* with length 0..unbounded
    std::vector<onvifXsd__AudioSourceConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations is a complexType.
class _onvifMedia__GetCompatibleVideoAnalyticsConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse is a complexType.
class _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse
{ public:
/// @brief Contains a list of video analytics configurations that are compatible with the specified media profile.
/// Vector of onvifXsd__VideoAnalyticsConfiguration* with length 0..unbounded
    std::vector<onvifXsd__VideoAnalyticsConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations is a complexType.
class _onvifMedia__GetCompatibleMetadataConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse is a complexType.
class _onvifMedia__GetCompatibleMetadataConfigurationsResponse
{ public:
/// @brief Contains a list of metadata configurations that are compatible with the specified media profile.
/// Vector of onvifXsd__MetadataConfiguration* with length 0..unbounded
    std::vector<onvifXsd__MetadataConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations is a complexType.
class _onvifMedia__GetCompatibleAudioOutputConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse is a complexType.
class _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse
{ public:
/// @brief Contains a list of audio output configurations that are compatible with the specified media profile.
/// Vector of onvifXsd__AudioOutputConfiguration* with length 0..unbounded
    std::vector<onvifXsd__AudioOutputConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations is a complexType.
class _onvifMedia__GetCompatibleAudioDecoderConfigurations
{ public:
/// @brief Contains the token of an existing media profile the configurations shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse is a complexType.
class _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse
{ public:
/// @brief Contains a list of audio decoder configurations that are compatible with the specified media profile.
/// Vector of onvifXsd__AudioDecoderConfiguration* with length 0..unbounded
    std::vector<onvifXsd__AudioDecoderConfiguration*> Configurations                 0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration is a complexType.
class _onvifMedia__SetVideoEncoderConfiguration
{ public:
/// @brief Contains the modified video encoder configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    onvifXsd__VideoEncoderConfiguration*  Configuration                  1;	///< Required element.
/// @brief Determines if the configuration changes shall be stored and remain after reboot. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse is a complexType.
class _onvifMedia__SetVideoEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration is a complexType.
class _onvifMedia__SetVideoSourceConfiguration
{ public:
/// @brief Contains the modified video source configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    onvifXsd__VideoSourceConfiguration*  Configuration                  1;	///< Required element.
/// @brief Determines if the configuration changes shall be stored and remain after reboot. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse is a complexType.
class _onvifMedia__SetVideoSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration is a complexType.
class _onvifMedia__SetAudioEncoderConfiguration
{ public:
/// @brief Contains the modified audio encoder configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    onvifXsd__AudioEncoderConfiguration*  Configuration                  1;	///< Required element.
/// @brief Determines if the configuration changes shall be stored and remain after reboot. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse is a complexType.
class _onvifMedia__SetAudioEncoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration is a complexType.
class _onvifMedia__SetAudioSourceConfiguration
{ public:
/// @brief Contains the modified audio source configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    onvifXsd__AudioSourceConfiguration*  Configuration                  1;	///< Required element.
/// @brief Determines if the configuration changes shall be stored and remain after reboot. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse is a complexType.
class _onvifMedia__SetAudioSourceConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration is a complexType.
class _onvifMedia__SetVideoAnalyticsConfiguration
{ public:
/// @brief Contains the modified video analytics configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    onvifXsd__VideoAnalyticsConfiguration*  Configuration                  1;	///< Required element.
/// @brief Determines if the configuration changes shall be stored and remain after reboot. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse is a complexType.
class _onvifMedia__SetVideoAnalyticsConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration is a complexType.
class _onvifMedia__SetMetadataConfiguration
{ public:
/// @brief Contains the modified metadata configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    onvifXsd__MetadataConfiguration*     Configuration                  1;	///< Required element.
/// @brief Determines if the configuration changes shall be stored and remain after reboot. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse is a complexType.
class _onvifMedia__SetMetadataConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration is a complexType.
class _onvifMedia__SetAudioOutputConfiguration
{ public:
/// @brief Contains the modified audio output configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    onvifXsd__AudioOutputConfiguration*  Configuration                  1;	///< Required element.
/// @brief Determines if the configuration changes shall be stored and remain after reboot. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse is a complexType.
class _onvifMedia__SetAudioOutputConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration is a complexType.
class _onvifMedia__SetAudioDecoderConfiguration
{ public:
/// @brief Contains the modified audio decoder configuration. The configuration shall exist in the device.
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    onvifXsd__AudioDecoderConfiguration*  Configuration                  1;	///< Required element.
/// @brief Determines if the configuration changes shall be stored and remain after reboot. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse is a complexType.
class _onvifMedia__SetAudioDecoderConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions is a complexType.
class _onvifMedia__GetVideoSourceConfigurationOptions
{ public:
/// @brief Optional video source configurationToken that specifies an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ConfigurationToken             0;	///< Optional element.
/// @brief Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
class _onvifMedia__GetVideoSourceConfigurationOptionsResponse
{ public:
/// @brief This message contains the video source configuration options. If a video source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// Element Options of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    onvifXsd__VideoSourceConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions is a complexType.
class _onvifMedia__GetVideoEncoderConfigurationOptions
{ public:
/// @brief Optional video encoder configuration token that specifies an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ConfigurationToken             0;	///< Optional element.
/// @brief Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse is a complexType.
class _onvifMedia__GetVideoEncoderConfigurationOptionsResponse
{ public:
/// Element Options of type "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions.
    onvifXsd__VideoEncoderConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions is a complexType.
class _onvifMedia__GetAudioSourceConfigurationOptions
{ public:
/// @brief Optional audio source configuration token that specifies an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ConfigurationToken             0;	///< Optional element.
/// @brief Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
class _onvifMedia__GetAudioSourceConfigurationOptionsResponse
{ public:
/// @brief This message contains the audio source configuration options. If a audio source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// Element Options of type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    onvifXsd__AudioSourceConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions is a complexType.
class _onvifMedia__GetAudioEncoderConfigurationOptions
{ public:
/// @brief Optional audio encoder configuration token that specifies an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ConfigurationToken             0;	///< Optional element.
/// @brief Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse is a complexType.
class _onvifMedia__GetAudioEncoderConfigurationOptionsResponse
{ public:
/// @brief This message contains the audio encoder configuration options. If a audio encoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// Element Options of type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    onvifXsd__AudioEncoderConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions is a complexType.
class _onvifMedia__GetMetadataConfigurationOptions
{ public:
/// @brief Optional metadata configuration token that specifies an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ConfigurationToken             0;	///< Optional element.
/// @brief Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse is a complexType.
class _onvifMedia__GetMetadataConfigurationOptionsResponse
{ public:
/// @brief This message contains the metadata configuration options. If a metadata configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// Element Options of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions.
    onvifXsd__MetadataConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions is a complexType.
class _onvifMedia__GetAudioOutputConfigurationOptions
{ public:
/// @brief Optional audio output configuration token that specifies an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ConfigurationToken             0;	///< Optional element.
/// @brief Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
class _onvifMedia__GetAudioOutputConfigurationOptionsResponse
{ public:
/// @brief This message contains the audio output configuration options. If a audio output configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// Element Options of type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    onvifXsd__AudioOutputConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions is a complexType.
class _onvifMedia__GetAudioDecoderConfigurationOptions
{ public:
/// @brief Optional audio decoder configuration token that specifies an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ConfigurationToken             0;	///< Optional element.
/// @brief Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            ProfileToken                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse is a complexType.
class _onvifMedia__GetAudioDecoderConfigurationOptionsResponse
{ public:
/// @brief This message contains the audio decoder configuration options. If a audio decoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// Element Options of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    onvifXsd__AudioDecoderConfigurationOptions*  Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances

/// "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances is a complexType.
class _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances
{ public:
/// @brief Token of the video source configuration
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse is a complexType.
class _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse
{ public:
/// @brief The minimum guaranteed total number of encoder instances (applications) per VideoSourceConfiguration. The device is able to deliver the TotalNumber of streams
/// Element TotalNumber of type xs:int.
    int                                  TotalNumber                    1;	///< Required element.
/// @brief If a device limits the number of instances for respective Video Codecs the response contains the information how many Jpeg streams can be set up at the same time per VideoSource.
/// Element JPEG of type xs:int.
    int*                                 JPEG                           0;	///< Optional element.
/// @brief If a device limits the number of instances for respective Video Codecs the response contains the information how many H264 streams can be set up at the same time per VideoSource.
/// Element H264 of type xs:int.
    int*                                 H264                           0;	///< Optional element.
/// @brief If a device limits the number of instances for respective Video Codecs the response contains the information how many Mpeg4 streams can be set up at the same time per VideoSource.
/// Element MPEG4 of type xs:int.
    int*                                 MPEG4                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUri

/// "http://www.onvif.org/ver10/media/wsdl":GetStreamUri is a complexType.
class _onvifMedia__GetStreamUri
{ public:
/// @brief Stream Setup that should be used with the uri
/// Element StreamSetup of type "http://www.onvif.org/ver10/schema":StreamSetup.
    onvifXsd__StreamSetup*               StreamSetup                    1;	///< Required element.
/// @brief The ProfileToken element indicates the media profile to use and will define the configuration of the content of the stream.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse is a complexType.
class _onvifMedia__GetStreamUriResponse
{ public:
/// @brief
/// Element MediaUri of type "http://www.onvif.org/ver10/schema":MediaUri.
    onvifXsd__MediaUri*                  MediaUri                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming

/// "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming is a complexType.
class _onvifMedia__StartMulticastStreaming
{ public:
/// @brief Contains the token of the Profile that is used to define the multicast stream.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse

/// "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse is a complexType.
class _onvifMedia__StartMulticastStreamingResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming

/// "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming is a complexType.
class _onvifMedia__StopMulticastStreaming
{ public:
/// @brief Contains the token of the Profile that is used to define the multicast stream.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse

/// "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse is a complexType.
class _onvifMedia__StopMulticastStreamingResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint

/// "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint is a complexType.
class _onvifMedia__SetSynchronizationPoint
{ public:
/// @brief Contains a Profile reference for which a Synchronization Point is requested.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse

/// "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse is a complexType.
class _onvifMedia__SetSynchronizationPointResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri

/// "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri is a complexType.
class _onvifMedia__GetSnapshotUri
{ public:
/// @brief The ProfileToken element indicates the media profile to use and will define the source and dimensions of the snapshot.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse

/// "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse is a complexType.
class _onvifMedia__GetSnapshotUriResponse
{ public:
/// @brief
/// Element MediaUri of type "http://www.onvif.org/ver10/schema":MediaUri.
    onvifXsd__MediaUri*                  MediaUri                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver20/ptz/wsdl":Capabilities is a complexType.
class onvifPtz__Capabilities : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Indicates whether or not EFlip is supported.
/// Attribute EFlip of type xs:boolean.
   @bool*                                EFlip                          0;	///< Optional attribute.
/// @brief Indicates whether or not reversing of PT control direction is supported.
/// Attribute Reverse of type xs:boolean.
   @bool*                                Reverse                        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities is a complexType.
class _onvifPtz__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse is a complexType.
class _onvifPtz__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the PTZ service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
    onvifPtz__Capabilities*              Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodes

/// "http://www.onvif.org/ver20/ptz/wsdl":GetNodes is a complexType.
class _onvifPtz__GetNodes
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse is a complexType.
class _onvifPtz__GetNodesResponse
{ public:
/// @brief A list of the existing PTZ Nodes on the device.
/// Vector of onvifXsd__PTZNode* with length 0..unbounded
    std::vector<onvifXsd__PTZNode*     > PTZNode                        0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNode

/// "http://www.onvif.org/ver20/ptz/wsdl":GetNode is a complexType.
class _onvifPtz__GetNode
{ public:
/// @brief Token of the requested PTZNode.
/// Element NodeToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             NodeToken                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse is a complexType.
class _onvifPtz__GetNodeResponse
{ public:
/// @brief A requested PTZNode.
/// Element PTZNode of type "http://www.onvif.org/ver10/schema":PTZNode.
    onvifXsd__PTZNode*                   PTZNode                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations is a complexType.
class _onvifPtz__GetConfigurations
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse is a complexType.
class _onvifPtz__GetConfigurationsResponse
{ public:
/// @brief A list of all existing PTZConfigurations on the device.
/// Vector of onvifXsd__PTZConfiguration* with length 0..unbounded
    std::vector<onvifXsd__PTZConfiguration*> PTZConfiguration               0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration is a complexType.
class _onvifPtz__GetConfiguration
{ public:
/// @brief Token of the requested PTZConfiguration.
/// Element PTZConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             PTZConfigurationToken          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse is a complexType.
class _onvifPtz__GetConfigurationResponse
{ public:
/// @brief A requested PTZConfiguration.
/// Element PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    onvifXsd__PTZConfiguration*          PTZConfiguration               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration

/// "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration is a complexType.
class _onvifPtz__SetConfiguration
{ public:
/// @brief
/// Element PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    onvifXsd__PTZConfiguration*          PTZConfiguration               1;	///< Required element.
/// @brief Flag that makes configuration persistent. Example: User wants the configuration to exist after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse is a complexType.
class _onvifPtz__SetConfigurationResponse
{ public:
/// SEQUENCE OF ELEMENTS <xs:sequence minOccurs="0">
    std::vector<                                                       
    class __onvifPtz__SetConfigurationResponse_sequence
    {
    }>                                   __SetConfigurationResponse_sequence 0;
//  END OF SEQUENCE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions is a complexType.
class _onvifPtz__GetConfigurationOptions
{ public:
/// @brief Token of an existing configuration that the options are intended for.
/// Element ConfigurationToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ConfigurationToken             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse is a complexType.
class _onvifPtz__GetConfigurationOptionsResponse
{ public:
/// @brief The requested PTZ configuration options.
/// Element PTZConfigurationOptions of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions.
    onvifXsd__PTZConfigurationOptions*   PTZConfigurationOptions        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand

/// "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand is a complexType.
class _onvifPtz__SendAuxiliaryCommand
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief The Auxiliary request data.
/// Element AuxiliaryData of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    onvifXsd__AuxiliaryData              AuxiliaryData                  1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse is a complexType.
class _onvifPtz__SendAuxiliaryCommandResponse
{ public:
/// @brief The response contains the auxiliary response.
/// Element AuxiliaryResponse of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    onvifXsd__AuxiliaryData              AuxiliaryResponse              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresets

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresets is a complexType.
class _onvifPtz__GetPresets
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse is a complexType.
class _onvifPtz__GetPresetsResponse
{ public:
/// @brief A list of presets which are available for the requested MediaProfile.
/// Vector of onvifXsd__PTZPreset* with length 0..unbounded
    std::vector<onvifXsd__PTZPreset*   > Preset                         0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPreset

/// "http://www.onvif.org/ver20/ptz/wsdl":SetPreset is a complexType.
class _onvifPtz__SetPreset
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief A requested preset name.
/// Element PresetName of type xs:string.
    std::string*                         PresetName                     0;	///< Optional element.
/// @brief A requested preset token.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            PresetToken                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse is a complexType.
class _onvifPtz__SetPresetResponse
{ public:
/// @brief A token to the Preset which has been set.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             PresetToken                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset

/// "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset is a complexType.
class _onvifPtz__RemovePreset
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief A requested preset token.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             PresetToken                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse is a complexType.
class _onvifPtz__RemovePresetResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset

/// "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset is a complexType.
class _onvifPtz__GotoPreset
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief A requested preset token.
/// Element PresetToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             PresetToken                    1;	///< Required element.
/// @brief A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    onvifXsd__PTZSpeed*                  Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse is a complexType.
class _onvifPtz__GotoPresetResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatus

/// "http://www.onvif.org/ver20/ptz/wsdl":GetStatus is a complexType.
class _onvifPtz__GetStatus
{ public:
/// @brief A reference to the MediaProfile where the PTZStatus should be requested.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse is a complexType.
class _onvifPtz__GetStatusResponse
{ public:
/// @brief The PTZStatus for the requested MediaProfile.
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZStatus.
    onvifXsd__PTZStatus*                 PTZStatus                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition

/// "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition is a complexType.
class _onvifPtz__GotoHomePosition
{ public:
/// @brief A reference to the MediaProfile where the operation should take place.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    onvifXsd__PTZSpeed*                  Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse is a complexType.
class _onvifPtz__GotoHomePositionResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition

/// "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition is a complexType.
class _onvifPtz__SetHomePosition
{ public:
/// @brief A reference to the MediaProfile where the home position should be set.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse is a complexType.
class _onvifPtz__SetHomePositionResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove

/// "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove is a complexType.
class _onvifPtz__ContinuousMove
{ public:
/// @brief A reference to the MediaProfile.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief A Velocity vector specifying the velocity of pan, tilt and zoom.
/// Element Velocity of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    onvifXsd__PTZSpeed*                  Velocity                       1;	///< Required element.
/// @brief An optional Timeout parameter.
/// Element Timeout of type xs:duration.
    xsd__duration*                       Timeout                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse is a complexType.
class _onvifPtz__ContinuousMoveResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove

/// "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove is a complexType.
class _onvifPtz__RelativeMove
{ public:
/// @brief A reference to the MediaProfile.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief A positional Translation relative to the current position
/// Element Translation of type "http://www.onvif.org/ver10/schema":PTZVector.
    onvifXsd__PTZVector*                 Translation                    1;	///< Required element.
/// @brief An optional Speed parameter.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    onvifXsd__PTZSpeed*                  Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse is a complexType.
class _onvifPtz__RelativeMoveResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove

/// "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove is a complexType.
class _onvifPtz__AbsoluteMove
{ public:
/// @brief A reference to the MediaProfile.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief A Position vector specifying the absolute target position.
/// Element Position of type "http://www.onvif.org/ver10/schema":PTZVector.
    onvifXsd__PTZVector*                 Position                       1;	///< Required element.
/// @brief An optional Speed.
/// Element Speed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    onvifXsd__PTZSpeed*                  Speed                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse is a complexType.
class _onvifPtz__AbsoluteMoveResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Stop

/// "http://www.onvif.org/ver20/ptz/wsdl":Stop is a complexType.
class _onvifPtz__Stop
{ public:
/// @brief A reference to the MediaProfile that indicate what should be stopped.
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// @brief Set true when we want to stop ongoing pan and tilt movements.If PanTilt arguments are not present, this command stops these movements.
/// Element PanTilt of type xs:boolean.
    bool*                                PanTilt                        0;	///< Optional element.
/// @brief Set true when we want to stop ongoing zoom movement.If Zoom arguments are not present, this command stops ongoing zoom movement.
/// Element Zoom of type xs:boolean.
    bool*                                Zoom                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":StopResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":StopResponse is a complexType.
class _onvifPtz__StopResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours is a complexType.
class _onvifPtz__GetPresetTours
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse is a complexType.
class _onvifPtz__GetPresetToursResponse
{ public:
/// Vector of onvifXsd__PresetTour* with length 0..unbounded
    std::vector<onvifXsd__PresetTour*  > PresetTour                     0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour is a complexType.
class _onvifPtz__GetPresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             PresetTourToken                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse is a complexType.
class _onvifPtz__GetPresetTourResponse
{ public:
/// Element PresetTour of type "http://www.onvif.org/ver10/schema":PresetTour.
    onvifXsd__PresetTour*                PresetTour                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions is a complexType.
class _onvifPtz__GetPresetTourOptions
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            PresetTourToken                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse is a complexType.
class _onvifPtz__GetPresetTourOptionsResponse
{ public:
/// Element Options of type "http://www.onvif.org/ver10/schema":PTZPresetTourOptions.
    onvifXsd__PTZPresetTourOptions*      Options                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour is a complexType.
class _onvifPtz__CreatePresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse is a complexType.
class _onvifPtz__CreatePresetTourResponse
{ public:
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             PresetTourToken                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour is a complexType.
class _onvifPtz__ModifyPresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// Element PresetTour of type "http://www.onvif.org/ver10/schema":PresetTour.
    onvifXsd__PresetTour*                PresetTour                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse is a complexType.
class _onvifPtz__ModifyPresetTourResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour is a complexType.
class _onvifPtz__OperatePresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             PresetTourToken                1;	///< Required element.
/// Element Operation of type "http://www.onvif.org/ver10/schema":PTZPresetTourOperation.
    enum onvifXsd__PTZPresetTourOperation  Operation                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse is a complexType.
class _onvifPtz__OperatePresetTourResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour

/// "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour is a complexType.
class _onvifPtz__RemovePresetTour
{ public:
/// Element ProfileToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             ProfileToken                   1;	///< Required element.
/// Element PresetTourToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             PresetTourToken                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse

/// "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse is a complexType.
class _onvifPtz__RemovePresetTourResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/// "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities is a complexType.
class onvifDeviceIO__Capabilities : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// @brief Number of video sources (defaults to none).
/// Attribute VideoSources of type xs:int.
   @int                                  VideoSources                   0 = 0;	///< Default value="0".
/// @brief Number of video outputs (defaults to none).
/// Attribute VideoOutputs of type xs:int.
   @int                                  VideoOutputs                   0 = 0;	///< Default value="0".
/// @brief Number of audio sources (defaults to none).
/// Attribute AudioSources of type xs:int.
   @int                                  AudioSources                   0 = 0;	///< Default value="0".
/// @brief Number of audio outputs (defaults to none).
/// Attribute AudioOutputs of type xs:int.
   @int                                  AudioOutputs                   0 = 0;	///< Default value="0".
/// @brief Number of relay outputs (defaults to none).
/// Attribute RelayOutputs of type xs:int.
   @int                                  RelayOutputs                   0 = 0;	///< Default value="0".
/// @brief Number of serial ports (defaults to none).
/// Attribute SerialPorts of type xs:int.
   @int                                  SerialPorts                    0 = 0;	///< Default value="0".
/// @brief Number of digital inputs (defaults to none).
/// Attribute DigitalInputs of type xs:int.
   @int                                  DigitalInputs                  0 = 0;	///< Default value="0".
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptions is a complexType.
class onvifDeviceIO__RelayOutputOptions : public xsd__anyType
{ public:
/// @brief Supported Modes.
/// Vector of enum onvifXsd__RelayMode with length 1..unbounded
    std::vector<enum onvifXsd__RelayMode> Mode                           1;
/// @brief Supported delay time range or discrete values in seconds. This element must be present if MonoStable mode is supported.
/// Element DelayTimes of type "http://www.onvif.org/ver10/deviceIO/wsdl":DelayTimes.
    onvifDeviceIO__DelayTimes*           DelayTimes                     0;	///< Optional element.
/// @brief True if the relay only supports the exact values for the DelayTimes listed. Default is false.
/// Element Discrete of type xs:boolean.
    bool*                                Discrete                       0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptionsExtension.
    onvifDeviceIO__RelayOutputOptionsExtension*  Extension                      0;	///< Optional element.
/// @brief Token of the relay output.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":RelayOutputOptionsExtension is a complexType.
class onvifDeviceIO__RelayOutputOptionsExtension : public xsd__anyType
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData is a complexType.
/// @brief The serial port data.
class onvifDeviceIO__SerialData : public xsd__anyType
{ public:
/// CHOICE OF ELEMENTS <xs:choice>
   $int                                  __union_SerialData            ;	///< Union _onvifDeviceIO__union_SerialData selector: set to SOAP_UNION__onvifDeviceIO__union_SerialData_<fieldname>
/// Union for choice in type onvifDeviceIO__SerialData
    union _onvifDeviceIO__union_SerialData
    {
/// Element Binary of type xs:base64Binary.
    xsd__base64Binary*                   Binary                         1;	///< Required element.
/// Element String of type xs:string.
    std::string*                         String                         1;	///< Required element.
    }                                    union_SerialData              ;
//  END OF CHOICE
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration is a complexType.
/// @brief The parameters for configuring the serial port.
class onvifDeviceIO__SerialPortConfiguration : public xsd__anyType
{ public:
/// @brief The transfer bitrate.
/// Element BaudRate of type xs:int.
    int                                  BaudRate                       1;	///< Required element.
/// @brief The parity for the data error detection.
/// Element ParityBit of type "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBit.
    enum onvifDeviceIO__ParityBit        ParityBit                      1;	///< Required element.
/// @brief The bit length for each character.
/// Element CharacterLength of type xs:int.
    int                                  CharacterLength                1;	///< Required element.
/// @brief The number of stop bits used to terminate each character.
/// Element StopBit of type xs:float.
    float                                StopBit                        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
/// Attribute type of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortType.
   @enum onvifDeviceIO__SerialPortType   type                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfigurationOptions is a complexType.
/// @brief The configuration options that relates to serial port.
class onvifDeviceIO__SerialPortConfigurationOptions : public xsd__anyType
{ public:
/// @brief The list of configurable transfer bitrate.
/// Element BaudRateList of type "http://www.onvif.org/ver10/schema":IntList.
    onvifXsd__IntList*                   BaudRateList                   1;	///< Required element.
/// @brief The list of configurable parity for the data error detection.
/// Element ParityBitList of type "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBitList.
    onvifDeviceIO__ParityBitList*        ParityBitList                  1;	///< Required element.
/// @brief The list of configurable bit length for each character.
/// Element CharacterLengthList of type "http://www.onvif.org/ver10/schema":IntList.
    onvifXsd__IntList*                   CharacterLengthList            1;	///< Required element.
/// @brief The list of configurable number of stop bits used to terminate each character.
/// Element StopBitList of type "http://www.onvif.org/ver10/schema":FloatList.
    onvifXsd__FloatList*                 StopBitList                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":ParityBitList is a complexType.
/// @brief The list of configurable parity for the data error detection.
class onvifDeviceIO__ParityBitList : public xsd__anyType
{ public:
/// Vector of enum onvifDeviceIO__ParityBit with length 0..unbounded
    std::vector<enum onvifDeviceIO__ParityBit> Items                          0;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilities

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilities is a complexType.
class _onvifDeviceIO__GetServiceCapabilities
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilitiesResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetServiceCapabilitiesResponse is a complexType.
class _onvifDeviceIO__GetServiceCapabilitiesResponse
{ public:
/// @brief The capabilities for the device IO service is returned in the Capabilities element.
/// Element Capabilities of type "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities.
    onvifDeviceIO__Capabilities*         Capabilities                   1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptions

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptions is a complexType.
class _onvifDeviceIO__GetRelayOutputOptions
{ public:
/// @brief Optional reference token to the relay for which the options are requested.
/// Element RelayOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken*            RelayOutputToken               0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptionsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetRelayOutputOptionsResponse is a complexType.
class _onvifDeviceIO__GetRelayOutputOptionsResponse
{ public:
/// @brief Valid values and ranges for the configuration of a relay output.
/// Vector of onvifDeviceIO__RelayOutputOptions* with length 0..unbounded
    std::vector<onvifDeviceIO__RelayOutputOptions*> RelayOutputOptions             0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputs

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputs is a complexType.
class _onvifDeviceIO__GetVideoOutputs
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputsResponse is a complexType.
class _onvifDeviceIO__GetVideoOutputsResponse
{ public:
/// @brief List containing all physical Video output connections of a device.
/// Vector of onvifXsd__VideoOutput* with length 0..unbounded
    std::vector<onvifXsd__VideoOutput* > VideoOutputs                   0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfiguration is a complexType.
class _onvifDeviceIO__GetAudioSourceConfiguration
{ public:
/// @brief Token of the requested AudioSource.
/// Element AudioSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             AudioSourceToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationResponse is a complexType.
class _onvifDeviceIO__GetAudioSourceConfigurationResponse
{ public:
/// @brief Current configuration of the Audio input.
/// Element AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    onvifXsd__AudioSourceConfiguration*  AudioSourceConfiguration       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfiguration is a complexType.
class _onvifDeviceIO__GetAudioOutputConfiguration
{ public:
/// @brief Token of the physical Audio output.
/// Element AudioOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             AudioOutputToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationResponse is a complexType.
class _onvifDeviceIO__GetAudioOutputConfigurationResponse
{ public:
/// @brief Current configuration of the Audio output.
/// Element AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    onvifXsd__AudioOutputConfiguration*  AudioOutputConfiguration       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfiguration is a complexType.
class _onvifDeviceIO__GetVideoSourceConfiguration
{ public:
/// @brief Token of the requested VideoSource.
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             VideoSourceToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationResponse is a complexType.
class _onvifDeviceIO__GetVideoSourceConfigurationResponse
{ public:
/// @brief Current configuration of the Video input.
/// Element VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    onvifXsd__VideoSourceConfiguration*  VideoSourceConfiguration       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfiguration is a complexType.
class _onvifDeviceIO__GetVideoOutputConfiguration
{ public:
/// @brief Token of the requested VideoOutput.
/// Element VideoOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             VideoOutputToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationResponse is a complexType.
class _onvifDeviceIO__GetVideoOutputConfigurationResponse
{ public:
/// @brief Current configuration of the Video output.
/// Element VideoOutputConfiguration of type "http://www.onvif.org/ver10/schema":VideoOutputConfiguration.
    onvifXsd__VideoOutputConfiguration*  VideoOutputConfiguration       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfiguration is a complexType.
class _onvifDeviceIO__SetAudioSourceConfiguration
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    onvifXsd__AudioSourceConfiguration*  Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element determines how configuration changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioSourceConfigurationResponse is a complexType.
class _onvifDeviceIO__SetAudioSourceConfigurationResponse
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfiguration is a complexType.
class _onvifDeviceIO__SetAudioOutputConfiguration
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    onvifXsd__AudioOutputConfiguration*  Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element determines how configuration changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetAudioOutputConfigurationResponse is a complexType.
class _onvifDeviceIO__SetAudioOutputConfigurationResponse
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfiguration is a complexType.
class _onvifDeviceIO__SetVideoSourceConfiguration
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    onvifXsd__VideoSourceConfiguration*  Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element determines how configuration changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoSourceConfigurationResponse is a complexType.
class _onvifDeviceIO__SetVideoSourceConfigurationResponse
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfiguration

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfiguration is a complexType.
class _onvifDeviceIO__SetVideoOutputConfiguration
{ public:
/// Element Configuration of type "http://www.onvif.org/ver10/schema":VideoOutputConfiguration.
    onvifXsd__VideoOutputConfiguration*  Configuration                  1;	///< Required element.
/// @brief The ForcePersistence element determines how configuration changes shall be stored. If true, changes shall be persistent. If false, changes MAY revert to previous values after reboot.
/// Element ForcePersistence of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetVideoOutputConfigurationResponse is a complexType.
class _onvifDeviceIO__SetVideoOutputConfigurationResponse
{ public:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptions

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptions is a complexType.
class _onvifDeviceIO__GetVideoSourceConfigurationOptions
{ public:
/// @brief Token of the Video input whose options are requested..
/// Element VideoSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             VideoSourceToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
class _onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse
{ public:
/// Element VideoSourceConfigurationOptions of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    onvifXsd__VideoSourceConfigurationOptions*  VideoSourceConfigurationOptions 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptions

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptions is a complexType.
class _onvifDeviceIO__GetVideoOutputConfigurationOptions
{ public:
/// @brief Token of the Video Output whose options are requested..
/// Element VideoOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             VideoOutputToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetVideoOutputConfigurationOptionsResponse is a complexType.
class _onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse
{ public:
/// Element VideoOutputConfigurationOptions of type "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions.
    onvifXsd__VideoOutputConfigurationOptions*  VideoOutputConfigurationOptions 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptions

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptions is a complexType.
class _onvifDeviceIO__GetAudioSourceConfigurationOptions
{ public:
/// @brief Token of the physical Audio input whose options are requested..
/// Element AudioSourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             AudioSourceToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
class _onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse
{ public:
/// @brief Returns the AudioSourceToken available.
/// Element AudioSourceOptions of type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    onvifXsd__AudioSourceConfigurationOptions*  AudioSourceOptions             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptions

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptions is a complexType.
class _onvifDeviceIO__GetAudioOutputConfigurationOptions
{ public:
/// @brief Token of the physical Audio Output whose options are requested..
/// Element AudioOutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             AudioOutputToken               1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptionsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
class _onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse
{ public:
/// @brief Available settings and ranges for the requested Audio output.
/// Element AudioOutputOptions of type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    onvifXsd__AudioOutputConfigurationOptions*  AudioOutputOptions             1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettings

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettings is a complexType.
class _onvifDeviceIO__SetRelayOutputSettings
{ public:
/// Element RelayOutput of type "http://www.onvif.org/ver10/schema":RelayOutput.
    onvifXsd__RelayOutput*               RelayOutput                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettingsResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetRelayOutputSettingsResponse is a complexType.
class _onvifDeviceIO__SetRelayOutputSettingsResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputs
/// @brief Get the available digital inputs of a device.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputs is a complexType.
class _onvifDeviceIO__GetDigitalInputs
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputsResponse
/// @brief Requested digital inputs.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetDigitalInputsResponse is a complexType.
class _onvifDeviceIO__GetDigitalInputsResponse
{ public:
/// Vector of onvifXsd__DigitalInput* with length 0..unbounded
    std::vector<onvifXsd__DigitalInput*> DigitalInputs                  0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPorts
/// @brief The physical serial port on the device that allows serial data to be read and written.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPorts is a complexType.
class _onvifDeviceIO__GetSerialPorts
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortsResponse
/// @brief Requested serial ports.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortsResponse is a complexType.
class _onvifDeviceIO__GetSerialPortsResponse
{ public:
/// Vector of onvifDeviceIO__SerialPort* with length 0..unbounded
    std::vector<onvifDeviceIO__SerialPort*> SerialPort                     0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfiguration
/// @brief Gets the configuration that relates to serial port configuration.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfiguration is a complexType.
class _onvifDeviceIO__GetSerialPortConfiguration
{ public:
/// Element SerialPortToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             SerialPortToken                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationResponse
/// @brief Requested serial port configuration.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationResponse is a complexType.
class _onvifDeviceIO__GetSerialPortConfigurationResponse
{ public:
/// Element SerialPortConfiguration of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration.
    onvifDeviceIO__SerialPortConfiguration*  SerialPortConfiguration        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfiguration
/// @brief Sets the configuration that relates to serial port configuration.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfiguration is a complexType.
class _onvifDeviceIO__SetSerialPortConfiguration
{ public:
/// Element SerialPortConfiguration of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfiguration.
    onvifDeviceIO__SerialPortConfiguration*  SerialPortConfiguration        1;	///< Required element.
/// Element ForcePersistance of type xs:boolean.
    bool                                 ForcePersistance               1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfigurationResponse

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SetSerialPortConfigurationResponse is a complexType.
class _onvifDeviceIO__SetSerialPortConfigurationResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptions
/// @brief Gets the configuration options that relates to serial port configuration.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptions is a complexType.
class _onvifDeviceIO__GetSerialPortConfigurationOptions
{ public:
/// Element SerialPortToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             SerialPortToken                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptionsResponse
/// @brief Requested serial port configuration options.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":GetSerialPortConfigurationOptionsResponse is a complexType.
class _onvifDeviceIO__GetSerialPortConfigurationOptionsResponse
{ public:
/// Element SerialPortOptions of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPortConfigurationOptions.
    onvifDeviceIO__SerialPortConfigurationOptions*  SerialPortOptions              1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommand
/// @brief Transmitting arbitrary data to the connected serial device and then receiving its response data.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommand is a complexType.
class _onvifDeviceIO__SendReceiveSerialCommand
{ public:
/// @brief The serial port data.
/// Element SerialData of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData.
    onvifDeviceIO__SerialData*           SerialData                     0;	///< Optional element.
/// @brief Indicates that the command should be responded back within the specified period of time.
/// Element TimeOut of type xs:duration.
    xsd__duration*                       TimeOut                        0;	///< Optional element.
/// @brief This element may be put in the case that data length returned from the connected serial device is already determined as some fixed bytes length. It indicates the length of received data which can be regarded as available.
/// Element DataLength of type xs:integer.
    xsd__integer*                        DataLength                     0;	///< Optional element.
/// @brief This element may be put in the case that the delimiter codes returned from the connected serial device is already known. It indicates the termination data sequence of the responded data. In case the string has more than one character a device shall interpret the whole string as a single delimiter. Furthermore a device shall return the delimiter character(s) to the client.
/// Element Delimiter of type xs:string.
    std::string*                         Delimiter                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommandResponse
/// @brief Receiving the response data.

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SendReceiveSerialCommandResponse is a complexType.
class _onvifDeviceIO__SendReceiveSerialCommandResponse
{ public:
/// Element SerialData of type "http://www.onvif.org/ver10/deviceIO/wsdl":SerialData.
    onvifDeviceIO__SerialData*           SerialData                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://www.w3.org/2005/08/addressing":RelatesToType is a complexType with simpleContent.
class ns1__RelatesToType : public xsd__anyType
{ public:
/// __item wraps 'xs:anyURI' simpleContent.
    xsd__anyURI                          __item                        ;
/// Attribute RelationshipType of type "http://www.w3.org/2005/08/addressing":RelationshipTypeOpenEnum.
   @ns1__RelationshipTypeOpenEnum        RelationshipType               0;	///< Default value="http://www.w3.org/2005/08/addressing/reply".
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.w3.org/2005/08/addressing":AttributedURIType is a complexType with simpleContent.
class ns1__AttributedURIType : public xsd__anyType
{ public:
/// __item wraps 'xs:anyURI' simpleContent.
    xsd__anyURI                          __item                        ;
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.w3.org/2005/08/addressing":AttributedUnsignedLongType is a complexType with simpleContent.
class ns1__AttributedUnsignedLongType : public xsd__anyType
{ public:
/// __item wraps 'xs:unsignedLong' simpleContent.
    ULONG64                              __item                        ;
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.w3.org/2005/08/addressing":AttributedQNameType is a complexType with simpleContent.
class ns1__AttributedQNameType : public xsd__anyType
{ public:
/// __item wraps 'xs:QName' simpleContent.
    xsd__QName                           __item                        ;
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsrfR2__ResourceUnknownFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__ResourceUnknownFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__ResourceUnknownFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__ResourceUnknownFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsrfR2__ResourceUnavailableFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__ResourceUnavailableFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__ResourceUnavailableFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__ResourceUnavailableFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__SubscribeCreationFailedFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__SubscribeCreationFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__SubscribeCreationFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__SubscribeCreationFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__InvalidFilterFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__InvalidFilterFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__InvalidFilterFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__InvalidFilterFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
/// Vector of xsd__QName with length 1..unbounded
    std::vector<xsd__QName             > UnknownFilter                  1;
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__TopicExpressionDialectUnknownFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__TopicExpressionDialectUnknownFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__TopicExpressionDialectUnknownFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__TopicExpressionDialectUnknownFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__InvalidTopicExpressionFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__InvalidTopicExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__InvalidTopicExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__InvalidTopicExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__TopicNotSupportedFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__TopicNotSupportedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__TopicNotSupportedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__TopicNotSupportedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__MultipleTopicsSpecifiedFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__MultipleTopicsSpecifiedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__MultipleTopicsSpecifiedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__MultipleTopicsSpecifiedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__InvalidProducerPropertiesExpressionFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__InvalidProducerPropertiesExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__InvalidProducerPropertiesExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__InvalidProducerPropertiesExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__InvalidMessageContentExpressionFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__InvalidMessageContentExpressionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__InvalidMessageContentExpressionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__InvalidMessageContentExpressionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__UnrecognizedPolicyRequestFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__UnrecognizedPolicyRequestFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__UnrecognizedPolicyRequestFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__UnrecognizedPolicyRequestFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
/// Vector of xsd__QName with length 0..unbounded
    std::vector<xsd__QName             > UnrecognizedPolicy             0;
};

/// "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__UnsupportedPolicyRequestFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__UnsupportedPolicyRequestFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__UnsupportedPolicyRequestFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__UnsupportedPolicyRequestFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
/// Vector of xsd__QName with length 0..unbounded
    std::vector<xsd__QName             > UnsupportedPolicy              0;
};

/// "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__NotifyMessageNotSupportedFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__NotifyMessageNotSupportedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__NotifyMessageNotSupportedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__NotifyMessageNotSupportedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__UnacceptableInitialTerminationTimeFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__UnacceptableInitialTerminationTimeFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__UnacceptableInitialTerminationTimeFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__UnacceptableInitialTerminationTimeFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
/// Element MinimumTime of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element MaximumTime of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__NoCurrentMessageOnTopicFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__NoCurrentMessageOnTopicFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__NoCurrentMessageOnTopicFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__NoCurrentMessageOnTopicFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__UnableToGetMessagesFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__UnableToGetMessagesFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__UnableToGetMessagesFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__UnableToGetMessagesFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__UnableToDestroyPullPointFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__UnableToDestroyPullPointFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__UnableToDestroyPullPointFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__UnableToDestroyPullPointFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__UnableToCreatePullPointFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__UnableToCreatePullPointFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__UnableToCreatePullPointFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__UnableToCreatePullPointFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__UnacceptableTerminationTimeFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__UnacceptableTerminationTimeFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__UnacceptableTerminationTimeFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__UnacceptableTerminationTimeFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
/// Element MinimumTime of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element MaximumTime of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__UnableToDestroySubscriptionFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__UnableToDestroySubscriptionFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__UnableToDestroySubscriptionFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__UnableToDestroySubscriptionFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__PauseFailedFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__PauseFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__PauseFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__PauseFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
class oasisWsnB2__ResumeFailedFaultType : public oasisWsrf__BaseFaultType
{ public:
/*  INHERITED FROM oasisWsrf__BaseFaultType:
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    ns1__EndpointReferenceType*          Originator                     0;	///< Optional element.
    class _oasisWsrf__ResumeFailedFaultType_ErrorCode
    {
/// Attribute dialect of type xs:anyURI.
   @xsd__anyURI                          dialect                        1;	///< Required attribute.
    }                                   *ErrorCode                      0;	///< Optional element.
/// Vector Description with length 0..unbounded
    std::vector<
    class _oasisWsrf__ResumeFailedFaultType_Description
    {
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Imported attribute reference xml:lang.
   @_xml__lang*                          xml__lang                      0;	///< Optional attribute.
    }>                                  *Description                    0;
    class _oasisWsrf__ResumeFailedFaultType_FaultCause
    {
/// TODO: <any namespace="##other" minOccurs="1" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                   *FaultCause                     0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsrf__BaseFaultType */
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
class oasisWsnT1__TopicNamespaceType : public oasisWsnT1__ExtensibleDocumented
{ public:
/*  INHERITED FROM oasisWsnT1__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    oasisWsnT1__Documentation*           documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsnT1__ExtensibleDocumented */
/// Vector Topic with length 0..unbounded
    std::vector<
    class _oasisWsnT1__TopicNamespaceType_Topic
    {
/// INHERITED FROM oasisWsnT1__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    oasisWsnT1__Documentation*           documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
//  END OF INHERITED FROM oasisWsnT1__ExtensibleDocumented
/// INHERITED FROM oasisWsnT1__TopicType:
/// Element MessagePattern of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    oasisWsnT1__QueryExpressionType*     MessagePattern                 0;	///< Optional element.
/// Vector of oasisWsnT1__TopicType* with length 0..unbounded
    std::vector<oasisWsnT1__TopicType* > Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute name of type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    xsd__QName                                                         
                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
//  END OF INHERITED FROM oasisWsnT1__TopicType
/// Attribute parent of type "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression.
   @oasisWsnT1__ConcreteTopicExpression*  parent                         0;	///< Optional attribute.
    }>                                  *Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute name of type xs:NCName.
   @xsd__NCName*                         name                           0;	///< Optional attribute.
/// Attribute targetNamespace of type xs:anyURI.
   @xsd__anyURI                          targetNamespace                1;	///< Required attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
class oasisWsnT1__TopicType : public oasisWsnT1__ExtensibleDocumented
{ public:
/*  INHERITED FROM oasisWsnT1__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    oasisWsnT1__Documentation*           documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsnT1__ExtensibleDocumented */
/// Element MessagePattern of type "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType.
    oasisWsnT1__QueryExpressionType*     MessagePattern                 0;	///< Optional element.
/// Vector of oasisWsnT1__TopicType* with length 0..unbounded
    std::vector<oasisWsnT1__TopicType* > Topic                          0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Attribute name of type xs:NCName.
   @xsd__NCName                          name                           1;	///< Required attribute.
@    xsd__QName                                                         
                                        *messageTypes                   0;	///< Optional attribute.
/// Attribute final of type xs:boolean.
   @bool                                 final                          0 = false;	///< Default value="false".
};

/// "http://docs.oasis-open.org/wsn/t-1":TopicSetType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented.
class oasisWsnT1__TopicSetType : public oasisWsnT1__ExtensibleDocumented
{ public:
/*  INHERITED FROM oasisWsnT1__ExtensibleDocumented:
/// Element documentation of type "http://docs.oasis-open.org/wsn/t-1":Documentation.
    oasisWsnT1__Documentation*           documentation                  0;	///< Optional element.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
    END OF INHERITED FROM oasisWsnT1__ExtensibleDocumented */
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
};

/// "http://www.onvif.org/ver10/schema":VideoSource is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical video input.
class onvifXsd__VideoSource : public onvifXsd__DeviceEntity
{ public:
/*  INHERITED FROM onvifXsd__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__DeviceEntity */
/// @brief Frame rate in frames per second.
/// Element Framerate of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// @brief Horizontal and vertical resolution
/// Element Resolution of type "http://www.onvif.org/ver10/schema":VideoResolution.
    onvifXsd__VideoResolution*           Resolution                     1;	///< Required element.
/// @brief Optional configuration of the image sensor.
/// Element Imaging of type "http://www.onvif.org/ver10/schema":ImagingSettings.
    onvifXsd__ImagingSettings*           Imaging                        0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceExtension.
    onvifXsd__VideoSourceExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioSource is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical audio input.
class onvifXsd__AudioSource : public onvifXsd__DeviceEntity
{ public:
/*  INHERITED FROM onvifXsd__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__DeviceEntity */
/// @brief number of available audio channels. (1: mono, 2: stereo)
/// Element Channels of type xs:int.
    int                                  Channels                       1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onvifXsd__VideoSourceConfiguration : public onvifXsd__ConfigurationEntity
{ public:
/*  INHERITED FROM onvifXsd__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__ConfigurationEntity */
/// @brief Reference to the physical input.
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             SourceToken                    1;	///< Required element.
/// @brief Rectangle specifying the Video capturing area. The capturing area shall not be larger than the whole Video source area.
/// Element Bounds of type "http://www.onvif.org/ver10/schema":IntRectangle.
    onvifXsd__IntRectangle*              Bounds                         1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension.
    onvifXsd__VideoSourceConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onvifXsd__VideoEncoderConfiguration : public onvifXsd__ConfigurationEntity
{ public:
/*  INHERITED FROM onvifXsd__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__ConfigurationEntity */
/// @brief Used video codec, either Jpeg, H.264 or Mpeg4
/// Element Encoding of type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum onvifXsd__VideoEncoding         Encoding                       1;	///< Required element.
/// @brief Configured video resolution
/// Element Resolution of type "http://www.onvif.org/ver10/schema":VideoResolution.
    onvifXsd__VideoResolution*           Resolution                     1;	///< Required element.
/// @brief Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// Element Quality of type xs:float.
    float                                Quality                        1;	///< Required element.
/// @brief Optional element to configure rate control related parameters.
/// Element RateControl of type "http://www.onvif.org/ver10/schema":VideoRateControl.
    onvifXsd__VideoRateControl*          RateControl                    0;	///< Optional element.
/// @brief Optional element to configure Mpeg4 related parameters.
/// Element MPEG4 of type "http://www.onvif.org/ver10/schema":Mpeg4Configuration.
    onvifXsd__Mpeg4Configuration*        MPEG4                          0;	///< Optional element.
/// @brief Optional element to configure H.264 related parameters.
/// Element H264 of type "http://www.onvif.org/ver10/schema":H264Configuration.
    onvifXsd__H264Configuration*         H264                           0;	///< Optional element.
/// @brief Defines the multicast settings that could be used for video streaming.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    onvifXsd__MulticastConfiguration*    Multicast                      1;	///< Required element.
/// @brief The rtsp session timeout for the related video stream
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":JpegOptions2 is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":JpegOptions.
class onvifXsd__JpegOptions2 : public onvifXsd__JpegOptions
{ public:
/*  INHERITED FROM onvifXsd__JpegOptions:
/// @brief List of supported image sizes.
/// Vector of onvifXsd__VideoResolution* with length 1..unbounded
    std::vector<onvifXsd__VideoResolution*> ResolutionsAvailable           1;
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  EncodingIntervalRange          1;	///< Required element.
    END OF INHERITED FROM onvifXsd__JpegOptions */
/// @brief Supported range of encoded bitrate in kbps.
/// Element BitrateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  BitrateRange                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Mpeg4Options2 is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":Mpeg4Options.
class onvifXsd__Mpeg4Options2 : public onvifXsd__Mpeg4Options
{ public:
/*  INHERITED FROM onvifXsd__Mpeg4Options:
/// @brief List of supported image sizes.
/// Vector of onvifXsd__VideoResolution* with length 1..unbounded
    std::vector<onvifXsd__VideoResolution*> ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported MPEG-4 profiles.
/// Vector of enum onvifXsd__Mpeg4Profile with length 1..unbounded
    std::vector<enum onvifXsd__Mpeg4Profile> Mpeg4ProfilesSupported         1;
    END OF INHERITED FROM onvifXsd__Mpeg4Options */
/// @brief Supported range of encoded bitrate in kbps.
/// Element BitrateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  BitrateRange                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":H264Options2 is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":H264Options.
class onvifXsd__H264Options2 : public onvifXsd__H264Options
{ public:
/*  INHERITED FROM onvifXsd__H264Options:
/// @brief List of supported image sizes.
/// Vector of onvifXsd__VideoResolution* with length 1..unbounded
    std::vector<onvifXsd__VideoResolution*> ResolutionsAvailable           1;
/// @brief Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// Element GovLengthRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  GovLengthRange                 1;	///< Required element.
/// @brief Supported frame rate in fps (frames per second).
/// Element FrameRateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  FrameRateRange                 1;	///< Required element.
/// @brief Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// Element EncodingIntervalRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  EncodingIntervalRange          1;	///< Required element.
/// @brief List of supported H.264 profiles.
/// Vector of enum onvifXsd__H264Profile with length 1..unbounded
    std::vector<enum onvifXsd__H264Profile> H264ProfilesSupported          1;
    END OF INHERITED FROM onvifXsd__H264Options */
/// @brief Supported range of encoded bitrate in kbps.
/// Element BitrateRange of type "http://www.onvif.org/ver10/schema":IntRange.
    onvifXsd__IntRange*                  BitrateRange                   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onvifXsd__AudioSourceConfiguration : public onvifXsd__ConfigurationEntity
{ public:
/*  INHERITED FROM onvifXsd__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__ConfigurationEntity */
/// @brief Token of the Audio Source the configuration applies to
/// Element SourceToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             SourceToken                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onvifXsd__AudioEncoderConfiguration : public onvifXsd__ConfigurationEntity
{ public:
/*  INHERITED FROM onvifXsd__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__ConfigurationEntity */
/// @brief Audio codec used for encoding the audio input (either G.711, G.726 or AAC)
/// Element Encoding of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum onvifXsd__AudioEncoding         Encoding                       1;	///< Required element.
/// @brief The output bitrate in kbps.
/// Element Bitrate of type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// @brief The output sample rate in kHz.
/// Element SampleRate of type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// @brief Defines the multicast settings that could be used for video streaming.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    onvifXsd__MulticastConfiguration*    Multicast                      1;	///< Required element.
/// @brief The rtsp session timeout for the related audio stream
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onvifXsd__VideoAnalyticsConfiguration : public onvifXsd__ConfigurationEntity
{ public:
/*  INHERITED FROM onvifXsd__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__ConfigurationEntity */
/// Element AnalyticsEngineConfiguration of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    onvifXsd__AnalyticsEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// Element RuleEngineConfiguration of type "http://www.onvif.org/ver10/schema":RuleEngineConfiguration.
    onvifXsd__RuleEngineConfiguration*   RuleEngineConfiguration        1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":MetadataConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onvifXsd__MetadataConfiguration : public onvifXsd__ConfigurationEntity
{ public:
/*  INHERITED FROM onvifXsd__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__ConfigurationEntity */
/// @brief optional element to configure which PTZ related data is to include in the metadata stream
/// Element PTZStatus of type "http://www.onvif.org/ver10/schema":PTZFilter.
    onvifXsd__PTZFilter*                 PTZStatus                      0;	///< Optional element.
/// @brief Optional element to configure the streaming of events. A client might be interested in receiving all, none or some of the events produced by the device:<ul> <li>To get all events: Include the Events element but do not include a filter.</li> <li>To get no events: Do not include the Events element.</li> <li>To get only some events: Include the Events element and include a filter in the element.</li> </ul>
/// Element Events of type "http://www.onvif.org/ver10/schema":EventSubscription.
    onvifXsd__EventSubscription*         Events                         0;	///< Optional element.
/// @brief Defines if data to include from the analytics engine part shall be included in the stream
/// Element Analytics of type xs:boolean.
    bool*                                Analytics                      0;	///< Optional element.
/// @brief Defines the multicast settings that could be used for video streaming.
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    onvifXsd__MulticastConfiguration*    Multicast                      1;	///< Required element.
/// @brief The rtsp session timeout for the related audio stream
/// Element SessionTimeout of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// Element AnalyticsEngineConfiguration of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    onvifXsd__AnalyticsEngineConfiguration*  AnalyticsEngineConfiguration   0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension.
    onvifXsd__MetadataConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoOutput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical video outputs.
class onvifXsd__VideoOutput : public onvifXsd__DeviceEntity
{ public:
/*  INHERITED FROM onvifXsd__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__DeviceEntity */
/// Element Layout of type "http://www.onvif.org/ver10/schema":Layout.
    onvifXsd__Layout*                    Layout                         1;	///< Required element.
/// @brief Resolution of the display in Pixel.
/// Element Resolution of type "http://www.onvif.org/ver10/schema":VideoResolution.
    onvifXsd__VideoResolution*           Resolution                     0;	///< Optional element.
/// @brief Refresh rate of the display in Hertz.
/// Element RefreshRate of type xs:float.
    float*                               RefreshRate                    0;	///< Optional element.
/// @brief Aspect ratio of the display as physical extent of width divided by height.
/// Element AspectRatio of type xs:float.
    float*                               AspectRatio                    0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":VideoOutputExtension.
    onvifXsd__VideoOutputExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onvifXsd__VideoOutputConfiguration : public onvifXsd__ConfigurationEntity
{ public:
/*  INHERITED FROM onvifXsd__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__ConfigurationEntity */
/// @brief Token of the Video Output the configuration applies to
/// Element OutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             OutputToken                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioOutput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Representation of a physical audio outputs.
class onvifXsd__AudioOutput : public onvifXsd__DeviceEntity
{ public:
/*  INHERITED FROM onvifXsd__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__DeviceEntity */
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onvifXsd__AudioOutputConfiguration : public onvifXsd__ConfigurationEntity
{ public:
/*  INHERITED FROM onvifXsd__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__ConfigurationEntity */
/// @brief Token of the phsycial Audio output.
/// Element OutputToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             OutputToken                    1;	///< Required element.
/// @brief An audio channel MAY support different types of audio transmission. While for full duplex operation no special handling is required, in half duplex operation the transmission direction needs to be switched. The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which direction is currently active. An NVC can switch between different modes by setting the AudioOutputConfiguration.<br/> The following modes for the Send-Primacy are defined:<ul> <li>www.onvif.org/ver20/HalfDuplex/Server The server is allowed to send audio data to the client. The client shall not send audio data via the backchannel to the NVT in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Client The client is allowed to send audio data via the backchannel to the server. The NVT shall not send audio data to the client in this mode.</li> <li>www.onvif.org/ver20/HalfDuplex/Auto It is up to the device how to deal with sending and receiving audio data.</li> </ul> Acoustic echo cancellation is out of ONVIF scope.
/// Element SendPrimacy of type xs:anyURI.
    xsd__anyURI*                         SendPrimacy                    0;	///< Optional element.
/// @brief Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.OutputLevelRange.
/// Element OutputLevel of type xs:int.
    int                                  OutputLevel                    1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
/// @brief The Audio Decoder Configuration does not contain any that parameter to configure the decoding .A decoder shall decode every data it receives (according to its capabilities).
class onvifXsd__AudioDecoderConfiguration : public onvifXsd__ConfigurationEntity
{ public:
/*  INHERITED FROM onvifXsd__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__ConfigurationEntity */
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":NetworkInterface is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class onvifXsd__NetworkInterface : public onvifXsd__DeviceEntity
{ public:
/*  INHERITED FROM onvifXsd__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__DeviceEntity */
/// @brief Indicates whether or not an interface is enabled.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// @brief Network interface information
/// Element Info of type "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo.
    onvifXsd__NetworkInterfaceInfo*      Info                           0;	///< Optional element.
/// @brief Link configuration.
/// Element Link of type "http://www.onvif.org/ver10/schema":NetworkInterfaceLink.
    onvifXsd__NetworkInterfaceLink*      Link                           0;	///< Optional element.
/// @brief IPv4 network interface configuration.
/// Element IPv4 of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterface.
    onvifXsd__IPv4NetworkInterface*      IPv4                           0;	///< Optional element.
/// @brief IPv6 network interface configuration.
/// Element IPv6 of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterface.
    onvifXsd__IPv6NetworkInterface*      IPv6                           0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension.
    onvifXsd__NetworkInterfaceExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":CertificateUsage is a complexType with simpleContent.
class onvifXsd__CertificateUsage : public xsd__anyType
{ public:
/// __item wraps 'xs:string' simpleContent.
    std::string                          __item                        ;
/// Attribute Critical of type xs:boolean.
   @bool                                 Critical                       1;	///< Required attribute.
};

/// "http://www.onvif.org/ver10/schema":RelayOutput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class onvifXsd__RelayOutput : public onvifXsd__DeviceEntity
{ public:
/*  INHERITED FROM onvifXsd__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__DeviceEntity */
/// Element Properties of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    onvifXsd__RelayOutputSettings*       Properties                     1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":DigitalInput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class onvifXsd__DigitalInput : public onvifXsd__DeviceEntity
{ public:
/*  INHERITED FROM onvifXsd__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__DeviceEntity */
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZNode is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
class onvifXsd__PTZNode : public onvifXsd__DeviceEntity
{ public:
/*  INHERITED FROM onvifXsd__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__DeviceEntity */
/// @brief A unique identifier that is used to reference PTZ Nodes.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name*                      Name                           0;	///< Optional element.
/// @brief A list of Coordinate Systems available for the PTZ Node. For each Coordinate System, the PTZ Node MUST specify its allowed range.
/// Element SupportedPTZSpaces of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    onvifXsd__PTZSpaces*                 SupportedPTZSpaces             1;	///< Required element.
/// @brief All preset operations MUST be available for this PTZ Node if one preset is supported.
/// Element MaximumNumberOfPresets of type xs:int.
    int                                  MaximumNumberOfPresets         1;	///< Required element.
/// @brief A boolean operator specifying the availability of a home position. If set to true, the Home Position Operations MUST be available for this PTZ Node.
/// Element HomeSupported of type xs:boolean.
    bool                                 HomeSupported                  1;	///< Required element.
/// @brief A list of supported Auxiliary commands. If the list is not empty, the Auxiliary Operations MUST be available for this PTZ Node.
/// Vector of onvifXsd__AuxiliaryData with length 0..unbounded
    std::vector<onvifXsd__AuxiliaryData> AuxiliaryCommands              0;
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZNodeExtension.
    onvifXsd__PTZNodeExtension*          Extension                      0;	///< Optional element.
/// @brief Indication whether the HomePosition of a Node is fixed or it can be changed via the SetHomePosition command.
/// Attribute FixedHomePosition of type xs:boolean.
   @bool*                                FixedHomePosition              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":PTZConfiguration is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onvifXsd__PTZConfiguration : public onvifXsd__ConfigurationEntity
{ public:
/*  INHERITED FROM onvifXsd__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__ConfigurationEntity */
/// @brief A mandatory reference to the PTZ Node that the PTZ Configuration belongs to.
/// Element NodeToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             NodeToken                      1;	///< Required element.
/// @brief If the PTZ Node supports absolute Pan/Tilt movements, it shall specify one Absolute Pan/Tilt Position Space as default.
/// Element DefaultAbsolutePantTiltPositionSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultAbsolutePantTiltPositionSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports absolute zoom movements, it shall specify one Absolute Zoom Position Space as default.
/// Element DefaultAbsoluteZoomPositionSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultAbsoluteZoomPositionSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports relative Pan/Tilt movements, it shall specify one RelativePan/Tilt Translation Space as default.
/// Element DefaultRelativePanTiltTranslationSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultRelativePanTiltTranslationSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports relative zoom movements, it shall specify one Relative Zoom Translation Space as default.
/// Element DefaultRelativeZoomTranslationSpace of type xs:anyURI.
    xsd__anyURI*                         DefaultRelativeZoomTranslationSpace 0;	///< Optional element.
/// @brief If the PTZ Node supports continuous Pan/Tilt movements, it shall specify one Continuous Pan/Tilt Velocity Space as default.
/// Element DefaultContinuousPanTiltVelocitySpace of type xs:anyURI.
    xsd__anyURI*                         DefaultContinuousPanTiltVelocitySpace 0;	///< Optional element.
/// @brief If the PTZ Node supports continuous zoom movements, it shall specify one Continuous Zoom Velocity Space as default.
/// Element DefaultContinuousZoomVelocitySpace of type xs:anyURI.
    xsd__anyURI*                         DefaultContinuousZoomVelocitySpace 0;	///< Optional element.
/// @brief If the PTZ Node supports absolute or relative PTZ movements, it shall specify corresponding default Pan/Tilt and Zoom speeds.
/// Element DefaultPTZSpeed of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    onvifXsd__PTZSpeed*                  DefaultPTZSpeed                0;	///< Optional element.
/// @brief If the PTZ Node supports continuous movements, it shall specify a default timeout, after which the movement stops.
/// Element DefaultPTZTimeout of type xs:duration.
    xsd__duration*                       DefaultPTZTimeout              0;	///< Optional element.
/// @brief The Pan/Tilt limits element should be present for a PTZ Node that supports an absolute Pan/Tilt. If the element is present it signals the support for configurable Pan/Tilt limits. If limits are enabled, the Pan/Tilt movements shall always stay within the specified range. The Pan/Tilt limits are disabled by setting the limits to INF or +INF.
/// Element PanTiltLimits of type "http://www.onvif.org/ver10/schema":PanTiltLimits.
    onvifXsd__PanTiltLimits*             PanTiltLimits                  0;	///< Optional element.
/// @brief The Zoom limits element should be present for a PTZ Node that supports absolute zoom. If the element is present it signals the supports for configurable Zoom limits. If limits are enabled the zoom movements shall always stay within the specified range. The Zoom limits are disabled by settings the limits to -INF and +INF.
/// Element ZoomLimits of type "http://www.onvif.org/ver10/schema":ZoomLimits.
    onvifXsd__ZoomLimits*                ZoomLimits                     0;	///< Optional element.
/// @brief
/// Element Extension of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension.
    onvifXsd__PTZConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":Object is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ObjectId.
class onvifXsd__Object : public onvifXsd__ObjectId
{ public:
/*  INHERITED FROM onvifXsd__ObjectId:
/// Attribute ObjectId of type xs:integer.
   @xsd__integer*                        ObjectId                       0;	///< Optional attribute.
    END OF INHERITED FROM onvifXsd__ObjectId */
/// Element Appearance of type "http://www.onvif.org/ver10/schema":Appearance.
    onvifXsd__Appearance*                Appearance                     0;	///< Optional element.
/// Element Behaviour of type "http://www.onvif.org/ver10/schema":Behaviour.
    onvifXsd__Behaviour*                 Behaviour                      0;	///< Optional element.
/// Element Extension of type "http://www.onvif.org/ver10/schema":ObjectExtension.
    onvifXsd__ObjectExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":EventFilter is a complexType with complexContent extension of "http://docs.oasis-open.org/wsn/b-2":FilterType.
class onvifXsd__EventFilter : public oasisWsnB2__FilterType
{ public:
/*  INHERITED FROM oasisWsnB2__FilterType:
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
    END OF INHERITED FROM oasisWsnB2__FilterType */
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngine is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onvifXsd__AnalyticsEngine : public onvifXsd__ConfigurationEntity
{ public:
/*  INHERITED FROM onvifXsd__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__ConfigurationEntity */
/// Element AnalyticsEngineConfiguration of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration.
    onvifXsd__AnalyticsDeviceEngineConfiguration*  AnalyticsEngineConfiguration   1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineInput is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onvifXsd__AnalyticsEngineInput : public onvifXsd__ConfigurationEntity
{ public:
/*  INHERITED FROM onvifXsd__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__ConfigurationEntity */
/// Element SourceIdentification of type "http://www.onvif.org/ver10/schema":SourceIdentification.
    onvifXsd__SourceIdentification*      SourceIdentification           1;	///< Required element.
/// Element VideoInput of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    onvifXsd__VideoEncoderConfiguration*  VideoInput                     1;	///< Required element.
/// Element MetadataInput of type "http://www.onvif.org/ver10/schema":MetadataInput.
    onvifXsd__MetadataInput*             MetadataInput                  1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/schema":AnalyticsEngineControl is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":ConfigurationEntity.
class onvifXsd__AnalyticsEngineControl : public onvifXsd__ConfigurationEntity
{ public:
/*  INHERITED FROM onvifXsd__ConfigurationEntity:
/// @brief User readable name. Length up to 64 characters.
/// Element Name of type "http://www.onvif.org/ver10/schema":Name.
    onvifXsd__Name                       Name                           1;	///< Required element.
/// @brief Number of internal references currently using this configuration. <br/>This parameter is read-only and cannot be changed by a set request. <br/>For example the value increases if the configuration is added to a media profile or attached to a PaneConfiguration.
/// Element UseCount of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// @brief Token that uniquely refernces this configuration. Length up to 64 characters.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__ConfigurationEntity */
/// @brief Token of the analytics engine (AnalyticsEngine) being controlled.
/// Element EngineToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             EngineToken                    1;	///< Required element.
/// @brief Token of the analytics engine configuration (VideoAnalyticsConfiguration) in effect.
/// Element EngineConfigToken of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    onvifXsd__ReferenceToken             EngineConfigToken              1;	///< Required element.
/// @brief Tokens of the input (AnalyticsEngineInput) configuration applied.
/// Vector of onvifXsd__ReferenceToken with length 1..unbounded
    std::vector<onvifXsd__ReferenceToken> InputToken                     1;
/// @brief Tokens of the receiver providing media input data. The order of ReceiverToken shall exactly match the order of InputToken.
/// Vector of onvifXsd__ReferenceToken with length 1..unbounded
    std::vector<onvifXsd__ReferenceToken> ReceiverToken                  1;
/// Element Multicast of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    onvifXsd__MulticastConfiguration*    Multicast                      0;	///< Optional element.
/// Element Subscription of type "http://www.onvif.org/ver10/schema":Config.
    onvifXsd__Config*                    Subscription                   1;	///< Required element.
/// Element Mode of type "http://www.onvif.org/ver10/schema":ModeOfOperation.
    enum onvifXsd__ModeOfOperation       Mode                           1;	///< Required element.
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://www.onvif.org/ver10/deviceIO/wsdl":SerialPort is a complexType with complexContent extension of "http://www.onvif.org/ver10/schema":DeviceEntity.
/// @brief Lists all available serial ports of a device
class onvifDeviceIO__SerialPort : public onvifXsd__DeviceEntity
{ public:
/*  INHERITED FROM onvifXsd__DeviceEntity:
/// @brief Unique identifier referencing the physical entity.
/// Attribute token of type "http://www.onvif.org/ver10/schema":ReferenceToken.
   @onvifXsd__ReferenceToken             token                          1;	///< Required attribute.
    END OF INHERITED FROM onvifXsd__DeviceEntity */
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
    std::vector<_XML                   > __any                         0;	///< Catch any element content in XML string.
/// <anyAttribute namespace="##any">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.w3.org/2005/08/addressing                                     *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.w3.org/2005/08/addressing":EndpointReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":ReferenceParameters of type "http://www.w3.org/2005/08/addressing":ReferenceParametersType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":Metadata of type "http://www.w3.org/2005/08/addressing":MetadataType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":MessageID of type "http://www.w3.org/2005/08/addressing":AttributedURIType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":RelatesTo of type "http://www.w3.org/2005/08/addressing":RelatesToType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":ReplyTo of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":From of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":FaultTo of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":To of type "http://www.w3.org/2005/08/addressing":AttributedURIType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":Action of type "http://www.w3.org/2005/08/addressing":AttributedURIType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":RetryAfter of type "http://www.w3.org/2005/08/addressing":AttributedUnsignedLongType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":ProblemHeaderQName of type "http://www.w3.org/2005/08/addressing":AttributedQNameType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":ProblemIRI of type "http://www.w3.org/2005/08/addressing":AttributedURIType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.w3.org/2005/08/addressing":ProblemAction of type "http://www.w3.org/2005/08/addressing":ProblemActionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.w3.org/2005/08/addressing                                     *
 *                                                                            *
\******************************************************************************/


/// Top-level attribute "http://www.w3.org/2005/08/addressing":IsReferenceParameter of simpleType xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/rw-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/device/wsdl":Capabilities of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":Polygon of type "http://www.onvif.org/ver10/schema":Polygon.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":Polyline of type "http://www.onvif.org/ver10/schema":Polyline.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://www.onvif.org/ver10/schema":MetadataStream of type "http://www.onvif.org/ver10/schema":MetadataStream.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.w3.org/2004/08/xop/include":Include of type "http://www.w3.org/2004/08/xop/include":Include.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.w3.org/2004/08/xop/include                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/events/wsdl":Capabilities of type "http://www.onvif.org/ver10/events/wsdl":Capabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/events/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver20/imaging/wsdl":Capabilities of type "http://www.onvif.org/ver20/imaging/wsdl":Capabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/imaging/wsdl                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/media/wsdl":Capabilities of type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Capabilities of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities of type "http://www.onvif.org/ver10/deviceIO/wsdl":Capabilities.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/deviceIO/wsdl                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns2  service name:	PausableSubscriptionManagerBinding 
//gsoap ns2  service type:	PausableSubscriptionManager 
//gsoap ns2  service namespace:	http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding 
//gsoap ns2  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap onvifDevice service name:	DeviceBinding 
//gsoap onvifDevice service type:	Device 
//gsoap onvifDevice service namespace:	http://www.onvif.org/ver10/device/wsdl 
//gsoap onvifDevice service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap onvifDeviceIO service name:	DeviceIOBinding 
//gsoap onvifDeviceIO service type:	DeviceIOPort 
//gsoap onvifDeviceIO service namespace:	http://www.onvif.org/ver10/deviceIO/wsdl 
//gsoap onvifDeviceIO service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap onvifImg service name:	ImagingBinding 
//gsoap onvifImg service type:	ImagingPort 
//gsoap onvifImg service namespace:	http://www.onvif.org/ver20/imaging/wsdl 
//gsoap onvifImg service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap onvifMedia service name:	MediaBinding 
//gsoap onvifMedia service type:	Media 
//gsoap onvifMedia service namespace:	http://www.onvif.org/ver10/media/wsdl 
//gsoap onvifMedia service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap onvifPtz service name:	PTZBinding 
//gsoap onvifPtz service type:	PTZ 
//gsoap onvifPtz service namespace:	http://www.onvif.org/ver20/ptz/wsdl 
//gsoap onvifPtz service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tev-cpb service name:	CreatePullPointBinding 
//gsoap tev-cpb service type:	CreatePullPoint 
//gsoap tev-cpb service namespace:	http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding 
//gsoap tev-cpb service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tev-eb service name:	EventBinding 
//gsoap tev-eb service type:	EventPortType 
//gsoap tev-eb service namespace:	http://www.onvif.org/ver10/events/wsdl/EventBinding 
//gsoap tev-eb service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tev-ncb service name:	NotificationConsumerBinding 
//gsoap tev-ncb service type:	NotificationConsumer 
//gsoap tev-ncb service namespace:	http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding 
//gsoap tev-ncb service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tev-npb service name:	NotificationProducerBinding 
//gsoap tev-npb service type:	NotificationProducer 
//gsoap tev-npb service namespace:	http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding 
//gsoap tev-npb service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tev-ppb service name:	PullPointBinding 
//gsoap tev-ppb service type:	PullPoint 
//gsoap tev-ppb service namespace:	http://www.onvif.org/ver10/events/wsdl/PullPointBinding 
//gsoap tev-ppb service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tev-pps service name:	PullPointSubscriptionBinding 
//gsoap tev-pps service type:	PullPointSubscription 
//gsoap tev-pps service namespace:	http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding 
//gsoap tev-pps service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tev-smb service name:	SubscriptionManagerBinding 
//gsoap tev-smb service type:	SubscriptionManager 
//gsoap tev-smb service namespace:	http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding 
//gsoap tev-smb service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage WSDL Definitions

@section WSDL_bindings Service Bindings

  - @ref PausableSubscriptionManagerBinding

  - @ref DeviceBinding

  - @ref DeviceIOBinding

  - @ref ImagingBinding

  - @ref MediaBinding

  - @ref PTZBinding

  - @ref CreatePullPointBinding

  - @ref EventBinding

  - @ref NotificationConsumerBinding

  - @ref NotificationProducerBinding

  - @ref PullPointBinding

  - @ref PullPointSubscriptionBinding

  - @ref SubscriptionManagerBinding

@section WSDL_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page PausableSubscriptionManagerBinding Binding "PausableSubscriptionManagerBinding"

@section PausableSubscriptionManagerBinding_operations Operations of Binding  "PausableSubscriptionManagerBinding"

  - @ref __ns2__Renew

  - @ref __ns2__Unsubscribe

  - @ref __ns2__PauseSubscription

  - @ref __ns2__ResumeSubscription

@section PausableSubscriptionManagerBinding_ports Endpoints of Binding  "PausableSubscriptionManagerBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_operations Operations of Binding  "DeviceBinding"

  - @ref __onvifDevice__GetServices

  - @ref __onvifDevice__GetServiceCapabilities

  - @ref __onvifDevice__GetDeviceInformation

  - @ref __onvifDevice__SetSystemDateAndTime

  - @ref __onvifDevice__GetSystemDateAndTime

  - @ref __onvifDevice__SetSystemFactoryDefault

  - @ref __onvifDevice__UpgradeSystemFirmware

  - @ref __onvifDevice__SystemReboot

  - @ref __onvifDevice__RestoreSystem

  - @ref __onvifDevice__GetSystemBackup

  - @ref __onvifDevice__GetSystemLog

  - @ref __onvifDevice__GetSystemSupportInformation

  - @ref __onvifDevice__GetScopes

  - @ref __onvifDevice__SetScopes

  - @ref __onvifDevice__AddScopes

  - @ref __onvifDevice__RemoveScopes

  - @ref __onvifDevice__GetDiscoveryMode

  - @ref __onvifDevice__SetDiscoveryMode

  - @ref __onvifDevice__GetRemoteDiscoveryMode

  - @ref __onvifDevice__SetRemoteDiscoveryMode

  - @ref __onvifDevice__GetDPAddresses

  - @ref __onvifDevice__GetEndpointReference

  - @ref __onvifDevice__GetRemoteUser

  - @ref __onvifDevice__SetRemoteUser

  - @ref __onvifDevice__GetUsers

  - @ref __onvifDevice__CreateUsers

  - @ref __onvifDevice__DeleteUsers

  - @ref __onvifDevice__SetUser

  - @ref __onvifDevice__GetWsdlUrl

  - @ref __onvifDevice__GetCapabilities

  - @ref __onvifDevice__SetDPAddresses

  - @ref __onvifDevice__GetHostname

  - @ref __onvifDevice__SetHostname

  - @ref __onvifDevice__SetHostnameFromDHCP

  - @ref __onvifDevice__GetDNS

  - @ref __onvifDevice__SetDNS

  - @ref __onvifDevice__GetNTP

  - @ref __onvifDevice__SetNTP

  - @ref __onvifDevice__GetDynamicDNS

  - @ref __onvifDevice__SetDynamicDNS

  - @ref __onvifDevice__GetNetworkInterfaces

  - @ref __onvifDevice__SetNetworkInterfaces

  - @ref __onvifDevice__GetNetworkProtocols

  - @ref __onvifDevice__SetNetworkProtocols

  - @ref __onvifDevice__GetNetworkDefaultGateway

  - @ref __onvifDevice__SetNetworkDefaultGateway

  - @ref __onvifDevice__GetZeroConfiguration

  - @ref __onvifDevice__SetZeroConfiguration

  - @ref __onvifDevice__GetIPAddressFilter

  - @ref __onvifDevice__SetIPAddressFilter

  - @ref __onvifDevice__AddIPAddressFilter

  - @ref __onvifDevice__RemoveIPAddressFilter

  - @ref __onvifDevice__GetAccessPolicy

  - @ref __onvifDevice__SetAccessPolicy

  - @ref __onvifDevice__CreateCertificate

  - @ref __onvifDevice__GetCertificates

  - @ref __onvifDevice__GetCertificatesStatus

  - @ref __onvifDevice__SetCertificatesStatus

  - @ref __onvifDevice__DeleteCertificates

  - @ref __onvifDevice__GetPkcs10Request

  - @ref __onvifDevice__LoadCertificates

  - @ref __onvifDevice__GetClientCertificateMode

  - @ref __onvifDevice__SetClientCertificateMode

  - @ref __onvifDevice__GetRelayOutputs

  - @ref __onvifDevice__SetRelayOutputSettings

  - @ref __onvifDevice__SetRelayOutputState

  - @ref __onvifDevice__SendAuxiliaryCommand

  - @ref __onvifDevice__GetCACertificates

  - @ref __onvifDevice__LoadCertificateWithPrivateKey

  - @ref __onvifDevice__GetCertificateInformation

  - @ref __onvifDevice__LoadCACertificates

  - @ref __onvifDevice__CreateDot1XConfiguration

  - @ref __onvifDevice__SetDot1XConfiguration

  - @ref __onvifDevice__GetDot1XConfiguration

  - @ref __onvifDevice__GetDot1XConfigurations

  - @ref __onvifDevice__DeleteDot1XConfiguration

  - @ref __onvifDevice__GetDot11Capabilities

  - @ref __onvifDevice__GetDot11Status

  - @ref __onvifDevice__ScanAvailableDot11Networks

  - @ref __onvifDevice__GetSystemUris

  - @ref __onvifDevice__StartFirmwareUpgrade

  - @ref __onvifDevice__StartSystemRestore

  - @ref __onvifDevice__GetServices_

  - @ref __onvifDevice__GetServiceCapabilities_

  - @ref __onvifDevice__GetDeviceInformation_

  - @ref __onvifDevice__SetSystemDateAndTime_

  - @ref __onvifDevice__GetSystemDateAndTime_

  - @ref __onvifDevice__SetSystemFactoryDefault_

  - @ref __onvifDevice__UpgradeSystemFirmware_

  - @ref __onvifDevice__SystemReboot_

  - @ref __onvifDevice__RestoreSystem_

  - @ref __onvifDevice__GetSystemBackup_

  - @ref __onvifDevice__GetSystemLog_

  - @ref __onvifDevice__GetSystemSupportInformation_

  - @ref __onvifDevice__GetScopes_

  - @ref __onvifDevice__SetScopes_

  - @ref __onvifDevice__AddScopes_

  - @ref __onvifDevice__RemoveScopes_

  - @ref __onvifDevice__GetDiscoveryMode_

  - @ref __onvifDevice__SetDiscoveryMode_

  - @ref __onvifDevice__GetRemoteDiscoveryMode_

  - @ref __onvifDevice__SetRemoteDiscoveryMode_

  - @ref __onvifDevice__GetDPAddresses_

  - @ref __onvifDevice__GetEndpointReference_

  - @ref __onvifDevice__GetRemoteUser_

  - @ref __onvifDevice__SetRemoteUser_

  - @ref __onvifDevice__GetUsers_

  - @ref __onvifDevice__CreateUsers_

  - @ref __onvifDevice__DeleteUsers_

  - @ref __onvifDevice__SetUser_

  - @ref __onvifDevice__GetWsdlUrl_

  - @ref __onvifDevice__GetCapabilities_

  - @ref __onvifDevice__SetDPAddresses_

  - @ref __onvifDevice__GetHostname_

  - @ref __onvifDevice__SetHostname_

  - @ref __onvifDevice__SetHostnameFromDHCP_

  - @ref __onvifDevice__GetDNS_

  - @ref __onvifDevice__SetDNS_

  - @ref __onvifDevice__GetNTP_

  - @ref __onvifDevice__SetNTP_

  - @ref __onvifDevice__GetDynamicDNS_

  - @ref __onvifDevice__SetDynamicDNS_

  - @ref __onvifDevice__GetNetworkInterfaces_

  - @ref __onvifDevice__SetNetworkInterfaces_

  - @ref __onvifDevice__GetNetworkProtocols_

  - @ref __onvifDevice__SetNetworkProtocols_

  - @ref __onvifDevice__GetNetworkDefaultGateway_

  - @ref __onvifDevice__SetNetworkDefaultGateway_

  - @ref __onvifDevice__GetZeroConfiguration_

  - @ref __onvifDevice__SetZeroConfiguration_

  - @ref __onvifDevice__GetIPAddressFilter_

  - @ref __onvifDevice__SetIPAddressFilter_

  - @ref __onvifDevice__AddIPAddressFilter_

  - @ref __onvifDevice__RemoveIPAddressFilter_

  - @ref __onvifDevice__GetAccessPolicy_

  - @ref __onvifDevice__SetAccessPolicy_

  - @ref __onvifDevice__CreateCertificate_

  - @ref __onvifDevice__GetCertificates_

  - @ref __onvifDevice__GetCertificatesStatus_

  - @ref __onvifDevice__SetCertificatesStatus_

  - @ref __onvifDevice__DeleteCertificates_

  - @ref __onvifDevice__GetPkcs10Request_

  - @ref __onvifDevice__LoadCertificates_

  - @ref __onvifDevice__GetClientCertificateMode_

  - @ref __onvifDevice__SetClientCertificateMode_

  - @ref __onvifDevice__GetRelayOutputs_

  - @ref __onvifDevice__SetRelayOutputSettings_

  - @ref __onvifDevice__SetRelayOutputState_

  - @ref __onvifDevice__SendAuxiliaryCommand_

  - @ref __onvifDevice__GetCACertificates_

  - @ref __onvifDevice__LoadCertificateWithPrivateKey_

  - @ref __onvifDevice__GetCertificateInformation_

  - @ref __onvifDevice__LoadCACertificates_

  - @ref __onvifDevice__CreateDot1XConfiguration_

  - @ref __onvifDevice__SetDot1XConfiguration_

  - @ref __onvifDevice__GetDot1XConfiguration_

  - @ref __onvifDevice__GetDot1XConfigurations_

  - @ref __onvifDevice__DeleteDot1XConfiguration_

  - @ref __onvifDevice__GetDot11Capabilities_

  - @ref __onvifDevice__GetDot11Status_

  - @ref __onvifDevice__ScanAvailableDot11Networks_

  - @ref __onvifDevice__GetSystemUris_

  - @ref __onvifDevice__StartFirmwareUpgrade_

  - @ref __onvifDevice__StartSystemRestore_

@section DeviceBinding_ports Endpoints of Binding  "DeviceBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page DeviceIOBinding Binding "DeviceIOBinding"

@section DeviceIOBinding_operations Operations of Binding  "DeviceIOBinding"

  - @ref __onvifDeviceIO__GetServiceCapabilities

  - @ref __onvifDeviceIO__GetRelayOutputOptions

  - @ref __onvifDeviceIO__GetAudioSources

  - @ref __onvifDeviceIO__GetAudioOutputs

  - @ref __onvifDeviceIO__GetVideoSources

  - @ref __onvifDeviceIO__GetVideoOutputs

  - @ref __onvifDeviceIO__GetVideoSourceConfiguration

  - @ref __onvifDeviceIO__GetVideoOutputConfiguration

  - @ref __onvifDeviceIO__GetAudioSourceConfiguration

  - @ref __onvifDeviceIO__GetAudioOutputConfiguration

  - @ref __onvifDeviceIO__SetVideoSourceConfiguration

  - @ref __onvifDeviceIO__SetVideoOutputConfiguration

  - @ref __onvifDeviceIO__SetAudioSourceConfiguration

  - @ref __onvifDeviceIO__SetAudioOutputConfiguration

  - @ref __onvifDeviceIO__GetVideoSourceConfigurationOptions

  - @ref __onvifDeviceIO__GetVideoOutputConfigurationOptions

  - @ref __onvifDeviceIO__GetAudioSourceConfigurationOptions

  - @ref __onvifDeviceIO__GetAudioOutputConfigurationOptions

  - @ref __onvifDeviceIO__GetRelayOutputs

  - @ref __onvifDeviceIO__SetRelayOutputSettings

  - @ref __onvifDeviceIO__SetRelayOutputState

  - @ref __onvifDeviceIO__GetDigitalInputs

  - @ref __onvifDeviceIO__GetSerialPorts

  - @ref __onvifDeviceIO__GetSerialPortConfiguration

  - @ref __onvifDeviceIO__SetSerialPortConfiguration

  - @ref __onvifDeviceIO__GetSerialPortConfigurationOptions

  - @ref __onvifDeviceIO__SendReceiveSerialCommand

@section DeviceIOBinding_ports Endpoints of Binding  "DeviceIOBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page ImagingBinding Binding "ImagingBinding"

@section ImagingBinding_operations Operations of Binding  "ImagingBinding"

  - @ref __onvifImg__GetServiceCapabilities

  - @ref __onvifImg__GetImagingSettings

  - @ref __onvifImg__SetImagingSettings

  - @ref __onvifImg__GetOptions

  - @ref __onvifImg__Move

  - @ref __onvifImg__Stop

  - @ref __onvifImg__GetStatus

  - @ref __onvifImg__GetMoveOptions

@section ImagingBinding_ports Endpoints of Binding  "ImagingBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page MediaBinding Binding "MediaBinding"

@section MediaBinding_operations Operations of Binding  "MediaBinding"

  - @ref __onvifMedia__GetServiceCapabilities

  - @ref __onvifMedia__GetVideoSources

  - @ref __onvifMedia__GetAudioSources

  - @ref __onvifMedia__GetAudioOutputs

  - @ref __onvifMedia__CreateProfile

  - @ref __onvifMedia__GetProfile

  - @ref __onvifMedia__GetProfiles

  - @ref __onvifMedia__AddVideoEncoderConfiguration

  - @ref __onvifMedia__AddVideoSourceConfiguration

  - @ref __onvifMedia__AddAudioEncoderConfiguration

  - @ref __onvifMedia__AddAudioSourceConfiguration

  - @ref __onvifMedia__AddPTZConfiguration

  - @ref __onvifMedia__AddVideoAnalyticsConfiguration

  - @ref __onvifMedia__AddMetadataConfiguration

  - @ref __onvifMedia__AddAudioOutputConfiguration

  - @ref __onvifMedia__AddAudioDecoderConfiguration

  - @ref __onvifMedia__RemoveVideoEncoderConfiguration

  - @ref __onvifMedia__RemoveVideoSourceConfiguration

  - @ref __onvifMedia__RemoveAudioEncoderConfiguration

  - @ref __onvifMedia__RemoveAudioSourceConfiguration

  - @ref __onvifMedia__RemovePTZConfiguration

  - @ref __onvifMedia__RemoveVideoAnalyticsConfiguration

  - @ref __onvifMedia__RemoveMetadataConfiguration

  - @ref __onvifMedia__RemoveAudioOutputConfiguration

  - @ref __onvifMedia__RemoveAudioDecoderConfiguration

  - @ref __onvifMedia__DeleteProfile

  - @ref __onvifMedia__GetVideoSourceConfigurations

  - @ref __onvifMedia__GetVideoEncoderConfigurations

  - @ref __onvifMedia__GetAudioSourceConfigurations

  - @ref __onvifMedia__GetAudioEncoderConfigurations

  - @ref __onvifMedia__GetVideoAnalyticsConfigurations

  - @ref __onvifMedia__GetMetadataConfigurations

  - @ref __onvifMedia__GetAudioOutputConfigurations

  - @ref __onvifMedia__GetAudioDecoderConfigurations

  - @ref __onvifMedia__GetVideoSourceConfiguration

  - @ref __onvifMedia__GetVideoEncoderConfiguration

  - @ref __onvifMedia__GetAudioSourceConfiguration

  - @ref __onvifMedia__GetAudioEncoderConfiguration

  - @ref __onvifMedia__GetVideoAnalyticsConfiguration

  - @ref __onvifMedia__GetMetadataConfiguration

  - @ref __onvifMedia__GetAudioOutputConfiguration

  - @ref __onvifMedia__GetAudioDecoderConfiguration

  - @ref __onvifMedia__GetCompatibleVideoEncoderConfigurations

  - @ref __onvifMedia__GetCompatibleVideoSourceConfigurations

  - @ref __onvifMedia__GetCompatibleAudioEncoderConfigurations

  - @ref __onvifMedia__GetCompatibleAudioSourceConfigurations

  - @ref __onvifMedia__GetCompatibleVideoAnalyticsConfigurations

  - @ref __onvifMedia__GetCompatibleMetadataConfigurations

  - @ref __onvifMedia__GetCompatibleAudioOutputConfigurations

  - @ref __onvifMedia__GetCompatibleAudioDecoderConfigurations

  - @ref __onvifMedia__SetVideoSourceConfiguration

  - @ref __onvifMedia__SetVideoEncoderConfiguration

  - @ref __onvifMedia__SetAudioSourceConfiguration

  - @ref __onvifMedia__SetAudioEncoderConfiguration

  - @ref __onvifMedia__SetVideoAnalyticsConfiguration

  - @ref __onvifMedia__SetMetadataConfiguration

  - @ref __onvifMedia__SetAudioOutputConfiguration

  - @ref __onvifMedia__SetAudioDecoderConfiguration

  - @ref __onvifMedia__GetVideoSourceConfigurationOptions

  - @ref __onvifMedia__GetVideoEncoderConfigurationOptions

  - @ref __onvifMedia__GetAudioSourceConfigurationOptions

  - @ref __onvifMedia__GetAudioEncoderConfigurationOptions

  - @ref __onvifMedia__GetMetadataConfigurationOptions

  - @ref __onvifMedia__GetAudioOutputConfigurationOptions

  - @ref __onvifMedia__GetAudioDecoderConfigurationOptions

  - @ref __onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances

  - @ref __onvifMedia__GetStreamUri

  - @ref __onvifMedia__StartMulticastStreaming

  - @ref __onvifMedia__StopMulticastStreaming

  - @ref __onvifMedia__SetSynchronizationPoint

  - @ref __onvifMedia__GetSnapshotUri

  - @ref __onvifMedia__GetServiceCapabilities_

  - @ref __onvifMedia__GetVideoSources_

  - @ref __onvifMedia__GetAudioSources_

  - @ref __onvifMedia__GetAudioOutputs_

  - @ref __onvifMedia__CreateProfile_

  - @ref __onvifMedia__GetProfile_

  - @ref __onvifMedia__GetProfiles_

  - @ref __onvifMedia__AddVideoEncoderConfiguration_

  - @ref __onvifMedia__AddVideoSourceConfiguration_

  - @ref __onvifMedia__AddAudioEncoderConfiguration_

  - @ref __onvifMedia__AddAudioSourceConfiguration_

  - @ref __onvifMedia__AddPTZConfiguration_

  - @ref __onvifMedia__AddVideoAnalyticsConfiguration_

  - @ref __onvifMedia__AddMetadataConfiguration_

  - @ref __onvifMedia__AddAudioOutputConfiguration_

  - @ref __onvifMedia__AddAudioDecoderConfiguration_

  - @ref __onvifMedia__RemoveVideoEncoderConfiguration_

  - @ref __onvifMedia__RemoveVideoSourceConfiguration_

  - @ref __onvifMedia__RemoveAudioEncoderConfiguration_

  - @ref __onvifMedia__RemoveAudioSourceConfiguration_

  - @ref __onvifMedia__RemovePTZConfiguration_

  - @ref __onvifMedia__RemoveVideoAnalyticsConfiguration_

  - @ref __onvifMedia__RemoveMetadataConfiguration_

  - @ref __onvifMedia__RemoveAudioOutputConfiguration_

  - @ref __onvifMedia__RemoveAudioDecoderConfiguration_

  - @ref __onvifMedia__DeleteProfile_

  - @ref __onvifMedia__GetVideoSourceConfigurations_

  - @ref __onvifMedia__GetVideoEncoderConfigurations_

  - @ref __onvifMedia__GetAudioSourceConfigurations_

  - @ref __onvifMedia__GetAudioEncoderConfigurations_

  - @ref __onvifMedia__GetVideoAnalyticsConfigurations_

  - @ref __onvifMedia__GetMetadataConfigurations_

  - @ref __onvifMedia__GetAudioOutputConfigurations_

  - @ref __onvifMedia__GetAudioDecoderConfigurations_

  - @ref __onvifMedia__GetVideoSourceConfiguration_

  - @ref __onvifMedia__GetVideoEncoderConfiguration_

  - @ref __onvifMedia__GetAudioSourceConfiguration_

  - @ref __onvifMedia__GetAudioEncoderConfiguration_

  - @ref __onvifMedia__GetVideoAnalyticsConfiguration_

  - @ref __onvifMedia__GetMetadataConfiguration_

  - @ref __onvifMedia__GetAudioOutputConfiguration_

  - @ref __onvifMedia__GetAudioDecoderConfiguration_

  - @ref __onvifMedia__GetCompatibleVideoEncoderConfigurations_

  - @ref __onvifMedia__GetCompatibleVideoSourceConfigurations_

  - @ref __onvifMedia__GetCompatibleAudioEncoderConfigurations_

  - @ref __onvifMedia__GetCompatibleAudioSourceConfigurations_

  - @ref __onvifMedia__GetCompatibleVideoAnalyticsConfigurations_

  - @ref __onvifMedia__GetCompatibleMetadataConfigurations_

  - @ref __onvifMedia__GetCompatibleAudioOutputConfigurations_

  - @ref __onvifMedia__GetCompatibleAudioDecoderConfigurations_

  - @ref __onvifMedia__SetVideoSourceConfiguration_

  - @ref __onvifMedia__SetVideoEncoderConfiguration_

  - @ref __onvifMedia__SetAudioSourceConfiguration_

  - @ref __onvifMedia__SetAudioEncoderConfiguration_

  - @ref __onvifMedia__SetVideoAnalyticsConfiguration_

  - @ref __onvifMedia__SetMetadataConfiguration_

  - @ref __onvifMedia__SetAudioOutputConfiguration_

  - @ref __onvifMedia__SetAudioDecoderConfiguration_

  - @ref __onvifMedia__GetVideoSourceConfigurationOptions_

  - @ref __onvifMedia__GetVideoEncoderConfigurationOptions_

  - @ref __onvifMedia__GetAudioSourceConfigurationOptions_

  - @ref __onvifMedia__GetAudioEncoderConfigurationOptions_

  - @ref __onvifMedia__GetMetadataConfigurationOptions_

  - @ref __onvifMedia__GetAudioOutputConfigurationOptions_

  - @ref __onvifMedia__GetAudioDecoderConfigurationOptions_

  - @ref __onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_

  - @ref __onvifMedia__GetStreamUri_

  - @ref __onvifMedia__StartMulticastStreaming_

  - @ref __onvifMedia__StopMulticastStreaming_

  - @ref __onvifMedia__SetSynchronizationPoint_

  - @ref __onvifMedia__GetSnapshotUri_

@section MediaBinding_ports Endpoints of Binding  "MediaBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page PTZBinding Binding "PTZBinding"

@section PTZBinding_operations Operations of Binding  "PTZBinding"

  - @ref __onvifPtz__GetServiceCapabilities

  - @ref __onvifPtz__GetConfigurations

  - @ref __onvifPtz__GetPresets

  - @ref __onvifPtz__SetPreset

  - @ref __onvifPtz__RemovePreset

  - @ref __onvifPtz__GotoPreset

  - @ref __onvifPtz__GetStatus

  - @ref __onvifPtz__GetConfiguration

  - @ref __onvifPtz__GetNodes

  - @ref __onvifPtz__GetNode

  - @ref __onvifPtz__SetConfiguration

  - @ref __onvifPtz__GetConfigurationOptions

  - @ref __onvifPtz__GotoHomePosition

  - @ref __onvifPtz__SetHomePosition

  - @ref __onvifPtz__ContinuousMove

  - @ref __onvifPtz__RelativeMove

  - @ref __onvifPtz__SendAuxiliaryCommand

  - @ref __onvifPtz__AbsoluteMove

  - @ref __onvifPtz__Stop

  - @ref __onvifPtz__GetPresetTours

  - @ref __onvifPtz__GetPresetTour

  - @ref __onvifPtz__GetPresetTourOptions

  - @ref __onvifPtz__CreatePresetTour

  - @ref __onvifPtz__ModifyPresetTour

  - @ref __onvifPtz__OperatePresetTour

  - @ref __onvifPtz__RemovePresetTour

@section PTZBinding_ports Endpoints of Binding  "PTZBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page CreatePullPointBinding Binding "CreatePullPointBinding"

@section CreatePullPointBinding_operations Operations of Binding  "CreatePullPointBinding"

  - @ref __tev_cpb__CreatePullPoint

@section CreatePullPointBinding_ports Endpoints of Binding  "CreatePullPointBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page EventBinding Binding "EventBinding"

@section EventBinding_operations Operations of Binding  "EventBinding"

  - @ref __tev_eb__GetServiceCapabilities

  - @ref __tev_eb__CreatePullPointSubscription

  - @ref __tev_eb__GetEventProperties

@section EventBinding_ports Endpoints of Binding  "EventBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page NotificationConsumerBinding Binding "NotificationConsumerBinding"

@section NotificationConsumerBinding_operations Operations of Binding  "NotificationConsumerBinding"

  - @ref __tev_ncb__Notify

@section NotificationConsumerBinding_ports Endpoints of Binding  "NotificationConsumerBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page NotificationProducerBinding Binding "NotificationProducerBinding"

@section NotificationProducerBinding_operations Operations of Binding  "NotificationProducerBinding"

  - @ref __tev_npb__Subscribe

  - @ref __tev_npb__GetCurrentMessage

@section NotificationProducerBinding_ports Endpoints of Binding  "NotificationProducerBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page PullPointBinding Binding "PullPointBinding"

@section PullPointBinding_operations Operations of Binding  "PullPointBinding"

  - @ref __tev_ppb__GetMessages

  - @ref __tev_ppb__DestroyPullPoint

  - @ref __tev_ppb__Notify

@section PullPointBinding_ports Endpoints of Binding  "PullPointBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page PullPointSubscriptionBinding Binding "PullPointSubscriptionBinding"

@section PullPointSubscriptionBinding_operations Operations of Binding  "PullPointSubscriptionBinding"

  - @ref __tev_pps__PullMessages

  - @ref __tev_pps__SetSynchronizationPoint

@section PullPointSubscriptionBinding_ports Endpoints of Binding  "PullPointSubscriptionBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page SubscriptionManagerBinding Binding "SubscriptionManagerBinding"

@section SubscriptionManagerBinding_operations Operations of Binding  "SubscriptionManagerBinding"

  - @ref __tev_smb__Renew

  - @ref __tev_smb__Unsubscribe

@section SubscriptionManagerBinding_ports Endpoints of Binding  "SubscriptionManagerBinding"

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use option -j to omit.

*/
struct SOAP_ENV__Detail
{
// xsd:anyAttribute omitted: to parse attribute content of the Detail element into DOM anyAttribute, use wsdl2h option -d.
    _XML                                 __any                         ;	///< Catch any element content in XML string.
    oasisWsnB2__PauseFailedFaultType*    oasisWsnB2__PauseFailedFault  ;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":PauseFailedFault" part "PauseFailedFault"
    oasisWsrfR2__ResourceUnknownFaultType*  oasisWsrfR2__ResourceUnknownFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault" part "ResourceUnknownFault"
    oasisWsnB2__ResumeFailedFaultType*   oasisWsnB2__ResumeFailedFault ;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault" part "ResumeFailedFault"
    oasisWsnB2__UnableToDestroySubscriptionFaultType*  oasisWsnB2__UnableToDestroySubscriptionFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault" part "UnableToDestroySubscriptionFault"
    oasisWsnB2__UnacceptableTerminationTimeFaultType*  oasisWsnB2__UnacceptableTerminationTimeFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault" part "UnacceptableTerminationTimeFault"
    oasisWsnB2__UnableToCreatePullPointFaultType*  oasisWsnB2__UnableToCreatePullPointFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault" part "UnableToCreatePullPointFault"
    oasisWsnB2__InvalidFilterFaultType*  oasisWsnB2__InvalidFilterFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault" part "InvalidFilterFault"
    oasisWsnB2__InvalidMessageContentExpressionFaultType*  oasisWsnB2__InvalidMessageContentExpressionFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault" part "InvalidMessageContentExpressionFault"
    oasisWsnB2__InvalidProducerPropertiesExpressionFaultType*  oasisWsnB2__InvalidProducerPropertiesExpressionFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault" part "InvalidProducerPropertiesExpressionFault"
    oasisWsnB2__InvalidTopicExpressionFaultType*  oasisWsnB2__InvalidTopicExpressionFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault" part "InvalidTopicExpressionFault"
    oasisWsnB2__NotifyMessageNotSupportedFaultType*  oasisWsnB2__NotifyMessageNotSupportedFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault" part "NotifyMessageNotSupportedFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault" part "ResourceUnknownFault"
    oasisWsnB2__SubscribeCreationFailedFaultType*  oasisWsnB2__SubscribeCreationFailedFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault" part "SubscribeCreationFailedFault"
    oasisWsnB2__TopicExpressionDialectUnknownFaultType*  oasisWsnB2__TopicExpressionDialectUnknownFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault" part "TopicExpressionDialectUnknownFault"
    oasisWsnB2__TopicNotSupportedFaultType*  oasisWsnB2__TopicNotSupportedFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault" part "TopicNotSupportedFault"
    oasisWsnB2__UnacceptableInitialTerminationTimeFaultType*  oasisWsnB2__UnacceptableInitialTerminationTimeFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault" part "UnacceptableInitialTerminationTimeFault"
    oasisWsnB2__UnrecognizedPolicyRequestFaultType*  oasisWsnB2__UnrecognizedPolicyRequestFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault" part "UnrecognizedPolicyRequestFault"
    oasisWsnB2__UnsupportedPolicyRequestFaultType*  oasisWsnB2__UnsupportedPolicyRequestFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault" part "UnsupportedPolicyRequestFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault" part "InvalidFilterFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault" part "InvalidMessageContentExpressionFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault" part "InvalidProducerPropertiesExpressionFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault" part "InvalidTopicExpressionFault"
    oasisWsnB2__MultipleTopicsSpecifiedFaultType*  oasisWsnB2__MultipleTopicsSpecifiedFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault" part "MultipleTopicsSpecifiedFault"
    oasisWsnB2__NoCurrentMessageOnTopicFaultType*  oasisWsnB2__NoCurrentMessageOnTopicFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault" part "NoCurrentMessageOnTopicFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault" part "NotifyMessageNotSupportedFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault" part "ResourceUnknownFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault" part "SubscribeCreationFailedFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault" part "TopicExpressionDialectUnknownFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault" part "TopicNotSupportedFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault" part "UnacceptableInitialTerminationTimeFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault" part "UnrecognizedPolicyRequestFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault" part "UnsupportedPolicyRequestFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault" part "ResourceUnknownFault"
    oasisWsnB2__UnableToDestroyPullPointFaultType*  oasisWsnB2__UnableToDestroyPullPointFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault" part "UnableToDestroyPullPointFault"
    oasisWsnB2__UnableToGetMessagesFaultType*  oasisWsnB2__UnableToGetMessagesFault;
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault" part "UnableToGetMessagesFault"
    _onvifEvents__PullMessagesFaultResponse*  onvifEvents__PullMessagesFaultResponse;
///< SOAP Fault element ""http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse" part "parameters"
///< SOAP Fault element ""http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault" part "ResourceUnknownFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault" part "UnableToDestroySubscriptionFault"
///< SOAP Fault element ""http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault" part "UnacceptableTerminationTimeFault"
    int                                  __type                        ;	///< set to SOAP_TYPE_X for a serializable type X
    void                                *fault                         ;	///< points to serializable object X or NULL
};

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PausableSubscriptionManagerBinding                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__Renew                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__Renew" of service binding "PausableSubscriptionManagerBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManager/RenewRequest"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManager/RenewResponse"

  - SOAP Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__Renew(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _oasisWsnB2__Renew*                 oasisWsnB2__Renew,
    // response parameters:
    _oasisWsnB2__RenewResponse*         oasisWsnB2__RenewResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__Renew(
    struct soap *soap,
    // request parameters:
    _oasisWsnB2__Renew*                 oasisWsnB2__Renew,
    // response parameters:
    _oasisWsnB2__RenewResponse*         oasisWsnB2__RenewResponse
  );
@endcode

C++ proxy class (defined in soapPausableSubscriptionManagerBindingProxy.h):
@code
  class PausableSubscriptionManagerBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPausableSubscriptionManagerBindingService.h):
@code
  class PausableSubscriptionManagerBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	Renew document
//gsoap ns2  service method-encoding:	Renew literal
//gsoap ns2  service method-action:	Renew http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest
//gsoap ns2  service method-output-action:	Renew http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManager/RenewResponse
//gsoap ns2  service method-fault:	Renew oasisWsrfR2__ResourceUnknownFault
//gsoap ns2  service method-fault:	Renew oasisWsnB2__UnacceptableTerminationTimeFault
int __ns2__Renew(
    _oasisWsnB2__Renew*                 oasisWsnB2__Renew,	///< Request parameter
    _oasisWsnB2__RenewResponse*         oasisWsnB2__RenewResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__Unsubscribe                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__Unsubscribe" of service binding "PausableSubscriptionManagerBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManager/UnsubscribeRequest"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManager/UnsubscribeResponse"

  - SOAP Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__Unsubscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _oasisWsnB2__Unsubscribe*           oasisWsnB2__Unsubscribe,
    // response parameters:
    _oasisWsnB2__UnsubscribeResponse*   oasisWsnB2__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__Unsubscribe(
    struct soap *soap,
    // request parameters:
    _oasisWsnB2__Unsubscribe*           oasisWsnB2__Unsubscribe,
    // response parameters:
    _oasisWsnB2__UnsubscribeResponse*   oasisWsnB2__UnsubscribeResponse
  );
@endcode

C++ proxy class (defined in soapPausableSubscriptionManagerBindingProxy.h):
@code
  class PausableSubscriptionManagerBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPausableSubscriptionManagerBindingService.h):
@code
  class PausableSubscriptionManagerBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	Unsubscribe document
//gsoap ns2  service method-encoding:	Unsubscribe literal
//gsoap ns2  service method-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest
//gsoap ns2  service method-output-action:	Unsubscribe http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManager/UnsubscribeResponse
//gsoap ns2  service method-fault:	Unsubscribe oasisWsrfR2__ResourceUnknownFault
//gsoap ns2  service method-fault:	Unsubscribe oasisWsnB2__UnableToDestroySubscriptionFault
int __ns2__Unsubscribe(
    _oasisWsnB2__Unsubscribe*           oasisWsnB2__Unsubscribe,	///< Request parameter
    _oasisWsnB2__UnsubscribeResponse*   oasisWsnB2__UnsubscribeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__PauseSubscription                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__PauseSubscription" of service binding "PausableSubscriptionManagerBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManager/PauseSubscription"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManager/PauseSubscriptionResponse"

  - SOAP Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__PauseSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _oasisWsnB2__PauseSubscription*     oasisWsnB2__PauseSubscription,
    // response parameters:
    _oasisWsnB2__PauseSubscriptionResponse* oasisWsnB2__PauseSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__PauseSubscription(
    struct soap *soap,
    // request parameters:
    _oasisWsnB2__PauseSubscription*     oasisWsnB2__PauseSubscription,
    // response parameters:
    _oasisWsnB2__PauseSubscriptionResponse* oasisWsnB2__PauseSubscriptionResponse
  );
@endcode

C++ proxy class (defined in soapPausableSubscriptionManagerBindingProxy.h):
@code
  class PausableSubscriptionManagerBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPausableSubscriptionManagerBindingService.h):
@code
  class PausableSubscriptionManagerBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	PauseSubscription document
//gsoap ns2  service method-encoding:	PauseSubscription literal
//gsoap ns2  service method-action:	PauseSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest
//gsoap ns2  service method-output-action:	PauseSubscription http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManager/PauseSubscriptionResponse
//gsoap ns2  service method-fault:	PauseSubscription oasisWsrfR2__ResourceUnknownFault
//gsoap ns2  service method-fault:	PauseSubscription oasisWsnB2__PauseFailedFault
int __ns2__PauseSubscription(
    _oasisWsnB2__PauseSubscription*     oasisWsnB2__PauseSubscription,	///< Request parameter
    _oasisWsnB2__PauseSubscriptionResponse* oasisWsnB2__PauseSubscriptionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__ResumeSubscription                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__ResumeSubscription" of service binding "PausableSubscriptionManagerBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManager/ResumeSubscription"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManager/ResumeSubscriptionResponse"

  - SOAP Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__ResumeSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _oasisWsnB2__ResumeSubscription*    oasisWsnB2__ResumeSubscription,
    // response parameters:
    _oasisWsnB2__ResumeSubscriptionResponse* oasisWsnB2__ResumeSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__ResumeSubscription(
    struct soap *soap,
    // request parameters:
    _oasisWsnB2__ResumeSubscription*    oasisWsnB2__ResumeSubscription,
    // response parameters:
    _oasisWsnB2__ResumeSubscriptionResponse* oasisWsnB2__ResumeSubscriptionResponse
  );
@endcode

C++ proxy class (defined in soapPausableSubscriptionManagerBindingProxy.h):
@code
  class PausableSubscriptionManagerBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPausableSubscriptionManagerBindingService.h):
@code
  class PausableSubscriptionManagerBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	ResumeSubscription document
//gsoap ns2  service method-encoding:	ResumeSubscription literal
//gsoap ns2  service method-action:	ResumeSubscription http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest
//gsoap ns2  service method-output-action:	ResumeSubscription http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManager/ResumeSubscriptionResponse
//gsoap ns2  service method-fault:	ResumeSubscription oasisWsrfR2__ResourceUnknownFault
//gsoap ns2  service method-fault:	ResumeSubscription oasisWsnB2__ResumeFailedFault
int __ns2__ResumeSubscription(
    _oasisWsnB2__ResumeSubscription*    oasisWsnB2__ResumeSubscription,	///< Request parameter
    _oasisWsnB2__ResumeSubscriptionResponse* oasisWsnB2__ResumeSubscriptionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetServices                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetServices" of service binding "DeviceBinding"

/**

Operation details:

Returns information about services on the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetServices"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetServicesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetServices(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetServices*          onvifDevice__GetServices,
    // response parameters:
    _onvifDevice__GetServicesResponse*  onvifDevice__GetServicesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetServices(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetServices*          onvifDevice__GetServices,
    // response parameters:
    _onvifDevice__GetServicesResponse*  onvifDevice__GetServicesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetServices document
//gsoap onvifDevice service method-encoding:	GetServices literal
//gsoap onvifDevice service method-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServices
//gsoap onvifDevice service method-output-action:	GetServices http://www.onvif.org/ver10/device/wsdl/Device/GetServicesResponse
int __onvifDevice__GetServices(
    _onvifDevice__GetServices*          onvifDevice__GetServices,	///< Request parameter
    _onvifDevice__GetServicesResponse*  onvifDevice__GetServicesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetServiceCapabilities                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetServiceCapabilities" of service binding "DeviceBinding"

/**

Operation details:

Returns the capabilities of the device service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetServiceCapabilities"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetServiceCapabilities* onvifDevice__GetServiceCapabilities,
    // response parameters:
    _onvifDevice__GetServiceCapabilitiesResponse* onvifDevice__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetServiceCapabilities(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetServiceCapabilities* onvifDevice__GetServiceCapabilities,
    // response parameters:
    _onvifDevice__GetServiceCapabilitiesResponse* onvifDevice__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetServiceCapabilities document
//gsoap onvifDevice service method-encoding:	GetServiceCapabilities literal
//gsoap onvifDevice service method-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities
//gsoap onvifDevice service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/Device/GetServiceCapabilitiesResponse
int __onvifDevice__GetServiceCapabilities(
    _onvifDevice__GetServiceCapabilities* onvifDevice__GetServiceCapabilities,	///< Request parameter
    _onvifDevice__GetServiceCapabilitiesResponse* onvifDevice__GetServiceCapabilitiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDeviceInformation                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDeviceInformation" of service binding "DeviceBinding"

/**

Operation details:

This operation gets basic device information from the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDeviceInformation"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDeviceInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDeviceInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDeviceInformation* onvifDevice__GetDeviceInformation,
    // response parameters:
    _onvifDevice__GetDeviceInformationResponse* onvifDevice__GetDeviceInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDeviceInformation(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDeviceInformation* onvifDevice__GetDeviceInformation,
    // response parameters:
    _onvifDevice__GetDeviceInformationResponse* onvifDevice__GetDeviceInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDeviceInformation document
//gsoap onvifDevice service method-encoding:	GetDeviceInformation literal
//gsoap onvifDevice service method-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation
//gsoap onvifDevice service method-output-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/Device/GetDeviceInformationResponse
int __onvifDevice__GetDeviceInformation(
    _onvifDevice__GetDeviceInformation* onvifDevice__GetDeviceInformation,	///< Request parameter
    _onvifDevice__GetDeviceInformationResponse* onvifDevice__GetDeviceInformationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetSystemDateAndTime                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetSystemDateAndTime" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the device system date and time. The device shall support the
				configuration of the daylight saving setting and
of the manual system date and time (if
				applicable) or indication of NTP time (if applicable)
through the SetSystemDateAndTime
				command. <br/>
				If system time and date are set manually, the client
shall include UTCDateTime in the request.<br/>
				A TimeZone token which is not formed according to
the rules of IEEE 1003.1 section 8.3 is considered as invalid timezone.<br/>
				The DayLightSavings flag should be set to true to
activate any DST settings of the TimeZone string. 
				Clear the DayLightSavings flag if the DST portion
of the TimeZone settings should be ignored.
			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetSystemDateAndTime"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetSystemDateAndTime* onvifDevice__SetSystemDateAndTime,
    // response parameters:
    _onvifDevice__SetSystemDateAndTimeResponse* onvifDevice__SetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetSystemDateAndTime(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetSystemDateAndTime* onvifDevice__SetSystemDateAndTime,
    // response parameters:
    _onvifDevice__SetSystemDateAndTimeResponse* onvifDevice__SetSystemDateAndTimeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetSystemDateAndTime document
//gsoap onvifDevice service method-encoding:	SetSystemDateAndTime literal
//gsoap onvifDevice service method-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime
//gsoap onvifDevice service method-output-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/Device/SetSystemDateAndTimeResponse
int __onvifDevice__SetSystemDateAndTime(
    _onvifDevice__SetSystemDateAndTime* onvifDevice__SetSystemDateAndTime,	///< Request parameter
    _onvifDevice__SetSystemDateAndTimeResponse* onvifDevice__SetSystemDateAndTimeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetSystemDateAndTime                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetSystemDateAndTime" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the device system date and time. The device shall support the
return of
				the daylight saving setting and of the manual system
date and time (if applicable) or indication
				of NTP time (if applicable) through the GetSystemDateAndTime
command.<br/>
				A device shall provide the UTCDateTime information.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemDateAndTime"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetSystemDateAndTime* onvifDevice__GetSystemDateAndTime,
    // response parameters:
    _onvifDevice__GetSystemDateAndTimeResponse* onvifDevice__GetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetSystemDateAndTime(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetSystemDateAndTime* onvifDevice__GetSystemDateAndTime,
    // response parameters:
    _onvifDevice__GetSystemDateAndTimeResponse* onvifDevice__GetSystemDateAndTimeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetSystemDateAndTime document
//gsoap onvifDevice service method-encoding:	GetSystemDateAndTime literal
//gsoap onvifDevice service method-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime
//gsoap onvifDevice service method-output-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/Device/GetSystemDateAndTimeResponse
int __onvifDevice__GetSystemDateAndTime(
    _onvifDevice__GetSystemDateAndTime* onvifDevice__GetSystemDateAndTime,	///< Request parameter
    _onvifDevice__GetSystemDateAndTimeResponse* onvifDevice__GetSystemDateAndTimeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetSystemFactoryDefault                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetSystemFactoryDefault" of service binding "DeviceBinding"

/**

Operation details:

This operation reloads the parameters on the device to their factory default values.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetSystemFactoryDefault"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetSystemFactoryDefaultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetSystemFactoryDefault(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetSystemFactoryDefault* onvifDevice__SetSystemFactoryDefault,
    // response parameters:
    _onvifDevice__SetSystemFactoryDefaultResponse* onvifDevice__SetSystemFactoryDefaultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetSystemFactoryDefault(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetSystemFactoryDefault* onvifDevice__SetSystemFactoryDefault,
    // response parameters:
    _onvifDevice__SetSystemFactoryDefaultResponse* onvifDevice__SetSystemFactoryDefaultResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetSystemFactoryDefault document
//gsoap onvifDevice service method-encoding:	SetSystemFactoryDefault literal
//gsoap onvifDevice service method-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault
//gsoap onvifDevice service method-output-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/Device/SetSystemFactoryDefaultResponse
int __onvifDevice__SetSystemFactoryDefault(
    _onvifDevice__SetSystemFactoryDefault* onvifDevice__SetSystemFactoryDefault,	///< Request parameter
    _onvifDevice__SetSystemFactoryDefaultResponse* onvifDevice__SetSystemFactoryDefaultResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__UpgradeSystemFirmware                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__UpgradeSystemFirmware" of service binding "DeviceBinding"

/**

Operation details:

This operation upgrades a device firmware version. After a successful upgrade the
response
				message is sent before the device reboots. The device
should support firmware upgrade
				through the UpgradeSystemFirmware command. The exact
format of the firmware data is
				outside the scope of this standard.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/UpgradeSystemFirmware"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/UpgradeSystemFirmwareResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__UpgradeSystemFirmware(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__UpgradeSystemFirmware* onvifDevice__UpgradeSystemFirmware,
    // response parameters:
    _onvifDevice__UpgradeSystemFirmwareResponse* onvifDevice__UpgradeSystemFirmwareResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__UpgradeSystemFirmware(
    struct soap *soap,
    // request parameters:
    _onvifDevice__UpgradeSystemFirmware* onvifDevice__UpgradeSystemFirmware,
    // response parameters:
    _onvifDevice__UpgradeSystemFirmwareResponse* onvifDevice__UpgradeSystemFirmwareResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	UpgradeSystemFirmware document
//gsoap onvifDevice service method-encoding:	UpgradeSystemFirmware literal
//gsoap onvifDevice service method-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware
//gsoap onvifDevice service method-output-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/Device/UpgradeSystemFirmwareResponse
int __onvifDevice__UpgradeSystemFirmware(
    _onvifDevice__UpgradeSystemFirmware* onvifDevice__UpgradeSystemFirmware,	///< Request parameter
    _onvifDevice__UpgradeSystemFirmwareResponse* onvifDevice__UpgradeSystemFirmwareResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SystemReboot                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SystemReboot" of service binding "DeviceBinding"

/**

Operation details:

This operation reboots the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SystemReboot"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SystemRebootResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SystemReboot(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SystemReboot*         onvifDevice__SystemReboot,
    // response parameters:
    _onvifDevice__SystemRebootResponse* onvifDevice__SystemRebootResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SystemReboot(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SystemReboot*         onvifDevice__SystemReboot,
    // response parameters:
    _onvifDevice__SystemRebootResponse* onvifDevice__SystemRebootResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SystemReboot document
//gsoap onvifDevice service method-encoding:	SystemReboot literal
//gsoap onvifDevice service method-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemReboot
//gsoap onvifDevice service method-output-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/Device/SystemRebootResponse
int __onvifDevice__SystemReboot(
    _onvifDevice__SystemReboot*         onvifDevice__SystemReboot,	///< Request parameter
    _onvifDevice__SystemRebootResponse* onvifDevice__SystemRebootResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__RestoreSystem                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__RestoreSystem" of service binding "DeviceBinding"

/**

Operation details:

This operation restores the system backup configuration files(s) previously retrieved
from a
				device. The device should support restore of backup
configuration file(s) through the
				RestoreSystem command. The exact format of the backup
configuration file(s) is outside the
				scope of this standard. If the command is supported,
it shall accept backup files returned by
				the GetSystemBackup command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/RestoreSystem"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/RestoreSystemResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__RestoreSystem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__RestoreSystem*        onvifDevice__RestoreSystem,
    // response parameters:
    _onvifDevice__RestoreSystemResponse* onvifDevice__RestoreSystemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__RestoreSystem(
    struct soap *soap,
    // request parameters:
    _onvifDevice__RestoreSystem*        onvifDevice__RestoreSystem,
    // response parameters:
    _onvifDevice__RestoreSystemResponse* onvifDevice__RestoreSystemResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	RestoreSystem document
//gsoap onvifDevice service method-encoding:	RestoreSystem literal
//gsoap onvifDevice service method-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystem
//gsoap onvifDevice service method-output-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/Device/RestoreSystemResponse
int __onvifDevice__RestoreSystem(
    _onvifDevice__RestoreSystem*        onvifDevice__RestoreSystem,	///< Request parameter
    _onvifDevice__RestoreSystemResponse* onvifDevice__RestoreSystemResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetSystemBackup                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetSystemBackup" of service binding "DeviceBinding"

/**

Operation details:

This operation is retrieves system backup configuration file(s) from a device. The
device
				should support return of back up configuration file(s)
through the GetSystemBackup command.
				The backup is returned with reference to a name
and mime-type together with binary data.
				The exact format of the backup configuration files
is outside the scope of this standard.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemBackup"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemBackupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetSystemBackup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetSystemBackup*      onvifDevice__GetSystemBackup,
    // response parameters:
    _onvifDevice__GetSystemBackupResponse* onvifDevice__GetSystemBackupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetSystemBackup(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetSystemBackup*      onvifDevice__GetSystemBackup,
    // response parameters:
    _onvifDevice__GetSystemBackupResponse* onvifDevice__GetSystemBackupResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetSystemBackup document
//gsoap onvifDevice service method-encoding:	GetSystemBackup literal
//gsoap onvifDevice service method-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackup
//gsoap onvifDevice service method-output-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/Device/GetSystemBackupResponse
int __onvifDevice__GetSystemBackup(
    _onvifDevice__GetSystemBackup*      onvifDevice__GetSystemBackup,	///< Request parameter
    _onvifDevice__GetSystemBackupResponse* onvifDevice__GetSystemBackupResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetSystemLog                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetSystemLog" of service binding "DeviceBinding"

/**

Operation details:

This operation gets a system log from the device. The exact format of the system
logs is outside the scope of this standard.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemLog"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemLogResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetSystemLog(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetSystemLog*         onvifDevice__GetSystemLog,
    // response parameters:
    _onvifDevice__GetSystemLogResponse* onvifDevice__GetSystemLogResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetSystemLog(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetSystemLog*         onvifDevice__GetSystemLog,
    // response parameters:
    _onvifDevice__GetSystemLogResponse* onvifDevice__GetSystemLogResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetSystemLog document
//gsoap onvifDevice service method-encoding:	GetSystemLog literal
//gsoap onvifDevice service method-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLog
//gsoap onvifDevice service method-output-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/Device/GetSystemLogResponse
int __onvifDevice__GetSystemLog(
    _onvifDevice__GetSystemLog*         onvifDevice__GetSystemLog,	///< Request parameter
    _onvifDevice__GetSystemLogResponse* onvifDevice__GetSystemLogResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetSystemSupportInformation                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetSystemSupportInformation" of service binding "DeviceBinding"

/**

Operation details:

This operation gets arbitary device diagnostics information from the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemSupportInformation"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemSupportInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetSystemSupportInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetSystemSupportInformation* onvifDevice__GetSystemSupportInformation,
    // response parameters:
    _onvifDevice__GetSystemSupportInformationResponse* onvifDevice__GetSystemSupportInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetSystemSupportInformation(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetSystemSupportInformation* onvifDevice__GetSystemSupportInformation,
    // response parameters:
    _onvifDevice__GetSystemSupportInformationResponse* onvifDevice__GetSystemSupportInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetSystemSupportInformation document
//gsoap onvifDevice service method-encoding:	GetSystemSupportInformation literal
//gsoap onvifDevice service method-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation
//gsoap onvifDevice service method-output-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/Device/GetSystemSupportInformationResponse
int __onvifDevice__GetSystemSupportInformation(
    _onvifDevice__GetSystemSupportInformation* onvifDevice__GetSystemSupportInformation,	///< Request parameter
    _onvifDevice__GetSystemSupportInformationResponse* onvifDevice__GetSystemSupportInformationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetScopes                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetScopes" of service binding "DeviceBinding"

/**

Operation details:

This operation requests the scope parameters of a device. The scope parameters are
used in
				the device discovery to match a probe message, see
Section 7. The Scope parameters are of
				two different types: <ul>
					<li>Fixed</li>
					<li>Configurable</li>
				</ul>
				Fixed scope parameters cannot be altered through
the device management interface but are
				permanent device characteristics part of the device
firmware configurations. The scope type is
				indicated in the scope list returned in the get
scope parameters response. Configurable scope
				parameters can be set throught the set and add scope
parameters operations. 
				The device shall support retrieval of discovery
scope parameters
				through the GetScopes command. As some scope parameters
are mandatory, the client
				always expects a scope list in the response.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetScopes"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetScopes*            onvifDevice__GetScopes,
    // response parameters:
    _onvifDevice__GetScopesResponse*    onvifDevice__GetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetScopes(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetScopes*            onvifDevice__GetScopes,
    // response parameters:
    _onvifDevice__GetScopesResponse*    onvifDevice__GetScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetScopes document
//gsoap onvifDevice service method-encoding:	GetScopes literal
//gsoap onvifDevice service method-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopes
//gsoap onvifDevice service method-output-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/Device/GetScopesResponse
int __onvifDevice__GetScopes(
    _onvifDevice__GetScopes*            onvifDevice__GetScopes,	///< Request parameter
    _onvifDevice__GetScopesResponse*    onvifDevice__GetScopesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetScopes                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetScopes" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the scope parameters of a device. The scope parameters are used
in the
				device discovery to match a probe message.
				This operation replaces all existing configurable
scope parameters (not fixed parameters). If
				this shall be avoided, one should use the scope
add command instead. The device shall
				support configuration of discovery scope parameters
through the SetScopes command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetScopes"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetScopes*            onvifDevice__SetScopes,
    // response parameters:
    _onvifDevice__SetScopesResponse*    onvifDevice__SetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetScopes(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetScopes*            onvifDevice__SetScopes,
    // response parameters:
    _onvifDevice__SetScopesResponse*    onvifDevice__SetScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetScopes document
//gsoap onvifDevice service method-encoding:	SetScopes literal
//gsoap onvifDevice service method-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopes
//gsoap onvifDevice service method-output-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/Device/SetScopesResponse
int __onvifDevice__SetScopes(
    _onvifDevice__SetScopes*            onvifDevice__SetScopes,	///< Request parameter
    _onvifDevice__SetScopesResponse*    onvifDevice__SetScopesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__AddScopes                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__AddScopes" of service binding "DeviceBinding"

/**

Operation details:

This operation adds new configurable scope parameters to a device. The scope parameters
				are used in the device discovery to match a probe
message. The device shall
				support addition of discovery scope parameters through
the AddScopes command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/AddScopes"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/AddScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__AddScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__AddScopes*            onvifDevice__AddScopes,
    // response parameters:
    _onvifDevice__AddScopesResponse*    onvifDevice__AddScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__AddScopes(
    struct soap *soap,
    // request parameters:
    _onvifDevice__AddScopes*            onvifDevice__AddScopes,
    // response parameters:
    _onvifDevice__AddScopesResponse*    onvifDevice__AddScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	AddScopes document
//gsoap onvifDevice service method-encoding:	AddScopes literal
//gsoap onvifDevice service method-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopes
//gsoap onvifDevice service method-output-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/Device/AddScopesResponse
int __onvifDevice__AddScopes(
    _onvifDevice__AddScopes*            onvifDevice__AddScopes,	///< Request parameter
    _onvifDevice__AddScopesResponse*    onvifDevice__AddScopesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__RemoveScopes                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__RemoveScopes" of service binding "DeviceBinding"

/**

Operation details:

This operation deletes scope-configurable scope parameters from a device. The scope
				parameters are used in the device discovery to match
a probe message, see Section 7. The
				device shall support deletion of discovery scope
parameters through the RemoveScopes
				command.
				Table

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/RemoveScopes"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/RemoveScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__RemoveScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__RemoveScopes*         onvifDevice__RemoveScopes,
    // response parameters:
    _onvifDevice__RemoveScopesResponse* onvifDevice__RemoveScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__RemoveScopes(
    struct soap *soap,
    // request parameters:
    _onvifDevice__RemoveScopes*         onvifDevice__RemoveScopes,
    // response parameters:
    _onvifDevice__RemoveScopesResponse* onvifDevice__RemoveScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	RemoveScopes document
//gsoap onvifDevice service method-encoding:	RemoveScopes literal
//gsoap onvifDevice service method-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopes
//gsoap onvifDevice service method-output-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/Device/RemoveScopesResponse
int __onvifDevice__RemoveScopes(
    _onvifDevice__RemoveScopes*         onvifDevice__RemoveScopes,	///< Request parameter
    _onvifDevice__RemoveScopesResponse* onvifDevice__RemoveScopesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDiscoveryMode                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDiscoveryMode" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the discovery mode of a device. See Section 7.2 for the definition
of the
				different device discovery modes. The device shall
support retrieval of the discovery mode
				setting through the GetDiscoveryMode command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDiscoveryMode"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDiscoveryMode*     onvifDevice__GetDiscoveryMode,
    // response parameters:
    _onvifDevice__GetDiscoveryModeResponse* onvifDevice__GetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDiscoveryMode(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDiscoveryMode*     onvifDevice__GetDiscoveryMode,
    // response parameters:
    _onvifDevice__GetDiscoveryModeResponse* onvifDevice__GetDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDiscoveryMode document
//gsoap onvifDevice service method-encoding:	GetDiscoveryMode literal
//gsoap onvifDevice service method-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode
//gsoap onvifDevice service method-output-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/Device/GetDiscoveryModeResponse
int __onvifDevice__GetDiscoveryMode(
    _onvifDevice__GetDiscoveryMode*     onvifDevice__GetDiscoveryMode,	///< Request parameter
    _onvifDevice__GetDiscoveryModeResponse* onvifDevice__GetDiscoveryModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetDiscoveryMode                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetDiscoveryMode" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the discovery mode operation of a device. See Section 7.2 for
the
				definition of the different device discovery modes.
The device shall support configuration of
				the discovery mode setting through the SetDiscoveryMode
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDiscoveryMode"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetDiscoveryMode*     onvifDevice__SetDiscoveryMode,
    // response parameters:
    _onvifDevice__SetDiscoveryModeResponse* onvifDevice__SetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetDiscoveryMode(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetDiscoveryMode*     onvifDevice__SetDiscoveryMode,
    // response parameters:
    _onvifDevice__SetDiscoveryModeResponse* onvifDevice__SetDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetDiscoveryMode document
//gsoap onvifDevice service method-encoding:	SetDiscoveryMode literal
//gsoap onvifDevice service method-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode
//gsoap onvifDevice service method-output-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/Device/SetDiscoveryModeResponse
int __onvifDevice__SetDiscoveryMode(
    _onvifDevice__SetDiscoveryMode*     onvifDevice__SetDiscoveryMode,	///< Request parameter
    _onvifDevice__SetDiscoveryModeResponse* onvifDevice__SetDiscoveryModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetRemoteDiscoveryMode                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetRemoteDiscoveryMode" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the remote discovery mode of a device. See Section 7.4 for the
definition
				of remote discovery extensions. A device that supports
remote discovery shall support
				retrieval of the remote discovery mode setting through
the GetRemoteDiscoveryMode
				command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetRemoteDiscoveryMode"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetRemoteDiscoveryMode* onvifDevice__GetRemoteDiscoveryMode,
    // response parameters:
    _onvifDevice__GetRemoteDiscoveryModeResponse* onvifDevice__GetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetRemoteDiscoveryMode(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetRemoteDiscoveryMode* onvifDevice__GetRemoteDiscoveryMode,
    // response parameters:
    _onvifDevice__GetRemoteDiscoveryModeResponse* onvifDevice__GetRemoteDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetRemoteDiscoveryMode document
//gsoap onvifDevice service method-encoding:	GetRemoteDiscoveryMode literal
//gsoap onvifDevice service method-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode
//gsoap onvifDevice service method-output-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/Device/GetRemoteDiscoveryModeResponse
int __onvifDevice__GetRemoteDiscoveryMode(
    _onvifDevice__GetRemoteDiscoveryMode* onvifDevice__GetRemoteDiscoveryMode,	///< Request parameter
    _onvifDevice__GetRemoteDiscoveryModeResponse* onvifDevice__GetRemoteDiscoveryModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetRemoteDiscoveryMode                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetRemoteDiscoveryMode" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the remote discovery mode of operation of a device. See Section
7.4 for
				the definition of remote discovery remote extensions.
A device that supports remote discovery
				shall support configuration of the discovery mode
setting through the
				SetRemoteDiscoveryMode command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRemoteDiscoveryMode"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetRemoteDiscoveryMode* onvifDevice__SetRemoteDiscoveryMode,
    // response parameters:
    _onvifDevice__SetRemoteDiscoveryModeResponse* onvifDevice__SetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetRemoteDiscoveryMode(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetRemoteDiscoveryMode* onvifDevice__SetRemoteDiscoveryMode,
    // response parameters:
    _onvifDevice__SetRemoteDiscoveryModeResponse* onvifDevice__SetRemoteDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetRemoteDiscoveryMode document
//gsoap onvifDevice service method-encoding:	SetRemoteDiscoveryMode literal
//gsoap onvifDevice service method-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode
//gsoap onvifDevice service method-output-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/Device/SetRemoteDiscoveryModeResponse
int __onvifDevice__SetRemoteDiscoveryMode(
    _onvifDevice__SetRemoteDiscoveryMode* onvifDevice__SetRemoteDiscoveryMode,	///< Request parameter
    _onvifDevice__SetRemoteDiscoveryModeResponse* onvifDevice__SetRemoteDiscoveryModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDPAddresses                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDPAddresses" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the remote DP address or addresses from a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support retrieval of the remote
				DP address(es) through the GetDPAddresses command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDPAddresses"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDPAddresses*       onvifDevice__GetDPAddresses,
    // response parameters:
    _onvifDevice__GetDPAddressesResponse* onvifDevice__GetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDPAddresses(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDPAddresses*       onvifDevice__GetDPAddresses,
    // response parameters:
    _onvifDevice__GetDPAddressesResponse* onvifDevice__GetDPAddressesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDPAddresses document
//gsoap onvifDevice service method-encoding:	GetDPAddresses literal
//gsoap onvifDevice service method-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddresses
//gsoap onvifDevice service method-output-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/Device/GetDPAddressesResponse
int __onvifDevice__GetDPAddresses(
    _onvifDevice__GetDPAddresses*       onvifDevice__GetDPAddresses,	///< Request parameter
    _onvifDevice__GetDPAddressesResponse* onvifDevice__GetDPAddressesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetEndpointReference                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetEndpointReference" of service binding "DeviceBinding"

/**

Operation details:

A client can ask for the device service endpoint reference address property that
can be used
				to derive the password equivalent for remote user
operation. The device shall support the
				GetEndpointReference command returning the address
property of the device service
				endpoint reference.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetEndpointReference"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetEndpointReferenceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetEndpointReference(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetEndpointReference* onvifDevice__GetEndpointReference,
    // response parameters:
    _onvifDevice__GetEndpointReferenceResponse* onvifDevice__GetEndpointReferenceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetEndpointReference(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetEndpointReference* onvifDevice__GetEndpointReference,
    // response parameters:
    _onvifDevice__GetEndpointReferenceResponse* onvifDevice__GetEndpointReferenceResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetEndpointReference document
//gsoap onvifDevice service method-encoding:	GetEndpointReference literal
//gsoap onvifDevice service method-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReference
//gsoap onvifDevice service method-output-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/Device/GetEndpointReferenceResponse
int __onvifDevice__GetEndpointReference(
    _onvifDevice__GetEndpointReference* onvifDevice__GetEndpointReference,	///< Request parameter
    _onvifDevice__GetEndpointReferenceResponse* onvifDevice__GetEndpointReferenceResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetRemoteUser                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetRemoteUser" of service binding "DeviceBinding"

/**

Operation details:

This operation returns the configured remote user (if any). A device supporting
remote user
				handling shall support this operation. The user
is only valid for the WS-UserToken profile or
				as a HTTP / RTSP user.<br/>
				The algorithm to use for deriving the password is
described in section 5.12.2.1 of the core specification.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetRemoteUser"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetRemoteUser*        onvifDevice__GetRemoteUser,
    // response parameters:
    _onvifDevice__GetRemoteUserResponse* onvifDevice__GetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetRemoteUser(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetRemoteUser*        onvifDevice__GetRemoteUser,
    // response parameters:
    _onvifDevice__GetRemoteUserResponse* onvifDevice__GetRemoteUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetRemoteUser document
//gsoap onvifDevice service method-encoding:	GetRemoteUser literal
//gsoap onvifDevice service method-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUser
//gsoap onvifDevice service method-output-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/Device/GetRemoteUserResponse
int __onvifDevice__GetRemoteUser(
    _onvifDevice__GetRemoteUser*        onvifDevice__GetRemoteUser,	///< Request parameter
    _onvifDevice__GetRemoteUserResponse* onvifDevice__GetRemoteUserResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetRemoteUser                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetRemoteUser" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the remote user. A device supporting remote user handling shall
support this
				operation. The user is only valid for the WS-UserToken
profile or as a HTTP / RTSP user.<br/>
				The password that is set shall always be the original
(not derived) password.<br/>
				If UseDerivedPassword is set password derivation
shall be done by the device when connecting to a
				remote device.The algorithm to use for deriving
the password is described in section 5.12.2.1 of the core specification.<br/>
				To remove the remote user SetRemoteUser should be
called without the RemoteUser parameter.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRemoteUser"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetRemoteUser*        onvifDevice__SetRemoteUser,
    // response parameters:
    _onvifDevice__SetRemoteUserResponse* onvifDevice__SetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetRemoteUser(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetRemoteUser*        onvifDevice__SetRemoteUser,
    // response parameters:
    _onvifDevice__SetRemoteUserResponse* onvifDevice__SetRemoteUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetRemoteUser document
//gsoap onvifDevice service method-encoding:	SetRemoteUser literal
//gsoap onvifDevice service method-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUser
//gsoap onvifDevice service method-output-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/Device/SetRemoteUserResponse
int __onvifDevice__SetRemoteUser(
    _onvifDevice__SetRemoteUser*        onvifDevice__SetRemoteUser,	///< Request parameter
    _onvifDevice__SetRemoteUserResponse* onvifDevice__SetRemoteUserResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetUsers                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetUsers" of service binding "DeviceBinding"

/**

Operation details:

This operation lists the registered users and corresponding credentials on a device.
The
				device shall support retrieval of registered device
users and their credentials for the user
				token through the GetUsers command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetUsers"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetUsers*             onvifDevice__GetUsers,
    // response parameters:
    _onvifDevice__GetUsersResponse*     onvifDevice__GetUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetUsers(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetUsers*             onvifDevice__GetUsers,
    // response parameters:
    _onvifDevice__GetUsersResponse*     onvifDevice__GetUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetUsers document
//gsoap onvifDevice service method-encoding:	GetUsers literal
//gsoap onvifDevice service method-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsers
//gsoap onvifDevice service method-output-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/Device/GetUsersResponse
int __onvifDevice__GetUsers(
    _onvifDevice__GetUsers*             onvifDevice__GetUsers,	///< Request parameter
    _onvifDevice__GetUsersResponse*     onvifDevice__GetUsersResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__CreateUsers                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__CreateUsers" of service binding "DeviceBinding"

/**

Operation details:

This operation creates new device users and corresponding credentials on a device
for authentication purposes. 
				The device shall support creation of device users
and their credentials through the CreateUsers
				command. Either all users are created successfully
or a fault message shall be returned
				without creating any user.<br/>
				ONVIF compliant devices are recommended to support
password length of at least 28 bytes,
				as clients may follow the password derivation mechanism
which results in 'password
				equivalent' of length 28 bytes, as described in
section 3.1.2 of the ONVIF security white paper.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/CreateUsers"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/CreateUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__CreateUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__CreateUsers*          onvifDevice__CreateUsers,
    // response parameters:
    _onvifDevice__CreateUsersResponse*  onvifDevice__CreateUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__CreateUsers(
    struct soap *soap,
    // request parameters:
    _onvifDevice__CreateUsers*          onvifDevice__CreateUsers,
    // response parameters:
    _onvifDevice__CreateUsersResponse*  onvifDevice__CreateUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	CreateUsers document
//gsoap onvifDevice service method-encoding:	CreateUsers literal
//gsoap onvifDevice service method-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsers
//gsoap onvifDevice service method-output-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/Device/CreateUsersResponse
int __onvifDevice__CreateUsers(
    _onvifDevice__CreateUsers*          onvifDevice__CreateUsers,	///< Request parameter
    _onvifDevice__CreateUsersResponse*  onvifDevice__CreateUsersResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__DeleteUsers                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__DeleteUsers" of service binding "DeviceBinding"

/**

Operation details:

This operation deletes users on a device. The device shall support deletion of device
users and their credentials 
				through the DeleteUsers command. A device may have
one or more fixed users
				that cannot be deleted to ensure access to the unit.
Either all users are deleted successfully or a
				fault message shall be returned and no users be
deleted.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/DeleteUsers"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/DeleteUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__DeleteUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__DeleteUsers*          onvifDevice__DeleteUsers,
    // response parameters:
    _onvifDevice__DeleteUsersResponse*  onvifDevice__DeleteUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__DeleteUsers(
    struct soap *soap,
    // request parameters:
    _onvifDevice__DeleteUsers*          onvifDevice__DeleteUsers,
    // response parameters:
    _onvifDevice__DeleteUsersResponse*  onvifDevice__DeleteUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	DeleteUsers document
//gsoap onvifDevice service method-encoding:	DeleteUsers literal
//gsoap onvifDevice service method-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsers
//gsoap onvifDevice service method-output-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/Device/DeleteUsersResponse
int __onvifDevice__DeleteUsers(
    _onvifDevice__DeleteUsers*          onvifDevice__DeleteUsers,	///< Request parameter
    _onvifDevice__DeleteUsersResponse*  onvifDevice__DeleteUsersResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetUser                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetUser" of service binding "DeviceBinding"

/**

Operation details:

This operation updates the settings for one or several users on a device for authentication
purposes.
				The device shall support update of device users
and their credentials through the SetUser command. 
				Either all change requests are processed successfully
or a fault message shall be returned and no change requests be processed.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetUser"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetUser*              onvifDevice__SetUser,
    // response parameters:
    _onvifDevice__SetUserResponse*      onvifDevice__SetUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetUser(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetUser*              onvifDevice__SetUser,
    // response parameters:
    _onvifDevice__SetUserResponse*      onvifDevice__SetUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetUser document
//gsoap onvifDevice service method-encoding:	SetUser literal
//gsoap onvifDevice service method-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUser
//gsoap onvifDevice service method-output-action:	SetUser http://www.onvif.org/ver10/device/wsdl/Device/SetUserResponse
int __onvifDevice__SetUser(
    _onvifDevice__SetUser*              onvifDevice__SetUser,	///< Request parameter
    _onvifDevice__SetUserResponse*      onvifDevice__SetUserResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetWsdlUrl                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetWsdlUrl" of service binding "DeviceBinding"

/**

Operation details:

It is possible for an endpoint to request a URL that can be used to retrieve the
complete
				schema and WSDL definitions of a device. The command
gives in return a URL entry point
				where all the necessary product specific WSDL and
schema definitions can be retrieved. The
				device shall provide a URL for WSDL and schema download
through the GetWsdlUrl command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetWsdlUrl"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetWsdlUrlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetWsdlUrl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetWsdlUrl*           onvifDevice__GetWsdlUrl,
    // response parameters:
    _onvifDevice__GetWsdlUrlResponse*   onvifDevice__GetWsdlUrlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetWsdlUrl(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetWsdlUrl*           onvifDevice__GetWsdlUrl,
    // response parameters:
    _onvifDevice__GetWsdlUrlResponse*   onvifDevice__GetWsdlUrlResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetWsdlUrl document
//gsoap onvifDevice service method-encoding:	GetWsdlUrl literal
//gsoap onvifDevice service method-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl
//gsoap onvifDevice service method-output-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/Device/GetWsdlUrlResponse
int __onvifDevice__GetWsdlUrl(
    _onvifDevice__GetWsdlUrl*           onvifDevice__GetWsdlUrl,	///< Request parameter
    _onvifDevice__GetWsdlUrlResponse*   onvifDevice__GetWsdlUrlResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetCapabilities                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetCapabilities" of service binding "DeviceBinding"

/**

Operation details:

Any endpoint can ask for the capabilities of a device using the capability exchange
request
				response operation. The device shall indicate all
its ONVIF compliant capabilities through the
				GetCapabilities command.
				The capability list includes references to the addresses
(XAddr) of the service implementing
				the interface operations in the category. Apart
from the addresses, the
				capabilities only reflect optional functions.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCapabilities"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetCapabilities*      onvifDevice__GetCapabilities,
    // response parameters:
    _onvifDevice__GetCapabilitiesResponse* onvifDevice__GetCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetCapabilities(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetCapabilities*      onvifDevice__GetCapabilities,
    // response parameters:
    _onvifDevice__GetCapabilitiesResponse* onvifDevice__GetCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetCapabilities document
//gsoap onvifDevice service method-encoding:	GetCapabilities literal
//gsoap onvifDevice service method-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilities
//gsoap onvifDevice service method-output-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/Device/GetCapabilitiesResponse
int __onvifDevice__GetCapabilities(
    _onvifDevice__GetCapabilities*      onvifDevice__GetCapabilities,	///< Request parameter
    _onvifDevice__GetCapabilitiesResponse* onvifDevice__GetCapabilitiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetDPAddresses                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetDPAddresses" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the remote DP address or addresses on a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support configuration of the
				remote DP address(es) through the SetDPAddresses
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDPAddresses"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetDPAddresses*       onvifDevice__SetDPAddresses,
    // response parameters:
    _onvifDevice__SetDPAddressesResponse* onvifDevice__SetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetDPAddresses(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetDPAddresses*       onvifDevice__SetDPAddresses,
    // response parameters:
    _onvifDevice__SetDPAddressesResponse* onvifDevice__SetDPAddressesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetDPAddresses document
//gsoap onvifDevice service method-encoding:	SetDPAddresses literal
//gsoap onvifDevice service method-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddresses
//gsoap onvifDevice service method-output-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/Device/SetDPAddressesResponse
int __onvifDevice__SetDPAddresses(
    _onvifDevice__SetDPAddresses*       onvifDevice__SetDPAddresses,	///< Request parameter
    _onvifDevice__SetDPAddressesResponse* onvifDevice__SetDPAddressesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetHostname                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetHostname" of service binding "DeviceBinding"

/**

Operation details:

This operation is used by an endpoint to get the hostname from a device. The device
shall
				return its hostname configurations through the GetHostname
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetHostname"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetHostname*          onvifDevice__GetHostname,
    // response parameters:
    _onvifDevice__GetHostnameResponse*  onvifDevice__GetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetHostname(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetHostname*          onvifDevice__GetHostname,
    // response parameters:
    _onvifDevice__GetHostnameResponse*  onvifDevice__GetHostnameResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetHostname document
//gsoap onvifDevice service method-encoding:	GetHostname literal
//gsoap onvifDevice service method-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostname
//gsoap onvifDevice service method-output-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/Device/GetHostnameResponse
int __onvifDevice__GetHostname(
    _onvifDevice__GetHostname*          onvifDevice__GetHostname,	///< Request parameter
    _onvifDevice__GetHostnameResponse*  onvifDevice__GetHostnameResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetHostname                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetHostname" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the hostname on a device. It shall be possible to set the device
hostname
				configurations through the SetHostname command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.

			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetHostname"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetHostname*          onvifDevice__SetHostname,
    // response parameters:
    _onvifDevice__SetHostnameResponse*  onvifDevice__SetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetHostname(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetHostname*          onvifDevice__SetHostname,
    // response parameters:
    _onvifDevice__SetHostnameResponse*  onvifDevice__SetHostnameResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetHostname document
//gsoap onvifDevice service method-encoding:	SetHostname literal
//gsoap onvifDevice service method-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostname
//gsoap onvifDevice service method-output-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/Device/SetHostnameResponse
int __onvifDevice__SetHostname(
    _onvifDevice__SetHostname*          onvifDevice__SetHostname,	///< Request parameter
    _onvifDevice__SetHostnameResponse*  onvifDevice__SetHostnameResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetHostnameFromDHCP                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetHostnameFromDHCP" of service binding "DeviceBinding"

/**

Operation details:

This operation controls whether the hostname is set manually or retrieved via DHCP.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetHostnameFromDHCP"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetHostnameFromDHCPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetHostnameFromDHCP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetHostnameFromDHCP*  onvifDevice__SetHostnameFromDHCP,
    // response parameters:
    _onvifDevice__SetHostnameFromDHCPResponse* onvifDevice__SetHostnameFromDHCPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetHostnameFromDHCP(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetHostnameFromDHCP*  onvifDevice__SetHostnameFromDHCP,
    // response parameters:
    _onvifDevice__SetHostnameFromDHCPResponse* onvifDevice__SetHostnameFromDHCPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetHostnameFromDHCP document
//gsoap onvifDevice service method-encoding:	SetHostnameFromDHCP literal
//gsoap onvifDevice service method-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP
//gsoap onvifDevice service method-output-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/Device/SetHostnameFromDHCPResponse
int __onvifDevice__SetHostnameFromDHCP(
    _onvifDevice__SetHostnameFromDHCP*  onvifDevice__SetHostnameFromDHCP,	///< Request parameter
    _onvifDevice__SetHostnameFromDHCPResponse* onvifDevice__SetHostnameFromDHCPResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDNS                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDNS" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the DNS settings from a device. The device shall return its
DNS
				configurations through the GetDNS command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDNS"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDNS*               onvifDevice__GetDNS,
    // response parameters:
    _onvifDevice__GetDNSResponse*       onvifDevice__GetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDNS(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDNS*               onvifDevice__GetDNS,
    // response parameters:
    _onvifDevice__GetDNSResponse*       onvifDevice__GetDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDNS document
//gsoap onvifDevice service method-encoding:	GetDNS literal
//gsoap onvifDevice service method-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNS
//gsoap onvifDevice service method-output-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/Device/GetDNSResponse
int __onvifDevice__GetDNS(
    _onvifDevice__GetDNS*               onvifDevice__GetDNS,	///< Request parameter
    _onvifDevice__GetDNSResponse*       onvifDevice__GetDNSResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetDNS                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetDNS" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the DNS settings on a device. It shall be possible to set the
device DNS
				configurations through the SetDNS command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDNS"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetDNS*               onvifDevice__SetDNS,
    // response parameters:
    _onvifDevice__SetDNSResponse*       onvifDevice__SetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetDNS(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetDNS*               onvifDevice__SetDNS,
    // response parameters:
    _onvifDevice__SetDNSResponse*       onvifDevice__SetDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetDNS document
//gsoap onvifDevice service method-encoding:	SetDNS literal
//gsoap onvifDevice service method-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNS
//gsoap onvifDevice service method-output-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/Device/SetDNSResponse
int __onvifDevice__SetDNS(
    _onvifDevice__SetDNS*               onvifDevice__SetDNS,	///< Request parameter
    _onvifDevice__SetDNSResponse*       onvifDevice__SetDNSResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetNTP                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetNTP" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the NTP settings from a device. If the device supports NTP,
it shall be
				possible to get the NTP server settings through
the GetNTP command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNTP"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetNTP*               onvifDevice__GetNTP,
    // response parameters:
    _onvifDevice__GetNTPResponse*       onvifDevice__GetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetNTP(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetNTP*               onvifDevice__GetNTP,
    // response parameters:
    _onvifDevice__GetNTPResponse*       onvifDevice__GetNTPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetNTP document
//gsoap onvifDevice service method-encoding:	GetNTP literal
//gsoap onvifDevice service method-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTP
//gsoap onvifDevice service method-output-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/Device/GetNTPResponse
int __onvifDevice__GetNTP(
    _onvifDevice__GetNTP*               onvifDevice__GetNTP,	///< Request parameter
    _onvifDevice__GetNTPResponse*       onvifDevice__GetNTPResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetNTP                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetNTP" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the NTP settings on a device. If the device supports NTP, it
shall be
				possible to set the NTP server settings through
the SetNTP command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.
<br/>
				Changes to the NTP server list will not affect the
clock mode DateTimeType. Use SetSystemDateAndTime to activate NTP operation.
			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNTP"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetNTP*               onvifDevice__SetNTP,
    // response parameters:
    _onvifDevice__SetNTPResponse*       onvifDevice__SetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetNTP(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetNTP*               onvifDevice__SetNTP,
    // response parameters:
    _onvifDevice__SetNTPResponse*       onvifDevice__SetNTPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetNTP document
//gsoap onvifDevice service method-encoding:	SetNTP literal
//gsoap onvifDevice service method-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTP
//gsoap onvifDevice service method-output-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/Device/SetNTPResponse
int __onvifDevice__SetNTP(
    _onvifDevice__SetNTP*               onvifDevice__SetNTP,	///< Request parameter
    _onvifDevice__SetNTPResponse*       onvifDevice__SetNTPResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDynamicDNS                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDynamicDNS" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the dynamic DNS settings from a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to get the type, name
				and TTL through the GetDynamicDNS command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDynamicDNS"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDynamicDNS*        onvifDevice__GetDynamicDNS,
    // response parameters:
    _onvifDevice__GetDynamicDNSResponse* onvifDevice__GetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDynamicDNS(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDynamicDNS*        onvifDevice__GetDynamicDNS,
    // response parameters:
    _onvifDevice__GetDynamicDNSResponse* onvifDevice__GetDynamicDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDynamicDNS document
//gsoap onvifDevice service method-encoding:	GetDynamicDNS literal
//gsoap onvifDevice service method-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS
//gsoap onvifDevice service method-output-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/Device/GetDynamicDNSResponse
int __onvifDevice__GetDynamicDNS(
    _onvifDevice__GetDynamicDNS*        onvifDevice__GetDynamicDNS,	///< Request parameter
    _onvifDevice__GetDynamicDNSResponse* onvifDevice__GetDynamicDNSResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetDynamicDNS                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetDynamicDNS" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the dynamic DNS settings on a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to set the type, name
				and TTL through the SetDynamicDNS command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDynamicDNS"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetDynamicDNS*        onvifDevice__SetDynamicDNS,
    // response parameters:
    _onvifDevice__SetDynamicDNSResponse* onvifDevice__SetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetDynamicDNS(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetDynamicDNS*        onvifDevice__SetDynamicDNS,
    // response parameters:
    _onvifDevice__SetDynamicDNSResponse* onvifDevice__SetDynamicDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetDynamicDNS document
//gsoap onvifDevice service method-encoding:	SetDynamicDNS literal
//gsoap onvifDevice service method-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS
//gsoap onvifDevice service method-output-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/Device/SetDynamicDNSResponse
int __onvifDevice__SetDynamicDNS(
    _onvifDevice__SetDynamicDNS*        onvifDevice__SetDynamicDNS,	///< Request parameter
    _onvifDevice__SetDynamicDNSResponse* onvifDevice__SetDynamicDNSResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetNetworkInterfaces                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetNetworkInterfaces" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the network interface configuration from a device. The device
shall
				support return of network interface configuration
settings as defined by the NetworkInterface
				type through the GetNetworkInterfaces command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkInterfaces"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetNetworkInterfaces* onvifDevice__GetNetworkInterfaces,
    // response parameters:
    _onvifDevice__GetNetworkInterfacesResponse* onvifDevice__GetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetNetworkInterfaces(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetNetworkInterfaces* onvifDevice__GetNetworkInterfaces,
    // response parameters:
    _onvifDevice__GetNetworkInterfacesResponse* onvifDevice__GetNetworkInterfacesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetNetworkInterfaces document
//gsoap onvifDevice service method-encoding:	GetNetworkInterfaces literal
//gsoap onvifDevice service method-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces
//gsoap onvifDevice service method-output-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkInterfacesResponse
int __onvifDevice__GetNetworkInterfaces(
    _onvifDevice__GetNetworkInterfaces* onvifDevice__GetNetworkInterfaces,	///< Request parameter
    _onvifDevice__GetNetworkInterfacesResponse* onvifDevice__GetNetworkInterfacesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetNetworkInterfaces                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetNetworkInterfaces" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the network interface configuration on a device. The device
shall support
				network configuration of supported network interfaces
through the SetNetworkInterfaces
				command.<br/>
				For interoperability with a client unaware of the
IEEE 802.11 extension a device shall retain
				its IEEE 802.11 configuration if the IEEE 802.11
configuration element isnt present in the
				request.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkInterfaces"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetNetworkInterfaces* onvifDevice__SetNetworkInterfaces,
    // response parameters:
    _onvifDevice__SetNetworkInterfacesResponse* onvifDevice__SetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetNetworkInterfaces(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetNetworkInterfaces* onvifDevice__SetNetworkInterfaces,
    // response parameters:
    _onvifDevice__SetNetworkInterfacesResponse* onvifDevice__SetNetworkInterfacesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetNetworkInterfaces document
//gsoap onvifDevice service method-encoding:	SetNetworkInterfaces literal
//gsoap onvifDevice service method-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces
//gsoap onvifDevice service method-output-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkInterfacesResponse
int __onvifDevice__SetNetworkInterfaces(
    _onvifDevice__SetNetworkInterfaces* onvifDevice__SetNetworkInterfaces,	///< Request parameter
    _onvifDevice__SetNetworkInterfacesResponse* onvifDevice__SetNetworkInterfacesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetNetworkProtocols                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetNetworkProtocols" of service binding "DeviceBinding"

/**

Operation details:

This operation gets defined network protocols from a device. The device shall support
the
				GetNetworkProtocols command returning configured
network protocols.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkProtocols"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetNetworkProtocols*  onvifDevice__GetNetworkProtocols,
    // response parameters:
    _onvifDevice__GetNetworkProtocolsResponse* onvifDevice__GetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetNetworkProtocols(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetNetworkProtocols*  onvifDevice__GetNetworkProtocols,
    // response parameters:
    _onvifDevice__GetNetworkProtocolsResponse* onvifDevice__GetNetworkProtocolsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetNetworkProtocols document
//gsoap onvifDevice service method-encoding:	GetNetworkProtocols literal
//gsoap onvifDevice service method-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols
//gsoap onvifDevice service method-output-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkProtocolsResponse
int __onvifDevice__GetNetworkProtocols(
    _onvifDevice__GetNetworkProtocols*  onvifDevice__GetNetworkProtocols,	///< Request parameter
    _onvifDevice__GetNetworkProtocolsResponse* onvifDevice__GetNetworkProtocolsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetNetworkProtocols                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetNetworkProtocols" of service binding "DeviceBinding"

/**

Operation details:

This operation configures defined network protocols on a device. The device shall
support
				configuration of defined network protocols through
the SetNetworkProtocols command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkProtocols"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetNetworkProtocols*  onvifDevice__SetNetworkProtocols,
    // response parameters:
    _onvifDevice__SetNetworkProtocolsResponse* onvifDevice__SetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetNetworkProtocols(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetNetworkProtocols*  onvifDevice__SetNetworkProtocols,
    // response parameters:
    _onvifDevice__SetNetworkProtocolsResponse* onvifDevice__SetNetworkProtocolsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetNetworkProtocols document
//gsoap onvifDevice service method-encoding:	SetNetworkProtocols literal
//gsoap onvifDevice service method-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols
//gsoap onvifDevice service method-output-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkProtocolsResponse
int __onvifDevice__SetNetworkProtocols(
    _onvifDevice__SetNetworkProtocols*  onvifDevice__SetNetworkProtocols,	///< Request parameter
    _onvifDevice__SetNetworkProtocolsResponse* onvifDevice__SetNetworkProtocolsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetNetworkDefaultGateway                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetNetworkDefaultGateway" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the default gateway settings from a device. The device shall
support the
				GetNetworkDefaultGateway command returning configured
default gateway address(es).

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkDefaultGateway"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetNetworkDefaultGateway* onvifDevice__GetNetworkDefaultGateway,
    // response parameters:
    _onvifDevice__GetNetworkDefaultGatewayResponse* onvifDevice__GetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetNetworkDefaultGateway(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetNetworkDefaultGateway* onvifDevice__GetNetworkDefaultGateway,
    // response parameters:
    _onvifDevice__GetNetworkDefaultGatewayResponse* onvifDevice__GetNetworkDefaultGatewayResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetNetworkDefaultGateway document
//gsoap onvifDevice service method-encoding:	GetNetworkDefaultGateway literal
//gsoap onvifDevice service method-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway
//gsoap onvifDevice service method-output-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkDefaultGatewayResponse
int __onvifDevice__GetNetworkDefaultGateway(
    _onvifDevice__GetNetworkDefaultGateway* onvifDevice__GetNetworkDefaultGateway,	///< Request parameter
    _onvifDevice__GetNetworkDefaultGatewayResponse* onvifDevice__GetNetworkDefaultGatewayResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetNetworkDefaultGateway                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetNetworkDefaultGateway" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the default gateway settings on a device. The device shall support
				configuration of default gateway through the SetNetworkDefaultGateway
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkDefaultGateway"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetNetworkDefaultGateway* onvifDevice__SetNetworkDefaultGateway,
    // response parameters:
    _onvifDevice__SetNetworkDefaultGatewayResponse* onvifDevice__SetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetNetworkDefaultGateway(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetNetworkDefaultGateway* onvifDevice__SetNetworkDefaultGateway,
    // response parameters:
    _onvifDevice__SetNetworkDefaultGatewayResponse* onvifDevice__SetNetworkDefaultGatewayResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetNetworkDefaultGateway document
//gsoap onvifDevice service method-encoding:	SetNetworkDefaultGateway literal
//gsoap onvifDevice service method-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway
//gsoap onvifDevice service method-output-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkDefaultGatewayResponse
int __onvifDevice__SetNetworkDefaultGateway(
    _onvifDevice__SetNetworkDefaultGateway* onvifDevice__SetNetworkDefaultGateway,	///< Request parameter
    _onvifDevice__SetNetworkDefaultGatewayResponse* onvifDevice__SetNetworkDefaultGatewayResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetZeroConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetZeroConfiguration" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the zero-configuration from a device. If the device supports
dynamic IP
				configuration according to [RFC3927], it shall support
the return of IPv4 zero configuration
				address and status through the GetZeroConfiguration
command.<br/>
			Use GetCapalities to check if zero-zero-configuration is
supported.<br/>
			Devices supporting zero configuration on more than one interface
shall use the extension to list the additional interface settings.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetZeroConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetZeroConfiguration* onvifDevice__GetZeroConfiguration,
    // response parameters:
    _onvifDevice__GetZeroConfigurationResponse* onvifDevice__GetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetZeroConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetZeroConfiguration* onvifDevice__GetZeroConfiguration,
    // response parameters:
    _onvifDevice__GetZeroConfigurationResponse* onvifDevice__GetZeroConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetZeroConfiguration document
//gsoap onvifDevice service method-encoding:	GetZeroConfiguration literal
//gsoap onvifDevice service method-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration
//gsoap onvifDevice service method-output-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/Device/GetZeroConfigurationResponse
int __onvifDevice__GetZeroConfiguration(
    _onvifDevice__GetZeroConfiguration* onvifDevice__GetZeroConfiguration,	///< Request parameter
    _onvifDevice__GetZeroConfigurationResponse* onvifDevice__GetZeroConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetZeroConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetZeroConfiguration" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the zero-configuration. Use GetCapalities to get if zero-zero-configuration
is supported or not.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetZeroConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetZeroConfiguration* onvifDevice__SetZeroConfiguration,
    // response parameters:
    _onvifDevice__SetZeroConfigurationResponse* onvifDevice__SetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetZeroConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetZeroConfiguration* onvifDevice__SetZeroConfiguration,
    // response parameters:
    _onvifDevice__SetZeroConfigurationResponse* onvifDevice__SetZeroConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetZeroConfiguration document
//gsoap onvifDevice service method-encoding:	SetZeroConfiguration literal
//gsoap onvifDevice service method-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration
//gsoap onvifDevice service method-output-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/Device/SetZeroConfigurationResponse
int __onvifDevice__SetZeroConfiguration(
    _onvifDevice__SetZeroConfiguration* onvifDevice__SetZeroConfiguration,	///< Request parameter
    _onvifDevice__SetZeroConfigurationResponse* onvifDevice__SetZeroConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetIPAddressFilter                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetIPAddressFilter" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the IP address filter settings from a device. If the device
supports device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support the GetIPAddressFilter command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetIPAddressFilter"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetIPAddressFilter*   onvifDevice__GetIPAddressFilter,
    // response parameters:
    _onvifDevice__GetIPAddressFilterResponse* onvifDevice__GetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetIPAddressFilter(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetIPAddressFilter*   onvifDevice__GetIPAddressFilter,
    // response parameters:
    _onvifDevice__GetIPAddressFilterResponse* onvifDevice__GetIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetIPAddressFilter document
//gsoap onvifDevice service method-encoding:	GetIPAddressFilter literal
//gsoap onvifDevice service method-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter
//gsoap onvifDevice service method-output-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/Device/GetIPAddressFilterResponse
int __onvifDevice__GetIPAddressFilter(
    _onvifDevice__GetIPAddressFilter*   onvifDevice__GetIPAddressFilter,	///< Request parameter
    _onvifDevice__GetIPAddressFilterResponse* onvifDevice__GetIPAddressFilterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetIPAddressFilter                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetIPAddressFilter" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the IP address filter settings on a device. If the device supports
device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support configuration of IP filtering
rules through the SetIPAddressFilter
				command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetIPAddressFilter"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetIPAddressFilter*   onvifDevice__SetIPAddressFilter,
    // response parameters:
    _onvifDevice__SetIPAddressFilterResponse* onvifDevice__SetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetIPAddressFilter(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetIPAddressFilter*   onvifDevice__SetIPAddressFilter,
    // response parameters:
    _onvifDevice__SetIPAddressFilterResponse* onvifDevice__SetIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetIPAddressFilter document
//gsoap onvifDevice service method-encoding:	SetIPAddressFilter literal
//gsoap onvifDevice service method-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter
//gsoap onvifDevice service method-output-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/Device/SetIPAddressFilterResponse
int __onvifDevice__SetIPAddressFilter(
    _onvifDevice__SetIPAddressFilter*   onvifDevice__SetIPAddressFilter,	///< Request parameter
    _onvifDevice__SetIPAddressFilterResponse* onvifDevice__SetIPAddressFilterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__AddIPAddressFilter                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__AddIPAddressFilter" of service binding "DeviceBinding"

/**

Operation details:

This operation adds an IP filter address to a device. If the device supports device
access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support adding of IP filtering addresses through
the AddIPAddressFilter command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/AddIPAddressFilter"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/AddIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__AddIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__AddIPAddressFilter*   onvifDevice__AddIPAddressFilter,
    // response parameters:
    _onvifDevice__AddIPAddressFilterResponse* onvifDevice__AddIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__AddIPAddressFilter(
    struct soap *soap,
    // request parameters:
    _onvifDevice__AddIPAddressFilter*   onvifDevice__AddIPAddressFilter,
    // response parameters:
    _onvifDevice__AddIPAddressFilterResponse* onvifDevice__AddIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	AddIPAddressFilter document
//gsoap onvifDevice service method-encoding:	AddIPAddressFilter literal
//gsoap onvifDevice service method-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter
//gsoap onvifDevice service method-output-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/Device/AddIPAddressFilterResponse
int __onvifDevice__AddIPAddressFilter(
    _onvifDevice__AddIPAddressFilter*   onvifDevice__AddIPAddressFilter,	///< Request parameter
    _onvifDevice__AddIPAddressFilterResponse* onvifDevice__AddIPAddressFilterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__RemoveIPAddressFilter                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__RemoveIPAddressFilter" of service binding "DeviceBinding"

/**

Operation details:

This operation deletes an IP filter address from a device. If the device supports
device access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support deletion of IP filtering addresses
through the RemoveIPAddressFilter command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/RemoveIPAddressFilter"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/RemoveIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__RemoveIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__RemoveIPAddressFilter* onvifDevice__RemoveIPAddressFilter,
    // response parameters:
    _onvifDevice__RemoveIPAddressFilterResponse* onvifDevice__RemoveIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__RemoveIPAddressFilter(
    struct soap *soap,
    // request parameters:
    _onvifDevice__RemoveIPAddressFilter* onvifDevice__RemoveIPAddressFilter,
    // response parameters:
    _onvifDevice__RemoveIPAddressFilterResponse* onvifDevice__RemoveIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	RemoveIPAddressFilter document
//gsoap onvifDevice service method-encoding:	RemoveIPAddressFilter literal
//gsoap onvifDevice service method-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter
//gsoap onvifDevice service method-output-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/Device/RemoveIPAddressFilterResponse
int __onvifDevice__RemoveIPAddressFilter(
    _onvifDevice__RemoveIPAddressFilter* onvifDevice__RemoveIPAddressFilter,	///< Request parameter
    _onvifDevice__RemoveIPAddressFilterResponse* onvifDevice__RemoveIPAddressFilterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetAccessPolicy                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetAccessPolicy" of service binding "DeviceBinding"

/**

Operation details:

Access to different services and sub-sets of services should be subject to access
control. The
				WS-Security framework gives the prerequisite for
end-point authentication. Authorization
				decisions can then be taken using an access security
policy. This standard does not mandate
				any particular policy description format or security
policy but this is up to the device
				manufacturer or system provider to choose policy
and policy description format of choice.
				However, an access policy (in arbitrary format)
can be requested using this command. If the
				device supports access policy settings based on
WS-Security authentication, then the device
				shall support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetAccessPolicy"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetAccessPolicy*      onvifDevice__GetAccessPolicy,
    // response parameters:
    _onvifDevice__GetAccessPolicyResponse* onvifDevice__GetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetAccessPolicy(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetAccessPolicy*      onvifDevice__GetAccessPolicy,
    // response parameters:
    _onvifDevice__GetAccessPolicyResponse* onvifDevice__GetAccessPolicyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetAccessPolicy document
//gsoap onvifDevice service method-encoding:	GetAccessPolicy literal
//gsoap onvifDevice service method-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy
//gsoap onvifDevice service method-output-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/Device/GetAccessPolicyResponse
int __onvifDevice__GetAccessPolicy(
    _onvifDevice__GetAccessPolicy*      onvifDevice__GetAccessPolicy,	///< Request parameter
    _onvifDevice__GetAccessPolicyResponse* onvifDevice__GetAccessPolicyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetAccessPolicy                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetAccessPolicy" of service binding "DeviceBinding"

/**

Operation details:

This command sets the device access security policy (for more details on the access
security
				policy see the Get command). If the device supports
access policy settings
				based on WS-Security authentication, then the device
shall support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetAccessPolicy"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetAccessPolicy*      onvifDevice__SetAccessPolicy,
    // response parameters:
    _onvifDevice__SetAccessPolicyResponse* onvifDevice__SetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetAccessPolicy(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetAccessPolicy*      onvifDevice__SetAccessPolicy,
    // response parameters:
    _onvifDevice__SetAccessPolicyResponse* onvifDevice__SetAccessPolicyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetAccessPolicy document
//gsoap onvifDevice service method-encoding:	SetAccessPolicy literal
//gsoap onvifDevice service method-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy
//gsoap onvifDevice service method-output-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/Device/SetAccessPolicyResponse
int __onvifDevice__SetAccessPolicy(
    _onvifDevice__SetAccessPolicy*      onvifDevice__SetAccessPolicy,	///< Request parameter
    _onvifDevice__SetAccessPolicyResponse* onvifDevice__SetAccessPolicyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__CreateCertificate                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__CreateCertificate" of service binding "DeviceBinding"

/**

Operation details:

This operation generates a private/public key pair and also can create a self-signed
device
				certificate as a result of key pair generation.
The certificate is created using a suitable
				onboard key pair generation mechanism.<br/>
				If a device supports onboard key pair generation,
the device that supports TLS shall support
				this certificate creation command. And also, if
a device supports onboard key pair generation,
				the device that support IEEE 802.1X shall support
this command for the purpose of key pair
				generation. Certificates and key pairs are identified
using certificate IDs. These IDs are either
				chosen by the certificate generation requester or
by the device (in case that no ID value is
				given).

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/CreateCertificate"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/CreateCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__CreateCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__CreateCertificate*    onvifDevice__CreateCertificate,
    // response parameters:
    _onvifDevice__CreateCertificateResponse* onvifDevice__CreateCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__CreateCertificate(
    struct soap *soap,
    // request parameters:
    _onvifDevice__CreateCertificate*    onvifDevice__CreateCertificate,
    // response parameters:
    _onvifDevice__CreateCertificateResponse* onvifDevice__CreateCertificateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	CreateCertificate document
//gsoap onvifDevice service method-encoding:	CreateCertificate literal
//gsoap onvifDevice service method-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificate
//gsoap onvifDevice service method-output-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/Device/CreateCertificateResponse
int __onvifDevice__CreateCertificate(
    _onvifDevice__CreateCertificate*    onvifDevice__CreateCertificate,	///< Request parameter
    _onvifDevice__CreateCertificateResponse* onvifDevice__CreateCertificateResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetCertificates                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetCertificates" of service binding "DeviceBinding"

/**

Operation details:

This operation gets all device server certificates (including self-signed) for the
purpose of TLS
				authentication and all device client certificates
for the purpose of IEEE 802.1X authentication.
				This command lists only the TLS server certificates
and IEEE 802.1X client certificates for the
				device (neither trusted CA certificates nor trusted
root certificates). The certificates are
				returned as binary data. A device that supports
TLS shall support this command and the
				certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCertificates"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetCertificates*      onvifDevice__GetCertificates,
    // response parameters:
    _onvifDevice__GetCertificatesResponse* onvifDevice__GetCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetCertificates(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetCertificates*      onvifDevice__GetCertificates,
    // response parameters:
    _onvifDevice__GetCertificatesResponse* onvifDevice__GetCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetCertificates document
//gsoap onvifDevice service method-encoding:	GetCertificates literal
//gsoap onvifDevice service method-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificates
//gsoap onvifDevice service method-output-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/Device/GetCertificatesResponse
int __onvifDevice__GetCertificates(
    _onvifDevice__GetCertificates*      onvifDevice__GetCertificates,	///< Request parameter
    _onvifDevice__GetCertificatesResponse* onvifDevice__GetCertificatesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetCertificatesStatus                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetCertificatesStatus" of service binding "DeviceBinding"

/**

Operation details:

This operation is specific to TLS functionality. This operation gets the status
				(enabled/disabled) of the device TLS server certificates.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCertificatesStatus"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetCertificatesStatus* onvifDevice__GetCertificatesStatus,
    // response parameters:
    _onvifDevice__GetCertificatesStatusResponse* onvifDevice__GetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetCertificatesStatus(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetCertificatesStatus* onvifDevice__GetCertificatesStatus,
    // response parameters:
    _onvifDevice__GetCertificatesStatusResponse* onvifDevice__GetCertificatesStatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetCertificatesStatus document
//gsoap onvifDevice service method-encoding:	GetCertificatesStatus literal
//gsoap onvifDevice service method-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus
//gsoap onvifDevice service method-output-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/Device/GetCertificatesStatusResponse
int __onvifDevice__GetCertificatesStatus(
    _onvifDevice__GetCertificatesStatus* onvifDevice__GetCertificatesStatus,	///< Request parameter
    _onvifDevice__GetCertificatesStatusResponse* onvifDevice__GetCertificatesStatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetCertificatesStatus                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetCertificatesStatus" of service binding "DeviceBinding"

/**

Operation details:

This operation is specific to TLS functionality. This operation sets the status
(enable/disable)
				of the device TLS server certificates. A device
that supports TLS shall support this command.
				Typically only one device server certificate is
allowed to be enabled at a time.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetCertificatesStatus"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetCertificatesStatus* onvifDevice__SetCertificatesStatus,
    // response parameters:
    _onvifDevice__SetCertificatesStatusResponse* onvifDevice__SetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetCertificatesStatus(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetCertificatesStatus* onvifDevice__SetCertificatesStatus,
    // response parameters:
    _onvifDevice__SetCertificatesStatusResponse* onvifDevice__SetCertificatesStatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetCertificatesStatus document
//gsoap onvifDevice service method-encoding:	SetCertificatesStatus literal
//gsoap onvifDevice service method-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus
//gsoap onvifDevice service method-output-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/Device/SetCertificatesStatusResponse
int __onvifDevice__SetCertificatesStatus(
    _onvifDevice__SetCertificatesStatus* onvifDevice__SetCertificatesStatus,	///< Request parameter
    _onvifDevice__SetCertificatesStatusResponse* onvifDevice__SetCertificatesStatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__DeleteCertificates                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__DeleteCertificates" of service binding "DeviceBinding"

/**

Operation details:

This operation deletes a certificate or multiple certificates. The device MAY also
delete a
				private/public key pair which is coupled with the
certificate to be deleted. The device that
				support either TLS or IEEE 802.1X shall support
the deletion of a certificate or multiple
				certificates through this command. Either all certificates
are deleted successfully or a fault
				message shall be returned without deleting any certificate.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/DeleteCertificates"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/DeleteCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__DeleteCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__DeleteCertificates*   onvifDevice__DeleteCertificates,
    // response parameters:
    _onvifDevice__DeleteCertificatesResponse* onvifDevice__DeleteCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__DeleteCertificates(
    struct soap *soap,
    // request parameters:
    _onvifDevice__DeleteCertificates*   onvifDevice__DeleteCertificates,
    // response parameters:
    _onvifDevice__DeleteCertificatesResponse* onvifDevice__DeleteCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	DeleteCertificates document
//gsoap onvifDevice service method-encoding:	DeleteCertificates literal
//gsoap onvifDevice service method-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificates
//gsoap onvifDevice service method-output-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/Device/DeleteCertificatesResponse
int __onvifDevice__DeleteCertificates(
    _onvifDevice__DeleteCertificates*   onvifDevice__DeleteCertificates,	///< Request parameter
    _onvifDevice__DeleteCertificatesResponse* onvifDevice__DeleteCertificatesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetPkcs10Request                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetPkcs10Request" of service binding "DeviceBinding"

/**

Operation details:

This operation requests a PKCS #10 certificate signature request from the device.
The
				returned information field shall be either formatted
exactly as specified in [PKCS#10] or PEM
				encoded [PKCS#10] format. In order for this command
to work, the device must already have
				a private/public key pair. This key pair should
be referred by CertificateID as specified in the
				input parameter description. This CertificateID
refers to the key pair generated using
				CreateCertificate command.<br/>
				A device that support onboard key pair generation
that supports either TLS or IEEE 802.1X
				using client certificate shall support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetPkcs10Request"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetPkcs10RequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetPkcs10Request(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetPkcs10Request*     onvifDevice__GetPkcs10Request,
    // response parameters:
    _onvifDevice__GetPkcs10RequestResponse* onvifDevice__GetPkcs10RequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetPkcs10Request(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetPkcs10Request*     onvifDevice__GetPkcs10Request,
    // response parameters:
    _onvifDevice__GetPkcs10RequestResponse* onvifDevice__GetPkcs10RequestResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetPkcs10Request document
//gsoap onvifDevice service method-encoding:	GetPkcs10Request literal
//gsoap onvifDevice service method-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request
//gsoap onvifDevice service method-output-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/Device/GetPkcs10RequestResponse
int __onvifDevice__GetPkcs10Request(
    _onvifDevice__GetPkcs10Request*     onvifDevice__GetPkcs10Request,	///< Request parameter
    _onvifDevice__GetPkcs10RequestResponse* onvifDevice__GetPkcs10RequestResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__LoadCertificates                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__LoadCertificates" of service binding "DeviceBinding"

/**

Operation details:

TLS server certificate(s) or IEEE 802.1X client certificate(s) created using the
PKCS#10
				certificate request command can be loaded into the
device using this command (see Section
				8.4.13). The certificate ID in the request shall
be present. The device may sort the received
				certificate(s) based on the public key and subject
information in the certificate(s).
				The certificate ID in the request will be the ID
value the client wish to have. The device is
				supposed to scan the generated key pairs present
in the device to identify which is the
				correspondent key pair with the loaded certificate
and then make the link between the
				certificate and the key pair.<br/>
				A device that supports onboard key pair generation
that support either TLS or IEEE 802.1X
				shall support this command.<br/>
				The certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.<br/>
				This command is applicable to any device type, although
the parameter name is called for
				historical reasons NVTCertificate.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/LoadCertificates"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/LoadCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__LoadCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__LoadCertificates*     onvifDevice__LoadCertificates,
    // response parameters:
    _onvifDevice__LoadCertificatesResponse* onvifDevice__LoadCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__LoadCertificates(
    struct soap *soap,
    // request parameters:
    _onvifDevice__LoadCertificates*     onvifDevice__LoadCertificates,
    // response parameters:
    _onvifDevice__LoadCertificatesResponse* onvifDevice__LoadCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	LoadCertificates document
//gsoap onvifDevice service method-encoding:	LoadCertificates literal
//gsoap onvifDevice service method-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificates
//gsoap onvifDevice service method-output-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/Device/LoadCertificatesResponse
int __onvifDevice__LoadCertificates(
    _onvifDevice__LoadCertificates*     onvifDevice__LoadCertificates,	///< Request parameter
    _onvifDevice__LoadCertificatesResponse* onvifDevice__LoadCertificatesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetClientCertificateMode                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetClientCertificateMode" of service binding "DeviceBinding"

/**

Operation details:

This operation is specific to TLS functionality. This operation gets the status
				(enabled/disabled) of the device TLS client authentication.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetClientCertificateMode"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetClientCertificateMode* onvifDevice__GetClientCertificateMode,
    // response parameters:
    _onvifDevice__GetClientCertificateModeResponse* onvifDevice__GetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetClientCertificateMode(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetClientCertificateMode* onvifDevice__GetClientCertificateMode,
    // response parameters:
    _onvifDevice__GetClientCertificateModeResponse* onvifDevice__GetClientCertificateModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetClientCertificateMode document
//gsoap onvifDevice service method-encoding:	GetClientCertificateMode literal
//gsoap onvifDevice service method-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode
//gsoap onvifDevice service method-output-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/Device/GetClientCertificateModeResponse
int __onvifDevice__GetClientCertificateMode(
    _onvifDevice__GetClientCertificateMode* onvifDevice__GetClientCertificateMode,	///< Request parameter
    _onvifDevice__GetClientCertificateModeResponse* onvifDevice__GetClientCertificateModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetClientCertificateMode                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetClientCertificateMode" of service binding "DeviceBinding"

/**

Operation details:

This operation is specific to TLS functionality. This operation sets the status
				(enabled/disabled) of the device TLS client authentication.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetClientCertificateMode"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetClientCertificateMode* onvifDevice__SetClientCertificateMode,
    // response parameters:
    _onvifDevice__SetClientCertificateModeResponse* onvifDevice__SetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetClientCertificateMode(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetClientCertificateMode* onvifDevice__SetClientCertificateMode,
    // response parameters:
    _onvifDevice__SetClientCertificateModeResponse* onvifDevice__SetClientCertificateModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetClientCertificateMode document
//gsoap onvifDevice service method-encoding:	SetClientCertificateMode literal
//gsoap onvifDevice service method-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode
//gsoap onvifDevice service method-output-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/Device/SetClientCertificateModeResponse
int __onvifDevice__SetClientCertificateMode(
    _onvifDevice__SetClientCertificateMode* onvifDevice__SetClientCertificateMode,	///< Request parameter
    _onvifDevice__SetClientCertificateModeResponse* onvifDevice__SetClientCertificateModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetRelayOutputs                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetRelayOutputs" of service binding "DeviceBinding"

/**

Operation details:

This operation gets a list of all available relay outputs and their settings.<br/>
				This method has been depricated with version 2.0.
Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetRelayOutputs"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetRelayOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetRelayOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetRelayOutputs*      onvifDevice__GetRelayOutputs,
    // response parameters:
    _onvifDevice__GetRelayOutputsResponse* onvifDevice__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetRelayOutputs(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetRelayOutputs*      onvifDevice__GetRelayOutputs,
    // response parameters:
    _onvifDevice__GetRelayOutputsResponse* onvifDevice__GetRelayOutputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetRelayOutputs document
//gsoap onvifDevice service method-encoding:	GetRelayOutputs literal
//gsoap onvifDevice service method-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs
//gsoap onvifDevice service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/Device/GetRelayOutputsResponse
int __onvifDevice__GetRelayOutputs(
    _onvifDevice__GetRelayOutputs*      onvifDevice__GetRelayOutputs,	///< Request parameter
    _onvifDevice__GetRelayOutputsResponse* onvifDevice__GetRelayOutputsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetRelayOutputSettings                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetRelayOutputSettings" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the settings of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRelayOutputSettings"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRelayOutputSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetRelayOutputSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetRelayOutputSettings* onvifDevice__SetRelayOutputSettings,
    // response parameters:
    _onvifDevice__SetRelayOutputSettingsResponse* onvifDevice__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetRelayOutputSettings(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetRelayOutputSettings* onvifDevice__SetRelayOutputSettings,
    // response parameters:
    _onvifDevice__SetRelayOutputSettingsResponse* onvifDevice__SetRelayOutputSettingsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetRelayOutputSettings document
//gsoap onvifDevice service method-encoding:	SetRelayOutputSettings literal
//gsoap onvifDevice service method-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings
//gsoap onvifDevice service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/Device/SetRelayOutputSettingsResponse
int __onvifDevice__SetRelayOutputSettings(
    _onvifDevice__SetRelayOutputSettings* onvifDevice__SetRelayOutputSettings,	///< Request parameter
    _onvifDevice__SetRelayOutputSettingsResponse* onvifDevice__SetRelayOutputSettingsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetRelayOutputState                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetRelayOutputState" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the state of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRelayOutputState"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRelayOutputStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetRelayOutputState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetRelayOutputState*  onvifDevice__SetRelayOutputState,
    // response parameters:
    _onvifDevice__SetRelayOutputStateResponse* onvifDevice__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetRelayOutputState(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetRelayOutputState*  onvifDevice__SetRelayOutputState,
    // response parameters:
    _onvifDevice__SetRelayOutputStateResponse* onvifDevice__SetRelayOutputStateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetRelayOutputState document
//gsoap onvifDevice service method-encoding:	SetRelayOutputState literal
//gsoap onvifDevice service method-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState
//gsoap onvifDevice service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/Device/SetRelayOutputStateResponse
int __onvifDevice__SetRelayOutputState(
    _onvifDevice__SetRelayOutputState*  onvifDevice__SetRelayOutputState,	///< Request parameter
    _onvifDevice__SetRelayOutputStateResponse* onvifDevice__SetRelayOutputStateResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SendAuxiliaryCommand                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SendAuxiliaryCommand" of service binding "DeviceBinding"

/**

Operation details:

Manage auxiliary commands supported by a device, such as controlling an Infrared
(IR) lamp, 
				a heater or a wiper or a thermometer that is connected
to the device.<br/>
				The supported commands can be retrieved via the
AuxiliaryCommands capability.<br/>
				Although the name of the auxiliary commands can
be freely defined, commands starting with the prefix tt: are 
				reserved to define frequently used commands and
these reserved commands shall all share the "tt:command|parameter" syntax.
				<ul>
					<li>tt:Wiper|On  Request to start the
wiper.</li>
					<li>tt:Wiper|Off  Request to stop the
wiper.</li>
					<li>tt:Washer|On  Request to start the
washer.</li>
					<li>tt:Washer|Off  Request to stop the
washe.</li>
					<li>tt:WashingProcedue|On  Request to
start the washing procedue.</li>
					<li>tt: WashingProcedue |Off  Request
to stop the washing procedue.</li>
				</ul>
				A device that indicates auxiliary service capability
shall support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SendAuxiliaryCommand"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SendAuxiliaryCommand* onvifDevice__SendAuxiliaryCommand,
    // response parameters:
    _onvifDevice__SendAuxiliaryCommandResponse* onvifDevice__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SendAuxiliaryCommand(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SendAuxiliaryCommand* onvifDevice__SendAuxiliaryCommand,
    // response parameters:
    _onvifDevice__SendAuxiliaryCommandResponse* onvifDevice__SendAuxiliaryCommandResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SendAuxiliaryCommand document
//gsoap onvifDevice service method-encoding:	SendAuxiliaryCommand literal
//gsoap onvifDevice service method-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand
//gsoap onvifDevice service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/Device/SendAuxiliaryCommandResponse
int __onvifDevice__SendAuxiliaryCommand(
    _onvifDevice__SendAuxiliaryCommand* onvifDevice__SendAuxiliaryCommand,	///< Request parameter
    _onvifDevice__SendAuxiliaryCommandResponse* onvifDevice__SendAuxiliaryCommandResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetCACertificates                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetCACertificates" of service binding "DeviceBinding"

/**

Operation details:

CA certificates will be loaded into a device and be used for the sake of following
two cases.
				The one is for the purpose of TLS client authentication
in TLS server function. The other one
				is for the purpose of Authentication Server authentication
in IEEE 802.1X function. This
				operation gets all CA certificates loaded into a
device. A device that supports either TLS client
				authentication or IEEE 802.1X shall support this
command and the returned certificates shall
				be encoded using ASN.1 [X.681], [X.682], [X.683]
DER [X.690] encoding rules.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCACertificates"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetCACertificates*    onvifDevice__GetCACertificates,
    // response parameters:
    _onvifDevice__GetCACertificatesResponse* onvifDevice__GetCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetCACertificates(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetCACertificates*    onvifDevice__GetCACertificates,
    // response parameters:
    _onvifDevice__GetCACertificatesResponse* onvifDevice__GetCACertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetCACertificates document
//gsoap onvifDevice service method-encoding:	GetCACertificates literal
//gsoap onvifDevice service method-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificates
//gsoap onvifDevice service method-output-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/Device/GetCACertificatesResponse
int __onvifDevice__GetCACertificates(
    _onvifDevice__GetCACertificates*    onvifDevice__GetCACertificates,	///< Request parameter
    _onvifDevice__GetCACertificatesResponse* onvifDevice__GetCACertificatesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__LoadCertificateWithPrivateKey                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__LoadCertificateWithPrivateKey" of service binding "DeviceBinding"

/**

Operation details:

There might be some cases that a Certificate Authority or some other equivalent
creates a
				certificate without having PKCS#10 certificate signing
request. In such cases, the certificate
				will be bundled in conjunction with its private
key. This command will be used for such use
				case scenarios. The certificate ID in the request
is optionally set to the ID value the client
				wish to have. If the certificate ID is not specified
in the request, device can choose the ID
				accordingly.<br/>
				This operation imports a private/public key pair
into the device.
				The certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.<br/>
				A device that does not support onboard key pair
generation and support either TLS or IEEE
				802.1X using client certificate shall support this
command. A device that support onboard key
				pair generation MAY support this command. The security
policy of a device that supports this
				operation should make sure that the private key
is sufficiently protected.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/LoadCertificateWithPrivateKey"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/LoadCertificateWithPrivateKeyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__LoadCertificateWithPrivateKey(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__LoadCertificateWithPrivateKey* onvifDevice__LoadCertificateWithPrivateKey,
    // response parameters:
    _onvifDevice__LoadCertificateWithPrivateKeyResponse* onvifDevice__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__LoadCertificateWithPrivateKey(
    struct soap *soap,
    // request parameters:
    _onvifDevice__LoadCertificateWithPrivateKey* onvifDevice__LoadCertificateWithPrivateKey,
    // response parameters:
    _onvifDevice__LoadCertificateWithPrivateKeyResponse* onvifDevice__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	LoadCertificateWithPrivateKey document
//gsoap onvifDevice service method-encoding:	LoadCertificateWithPrivateKey literal
//gsoap onvifDevice service method-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey
//gsoap onvifDevice service method-output-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/Device/LoadCertificateWithPrivateKeyResponse
int __onvifDevice__LoadCertificateWithPrivateKey(
    _onvifDevice__LoadCertificateWithPrivateKey* onvifDevice__LoadCertificateWithPrivateKey,	///< Request parameter
    _onvifDevice__LoadCertificateWithPrivateKeyResponse* onvifDevice__LoadCertificateWithPrivateKeyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetCertificateInformation                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetCertificateInformation" of service binding "DeviceBinding"

/**

Operation details:

This operation requests the information of a certificate specified by certificate
ID. The device
				should respond with its Issuer DN, Subject
DN, Key usage, "Extended key usage, Key
				Length, Version, Serial Number, Signature
Algorithm and Validity data as the
				information of the certificate, as long as the device
can retrieve such information from the
				specified certificate.<br/>
				A device that supports either TLS or IEEE 802.1X
should support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCertificateInformation"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCertificateInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetCertificateInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetCertificateInformation* onvifDevice__GetCertificateInformation,
    // response parameters:
    _onvifDevice__GetCertificateInformationResponse* onvifDevice__GetCertificateInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetCertificateInformation(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetCertificateInformation* onvifDevice__GetCertificateInformation,
    // response parameters:
    _onvifDevice__GetCertificateInformationResponse* onvifDevice__GetCertificateInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetCertificateInformation document
//gsoap onvifDevice service method-encoding:	GetCertificateInformation literal
//gsoap onvifDevice service method-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation
//gsoap onvifDevice service method-output-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/Device/GetCertificateInformationResponse
int __onvifDevice__GetCertificateInformation(
    _onvifDevice__GetCertificateInformation* onvifDevice__GetCertificateInformation,	///< Request parameter
    _onvifDevice__GetCertificateInformationResponse* onvifDevice__GetCertificateInformationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__LoadCACertificates                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__LoadCACertificates" of service binding "DeviceBinding"

/**

Operation details:

This command is used when it is necessary to load trusted CA certificates or trusted
root
				certificates for the purpose of verification for
its counterpart i.e. client certificate verification in
				TLS function or server certificate verification
in IEEE 802.1X function.<br/>
				A device that support either TLS or IEEE 802.1X
shall support this command. As for the
				supported certificate format, either DER format
or PEM format is possible to be used. But a
				device that support this command shall support at
least DER format as supported format type.
				The device may sort the received certificate(s)
based on the public key and subject
				information in the certificate(s). Either all CA
certificates are loaded successfully or a fault
				message shall be returned without loading any CA
certificate.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/LoadCACertificates"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/LoadCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__LoadCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__LoadCACertificates*   onvifDevice__LoadCACertificates,
    // response parameters:
    _onvifDevice__LoadCACertificatesResponse* onvifDevice__LoadCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__LoadCACertificates(
    struct soap *soap,
    // request parameters:
    _onvifDevice__LoadCACertificates*   onvifDevice__LoadCACertificates,
    // response parameters:
    _onvifDevice__LoadCACertificatesResponse* onvifDevice__LoadCACertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	LoadCACertificates document
//gsoap onvifDevice service method-encoding:	LoadCACertificates literal
//gsoap onvifDevice service method-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificates
//gsoap onvifDevice service method-output-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/Device/LoadCACertificatesResponse
int __onvifDevice__LoadCACertificates(
    _onvifDevice__LoadCACertificates*   onvifDevice__LoadCACertificates,	///< Request parameter
    _onvifDevice__LoadCACertificatesResponse* onvifDevice__LoadCACertificatesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__CreateDot1XConfiguration                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__CreateDot1XConfiguration" of service binding "DeviceBinding"

/**

Operation details:

This operation newly creates IEEE 802.1X configuration parameter set of the device.
The
				device shall support this command if it supports
IEEE 802.1X. If the device receives this
				request with already existing configuration token
(Dot1XConfigurationToken) specification, the
				device should respond with 'ter:ReferenceToken '
error to indicate there is some configuration
				conflict.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/CreateDot1XConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/CreateDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__CreateDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__CreateDot1XConfiguration* onvifDevice__CreateDot1XConfiguration,
    // response parameters:
    _onvifDevice__CreateDot1XConfigurationResponse* onvifDevice__CreateDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__CreateDot1XConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDevice__CreateDot1XConfiguration* onvifDevice__CreateDot1XConfiguration,
    // response parameters:
    _onvifDevice__CreateDot1XConfigurationResponse* onvifDevice__CreateDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	CreateDot1XConfiguration document
//gsoap onvifDevice service method-encoding:	CreateDot1XConfiguration literal
//gsoap onvifDevice service method-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration
//gsoap onvifDevice service method-output-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/Device/CreateDot1XConfigurationResponse
int __onvifDevice__CreateDot1XConfiguration(
    _onvifDevice__CreateDot1XConfiguration* onvifDevice__CreateDot1XConfiguration,	///< Request parameter
    _onvifDevice__CreateDot1XConfigurationResponse* onvifDevice__CreateDot1XConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetDot1XConfiguration                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetDot1XConfiguration" of service binding "DeviceBinding"

/**

Operation details:

While the CreateDot1XConfiguration command is trying to create a new configuration
				parameter set, this operation modifies existing
IEEE 802.1X configuration parameter set of
				the device. A device that support IEEE 802.1X shall
support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDot1XConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetDot1XConfiguration* onvifDevice__SetDot1XConfiguration,
    // response parameters:
    _onvifDevice__SetDot1XConfigurationResponse* onvifDevice__SetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetDot1XConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetDot1XConfiguration* onvifDevice__SetDot1XConfiguration,
    // response parameters:
    _onvifDevice__SetDot1XConfigurationResponse* onvifDevice__SetDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetDot1XConfiguration document
//gsoap onvifDevice service method-encoding:	SetDot1XConfiguration literal
//gsoap onvifDevice service method-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration
//gsoap onvifDevice service method-output-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/Device/SetDot1XConfigurationResponse
int __onvifDevice__SetDot1XConfiguration(
    _onvifDevice__SetDot1XConfiguration* onvifDevice__SetDot1XConfiguration,	///< Request parameter
    _onvifDevice__SetDot1XConfigurationResponse* onvifDevice__SetDot1XConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDot1XConfiguration                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDot1XConfiguration" of service binding "DeviceBinding"

/**

Operation details:

This operation gets one IEEE 802.1X configuration parameter set from the device
by
				specifying the configuration token (Dot1XConfigurationToken).<br/>
				A device that supports IEEE 802.1X shall support
this command.
				Regardless of whether the 802.1X method in the retrieved
configuration has a password or
				not, the device shall not include the Password element
in the response.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot1XConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDot1XConfiguration* onvifDevice__GetDot1XConfiguration,
    // response parameters:
    _onvifDevice__GetDot1XConfigurationResponse* onvifDevice__GetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDot1XConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDot1XConfiguration* onvifDevice__GetDot1XConfiguration,
    // response parameters:
    _onvifDevice__GetDot1XConfigurationResponse* onvifDevice__GetDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDot1XConfiguration document
//gsoap onvifDevice service method-encoding:	GetDot1XConfiguration literal
//gsoap onvifDevice service method-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration
//gsoap onvifDevice service method-output-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/Device/GetDot1XConfigurationResponse
int __onvifDevice__GetDot1XConfiguration(
    _onvifDevice__GetDot1XConfiguration* onvifDevice__GetDot1XConfiguration,	///< Request parameter
    _onvifDevice__GetDot1XConfigurationResponse* onvifDevice__GetDot1XConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDot1XConfigurations                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDot1XConfigurations" of service binding "DeviceBinding"

/**

Operation details:

This operation gets all the existing IEEE 802.1X configuration parameter sets from
the device.
				The device shall respond with all the IEEE 802.1X
configurations so that the client can get to
				know how many IEEE 802.1X configurations are existing
and how they are configured.<br/>
				A device that support IEEE 802.1X shall support
this command.<br/>
				Regardless of whether the 802.1X method in the retrieved
configuration has a password or
				not, the device shall not include the Password element
in the response.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot1XConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot1XConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDot1XConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDot1XConfigurations* onvifDevice__GetDot1XConfigurations,
    // response parameters:
    _onvifDevice__GetDot1XConfigurationsResponse* onvifDevice__GetDot1XConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDot1XConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDot1XConfigurations* onvifDevice__GetDot1XConfigurations,
    // response parameters:
    _onvifDevice__GetDot1XConfigurationsResponse* onvifDevice__GetDot1XConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDot1XConfigurations document
//gsoap onvifDevice service method-encoding:	GetDot1XConfigurations literal
//gsoap onvifDevice service method-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations
//gsoap onvifDevice service method-output-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/Device/GetDot1XConfigurationsResponse
int __onvifDevice__GetDot1XConfigurations(
    _onvifDevice__GetDot1XConfigurations* onvifDevice__GetDot1XConfigurations,	///< Request parameter
    _onvifDevice__GetDot1XConfigurationsResponse* onvifDevice__GetDot1XConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__DeleteDot1XConfiguration                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__DeleteDot1XConfiguration" of service binding "DeviceBinding"

/**

Operation details:

This operation deletes an IEEE 802.1X configuration parameter set from the device.
Which
				configuration should be deleted is specified by
the 'Dot1XConfigurationToken' in the request.
				A device that support IEEE 802.1X shall support
this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/DeleteDot1XConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/DeleteDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__DeleteDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__DeleteDot1XConfiguration* onvifDevice__DeleteDot1XConfiguration,
    // response parameters:
    _onvifDevice__DeleteDot1XConfigurationResponse* onvifDevice__DeleteDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__DeleteDot1XConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDevice__DeleteDot1XConfiguration* onvifDevice__DeleteDot1XConfiguration,
    // response parameters:
    _onvifDevice__DeleteDot1XConfigurationResponse* onvifDevice__DeleteDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	DeleteDot1XConfiguration document
//gsoap onvifDevice service method-encoding:	DeleteDot1XConfiguration literal
//gsoap onvifDevice service method-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration
//gsoap onvifDevice service method-output-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/Device/DeleteDot1XConfigurationResponse
int __onvifDevice__DeleteDot1XConfiguration(
    _onvifDevice__DeleteDot1XConfiguration* onvifDevice__DeleteDot1XConfiguration,	///< Request parameter
    _onvifDevice__DeleteDot1XConfigurationResponse* onvifDevice__DeleteDot1XConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDot11Capabilities                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDot11Capabilities" of service binding "DeviceBinding"

/**

Operation details:

This operation returns the IEEE802.11 capabilities. The device shall support
				this operation.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot11Capabilities"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot11CapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDot11Capabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDot11Capabilities* onvifDevice__GetDot11Capabilities,
    // response parameters:
    _onvifDevice__GetDot11CapabilitiesResponse* onvifDevice__GetDot11CapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDot11Capabilities(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDot11Capabilities* onvifDevice__GetDot11Capabilities,
    // response parameters:
    _onvifDevice__GetDot11CapabilitiesResponse* onvifDevice__GetDot11CapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDot11Capabilities document
//gsoap onvifDevice service method-encoding:	GetDot11Capabilities literal
//gsoap onvifDevice service method-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities
//gsoap onvifDevice service method-output-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/Device/GetDot11CapabilitiesResponse
int __onvifDevice__GetDot11Capabilities(
    _onvifDevice__GetDot11Capabilities* onvifDevice__GetDot11Capabilities,	///< Request parameter
    _onvifDevice__GetDot11CapabilitiesResponse* onvifDevice__GetDot11CapabilitiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDot11Status                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDot11Status" of service binding "DeviceBinding"

/**

Operation details:

This operation returns the status of a wireless network interface. The device shall
support this
				command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot11Status"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot11StatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDot11Status(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDot11Status*       onvifDevice__GetDot11Status,
    // response parameters:
    _onvifDevice__GetDot11StatusResponse* onvifDevice__GetDot11StatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDot11Status(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDot11Status*       onvifDevice__GetDot11Status,
    // response parameters:
    _onvifDevice__GetDot11StatusResponse* onvifDevice__GetDot11StatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDot11Status document
//gsoap onvifDevice service method-encoding:	GetDot11Status literal
//gsoap onvifDevice service method-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11Status
//gsoap onvifDevice service method-output-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/Device/GetDot11StatusResponse
int __onvifDevice__GetDot11Status(
    _onvifDevice__GetDot11Status*       onvifDevice__GetDot11Status,	///< Request parameter
    _onvifDevice__GetDot11StatusResponse* onvifDevice__GetDot11StatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__ScanAvailableDot11Networks                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__ScanAvailableDot11Networks" of service binding "DeviceBinding"

/**

Operation details:

This operation returns a lists of the wireless networks in range of the device.
A device should
				support this operation.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/ScanAvailableDot11Networks"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/ScanAvailableDot11NetworksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__ScanAvailableDot11Networks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__ScanAvailableDot11Networks* onvifDevice__ScanAvailableDot11Networks,
    // response parameters:
    _onvifDevice__ScanAvailableDot11NetworksResponse* onvifDevice__ScanAvailableDot11NetworksResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__ScanAvailableDot11Networks(
    struct soap *soap,
    // request parameters:
    _onvifDevice__ScanAvailableDot11Networks* onvifDevice__ScanAvailableDot11Networks,
    // response parameters:
    _onvifDevice__ScanAvailableDot11NetworksResponse* onvifDevice__ScanAvailableDot11NetworksResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	ScanAvailableDot11Networks document
//gsoap onvifDevice service method-encoding:	ScanAvailableDot11Networks literal
//gsoap onvifDevice service method-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks
//gsoap onvifDevice service method-output-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/Device/ScanAvailableDot11NetworksResponse
int __onvifDevice__ScanAvailableDot11Networks(
    _onvifDevice__ScanAvailableDot11Networks* onvifDevice__ScanAvailableDot11Networks,	///< Request parameter
    _onvifDevice__ScanAvailableDot11NetworksResponse* onvifDevice__ScanAvailableDot11NetworksResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetSystemUris                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetSystemUris" of service binding "DeviceBinding"

/**

Operation details:

This operation is used to retrieve URIs from which system information may be downloaded
				using HTTP. URIs may be returned for the following
system information:<br/>
				System Logs. Multiple system logs may be returned,
of different types. The exact format of
				the system logs is outside the scope of this specification.<br/>
				Support Information. This consists of arbitrary
device diagnostics information from a device.
				The exact format of the diagnostic information is
outside the scope of this specification.<br/>
				System Backup. The received file is a backup file
that can be used to restore the current
				device configuration at a later date. The exact
format of the backup configuration file is
				outside the scope of this specification.<br/>
				If the device allows retrieval of system logs, support
information or system backup data, it
				should make them available via HTTP GET. If it does,
it shall support the GetSystemUris
				command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemUris"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemUrisResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetSystemUris(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetSystemUris*        onvifDevice__GetSystemUris,
    // response parameters:
    _onvifDevice__GetSystemUrisResponse* onvifDevice__GetSystemUrisResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetSystemUris(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetSystemUris*        onvifDevice__GetSystemUris,
    // response parameters:
    _onvifDevice__GetSystemUrisResponse* onvifDevice__GetSystemUrisResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetSystemUris document
//gsoap onvifDevice service method-encoding:	GetSystemUris literal
//gsoap onvifDevice service method-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUris
//gsoap onvifDevice service method-output-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/Device/GetSystemUrisResponse
int __onvifDevice__GetSystemUris(
    _onvifDevice__GetSystemUris*        onvifDevice__GetSystemUris,	///< Request parameter
    _onvifDevice__GetSystemUrisResponse* onvifDevice__GetSystemUrisResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__StartFirmwareUpgrade                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__StartFirmwareUpgrade" of service binding "DeviceBinding"

/**

Operation details:

This operation initiates a firmware upgrade using the HTTP POST mechanism. The response
				to the command includes an HTTP URL to which the
upgrade file may be uploaded. The
				actual upgrade takes place as soon as the HTTP POST
operation has completed. The device
				should support firmware upgrade through the StartFirmwareUpgrade
command. The exact
				format of the firmware data is outside the scope
of this specification.
				Firmware upgrade over HTTP may be achieved using
the following steps:<ol>
					<li>Client calls StartFirmwareUpgrade.</li>
					<li>Server responds with upload URI and
optional delay value.</li>
					<li>Client waits for delay duration if specified
by server.</li>
					<li>Client transmits the firmware image
to the upload URI using HTTP POST.</li>
					<li>Server reprograms itself using the uploaded
image, then reboots.</li>
				</ol>
				If the firmware upgrade fails because the upgrade
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
firmware upgrade fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/StartFirmwareUpgrade"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/StartFirmwareUpgradeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__StartFirmwareUpgrade(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__StartFirmwareUpgrade* onvifDevice__StartFirmwareUpgrade,
    // response parameters:
    _onvifDevice__StartFirmwareUpgradeResponse* onvifDevice__StartFirmwareUpgradeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__StartFirmwareUpgrade(
    struct soap *soap,
    // request parameters:
    _onvifDevice__StartFirmwareUpgrade* onvifDevice__StartFirmwareUpgrade,
    // response parameters:
    _onvifDevice__StartFirmwareUpgradeResponse* onvifDevice__StartFirmwareUpgradeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	StartFirmwareUpgrade document
//gsoap onvifDevice service method-encoding:	StartFirmwareUpgrade literal
//gsoap onvifDevice service method-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade
//gsoap onvifDevice service method-output-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/Device/StartFirmwareUpgradeResponse
int __onvifDevice__StartFirmwareUpgrade(
    _onvifDevice__StartFirmwareUpgrade* onvifDevice__StartFirmwareUpgrade,	///< Request parameter
    _onvifDevice__StartFirmwareUpgradeResponse* onvifDevice__StartFirmwareUpgradeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__StartSystemRestore                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__StartSystemRestore" of service binding "DeviceBinding"

/**

Operation details:

This operation initiates a system restore from backed up configuration data using
the HTTP
				POST mechanism. The response to the command includes
an HTTP URL to which the backup
				file may be uploaded. The actual restore takes place
as soon as the HTTP POST operation
				has completed. Devices should support system restore
through the StartSystemRestore
				command. The exact format of the backup configuration
data is outside the scope of this
				specification.<br/>
				System restore over HTTP may be achieved using the
following steps:<ol>
					<li>Client calls StartSystemRestore.</li>
					<li>Server responds with upload URI.</li>
					<li>Client transmits the configuration data
to the upload URI using HTTP POST.</li>
					<li>Server applies the uploaded configuration,
then reboots if necessary.</li>
				</ol>
				If the system restore fails because the uploaded
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
system restore fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/StartSystemRestore"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/StartSystemRestoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__StartSystemRestore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__StartSystemRestore*   onvifDevice__StartSystemRestore,
    // response parameters:
    _onvifDevice__StartSystemRestoreResponse* onvifDevice__StartSystemRestoreResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__StartSystemRestore(
    struct soap *soap,
    // request parameters:
    _onvifDevice__StartSystemRestore*   onvifDevice__StartSystemRestore,
    // response parameters:
    _onvifDevice__StartSystemRestoreResponse* onvifDevice__StartSystemRestoreResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	StartSystemRestore document
//gsoap onvifDevice service method-encoding:	StartSystemRestore literal
//gsoap onvifDevice service method-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestore
//gsoap onvifDevice service method-output-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/Device/StartSystemRestoreResponse
int __onvifDevice__StartSystemRestore(
    _onvifDevice__StartSystemRestore*   onvifDevice__StartSystemRestore,	///< Request parameter
    _onvifDevice__StartSystemRestoreResponse* onvifDevice__StartSystemRestoreResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetServices_                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetServices_" of service binding "DeviceBinding"

/**

Operation details:

Returns information about services on the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetServices"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetServicesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetServices_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetServices*          onvifDevice__GetServices,
    // response parameters:
    _onvifDevice__GetServicesResponse*  onvifDevice__GetServicesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetServices_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetServices*          onvifDevice__GetServices,
    // response parameters:
    _onvifDevice__GetServicesResponse*  onvifDevice__GetServicesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetServices_ document
//gsoap onvifDevice service method-encoding:	GetServices_ literal
//gsoap onvifDevice service method-action:	GetServices_ http://www.onvif.org/ver10/device/wsdl/GetServices
//gsoap onvifDevice service method-output-action:	GetServices_ http://www.onvif.org/ver10/device/wsdl/Device/GetServicesResponse
int __onvifDevice__GetServices_(
    _onvifDevice__GetServices*          onvifDevice__GetServices,	///< Request parameter
    _onvifDevice__GetServicesResponse*  onvifDevice__GetServicesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetServiceCapabilities_                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetServiceCapabilities_" of service binding "DeviceBinding"

/**

Operation details:

Returns the capabilities of the device service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetServiceCapabilities"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetServiceCapabilities_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetServiceCapabilities* onvifDevice__GetServiceCapabilities,
    // response parameters:
    _onvifDevice__GetServiceCapabilitiesResponse* onvifDevice__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetServiceCapabilities_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetServiceCapabilities* onvifDevice__GetServiceCapabilities,
    // response parameters:
    _onvifDevice__GetServiceCapabilitiesResponse* onvifDevice__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetServiceCapabilities_ document
//gsoap onvifDevice service method-encoding:	GetServiceCapabilities_ literal
//gsoap onvifDevice service method-action:	GetServiceCapabilities_ http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities
//gsoap onvifDevice service method-output-action:	GetServiceCapabilities_ http://www.onvif.org/ver10/device/wsdl/Device/GetServiceCapabilitiesResponse
int __onvifDevice__GetServiceCapabilities_(
    _onvifDevice__GetServiceCapabilities* onvifDevice__GetServiceCapabilities,	///< Request parameter
    _onvifDevice__GetServiceCapabilitiesResponse* onvifDevice__GetServiceCapabilitiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDeviceInformation_                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDeviceInformation_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets basic device information from the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDeviceInformation"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDeviceInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDeviceInformation_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDeviceInformation* onvifDevice__GetDeviceInformation,
    // response parameters:
    _onvifDevice__GetDeviceInformationResponse* onvifDevice__GetDeviceInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDeviceInformation_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDeviceInformation* onvifDevice__GetDeviceInformation,
    // response parameters:
    _onvifDevice__GetDeviceInformationResponse* onvifDevice__GetDeviceInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDeviceInformation_ document
//gsoap onvifDevice service method-encoding:	GetDeviceInformation_ literal
//gsoap onvifDevice service method-action:	GetDeviceInformation_ http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation
//gsoap onvifDevice service method-output-action:	GetDeviceInformation_ http://www.onvif.org/ver10/device/wsdl/Device/GetDeviceInformationResponse
int __onvifDevice__GetDeviceInformation_(
    _onvifDevice__GetDeviceInformation* onvifDevice__GetDeviceInformation,	///< Request parameter
    _onvifDevice__GetDeviceInformationResponse* onvifDevice__GetDeviceInformationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetSystemDateAndTime_                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetSystemDateAndTime_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the device system date and time. The device shall support the
				configuration of the daylight saving setting and
of the manual system date and time (if
				applicable) or indication of NTP time (if applicable)
through the SetSystemDateAndTime
				command. <br/>
				If system time and date are set manually, the client
shall include UTCDateTime in the request.<br/>
				A TimeZone token which is not formed according to
the rules of IEEE 1003.1 section 8.3 is considered as invalid timezone.<br/>
				The DayLightSavings flag should be set to true to
activate any DST settings of the TimeZone string. 
				Clear the DayLightSavings flag if the DST portion
of the TimeZone settings should be ignored.
			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetSystemDateAndTime"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetSystemDateAndTime_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetSystemDateAndTime* onvifDevice__SetSystemDateAndTime,
    // response parameters:
    _onvifDevice__SetSystemDateAndTimeResponse* onvifDevice__SetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetSystemDateAndTime_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetSystemDateAndTime* onvifDevice__SetSystemDateAndTime,
    // response parameters:
    _onvifDevice__SetSystemDateAndTimeResponse* onvifDevice__SetSystemDateAndTimeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetSystemDateAndTime_ document
//gsoap onvifDevice service method-encoding:	SetSystemDateAndTime_ literal
//gsoap onvifDevice service method-action:	SetSystemDateAndTime_ http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime
//gsoap onvifDevice service method-output-action:	SetSystemDateAndTime_ http://www.onvif.org/ver10/device/wsdl/Device/SetSystemDateAndTimeResponse
int __onvifDevice__SetSystemDateAndTime_(
    _onvifDevice__SetSystemDateAndTime* onvifDevice__SetSystemDateAndTime,	///< Request parameter
    _onvifDevice__SetSystemDateAndTimeResponse* onvifDevice__SetSystemDateAndTimeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetSystemDateAndTime_                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetSystemDateAndTime_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the device system date and time. The device shall support the
return of
				the daylight saving setting and of the manual system
date and time (if applicable) or indication
				of NTP time (if applicable) through the GetSystemDateAndTime
command.<br/>
				A device shall provide the UTCDateTime information.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemDateAndTime"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetSystemDateAndTime_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetSystemDateAndTime* onvifDevice__GetSystemDateAndTime,
    // response parameters:
    _onvifDevice__GetSystemDateAndTimeResponse* onvifDevice__GetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetSystemDateAndTime_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetSystemDateAndTime* onvifDevice__GetSystemDateAndTime,
    // response parameters:
    _onvifDevice__GetSystemDateAndTimeResponse* onvifDevice__GetSystemDateAndTimeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetSystemDateAndTime_ document
//gsoap onvifDevice service method-encoding:	GetSystemDateAndTime_ literal
//gsoap onvifDevice service method-action:	GetSystemDateAndTime_ http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime
//gsoap onvifDevice service method-output-action:	GetSystemDateAndTime_ http://www.onvif.org/ver10/device/wsdl/Device/GetSystemDateAndTimeResponse
int __onvifDevice__GetSystemDateAndTime_(
    _onvifDevice__GetSystemDateAndTime* onvifDevice__GetSystemDateAndTime,	///< Request parameter
    _onvifDevice__GetSystemDateAndTimeResponse* onvifDevice__GetSystemDateAndTimeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetSystemFactoryDefault_                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetSystemFactoryDefault_" of service binding "DeviceBinding"

/**

Operation details:

This operation reloads the parameters on the device to their factory default values.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetSystemFactoryDefault"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetSystemFactoryDefaultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetSystemFactoryDefault_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetSystemFactoryDefault* onvifDevice__SetSystemFactoryDefault,
    // response parameters:
    _onvifDevice__SetSystemFactoryDefaultResponse* onvifDevice__SetSystemFactoryDefaultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetSystemFactoryDefault_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetSystemFactoryDefault* onvifDevice__SetSystemFactoryDefault,
    // response parameters:
    _onvifDevice__SetSystemFactoryDefaultResponse* onvifDevice__SetSystemFactoryDefaultResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetSystemFactoryDefault_ document
//gsoap onvifDevice service method-encoding:	SetSystemFactoryDefault_ literal
//gsoap onvifDevice service method-action:	SetSystemFactoryDefault_ http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault
//gsoap onvifDevice service method-output-action:	SetSystemFactoryDefault_ http://www.onvif.org/ver10/device/wsdl/Device/SetSystemFactoryDefaultResponse
int __onvifDevice__SetSystemFactoryDefault_(
    _onvifDevice__SetSystemFactoryDefault* onvifDevice__SetSystemFactoryDefault,	///< Request parameter
    _onvifDevice__SetSystemFactoryDefaultResponse* onvifDevice__SetSystemFactoryDefaultResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__UpgradeSystemFirmware_                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__UpgradeSystemFirmware_" of service binding "DeviceBinding"

/**

Operation details:

This operation upgrades a device firmware version. After a successful upgrade the
response
				message is sent before the device reboots. The device
should support firmware upgrade
				through the UpgradeSystemFirmware command. The exact
format of the firmware data is
				outside the scope of this standard.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/UpgradeSystemFirmware"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/UpgradeSystemFirmwareResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__UpgradeSystemFirmware_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__UpgradeSystemFirmware* onvifDevice__UpgradeSystemFirmware,
    // response parameters:
    _onvifDevice__UpgradeSystemFirmwareResponse* onvifDevice__UpgradeSystemFirmwareResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__UpgradeSystemFirmware_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__UpgradeSystemFirmware* onvifDevice__UpgradeSystemFirmware,
    // response parameters:
    _onvifDevice__UpgradeSystemFirmwareResponse* onvifDevice__UpgradeSystemFirmwareResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	UpgradeSystemFirmware_ document
//gsoap onvifDevice service method-encoding:	UpgradeSystemFirmware_ literal
//gsoap onvifDevice service method-action:	UpgradeSystemFirmware_ http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware
//gsoap onvifDevice service method-output-action:	UpgradeSystemFirmware_ http://www.onvif.org/ver10/device/wsdl/Device/UpgradeSystemFirmwareResponse
int __onvifDevice__UpgradeSystemFirmware_(
    _onvifDevice__UpgradeSystemFirmware* onvifDevice__UpgradeSystemFirmware,	///< Request parameter
    _onvifDevice__UpgradeSystemFirmwareResponse* onvifDevice__UpgradeSystemFirmwareResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SystemReboot_                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SystemReboot_" of service binding "DeviceBinding"

/**

Operation details:

This operation reboots the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SystemReboot"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SystemRebootResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SystemReboot_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SystemReboot*         onvifDevice__SystemReboot,
    // response parameters:
    _onvifDevice__SystemRebootResponse* onvifDevice__SystemRebootResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SystemReboot_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SystemReboot*         onvifDevice__SystemReboot,
    // response parameters:
    _onvifDevice__SystemRebootResponse* onvifDevice__SystemRebootResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SystemReboot_ document
//gsoap onvifDevice service method-encoding:	SystemReboot_ literal
//gsoap onvifDevice service method-action:	SystemReboot_ http://www.onvif.org/ver10/device/wsdl/SystemReboot
//gsoap onvifDevice service method-output-action:	SystemReboot_ http://www.onvif.org/ver10/device/wsdl/Device/SystemRebootResponse
int __onvifDevice__SystemReboot_(
    _onvifDevice__SystemReboot*         onvifDevice__SystemReboot,	///< Request parameter
    _onvifDevice__SystemRebootResponse* onvifDevice__SystemRebootResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__RestoreSystem_                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__RestoreSystem_" of service binding "DeviceBinding"

/**

Operation details:

This operation restores the system backup configuration files(s) previously retrieved
from a
				device. The device should support restore of backup
configuration file(s) through the
				RestoreSystem command. The exact format of the backup
configuration file(s) is outside the
				scope of this standard. If the command is supported,
it shall accept backup files returned by
				the GetSystemBackup command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/RestoreSystem"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/RestoreSystemResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__RestoreSystem_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__RestoreSystem*        onvifDevice__RestoreSystem,
    // response parameters:
    _onvifDevice__RestoreSystemResponse* onvifDevice__RestoreSystemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__RestoreSystem_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__RestoreSystem*        onvifDevice__RestoreSystem,
    // response parameters:
    _onvifDevice__RestoreSystemResponse* onvifDevice__RestoreSystemResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	RestoreSystem_ document
//gsoap onvifDevice service method-encoding:	RestoreSystem_ literal
//gsoap onvifDevice service method-action:	RestoreSystem_ http://www.onvif.org/ver10/device/wsdl/RestoreSystem
//gsoap onvifDevice service method-output-action:	RestoreSystem_ http://www.onvif.org/ver10/device/wsdl/Device/RestoreSystemResponse
int __onvifDevice__RestoreSystem_(
    _onvifDevice__RestoreSystem*        onvifDevice__RestoreSystem,	///< Request parameter
    _onvifDevice__RestoreSystemResponse* onvifDevice__RestoreSystemResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetSystemBackup_                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetSystemBackup_" of service binding "DeviceBinding"

/**

Operation details:

This operation is retrieves system backup configuration file(s) from a device. The
device
				should support return of back up configuration file(s)
through the GetSystemBackup command.
				The backup is returned with reference to a name
and mime-type together with binary data.
				The exact format of the backup configuration files
is outside the scope of this standard.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemBackup"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemBackupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetSystemBackup_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetSystemBackup*      onvifDevice__GetSystemBackup,
    // response parameters:
    _onvifDevice__GetSystemBackupResponse* onvifDevice__GetSystemBackupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetSystemBackup_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetSystemBackup*      onvifDevice__GetSystemBackup,
    // response parameters:
    _onvifDevice__GetSystemBackupResponse* onvifDevice__GetSystemBackupResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetSystemBackup_ document
//gsoap onvifDevice service method-encoding:	GetSystemBackup_ literal
//gsoap onvifDevice service method-action:	GetSystemBackup_ http://www.onvif.org/ver10/device/wsdl/GetSystemBackup
//gsoap onvifDevice service method-output-action:	GetSystemBackup_ http://www.onvif.org/ver10/device/wsdl/Device/GetSystemBackupResponse
int __onvifDevice__GetSystemBackup_(
    _onvifDevice__GetSystemBackup*      onvifDevice__GetSystemBackup,	///< Request parameter
    _onvifDevice__GetSystemBackupResponse* onvifDevice__GetSystemBackupResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetSystemLog_                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetSystemLog_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets a system log from the device. The exact format of the system
logs is outside the scope of this standard.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemLog"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemLogResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetSystemLog_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetSystemLog*         onvifDevice__GetSystemLog,
    // response parameters:
    _onvifDevice__GetSystemLogResponse* onvifDevice__GetSystemLogResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetSystemLog_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetSystemLog*         onvifDevice__GetSystemLog,
    // response parameters:
    _onvifDevice__GetSystemLogResponse* onvifDevice__GetSystemLogResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetSystemLog_ document
//gsoap onvifDevice service method-encoding:	GetSystemLog_ literal
//gsoap onvifDevice service method-action:	GetSystemLog_ http://www.onvif.org/ver10/device/wsdl/GetSystemLog
//gsoap onvifDevice service method-output-action:	GetSystemLog_ http://www.onvif.org/ver10/device/wsdl/Device/GetSystemLogResponse
int __onvifDevice__GetSystemLog_(
    _onvifDevice__GetSystemLog*         onvifDevice__GetSystemLog,	///< Request parameter
    _onvifDevice__GetSystemLogResponse* onvifDevice__GetSystemLogResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetSystemSupportInformation_                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetSystemSupportInformation_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets arbitary device diagnostics information from the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemSupportInformation"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemSupportInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetSystemSupportInformation_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetSystemSupportInformation* onvifDevice__GetSystemSupportInformation,
    // response parameters:
    _onvifDevice__GetSystemSupportInformationResponse* onvifDevice__GetSystemSupportInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetSystemSupportInformation_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetSystemSupportInformation* onvifDevice__GetSystemSupportInformation,
    // response parameters:
    _onvifDevice__GetSystemSupportInformationResponse* onvifDevice__GetSystemSupportInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetSystemSupportInformation_ document
//gsoap onvifDevice service method-encoding:	GetSystemSupportInformation_ literal
//gsoap onvifDevice service method-action:	GetSystemSupportInformation_ http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation
//gsoap onvifDevice service method-output-action:	GetSystemSupportInformation_ http://www.onvif.org/ver10/device/wsdl/Device/GetSystemSupportInformationResponse
int __onvifDevice__GetSystemSupportInformation_(
    _onvifDevice__GetSystemSupportInformation* onvifDevice__GetSystemSupportInformation,	///< Request parameter
    _onvifDevice__GetSystemSupportInformationResponse* onvifDevice__GetSystemSupportInformationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetScopes_                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetScopes_" of service binding "DeviceBinding"

/**

Operation details:

This operation requests the scope parameters of a device. The scope parameters are
used in
				the device discovery to match a probe message, see
Section 7. The Scope parameters are of
				two different types: <ul>
					<li>Fixed</li>
					<li>Configurable</li>
				</ul>
				Fixed scope parameters cannot be altered through
the device management interface but are
				permanent device characteristics part of the device
firmware configurations. The scope type is
				indicated in the scope list returned in the get
scope parameters response. Configurable scope
				parameters can be set throught the set and add scope
parameters operations. 
				The device shall support retrieval of discovery
scope parameters
				through the GetScopes command. As some scope parameters
are mandatory, the client
				always expects a scope list in the response.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetScopes"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetScopes_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetScopes*            onvifDevice__GetScopes,
    // response parameters:
    _onvifDevice__GetScopesResponse*    onvifDevice__GetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetScopes_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetScopes*            onvifDevice__GetScopes,
    // response parameters:
    _onvifDevice__GetScopesResponse*    onvifDevice__GetScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetScopes_ document
//gsoap onvifDevice service method-encoding:	GetScopes_ literal
//gsoap onvifDevice service method-action:	GetScopes_ http://www.onvif.org/ver10/device/wsdl/GetScopes
//gsoap onvifDevice service method-output-action:	GetScopes_ http://www.onvif.org/ver10/device/wsdl/Device/GetScopesResponse
int __onvifDevice__GetScopes_(
    _onvifDevice__GetScopes*            onvifDevice__GetScopes,	///< Request parameter
    _onvifDevice__GetScopesResponse*    onvifDevice__GetScopesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetScopes_                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetScopes_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the scope parameters of a device. The scope parameters are used
in the
				device discovery to match a probe message.
				This operation replaces all existing configurable
scope parameters (not fixed parameters). If
				this shall be avoided, one should use the scope
add command instead. The device shall
				support configuration of discovery scope parameters
through the SetScopes command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetScopes"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetScopes_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetScopes*            onvifDevice__SetScopes,
    // response parameters:
    _onvifDevice__SetScopesResponse*    onvifDevice__SetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetScopes_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetScopes*            onvifDevice__SetScopes,
    // response parameters:
    _onvifDevice__SetScopesResponse*    onvifDevice__SetScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetScopes_ document
//gsoap onvifDevice service method-encoding:	SetScopes_ literal
//gsoap onvifDevice service method-action:	SetScopes_ http://www.onvif.org/ver10/device/wsdl/SetScopes
//gsoap onvifDevice service method-output-action:	SetScopes_ http://www.onvif.org/ver10/device/wsdl/Device/SetScopesResponse
int __onvifDevice__SetScopes_(
    _onvifDevice__SetScopes*            onvifDevice__SetScopes,	///< Request parameter
    _onvifDevice__SetScopesResponse*    onvifDevice__SetScopesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__AddScopes_                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__AddScopes_" of service binding "DeviceBinding"

/**

Operation details:

This operation adds new configurable scope parameters to a device. The scope parameters
				are used in the device discovery to match a probe
message. The device shall
				support addition of discovery scope parameters through
the AddScopes command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/AddScopes"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/AddScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__AddScopes_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__AddScopes*            onvifDevice__AddScopes,
    // response parameters:
    _onvifDevice__AddScopesResponse*    onvifDevice__AddScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__AddScopes_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__AddScopes*            onvifDevice__AddScopes,
    // response parameters:
    _onvifDevice__AddScopesResponse*    onvifDevice__AddScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	AddScopes_ document
//gsoap onvifDevice service method-encoding:	AddScopes_ literal
//gsoap onvifDevice service method-action:	AddScopes_ http://www.onvif.org/ver10/device/wsdl/AddScopes
//gsoap onvifDevice service method-output-action:	AddScopes_ http://www.onvif.org/ver10/device/wsdl/Device/AddScopesResponse
int __onvifDevice__AddScopes_(
    _onvifDevice__AddScopes*            onvifDevice__AddScopes,	///< Request parameter
    _onvifDevice__AddScopesResponse*    onvifDevice__AddScopesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__RemoveScopes_                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__RemoveScopes_" of service binding "DeviceBinding"

/**

Operation details:

This operation deletes scope-configurable scope parameters from a device. The scope
				parameters are used in the device discovery to match
a probe message, see Section 7. The
				device shall support deletion of discovery scope
parameters through the RemoveScopes
				command.
				Table

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/RemoveScopes"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/RemoveScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__RemoveScopes_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__RemoveScopes*         onvifDevice__RemoveScopes,
    // response parameters:
    _onvifDevice__RemoveScopesResponse* onvifDevice__RemoveScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__RemoveScopes_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__RemoveScopes*         onvifDevice__RemoveScopes,
    // response parameters:
    _onvifDevice__RemoveScopesResponse* onvifDevice__RemoveScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	RemoveScopes_ document
//gsoap onvifDevice service method-encoding:	RemoveScopes_ literal
//gsoap onvifDevice service method-action:	RemoveScopes_ http://www.onvif.org/ver10/device/wsdl/RemoveScopes
//gsoap onvifDevice service method-output-action:	RemoveScopes_ http://www.onvif.org/ver10/device/wsdl/Device/RemoveScopesResponse
int __onvifDevice__RemoveScopes_(
    _onvifDevice__RemoveScopes*         onvifDevice__RemoveScopes,	///< Request parameter
    _onvifDevice__RemoveScopesResponse* onvifDevice__RemoveScopesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDiscoveryMode_                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDiscoveryMode_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the discovery mode of a device. See Section 7.2 for the definition
of the
				different device discovery modes. The device shall
support retrieval of the discovery mode
				setting through the GetDiscoveryMode command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDiscoveryMode"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDiscoveryMode_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDiscoveryMode*     onvifDevice__GetDiscoveryMode,
    // response parameters:
    _onvifDevice__GetDiscoveryModeResponse* onvifDevice__GetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDiscoveryMode_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDiscoveryMode*     onvifDevice__GetDiscoveryMode,
    // response parameters:
    _onvifDevice__GetDiscoveryModeResponse* onvifDevice__GetDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDiscoveryMode_ document
//gsoap onvifDevice service method-encoding:	GetDiscoveryMode_ literal
//gsoap onvifDevice service method-action:	GetDiscoveryMode_ http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode
//gsoap onvifDevice service method-output-action:	GetDiscoveryMode_ http://www.onvif.org/ver10/device/wsdl/Device/GetDiscoveryModeResponse
int __onvifDevice__GetDiscoveryMode_(
    _onvifDevice__GetDiscoveryMode*     onvifDevice__GetDiscoveryMode,	///< Request parameter
    _onvifDevice__GetDiscoveryModeResponse* onvifDevice__GetDiscoveryModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetDiscoveryMode_                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetDiscoveryMode_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the discovery mode operation of a device. See Section 7.2 for
the
				definition of the different device discovery modes.
The device shall support configuration of
				the discovery mode setting through the SetDiscoveryMode
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDiscoveryMode"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetDiscoveryMode_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetDiscoveryMode*     onvifDevice__SetDiscoveryMode,
    // response parameters:
    _onvifDevice__SetDiscoveryModeResponse* onvifDevice__SetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetDiscoveryMode_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetDiscoveryMode*     onvifDevice__SetDiscoveryMode,
    // response parameters:
    _onvifDevice__SetDiscoveryModeResponse* onvifDevice__SetDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetDiscoveryMode_ document
//gsoap onvifDevice service method-encoding:	SetDiscoveryMode_ literal
//gsoap onvifDevice service method-action:	SetDiscoveryMode_ http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode
//gsoap onvifDevice service method-output-action:	SetDiscoveryMode_ http://www.onvif.org/ver10/device/wsdl/Device/SetDiscoveryModeResponse
int __onvifDevice__SetDiscoveryMode_(
    _onvifDevice__SetDiscoveryMode*     onvifDevice__SetDiscoveryMode,	///< Request parameter
    _onvifDevice__SetDiscoveryModeResponse* onvifDevice__SetDiscoveryModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetRemoteDiscoveryMode_                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetRemoteDiscoveryMode_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the remote discovery mode of a device. See Section 7.4 for the
definition
				of remote discovery extensions. A device that supports
remote discovery shall support
				retrieval of the remote discovery mode setting through
the GetRemoteDiscoveryMode
				command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetRemoteDiscoveryMode"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetRemoteDiscoveryMode_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetRemoteDiscoveryMode* onvifDevice__GetRemoteDiscoveryMode,
    // response parameters:
    _onvifDevice__GetRemoteDiscoveryModeResponse* onvifDevice__GetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetRemoteDiscoveryMode_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetRemoteDiscoveryMode* onvifDevice__GetRemoteDiscoveryMode,
    // response parameters:
    _onvifDevice__GetRemoteDiscoveryModeResponse* onvifDevice__GetRemoteDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetRemoteDiscoveryMode_ document
//gsoap onvifDevice service method-encoding:	GetRemoteDiscoveryMode_ literal
//gsoap onvifDevice service method-action:	GetRemoteDiscoveryMode_ http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode
//gsoap onvifDevice service method-output-action:	GetRemoteDiscoveryMode_ http://www.onvif.org/ver10/device/wsdl/Device/GetRemoteDiscoveryModeResponse
int __onvifDevice__GetRemoteDiscoveryMode_(
    _onvifDevice__GetRemoteDiscoveryMode* onvifDevice__GetRemoteDiscoveryMode,	///< Request parameter
    _onvifDevice__GetRemoteDiscoveryModeResponse* onvifDevice__GetRemoteDiscoveryModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetRemoteDiscoveryMode_                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetRemoteDiscoveryMode_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the remote discovery mode of operation of a device. See Section
7.4 for
				the definition of remote discovery remote extensions.
A device that supports remote discovery
				shall support configuration of the discovery mode
setting through the
				SetRemoteDiscoveryMode command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRemoteDiscoveryMode"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetRemoteDiscoveryMode_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetRemoteDiscoveryMode* onvifDevice__SetRemoteDiscoveryMode,
    // response parameters:
    _onvifDevice__SetRemoteDiscoveryModeResponse* onvifDevice__SetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetRemoteDiscoveryMode_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetRemoteDiscoveryMode* onvifDevice__SetRemoteDiscoveryMode,
    // response parameters:
    _onvifDevice__SetRemoteDiscoveryModeResponse* onvifDevice__SetRemoteDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetRemoteDiscoveryMode_ document
//gsoap onvifDevice service method-encoding:	SetRemoteDiscoveryMode_ literal
//gsoap onvifDevice service method-action:	SetRemoteDiscoveryMode_ http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode
//gsoap onvifDevice service method-output-action:	SetRemoteDiscoveryMode_ http://www.onvif.org/ver10/device/wsdl/Device/SetRemoteDiscoveryModeResponse
int __onvifDevice__SetRemoteDiscoveryMode_(
    _onvifDevice__SetRemoteDiscoveryMode* onvifDevice__SetRemoteDiscoveryMode,	///< Request parameter
    _onvifDevice__SetRemoteDiscoveryModeResponse* onvifDevice__SetRemoteDiscoveryModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDPAddresses_                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDPAddresses_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the remote DP address or addresses from a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support retrieval of the remote
				DP address(es) through the GetDPAddresses command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDPAddresses"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDPAddresses_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDPAddresses*       onvifDevice__GetDPAddresses,
    // response parameters:
    _onvifDevice__GetDPAddressesResponse* onvifDevice__GetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDPAddresses_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDPAddresses*       onvifDevice__GetDPAddresses,
    // response parameters:
    _onvifDevice__GetDPAddressesResponse* onvifDevice__GetDPAddressesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDPAddresses_ document
//gsoap onvifDevice service method-encoding:	GetDPAddresses_ literal
//gsoap onvifDevice service method-action:	GetDPAddresses_ http://www.onvif.org/ver10/device/wsdl/GetDPAddresses
//gsoap onvifDevice service method-output-action:	GetDPAddresses_ http://www.onvif.org/ver10/device/wsdl/Device/GetDPAddressesResponse
int __onvifDevice__GetDPAddresses_(
    _onvifDevice__GetDPAddresses*       onvifDevice__GetDPAddresses,	///< Request parameter
    _onvifDevice__GetDPAddressesResponse* onvifDevice__GetDPAddressesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetEndpointReference_                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetEndpointReference_" of service binding "DeviceBinding"

/**

Operation details:

A client can ask for the device service endpoint reference address property that
can be used
				to derive the password equivalent for remote user
operation. The device shall support the
				GetEndpointReference command returning the address
property of the device service
				endpoint reference.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetEndpointReference"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetEndpointReferenceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetEndpointReference_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetEndpointReference* onvifDevice__GetEndpointReference,
    // response parameters:
    _onvifDevice__GetEndpointReferenceResponse* onvifDevice__GetEndpointReferenceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetEndpointReference_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetEndpointReference* onvifDevice__GetEndpointReference,
    // response parameters:
    _onvifDevice__GetEndpointReferenceResponse* onvifDevice__GetEndpointReferenceResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetEndpointReference_ document
//gsoap onvifDevice service method-encoding:	GetEndpointReference_ literal
//gsoap onvifDevice service method-action:	GetEndpointReference_ http://www.onvif.org/ver10/device/wsdl/GetEndpointReference
//gsoap onvifDevice service method-output-action:	GetEndpointReference_ http://www.onvif.org/ver10/device/wsdl/Device/GetEndpointReferenceResponse
int __onvifDevice__GetEndpointReference_(
    _onvifDevice__GetEndpointReference* onvifDevice__GetEndpointReference,	///< Request parameter
    _onvifDevice__GetEndpointReferenceResponse* onvifDevice__GetEndpointReferenceResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetRemoteUser_                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetRemoteUser_" of service binding "DeviceBinding"

/**

Operation details:

This operation returns the configured remote user (if any). A device supporting
remote user
				handling shall support this operation. The user
is only valid for the WS-UserToken profile or
				as a HTTP / RTSP user.<br/>
				The algorithm to use for deriving the password is
described in section 5.12.2.1 of the core specification.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetRemoteUser"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetRemoteUser_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetRemoteUser*        onvifDevice__GetRemoteUser,
    // response parameters:
    _onvifDevice__GetRemoteUserResponse* onvifDevice__GetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetRemoteUser_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetRemoteUser*        onvifDevice__GetRemoteUser,
    // response parameters:
    _onvifDevice__GetRemoteUserResponse* onvifDevice__GetRemoteUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetRemoteUser_ document
//gsoap onvifDevice service method-encoding:	GetRemoteUser_ literal
//gsoap onvifDevice service method-action:	GetRemoteUser_ http://www.onvif.org/ver10/device/wsdl/GetRemoteUser
//gsoap onvifDevice service method-output-action:	GetRemoteUser_ http://www.onvif.org/ver10/device/wsdl/Device/GetRemoteUserResponse
int __onvifDevice__GetRemoteUser_(
    _onvifDevice__GetRemoteUser*        onvifDevice__GetRemoteUser,	///< Request parameter
    _onvifDevice__GetRemoteUserResponse* onvifDevice__GetRemoteUserResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetRemoteUser_                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetRemoteUser_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the remote user. A device supporting remote user handling shall
support this
				operation. The user is only valid for the WS-UserToken
profile or as a HTTP / RTSP user.<br/>
				The password that is set shall always be the original
(not derived) password.<br/>
				If UseDerivedPassword is set password derivation
shall be done by the device when connecting to a
				remote device.The algorithm to use for deriving
the password is described in section 5.12.2.1 of the core specification.<br/>
				To remove the remote user SetRemoteUser should be
called without the RemoteUser parameter.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRemoteUser"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetRemoteUser_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetRemoteUser*        onvifDevice__SetRemoteUser,
    // response parameters:
    _onvifDevice__SetRemoteUserResponse* onvifDevice__SetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetRemoteUser_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetRemoteUser*        onvifDevice__SetRemoteUser,
    // response parameters:
    _onvifDevice__SetRemoteUserResponse* onvifDevice__SetRemoteUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetRemoteUser_ document
//gsoap onvifDevice service method-encoding:	SetRemoteUser_ literal
//gsoap onvifDevice service method-action:	SetRemoteUser_ http://www.onvif.org/ver10/device/wsdl/SetRemoteUser
//gsoap onvifDevice service method-output-action:	SetRemoteUser_ http://www.onvif.org/ver10/device/wsdl/Device/SetRemoteUserResponse
int __onvifDevice__SetRemoteUser_(
    _onvifDevice__SetRemoteUser*        onvifDevice__SetRemoteUser,	///< Request parameter
    _onvifDevice__SetRemoteUserResponse* onvifDevice__SetRemoteUserResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetUsers_                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetUsers_" of service binding "DeviceBinding"

/**

Operation details:

This operation lists the registered users and corresponding credentials on a device.
The
				device shall support retrieval of registered device
users and their credentials for the user
				token through the GetUsers command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetUsers"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetUsers_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetUsers*             onvifDevice__GetUsers,
    // response parameters:
    _onvifDevice__GetUsersResponse*     onvifDevice__GetUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetUsers_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetUsers*             onvifDevice__GetUsers,
    // response parameters:
    _onvifDevice__GetUsersResponse*     onvifDevice__GetUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetUsers_ document
//gsoap onvifDevice service method-encoding:	GetUsers_ literal
//gsoap onvifDevice service method-action:	GetUsers_ http://www.onvif.org/ver10/device/wsdl/GetUsers
//gsoap onvifDevice service method-output-action:	GetUsers_ http://www.onvif.org/ver10/device/wsdl/Device/GetUsersResponse
int __onvifDevice__GetUsers_(
    _onvifDevice__GetUsers*             onvifDevice__GetUsers,	///< Request parameter
    _onvifDevice__GetUsersResponse*     onvifDevice__GetUsersResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__CreateUsers_                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__CreateUsers_" of service binding "DeviceBinding"

/**

Operation details:

This operation creates new device users and corresponding credentials on a device
for authentication purposes. 
				The device shall support creation of device users
and their credentials through the CreateUsers
				command. Either all users are created successfully
or a fault message shall be returned
				without creating any user.<br/>
				ONVIF compliant devices are recommended to support
password length of at least 28 bytes,
				as clients may follow the password derivation mechanism
which results in 'password
				equivalent' of length 28 bytes, as described in
section 3.1.2 of the ONVIF security white paper.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/CreateUsers"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/CreateUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__CreateUsers_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__CreateUsers*          onvifDevice__CreateUsers,
    // response parameters:
    _onvifDevice__CreateUsersResponse*  onvifDevice__CreateUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__CreateUsers_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__CreateUsers*          onvifDevice__CreateUsers,
    // response parameters:
    _onvifDevice__CreateUsersResponse*  onvifDevice__CreateUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	CreateUsers_ document
//gsoap onvifDevice service method-encoding:	CreateUsers_ literal
//gsoap onvifDevice service method-action:	CreateUsers_ http://www.onvif.org/ver10/device/wsdl/CreateUsers
//gsoap onvifDevice service method-output-action:	CreateUsers_ http://www.onvif.org/ver10/device/wsdl/Device/CreateUsersResponse
int __onvifDevice__CreateUsers_(
    _onvifDevice__CreateUsers*          onvifDevice__CreateUsers,	///< Request parameter
    _onvifDevice__CreateUsersResponse*  onvifDevice__CreateUsersResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__DeleteUsers_                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__DeleteUsers_" of service binding "DeviceBinding"

/**

Operation details:

This operation deletes users on a device. The device shall support deletion of device
users and their credentials 
				through the DeleteUsers command. A device may have
one or more fixed users
				that cannot be deleted to ensure access to the unit.
Either all users are deleted successfully or a
				fault message shall be returned and no users be
deleted.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/DeleteUsers"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/DeleteUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__DeleteUsers_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__DeleteUsers*          onvifDevice__DeleteUsers,
    // response parameters:
    _onvifDevice__DeleteUsersResponse*  onvifDevice__DeleteUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__DeleteUsers_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__DeleteUsers*          onvifDevice__DeleteUsers,
    // response parameters:
    _onvifDevice__DeleteUsersResponse*  onvifDevice__DeleteUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	DeleteUsers_ document
//gsoap onvifDevice service method-encoding:	DeleteUsers_ literal
//gsoap onvifDevice service method-action:	DeleteUsers_ http://www.onvif.org/ver10/device/wsdl/DeleteUsers
//gsoap onvifDevice service method-output-action:	DeleteUsers_ http://www.onvif.org/ver10/device/wsdl/Device/DeleteUsersResponse
int __onvifDevice__DeleteUsers_(
    _onvifDevice__DeleteUsers*          onvifDevice__DeleteUsers,	///< Request parameter
    _onvifDevice__DeleteUsersResponse*  onvifDevice__DeleteUsersResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetUser_                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetUser_" of service binding "DeviceBinding"

/**

Operation details:

This operation updates the settings for one or several users on a device for authentication
purposes.
				The device shall support update of device users
and their credentials through the SetUser command. 
				Either all change requests are processed successfully
or a fault message shall be returned and no change requests be processed.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetUser"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetUser_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetUser*              onvifDevice__SetUser,
    // response parameters:
    _onvifDevice__SetUserResponse*      onvifDevice__SetUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetUser_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetUser*              onvifDevice__SetUser,
    // response parameters:
    _onvifDevice__SetUserResponse*      onvifDevice__SetUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetUser_ document
//gsoap onvifDevice service method-encoding:	SetUser_ literal
//gsoap onvifDevice service method-action:	SetUser_ http://www.onvif.org/ver10/device/wsdl/SetUser
//gsoap onvifDevice service method-output-action:	SetUser_ http://www.onvif.org/ver10/device/wsdl/Device/SetUserResponse
int __onvifDevice__SetUser_(
    _onvifDevice__SetUser*              onvifDevice__SetUser,	///< Request parameter
    _onvifDevice__SetUserResponse*      onvifDevice__SetUserResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetWsdlUrl_                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetWsdlUrl_" of service binding "DeviceBinding"

/**

Operation details:

It is possible for an endpoint to request a URL that can be used to retrieve the
complete
				schema and WSDL definitions of a device. The command
gives in return a URL entry point
				where all the necessary product specific WSDL and
schema definitions can be retrieved. The
				device shall provide a URL for WSDL and schema download
through the GetWsdlUrl command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetWsdlUrl"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetWsdlUrlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetWsdlUrl_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetWsdlUrl*           onvifDevice__GetWsdlUrl,
    // response parameters:
    _onvifDevice__GetWsdlUrlResponse*   onvifDevice__GetWsdlUrlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetWsdlUrl_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetWsdlUrl*           onvifDevice__GetWsdlUrl,
    // response parameters:
    _onvifDevice__GetWsdlUrlResponse*   onvifDevice__GetWsdlUrlResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetWsdlUrl_ document
//gsoap onvifDevice service method-encoding:	GetWsdlUrl_ literal
//gsoap onvifDevice service method-action:	GetWsdlUrl_ http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl
//gsoap onvifDevice service method-output-action:	GetWsdlUrl_ http://www.onvif.org/ver10/device/wsdl/Device/GetWsdlUrlResponse
int __onvifDevice__GetWsdlUrl_(
    _onvifDevice__GetWsdlUrl*           onvifDevice__GetWsdlUrl,	///< Request parameter
    _onvifDevice__GetWsdlUrlResponse*   onvifDevice__GetWsdlUrlResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetCapabilities_                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetCapabilities_" of service binding "DeviceBinding"

/**

Operation details:

Any endpoint can ask for the capabilities of a device using the capability exchange
request
				response operation. The device shall indicate all
its ONVIF compliant capabilities through the
				GetCapabilities command.
				The capability list includes references to the addresses
(XAddr) of the service implementing
				the interface operations in the category. Apart
from the addresses, the
				capabilities only reflect optional functions.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCapabilities"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetCapabilities_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetCapabilities*      onvifDevice__GetCapabilities,
    // response parameters:
    _onvifDevice__GetCapabilitiesResponse* onvifDevice__GetCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetCapabilities_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetCapabilities*      onvifDevice__GetCapabilities,
    // response parameters:
    _onvifDevice__GetCapabilitiesResponse* onvifDevice__GetCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetCapabilities_ document
//gsoap onvifDevice service method-encoding:	GetCapabilities_ literal
//gsoap onvifDevice service method-action:	GetCapabilities_ http://www.onvif.org/ver10/device/wsdl/GetCapabilities
//gsoap onvifDevice service method-output-action:	GetCapabilities_ http://www.onvif.org/ver10/device/wsdl/Device/GetCapabilitiesResponse
int __onvifDevice__GetCapabilities_(
    _onvifDevice__GetCapabilities*      onvifDevice__GetCapabilities,	///< Request parameter
    _onvifDevice__GetCapabilitiesResponse* onvifDevice__GetCapabilitiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetDPAddresses_                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetDPAddresses_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the remote DP address or addresses on a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support configuration of the
				remote DP address(es) through the SetDPAddresses
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDPAddresses"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetDPAddresses_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetDPAddresses*       onvifDevice__SetDPAddresses,
    // response parameters:
    _onvifDevice__SetDPAddressesResponse* onvifDevice__SetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetDPAddresses_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetDPAddresses*       onvifDevice__SetDPAddresses,
    // response parameters:
    _onvifDevice__SetDPAddressesResponse* onvifDevice__SetDPAddressesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetDPAddresses_ document
//gsoap onvifDevice service method-encoding:	SetDPAddresses_ literal
//gsoap onvifDevice service method-action:	SetDPAddresses_ http://www.onvif.org/ver10/device/wsdl/SetDPAddresses
//gsoap onvifDevice service method-output-action:	SetDPAddresses_ http://www.onvif.org/ver10/device/wsdl/Device/SetDPAddressesResponse
int __onvifDevice__SetDPAddresses_(
    _onvifDevice__SetDPAddresses*       onvifDevice__SetDPAddresses,	///< Request parameter
    _onvifDevice__SetDPAddressesResponse* onvifDevice__SetDPAddressesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetHostname_                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetHostname_" of service binding "DeviceBinding"

/**

Operation details:

This operation is used by an endpoint to get the hostname from a device. The device
shall
				return its hostname configurations through the GetHostname
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetHostname"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetHostname_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetHostname*          onvifDevice__GetHostname,
    // response parameters:
    _onvifDevice__GetHostnameResponse*  onvifDevice__GetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetHostname_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetHostname*          onvifDevice__GetHostname,
    // response parameters:
    _onvifDevice__GetHostnameResponse*  onvifDevice__GetHostnameResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetHostname_ document
//gsoap onvifDevice service method-encoding:	GetHostname_ literal
//gsoap onvifDevice service method-action:	GetHostname_ http://www.onvif.org/ver10/device/wsdl/GetHostname
//gsoap onvifDevice service method-output-action:	GetHostname_ http://www.onvif.org/ver10/device/wsdl/Device/GetHostnameResponse
int __onvifDevice__GetHostname_(
    _onvifDevice__GetHostname*          onvifDevice__GetHostname,	///< Request parameter
    _onvifDevice__GetHostnameResponse*  onvifDevice__GetHostnameResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetHostname_                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetHostname_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the hostname on a device. It shall be possible to set the device
hostname
				configurations through the SetHostname command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.

			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetHostname"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetHostname_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetHostname*          onvifDevice__SetHostname,
    // response parameters:
    _onvifDevice__SetHostnameResponse*  onvifDevice__SetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetHostname_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetHostname*          onvifDevice__SetHostname,
    // response parameters:
    _onvifDevice__SetHostnameResponse*  onvifDevice__SetHostnameResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetHostname_ document
//gsoap onvifDevice service method-encoding:	SetHostname_ literal
//gsoap onvifDevice service method-action:	SetHostname_ http://www.onvif.org/ver10/device/wsdl/SetHostname
//gsoap onvifDevice service method-output-action:	SetHostname_ http://www.onvif.org/ver10/device/wsdl/Device/SetHostnameResponse
int __onvifDevice__SetHostname_(
    _onvifDevice__SetHostname*          onvifDevice__SetHostname,	///< Request parameter
    _onvifDevice__SetHostnameResponse*  onvifDevice__SetHostnameResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetHostnameFromDHCP_                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetHostnameFromDHCP_" of service binding "DeviceBinding"

/**

Operation details:

This operation controls whether the hostname is set manually or retrieved via DHCP.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetHostnameFromDHCP"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetHostnameFromDHCPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetHostnameFromDHCP_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetHostnameFromDHCP*  onvifDevice__SetHostnameFromDHCP,
    // response parameters:
    _onvifDevice__SetHostnameFromDHCPResponse* onvifDevice__SetHostnameFromDHCPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetHostnameFromDHCP_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetHostnameFromDHCP*  onvifDevice__SetHostnameFromDHCP,
    // response parameters:
    _onvifDevice__SetHostnameFromDHCPResponse* onvifDevice__SetHostnameFromDHCPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetHostnameFromDHCP_ document
//gsoap onvifDevice service method-encoding:	SetHostnameFromDHCP_ literal
//gsoap onvifDevice service method-action:	SetHostnameFromDHCP_ http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP
//gsoap onvifDevice service method-output-action:	SetHostnameFromDHCP_ http://www.onvif.org/ver10/device/wsdl/Device/SetHostnameFromDHCPResponse
int __onvifDevice__SetHostnameFromDHCP_(
    _onvifDevice__SetHostnameFromDHCP*  onvifDevice__SetHostnameFromDHCP,	///< Request parameter
    _onvifDevice__SetHostnameFromDHCPResponse* onvifDevice__SetHostnameFromDHCPResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDNS_                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDNS_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the DNS settings from a device. The device shall return its
DNS
				configurations through the GetDNS command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDNS"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDNS_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDNS*               onvifDevice__GetDNS,
    // response parameters:
    _onvifDevice__GetDNSResponse*       onvifDevice__GetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDNS_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDNS*               onvifDevice__GetDNS,
    // response parameters:
    _onvifDevice__GetDNSResponse*       onvifDevice__GetDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDNS_ document
//gsoap onvifDevice service method-encoding:	GetDNS_ literal
//gsoap onvifDevice service method-action:	GetDNS_ http://www.onvif.org/ver10/device/wsdl/GetDNS
//gsoap onvifDevice service method-output-action:	GetDNS_ http://www.onvif.org/ver10/device/wsdl/Device/GetDNSResponse
int __onvifDevice__GetDNS_(
    _onvifDevice__GetDNS*               onvifDevice__GetDNS,	///< Request parameter
    _onvifDevice__GetDNSResponse*       onvifDevice__GetDNSResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetDNS_                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetDNS_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the DNS settings on a device. It shall be possible to set the
device DNS
				configurations through the SetDNS command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDNS"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetDNS_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetDNS*               onvifDevice__SetDNS,
    // response parameters:
    _onvifDevice__SetDNSResponse*       onvifDevice__SetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetDNS_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetDNS*               onvifDevice__SetDNS,
    // response parameters:
    _onvifDevice__SetDNSResponse*       onvifDevice__SetDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetDNS_ document
//gsoap onvifDevice service method-encoding:	SetDNS_ literal
//gsoap onvifDevice service method-action:	SetDNS_ http://www.onvif.org/ver10/device/wsdl/SetDNS
//gsoap onvifDevice service method-output-action:	SetDNS_ http://www.onvif.org/ver10/device/wsdl/Device/SetDNSResponse
int __onvifDevice__SetDNS_(
    _onvifDevice__SetDNS*               onvifDevice__SetDNS,	///< Request parameter
    _onvifDevice__SetDNSResponse*       onvifDevice__SetDNSResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetNTP_                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetNTP_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the NTP settings from a device. If the device supports NTP,
it shall be
				possible to get the NTP server settings through
the GetNTP command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNTP"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetNTP_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetNTP*               onvifDevice__GetNTP,
    // response parameters:
    _onvifDevice__GetNTPResponse*       onvifDevice__GetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetNTP_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetNTP*               onvifDevice__GetNTP,
    // response parameters:
    _onvifDevice__GetNTPResponse*       onvifDevice__GetNTPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetNTP_ document
//gsoap onvifDevice service method-encoding:	GetNTP_ literal
//gsoap onvifDevice service method-action:	GetNTP_ http://www.onvif.org/ver10/device/wsdl/GetNTP
//gsoap onvifDevice service method-output-action:	GetNTP_ http://www.onvif.org/ver10/device/wsdl/Device/GetNTPResponse
int __onvifDevice__GetNTP_(
    _onvifDevice__GetNTP*               onvifDevice__GetNTP,	///< Request parameter
    _onvifDevice__GetNTPResponse*       onvifDevice__GetNTPResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetNTP_                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetNTP_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the NTP settings on a device. If the device supports NTP, it
shall be
				possible to set the NTP server settings through
the SetNTP command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.
<br/>
				Changes to the NTP server list will not affect the
clock mode DateTimeType. Use SetSystemDateAndTime to activate NTP operation.
			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNTP"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetNTP_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetNTP*               onvifDevice__SetNTP,
    // response parameters:
    _onvifDevice__SetNTPResponse*       onvifDevice__SetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetNTP_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetNTP*               onvifDevice__SetNTP,
    // response parameters:
    _onvifDevice__SetNTPResponse*       onvifDevice__SetNTPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetNTP_ document
//gsoap onvifDevice service method-encoding:	SetNTP_ literal
//gsoap onvifDevice service method-action:	SetNTP_ http://www.onvif.org/ver10/device/wsdl/SetNTP
//gsoap onvifDevice service method-output-action:	SetNTP_ http://www.onvif.org/ver10/device/wsdl/Device/SetNTPResponse
int __onvifDevice__SetNTP_(
    _onvifDevice__SetNTP*               onvifDevice__SetNTP,	///< Request parameter
    _onvifDevice__SetNTPResponse*       onvifDevice__SetNTPResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDynamicDNS_                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDynamicDNS_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the dynamic DNS settings from a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to get the type, name
				and TTL through the GetDynamicDNS command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDynamicDNS"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDynamicDNS_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDynamicDNS*        onvifDevice__GetDynamicDNS,
    // response parameters:
    _onvifDevice__GetDynamicDNSResponse* onvifDevice__GetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDynamicDNS_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDynamicDNS*        onvifDevice__GetDynamicDNS,
    // response parameters:
    _onvifDevice__GetDynamicDNSResponse* onvifDevice__GetDynamicDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDynamicDNS_ document
//gsoap onvifDevice service method-encoding:	GetDynamicDNS_ literal
//gsoap onvifDevice service method-action:	GetDynamicDNS_ http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS
//gsoap onvifDevice service method-output-action:	GetDynamicDNS_ http://www.onvif.org/ver10/device/wsdl/Device/GetDynamicDNSResponse
int __onvifDevice__GetDynamicDNS_(
    _onvifDevice__GetDynamicDNS*        onvifDevice__GetDynamicDNS,	///< Request parameter
    _onvifDevice__GetDynamicDNSResponse* onvifDevice__GetDynamicDNSResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetDynamicDNS_                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetDynamicDNS_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the dynamic DNS settings on a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to set the type, name
				and TTL through the SetDynamicDNS command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDynamicDNS"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetDynamicDNS_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetDynamicDNS*        onvifDevice__SetDynamicDNS,
    // response parameters:
    _onvifDevice__SetDynamicDNSResponse* onvifDevice__SetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetDynamicDNS_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetDynamicDNS*        onvifDevice__SetDynamicDNS,
    // response parameters:
    _onvifDevice__SetDynamicDNSResponse* onvifDevice__SetDynamicDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetDynamicDNS_ document
//gsoap onvifDevice service method-encoding:	SetDynamicDNS_ literal
//gsoap onvifDevice service method-action:	SetDynamicDNS_ http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS
//gsoap onvifDevice service method-output-action:	SetDynamicDNS_ http://www.onvif.org/ver10/device/wsdl/Device/SetDynamicDNSResponse
int __onvifDevice__SetDynamicDNS_(
    _onvifDevice__SetDynamicDNS*        onvifDevice__SetDynamicDNS,	///< Request parameter
    _onvifDevice__SetDynamicDNSResponse* onvifDevice__SetDynamicDNSResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetNetworkInterfaces_                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetNetworkInterfaces_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the network interface configuration from a device. The device
shall
				support return of network interface configuration
settings as defined by the NetworkInterface
				type through the GetNetworkInterfaces command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkInterfaces"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetNetworkInterfaces_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetNetworkInterfaces* onvifDevice__GetNetworkInterfaces,
    // response parameters:
    _onvifDevice__GetNetworkInterfacesResponse* onvifDevice__GetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetNetworkInterfaces_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetNetworkInterfaces* onvifDevice__GetNetworkInterfaces,
    // response parameters:
    _onvifDevice__GetNetworkInterfacesResponse* onvifDevice__GetNetworkInterfacesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetNetworkInterfaces_ document
//gsoap onvifDevice service method-encoding:	GetNetworkInterfaces_ literal
//gsoap onvifDevice service method-action:	GetNetworkInterfaces_ http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces
//gsoap onvifDevice service method-output-action:	GetNetworkInterfaces_ http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkInterfacesResponse
int __onvifDevice__GetNetworkInterfaces_(
    _onvifDevice__GetNetworkInterfaces* onvifDevice__GetNetworkInterfaces,	///< Request parameter
    _onvifDevice__GetNetworkInterfacesResponse* onvifDevice__GetNetworkInterfacesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetNetworkInterfaces_                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetNetworkInterfaces_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the network interface configuration on a device. The device
shall support
				network configuration of supported network interfaces
through the SetNetworkInterfaces
				command.<br/>
				For interoperability with a client unaware of the
IEEE 802.11 extension a device shall retain
				its IEEE 802.11 configuration if the IEEE 802.11
configuration element isnt present in the
				request.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkInterfaces"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetNetworkInterfaces_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetNetworkInterfaces* onvifDevice__SetNetworkInterfaces,
    // response parameters:
    _onvifDevice__SetNetworkInterfacesResponse* onvifDevice__SetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetNetworkInterfaces_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetNetworkInterfaces* onvifDevice__SetNetworkInterfaces,
    // response parameters:
    _onvifDevice__SetNetworkInterfacesResponse* onvifDevice__SetNetworkInterfacesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetNetworkInterfaces_ document
//gsoap onvifDevice service method-encoding:	SetNetworkInterfaces_ literal
//gsoap onvifDevice service method-action:	SetNetworkInterfaces_ http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces
//gsoap onvifDevice service method-output-action:	SetNetworkInterfaces_ http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkInterfacesResponse
int __onvifDevice__SetNetworkInterfaces_(
    _onvifDevice__SetNetworkInterfaces* onvifDevice__SetNetworkInterfaces,	///< Request parameter
    _onvifDevice__SetNetworkInterfacesResponse* onvifDevice__SetNetworkInterfacesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetNetworkProtocols_                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetNetworkProtocols_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets defined network protocols from a device. The device shall support
the
				GetNetworkProtocols command returning configured
network protocols.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkProtocols"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetNetworkProtocols_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetNetworkProtocols*  onvifDevice__GetNetworkProtocols,
    // response parameters:
    _onvifDevice__GetNetworkProtocolsResponse* onvifDevice__GetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetNetworkProtocols_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetNetworkProtocols*  onvifDevice__GetNetworkProtocols,
    // response parameters:
    _onvifDevice__GetNetworkProtocolsResponse* onvifDevice__GetNetworkProtocolsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetNetworkProtocols_ document
//gsoap onvifDevice service method-encoding:	GetNetworkProtocols_ literal
//gsoap onvifDevice service method-action:	GetNetworkProtocols_ http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols
//gsoap onvifDevice service method-output-action:	GetNetworkProtocols_ http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkProtocolsResponse
int __onvifDevice__GetNetworkProtocols_(
    _onvifDevice__GetNetworkProtocols*  onvifDevice__GetNetworkProtocols,	///< Request parameter
    _onvifDevice__GetNetworkProtocolsResponse* onvifDevice__GetNetworkProtocolsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetNetworkProtocols_                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetNetworkProtocols_" of service binding "DeviceBinding"

/**

Operation details:

This operation configures defined network protocols on a device. The device shall
support
				configuration of defined network protocols through
the SetNetworkProtocols command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkProtocols"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetNetworkProtocols_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetNetworkProtocols*  onvifDevice__SetNetworkProtocols,
    // response parameters:
    _onvifDevice__SetNetworkProtocolsResponse* onvifDevice__SetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetNetworkProtocols_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetNetworkProtocols*  onvifDevice__SetNetworkProtocols,
    // response parameters:
    _onvifDevice__SetNetworkProtocolsResponse* onvifDevice__SetNetworkProtocolsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetNetworkProtocols_ document
//gsoap onvifDevice service method-encoding:	SetNetworkProtocols_ literal
//gsoap onvifDevice service method-action:	SetNetworkProtocols_ http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols
//gsoap onvifDevice service method-output-action:	SetNetworkProtocols_ http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkProtocolsResponse
int __onvifDevice__SetNetworkProtocols_(
    _onvifDevice__SetNetworkProtocols*  onvifDevice__SetNetworkProtocols,	///< Request parameter
    _onvifDevice__SetNetworkProtocolsResponse* onvifDevice__SetNetworkProtocolsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetNetworkDefaultGateway_                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetNetworkDefaultGateway_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the default gateway settings from a device. The device shall
support the
				GetNetworkDefaultGateway command returning configured
default gateway address(es).

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkDefaultGateway"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetNetworkDefaultGateway_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetNetworkDefaultGateway* onvifDevice__GetNetworkDefaultGateway,
    // response parameters:
    _onvifDevice__GetNetworkDefaultGatewayResponse* onvifDevice__GetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetNetworkDefaultGateway_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetNetworkDefaultGateway* onvifDevice__GetNetworkDefaultGateway,
    // response parameters:
    _onvifDevice__GetNetworkDefaultGatewayResponse* onvifDevice__GetNetworkDefaultGatewayResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetNetworkDefaultGateway_ document
//gsoap onvifDevice service method-encoding:	GetNetworkDefaultGateway_ literal
//gsoap onvifDevice service method-action:	GetNetworkDefaultGateway_ http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway
//gsoap onvifDevice service method-output-action:	GetNetworkDefaultGateway_ http://www.onvif.org/ver10/device/wsdl/Device/GetNetworkDefaultGatewayResponse
int __onvifDevice__GetNetworkDefaultGateway_(
    _onvifDevice__GetNetworkDefaultGateway* onvifDevice__GetNetworkDefaultGateway,	///< Request parameter
    _onvifDevice__GetNetworkDefaultGatewayResponse* onvifDevice__GetNetworkDefaultGatewayResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetNetworkDefaultGateway_                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetNetworkDefaultGateway_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the default gateway settings on a device. The device shall support
				configuration of default gateway through the SetNetworkDefaultGateway
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkDefaultGateway"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetNetworkDefaultGateway_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetNetworkDefaultGateway* onvifDevice__SetNetworkDefaultGateway,
    // response parameters:
    _onvifDevice__SetNetworkDefaultGatewayResponse* onvifDevice__SetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetNetworkDefaultGateway_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetNetworkDefaultGateway* onvifDevice__SetNetworkDefaultGateway,
    // response parameters:
    _onvifDevice__SetNetworkDefaultGatewayResponse* onvifDevice__SetNetworkDefaultGatewayResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetNetworkDefaultGateway_ document
//gsoap onvifDevice service method-encoding:	SetNetworkDefaultGateway_ literal
//gsoap onvifDevice service method-action:	SetNetworkDefaultGateway_ http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway
//gsoap onvifDevice service method-output-action:	SetNetworkDefaultGateway_ http://www.onvif.org/ver10/device/wsdl/Device/SetNetworkDefaultGatewayResponse
int __onvifDevice__SetNetworkDefaultGateway_(
    _onvifDevice__SetNetworkDefaultGateway* onvifDevice__SetNetworkDefaultGateway,	///< Request parameter
    _onvifDevice__SetNetworkDefaultGatewayResponse* onvifDevice__SetNetworkDefaultGatewayResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetZeroConfiguration_                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetZeroConfiguration_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the zero-configuration from a device. If the device supports
dynamic IP
				configuration according to [RFC3927], it shall support
the return of IPv4 zero configuration
				address and status through the GetZeroConfiguration
command.<br/>
			Use GetCapalities to check if zero-zero-configuration is
supported.<br/>
			Devices supporting zero configuration on more than one interface
shall use the extension to list the additional interface settings.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetZeroConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetZeroConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetZeroConfiguration* onvifDevice__GetZeroConfiguration,
    // response parameters:
    _onvifDevice__GetZeroConfigurationResponse* onvifDevice__GetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetZeroConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetZeroConfiguration* onvifDevice__GetZeroConfiguration,
    // response parameters:
    _onvifDevice__GetZeroConfigurationResponse* onvifDevice__GetZeroConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetZeroConfiguration_ document
//gsoap onvifDevice service method-encoding:	GetZeroConfiguration_ literal
//gsoap onvifDevice service method-action:	GetZeroConfiguration_ http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration
//gsoap onvifDevice service method-output-action:	GetZeroConfiguration_ http://www.onvif.org/ver10/device/wsdl/Device/GetZeroConfigurationResponse
int __onvifDevice__GetZeroConfiguration_(
    _onvifDevice__GetZeroConfiguration* onvifDevice__GetZeroConfiguration,	///< Request parameter
    _onvifDevice__GetZeroConfigurationResponse* onvifDevice__GetZeroConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetZeroConfiguration_                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetZeroConfiguration_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the zero-configuration. Use GetCapalities to get if zero-zero-configuration
is supported or not.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetZeroConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetZeroConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetZeroConfiguration* onvifDevice__SetZeroConfiguration,
    // response parameters:
    _onvifDevice__SetZeroConfigurationResponse* onvifDevice__SetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetZeroConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetZeroConfiguration* onvifDevice__SetZeroConfiguration,
    // response parameters:
    _onvifDevice__SetZeroConfigurationResponse* onvifDevice__SetZeroConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetZeroConfiguration_ document
//gsoap onvifDevice service method-encoding:	SetZeroConfiguration_ literal
//gsoap onvifDevice service method-action:	SetZeroConfiguration_ http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration
//gsoap onvifDevice service method-output-action:	SetZeroConfiguration_ http://www.onvif.org/ver10/device/wsdl/Device/SetZeroConfigurationResponse
int __onvifDevice__SetZeroConfiguration_(
    _onvifDevice__SetZeroConfiguration* onvifDevice__SetZeroConfiguration,	///< Request parameter
    _onvifDevice__SetZeroConfigurationResponse* onvifDevice__SetZeroConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetIPAddressFilter_                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetIPAddressFilter_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets the IP address filter settings from a device. If the device
supports device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support the GetIPAddressFilter command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetIPAddressFilter"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetIPAddressFilter_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetIPAddressFilter*   onvifDevice__GetIPAddressFilter,
    // response parameters:
    _onvifDevice__GetIPAddressFilterResponse* onvifDevice__GetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetIPAddressFilter_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetIPAddressFilter*   onvifDevice__GetIPAddressFilter,
    // response parameters:
    _onvifDevice__GetIPAddressFilterResponse* onvifDevice__GetIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetIPAddressFilter_ document
//gsoap onvifDevice service method-encoding:	GetIPAddressFilter_ literal
//gsoap onvifDevice service method-action:	GetIPAddressFilter_ http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter
//gsoap onvifDevice service method-output-action:	GetIPAddressFilter_ http://www.onvif.org/ver10/device/wsdl/Device/GetIPAddressFilterResponse
int __onvifDevice__GetIPAddressFilter_(
    _onvifDevice__GetIPAddressFilter*   onvifDevice__GetIPAddressFilter,	///< Request parameter
    _onvifDevice__GetIPAddressFilterResponse* onvifDevice__GetIPAddressFilterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetIPAddressFilter_                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetIPAddressFilter_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the IP address filter settings on a device. If the device supports
device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support configuration of IP filtering
rules through the SetIPAddressFilter
				command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetIPAddressFilter"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetIPAddressFilter_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetIPAddressFilter*   onvifDevice__SetIPAddressFilter,
    // response parameters:
    _onvifDevice__SetIPAddressFilterResponse* onvifDevice__SetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetIPAddressFilter_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetIPAddressFilter*   onvifDevice__SetIPAddressFilter,
    // response parameters:
    _onvifDevice__SetIPAddressFilterResponse* onvifDevice__SetIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetIPAddressFilter_ document
//gsoap onvifDevice service method-encoding:	SetIPAddressFilter_ literal
//gsoap onvifDevice service method-action:	SetIPAddressFilter_ http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter
//gsoap onvifDevice service method-output-action:	SetIPAddressFilter_ http://www.onvif.org/ver10/device/wsdl/Device/SetIPAddressFilterResponse
int __onvifDevice__SetIPAddressFilter_(
    _onvifDevice__SetIPAddressFilter*   onvifDevice__SetIPAddressFilter,	///< Request parameter
    _onvifDevice__SetIPAddressFilterResponse* onvifDevice__SetIPAddressFilterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__AddIPAddressFilter_                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__AddIPAddressFilter_" of service binding "DeviceBinding"

/**

Operation details:

This operation adds an IP filter address to a device. If the device supports device
access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support adding of IP filtering addresses through
the AddIPAddressFilter command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/AddIPAddressFilter"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/AddIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__AddIPAddressFilter_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__AddIPAddressFilter*   onvifDevice__AddIPAddressFilter,
    // response parameters:
    _onvifDevice__AddIPAddressFilterResponse* onvifDevice__AddIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__AddIPAddressFilter_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__AddIPAddressFilter*   onvifDevice__AddIPAddressFilter,
    // response parameters:
    _onvifDevice__AddIPAddressFilterResponse* onvifDevice__AddIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	AddIPAddressFilter_ document
//gsoap onvifDevice service method-encoding:	AddIPAddressFilter_ literal
//gsoap onvifDevice service method-action:	AddIPAddressFilter_ http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter
//gsoap onvifDevice service method-output-action:	AddIPAddressFilter_ http://www.onvif.org/ver10/device/wsdl/Device/AddIPAddressFilterResponse
int __onvifDevice__AddIPAddressFilter_(
    _onvifDevice__AddIPAddressFilter*   onvifDevice__AddIPAddressFilter,	///< Request parameter
    _onvifDevice__AddIPAddressFilterResponse* onvifDevice__AddIPAddressFilterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__RemoveIPAddressFilter_                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__RemoveIPAddressFilter_" of service binding "DeviceBinding"

/**

Operation details:

This operation deletes an IP filter address from a device. If the device supports
device access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support deletion of IP filtering addresses
through the RemoveIPAddressFilter command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/RemoveIPAddressFilter"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/RemoveIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__RemoveIPAddressFilter_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__RemoveIPAddressFilter* onvifDevice__RemoveIPAddressFilter,
    // response parameters:
    _onvifDevice__RemoveIPAddressFilterResponse* onvifDevice__RemoveIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__RemoveIPAddressFilter_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__RemoveIPAddressFilter* onvifDevice__RemoveIPAddressFilter,
    // response parameters:
    _onvifDevice__RemoveIPAddressFilterResponse* onvifDevice__RemoveIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	RemoveIPAddressFilter_ document
//gsoap onvifDevice service method-encoding:	RemoveIPAddressFilter_ literal
//gsoap onvifDevice service method-action:	RemoveIPAddressFilter_ http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter
//gsoap onvifDevice service method-output-action:	RemoveIPAddressFilter_ http://www.onvif.org/ver10/device/wsdl/Device/RemoveIPAddressFilterResponse
int __onvifDevice__RemoveIPAddressFilter_(
    _onvifDevice__RemoveIPAddressFilter* onvifDevice__RemoveIPAddressFilter,	///< Request parameter
    _onvifDevice__RemoveIPAddressFilterResponse* onvifDevice__RemoveIPAddressFilterResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetAccessPolicy_                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetAccessPolicy_" of service binding "DeviceBinding"

/**

Operation details:

Access to different services and sub-sets of services should be subject to access
control. The
				WS-Security framework gives the prerequisite for
end-point authentication. Authorization
				decisions can then be taken using an access security
policy. This standard does not mandate
				any particular policy description format or security
policy but this is up to the device
				manufacturer or system provider to choose policy
and policy description format of choice.
				However, an access policy (in arbitrary format)
can be requested using this command. If the
				device supports access policy settings based on
WS-Security authentication, then the device
				shall support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetAccessPolicy"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetAccessPolicy_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetAccessPolicy*      onvifDevice__GetAccessPolicy,
    // response parameters:
    _onvifDevice__GetAccessPolicyResponse* onvifDevice__GetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetAccessPolicy_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetAccessPolicy*      onvifDevice__GetAccessPolicy,
    // response parameters:
    _onvifDevice__GetAccessPolicyResponse* onvifDevice__GetAccessPolicyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetAccessPolicy_ document
//gsoap onvifDevice service method-encoding:	GetAccessPolicy_ literal
//gsoap onvifDevice service method-action:	GetAccessPolicy_ http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy
//gsoap onvifDevice service method-output-action:	GetAccessPolicy_ http://www.onvif.org/ver10/device/wsdl/Device/GetAccessPolicyResponse
int __onvifDevice__GetAccessPolicy_(
    _onvifDevice__GetAccessPolicy*      onvifDevice__GetAccessPolicy,	///< Request parameter
    _onvifDevice__GetAccessPolicyResponse* onvifDevice__GetAccessPolicyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetAccessPolicy_                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetAccessPolicy_" of service binding "DeviceBinding"

/**

Operation details:

This command sets the device access security policy (for more details on the access
security
				policy see the Get command). If the device supports
access policy settings
				based on WS-Security authentication, then the device
shall support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetAccessPolicy"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetAccessPolicy_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetAccessPolicy*      onvifDevice__SetAccessPolicy,
    // response parameters:
    _onvifDevice__SetAccessPolicyResponse* onvifDevice__SetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetAccessPolicy_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetAccessPolicy*      onvifDevice__SetAccessPolicy,
    // response parameters:
    _onvifDevice__SetAccessPolicyResponse* onvifDevice__SetAccessPolicyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetAccessPolicy_ document
//gsoap onvifDevice service method-encoding:	SetAccessPolicy_ literal
//gsoap onvifDevice service method-action:	SetAccessPolicy_ http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy
//gsoap onvifDevice service method-output-action:	SetAccessPolicy_ http://www.onvif.org/ver10/device/wsdl/Device/SetAccessPolicyResponse
int __onvifDevice__SetAccessPolicy_(
    _onvifDevice__SetAccessPolicy*      onvifDevice__SetAccessPolicy,	///< Request parameter
    _onvifDevice__SetAccessPolicyResponse* onvifDevice__SetAccessPolicyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__CreateCertificate_                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__CreateCertificate_" of service binding "DeviceBinding"

/**

Operation details:

This operation generates a private/public key pair and also can create a self-signed
device
				certificate as a result of key pair generation.
The certificate is created using a suitable
				onboard key pair generation mechanism.<br/>
				If a device supports onboard key pair generation,
the device that supports TLS shall support
				this certificate creation command. And also, if
a device supports onboard key pair generation,
				the device that support IEEE 802.1X shall support
this command for the purpose of key pair
				generation. Certificates and key pairs are identified
using certificate IDs. These IDs are either
				chosen by the certificate generation requester or
by the device (in case that no ID value is
				given).

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/CreateCertificate"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/CreateCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__CreateCertificate_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__CreateCertificate*    onvifDevice__CreateCertificate,
    // response parameters:
    _onvifDevice__CreateCertificateResponse* onvifDevice__CreateCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__CreateCertificate_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__CreateCertificate*    onvifDevice__CreateCertificate,
    // response parameters:
    _onvifDevice__CreateCertificateResponse* onvifDevice__CreateCertificateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	CreateCertificate_ document
//gsoap onvifDevice service method-encoding:	CreateCertificate_ literal
//gsoap onvifDevice service method-action:	CreateCertificate_ http://www.onvif.org/ver10/device/wsdl/CreateCertificate
//gsoap onvifDevice service method-output-action:	CreateCertificate_ http://www.onvif.org/ver10/device/wsdl/Device/CreateCertificateResponse
int __onvifDevice__CreateCertificate_(
    _onvifDevice__CreateCertificate*    onvifDevice__CreateCertificate,	///< Request parameter
    _onvifDevice__CreateCertificateResponse* onvifDevice__CreateCertificateResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetCertificates_                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetCertificates_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets all device server certificates (including self-signed) for the
purpose of TLS
				authentication and all device client certificates
for the purpose of IEEE 802.1X authentication.
				This command lists only the TLS server certificates
and IEEE 802.1X client certificates for the
				device (neither trusted CA certificates nor trusted
root certificates). The certificates are
				returned as binary data. A device that supports
TLS shall support this command and the
				certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCertificates"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetCertificates_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetCertificates*      onvifDevice__GetCertificates,
    // response parameters:
    _onvifDevice__GetCertificatesResponse* onvifDevice__GetCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetCertificates_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetCertificates*      onvifDevice__GetCertificates,
    // response parameters:
    _onvifDevice__GetCertificatesResponse* onvifDevice__GetCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetCertificates_ document
//gsoap onvifDevice service method-encoding:	GetCertificates_ literal
//gsoap onvifDevice service method-action:	GetCertificates_ http://www.onvif.org/ver10/device/wsdl/GetCertificates
//gsoap onvifDevice service method-output-action:	GetCertificates_ http://www.onvif.org/ver10/device/wsdl/Device/GetCertificatesResponse
int __onvifDevice__GetCertificates_(
    _onvifDevice__GetCertificates*      onvifDevice__GetCertificates,	///< Request parameter
    _onvifDevice__GetCertificatesResponse* onvifDevice__GetCertificatesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetCertificatesStatus_                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetCertificatesStatus_" of service binding "DeviceBinding"

/**

Operation details:

This operation is specific to TLS functionality. This operation gets the status
				(enabled/disabled) of the device TLS server certificates.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCertificatesStatus"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetCertificatesStatus_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetCertificatesStatus* onvifDevice__GetCertificatesStatus,
    // response parameters:
    _onvifDevice__GetCertificatesStatusResponse* onvifDevice__GetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetCertificatesStatus_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetCertificatesStatus* onvifDevice__GetCertificatesStatus,
    // response parameters:
    _onvifDevice__GetCertificatesStatusResponse* onvifDevice__GetCertificatesStatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetCertificatesStatus_ document
//gsoap onvifDevice service method-encoding:	GetCertificatesStatus_ literal
//gsoap onvifDevice service method-action:	GetCertificatesStatus_ http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus
//gsoap onvifDevice service method-output-action:	GetCertificatesStatus_ http://www.onvif.org/ver10/device/wsdl/Device/GetCertificatesStatusResponse
int __onvifDevice__GetCertificatesStatus_(
    _onvifDevice__GetCertificatesStatus* onvifDevice__GetCertificatesStatus,	///< Request parameter
    _onvifDevice__GetCertificatesStatusResponse* onvifDevice__GetCertificatesStatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetCertificatesStatus_                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetCertificatesStatus_" of service binding "DeviceBinding"

/**

Operation details:

This operation is specific to TLS functionality. This operation sets the status
(enable/disable)
				of the device TLS server certificates. A device
that supports TLS shall support this command.
				Typically only one device server certificate is
allowed to be enabled at a time.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetCertificatesStatus"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetCertificatesStatus_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetCertificatesStatus* onvifDevice__SetCertificatesStatus,
    // response parameters:
    _onvifDevice__SetCertificatesStatusResponse* onvifDevice__SetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetCertificatesStatus_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetCertificatesStatus* onvifDevice__SetCertificatesStatus,
    // response parameters:
    _onvifDevice__SetCertificatesStatusResponse* onvifDevice__SetCertificatesStatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetCertificatesStatus_ document
//gsoap onvifDevice service method-encoding:	SetCertificatesStatus_ literal
//gsoap onvifDevice service method-action:	SetCertificatesStatus_ http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus
//gsoap onvifDevice service method-output-action:	SetCertificatesStatus_ http://www.onvif.org/ver10/device/wsdl/Device/SetCertificatesStatusResponse
int __onvifDevice__SetCertificatesStatus_(
    _onvifDevice__SetCertificatesStatus* onvifDevice__SetCertificatesStatus,	///< Request parameter
    _onvifDevice__SetCertificatesStatusResponse* onvifDevice__SetCertificatesStatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__DeleteCertificates_                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__DeleteCertificates_" of service binding "DeviceBinding"

/**

Operation details:

This operation deletes a certificate or multiple certificates. The device MAY also
delete a
				private/public key pair which is coupled with the
certificate to be deleted. The device that
				support either TLS or IEEE 802.1X shall support
the deletion of a certificate or multiple
				certificates through this command. Either all certificates
are deleted successfully or a fault
				message shall be returned without deleting any certificate.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/DeleteCertificates"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/DeleteCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__DeleteCertificates_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__DeleteCertificates*   onvifDevice__DeleteCertificates,
    // response parameters:
    _onvifDevice__DeleteCertificatesResponse* onvifDevice__DeleteCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__DeleteCertificates_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__DeleteCertificates*   onvifDevice__DeleteCertificates,
    // response parameters:
    _onvifDevice__DeleteCertificatesResponse* onvifDevice__DeleteCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	DeleteCertificates_ document
//gsoap onvifDevice service method-encoding:	DeleteCertificates_ literal
//gsoap onvifDevice service method-action:	DeleteCertificates_ http://www.onvif.org/ver10/device/wsdl/DeleteCertificates
//gsoap onvifDevice service method-output-action:	DeleteCertificates_ http://www.onvif.org/ver10/device/wsdl/Device/DeleteCertificatesResponse
int __onvifDevice__DeleteCertificates_(
    _onvifDevice__DeleteCertificates*   onvifDevice__DeleteCertificates,	///< Request parameter
    _onvifDevice__DeleteCertificatesResponse* onvifDevice__DeleteCertificatesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetPkcs10Request_                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetPkcs10Request_" of service binding "DeviceBinding"

/**

Operation details:

This operation requests a PKCS #10 certificate signature request from the device.
The
				returned information field shall be either formatted
exactly as specified in [PKCS#10] or PEM
				encoded [PKCS#10] format. In order for this command
to work, the device must already have
				a private/public key pair. This key pair should
be referred by CertificateID as specified in the
				input parameter description. This CertificateID
refers to the key pair generated using
				CreateCertificate command.<br/>
				A device that support onboard key pair generation
that supports either TLS or IEEE 802.1X
				using client certificate shall support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetPkcs10Request"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetPkcs10RequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetPkcs10Request_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetPkcs10Request*     onvifDevice__GetPkcs10Request,
    // response parameters:
    _onvifDevice__GetPkcs10RequestResponse* onvifDevice__GetPkcs10RequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetPkcs10Request_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetPkcs10Request*     onvifDevice__GetPkcs10Request,
    // response parameters:
    _onvifDevice__GetPkcs10RequestResponse* onvifDevice__GetPkcs10RequestResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetPkcs10Request_ document
//gsoap onvifDevice service method-encoding:	GetPkcs10Request_ literal
//gsoap onvifDevice service method-action:	GetPkcs10Request_ http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request
//gsoap onvifDevice service method-output-action:	GetPkcs10Request_ http://www.onvif.org/ver10/device/wsdl/Device/GetPkcs10RequestResponse
int __onvifDevice__GetPkcs10Request_(
    _onvifDevice__GetPkcs10Request*     onvifDevice__GetPkcs10Request,	///< Request parameter
    _onvifDevice__GetPkcs10RequestResponse* onvifDevice__GetPkcs10RequestResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__LoadCertificates_                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__LoadCertificates_" of service binding "DeviceBinding"

/**

Operation details:

TLS server certificate(s) or IEEE 802.1X client certificate(s) created using the
PKCS#10
				certificate request command can be loaded into the
device using this command (see Section
				8.4.13). The certificate ID in the request shall
be present. The device may sort the received
				certificate(s) based on the public key and subject
information in the certificate(s).
				The certificate ID in the request will be the ID
value the client wish to have. The device is
				supposed to scan the generated key pairs present
in the device to identify which is the
				correspondent key pair with the loaded certificate
and then make the link between the
				certificate and the key pair.<br/>
				A device that supports onboard key pair generation
that support either TLS or IEEE 802.1X
				shall support this command.<br/>
				The certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.<br/>
				This command is applicable to any device type, although
the parameter name is called for
				historical reasons NVTCertificate.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/LoadCertificates"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/LoadCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__LoadCertificates_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__LoadCertificates*     onvifDevice__LoadCertificates,
    // response parameters:
    _onvifDevice__LoadCertificatesResponse* onvifDevice__LoadCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__LoadCertificates_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__LoadCertificates*     onvifDevice__LoadCertificates,
    // response parameters:
    _onvifDevice__LoadCertificatesResponse* onvifDevice__LoadCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	LoadCertificates_ document
//gsoap onvifDevice service method-encoding:	LoadCertificates_ literal
//gsoap onvifDevice service method-action:	LoadCertificates_ http://www.onvif.org/ver10/device/wsdl/LoadCertificates
//gsoap onvifDevice service method-output-action:	LoadCertificates_ http://www.onvif.org/ver10/device/wsdl/Device/LoadCertificatesResponse
int __onvifDevice__LoadCertificates_(
    _onvifDevice__LoadCertificates*     onvifDevice__LoadCertificates,	///< Request parameter
    _onvifDevice__LoadCertificatesResponse* onvifDevice__LoadCertificatesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetClientCertificateMode_                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetClientCertificateMode_" of service binding "DeviceBinding"

/**

Operation details:

This operation is specific to TLS functionality. This operation gets the status
				(enabled/disabled) of the device TLS client authentication.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetClientCertificateMode"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetClientCertificateMode_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetClientCertificateMode* onvifDevice__GetClientCertificateMode,
    // response parameters:
    _onvifDevice__GetClientCertificateModeResponse* onvifDevice__GetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetClientCertificateMode_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetClientCertificateMode* onvifDevice__GetClientCertificateMode,
    // response parameters:
    _onvifDevice__GetClientCertificateModeResponse* onvifDevice__GetClientCertificateModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetClientCertificateMode_ document
//gsoap onvifDevice service method-encoding:	GetClientCertificateMode_ literal
//gsoap onvifDevice service method-action:	GetClientCertificateMode_ http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode
//gsoap onvifDevice service method-output-action:	GetClientCertificateMode_ http://www.onvif.org/ver10/device/wsdl/Device/GetClientCertificateModeResponse
int __onvifDevice__GetClientCertificateMode_(
    _onvifDevice__GetClientCertificateMode* onvifDevice__GetClientCertificateMode,	///< Request parameter
    _onvifDevice__GetClientCertificateModeResponse* onvifDevice__GetClientCertificateModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetClientCertificateMode_                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetClientCertificateMode_" of service binding "DeviceBinding"

/**

Operation details:

This operation is specific to TLS functionality. This operation sets the status
				(enabled/disabled) of the device TLS client authentication.
A device that supports TLS shall
				support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetClientCertificateMode"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetClientCertificateMode_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetClientCertificateMode* onvifDevice__SetClientCertificateMode,
    // response parameters:
    _onvifDevice__SetClientCertificateModeResponse* onvifDevice__SetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetClientCertificateMode_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetClientCertificateMode* onvifDevice__SetClientCertificateMode,
    // response parameters:
    _onvifDevice__SetClientCertificateModeResponse* onvifDevice__SetClientCertificateModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetClientCertificateMode_ document
//gsoap onvifDevice service method-encoding:	SetClientCertificateMode_ literal
//gsoap onvifDevice service method-action:	SetClientCertificateMode_ http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode
//gsoap onvifDevice service method-output-action:	SetClientCertificateMode_ http://www.onvif.org/ver10/device/wsdl/Device/SetClientCertificateModeResponse
int __onvifDevice__SetClientCertificateMode_(
    _onvifDevice__SetClientCertificateMode* onvifDevice__SetClientCertificateMode,	///< Request parameter
    _onvifDevice__SetClientCertificateModeResponse* onvifDevice__SetClientCertificateModeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetRelayOutputs_                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetRelayOutputs_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets a list of all available relay outputs and their settings.<br/>
				This method has been depricated with version 2.0.
Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetRelayOutputs"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetRelayOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetRelayOutputs_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetRelayOutputs*      onvifDevice__GetRelayOutputs,
    // response parameters:
    _onvifDevice__GetRelayOutputsResponse* onvifDevice__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetRelayOutputs_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetRelayOutputs*      onvifDevice__GetRelayOutputs,
    // response parameters:
    _onvifDevice__GetRelayOutputsResponse* onvifDevice__GetRelayOutputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetRelayOutputs_ document
//gsoap onvifDevice service method-encoding:	GetRelayOutputs_ literal
//gsoap onvifDevice service method-action:	GetRelayOutputs_ http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs
//gsoap onvifDevice service method-output-action:	GetRelayOutputs_ http://www.onvif.org/ver10/device/wsdl/Device/GetRelayOutputsResponse
int __onvifDevice__GetRelayOutputs_(
    _onvifDevice__GetRelayOutputs*      onvifDevice__GetRelayOutputs,	///< Request parameter
    _onvifDevice__GetRelayOutputsResponse* onvifDevice__GetRelayOutputsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetRelayOutputSettings_                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetRelayOutputSettings_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the settings of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRelayOutputSettings"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRelayOutputSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetRelayOutputSettings_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetRelayOutputSettings* onvifDevice__SetRelayOutputSettings,
    // response parameters:
    _onvifDevice__SetRelayOutputSettingsResponse* onvifDevice__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetRelayOutputSettings_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetRelayOutputSettings* onvifDevice__SetRelayOutputSettings,
    // response parameters:
    _onvifDevice__SetRelayOutputSettingsResponse* onvifDevice__SetRelayOutputSettingsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetRelayOutputSettings_ document
//gsoap onvifDevice service method-encoding:	SetRelayOutputSettings_ literal
//gsoap onvifDevice service method-action:	SetRelayOutputSettings_ http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings
//gsoap onvifDevice service method-output-action:	SetRelayOutputSettings_ http://www.onvif.org/ver10/device/wsdl/Device/SetRelayOutputSettingsResponse
int __onvifDevice__SetRelayOutputSettings_(
    _onvifDevice__SetRelayOutputSettings* onvifDevice__SetRelayOutputSettings,	///< Request parameter
    _onvifDevice__SetRelayOutputSettingsResponse* onvifDevice__SetRelayOutputSettingsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetRelayOutputState_                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetRelayOutputState_" of service binding "DeviceBinding"

/**

Operation details:

This operation sets the state of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRelayOutputState"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetRelayOutputStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetRelayOutputState_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetRelayOutputState*  onvifDevice__SetRelayOutputState,
    // response parameters:
    _onvifDevice__SetRelayOutputStateResponse* onvifDevice__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetRelayOutputState_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetRelayOutputState*  onvifDevice__SetRelayOutputState,
    // response parameters:
    _onvifDevice__SetRelayOutputStateResponse* onvifDevice__SetRelayOutputStateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetRelayOutputState_ document
//gsoap onvifDevice service method-encoding:	SetRelayOutputState_ literal
//gsoap onvifDevice service method-action:	SetRelayOutputState_ http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState
//gsoap onvifDevice service method-output-action:	SetRelayOutputState_ http://www.onvif.org/ver10/device/wsdl/Device/SetRelayOutputStateResponse
int __onvifDevice__SetRelayOutputState_(
    _onvifDevice__SetRelayOutputState*  onvifDevice__SetRelayOutputState,	///< Request parameter
    _onvifDevice__SetRelayOutputStateResponse* onvifDevice__SetRelayOutputStateResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SendAuxiliaryCommand_                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SendAuxiliaryCommand_" of service binding "DeviceBinding"

/**

Operation details:

Manage auxiliary commands supported by a device, such as controlling an Infrared
(IR) lamp, 
				a heater or a wiper or a thermometer that is connected
to the device.<br/>
				The supported commands can be retrieved via the
AuxiliaryCommands capability.<br/>
				Although the name of the auxiliary commands can
be freely defined, commands starting with the prefix tt: are 
				reserved to define frequently used commands and
these reserved commands shall all share the "tt:command|parameter" syntax.
				<ul>
					<li>tt:Wiper|On  Request to start the
wiper.</li>
					<li>tt:Wiper|Off  Request to stop the
wiper.</li>
					<li>tt:Washer|On  Request to start the
washer.</li>
					<li>tt:Washer|Off  Request to stop the
washe.</li>
					<li>tt:WashingProcedue|On  Request to
start the washing procedue.</li>
					<li>tt: WashingProcedue |Off  Request
to stop the washing procedue.</li>
				</ul>
				A device that indicates auxiliary service capability
shall support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SendAuxiliaryCommand"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SendAuxiliaryCommand_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SendAuxiliaryCommand* onvifDevice__SendAuxiliaryCommand,
    // response parameters:
    _onvifDevice__SendAuxiliaryCommandResponse* onvifDevice__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SendAuxiliaryCommand_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SendAuxiliaryCommand* onvifDevice__SendAuxiliaryCommand,
    // response parameters:
    _onvifDevice__SendAuxiliaryCommandResponse* onvifDevice__SendAuxiliaryCommandResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SendAuxiliaryCommand_ document
//gsoap onvifDevice service method-encoding:	SendAuxiliaryCommand_ literal
//gsoap onvifDevice service method-action:	SendAuxiliaryCommand_ http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand
//gsoap onvifDevice service method-output-action:	SendAuxiliaryCommand_ http://www.onvif.org/ver10/device/wsdl/Device/SendAuxiliaryCommandResponse
int __onvifDevice__SendAuxiliaryCommand_(
    _onvifDevice__SendAuxiliaryCommand* onvifDevice__SendAuxiliaryCommand,	///< Request parameter
    _onvifDevice__SendAuxiliaryCommandResponse* onvifDevice__SendAuxiliaryCommandResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetCACertificates_                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetCACertificates_" of service binding "DeviceBinding"

/**

Operation details:

CA certificates will be loaded into a device and be used for the sake of following
two cases.
				The one is for the purpose of TLS client authentication
in TLS server function. The other one
				is for the purpose of Authentication Server authentication
in IEEE 802.1X function. This
				operation gets all CA certificates loaded into a
device. A device that supports either TLS client
				authentication or IEEE 802.1X shall support this
command and the returned certificates shall
				be encoded using ASN.1 [X.681], [X.682], [X.683]
DER [X.690] encoding rules.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCACertificates"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetCACertificates_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetCACertificates*    onvifDevice__GetCACertificates,
    // response parameters:
    _onvifDevice__GetCACertificatesResponse* onvifDevice__GetCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetCACertificates_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetCACertificates*    onvifDevice__GetCACertificates,
    // response parameters:
    _onvifDevice__GetCACertificatesResponse* onvifDevice__GetCACertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetCACertificates_ document
//gsoap onvifDevice service method-encoding:	GetCACertificates_ literal
//gsoap onvifDevice service method-action:	GetCACertificates_ http://www.onvif.org/ver10/device/wsdl/GetCACertificates
//gsoap onvifDevice service method-output-action:	GetCACertificates_ http://www.onvif.org/ver10/device/wsdl/Device/GetCACertificatesResponse
int __onvifDevice__GetCACertificates_(
    _onvifDevice__GetCACertificates*    onvifDevice__GetCACertificates,	///< Request parameter
    _onvifDevice__GetCACertificatesResponse* onvifDevice__GetCACertificatesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__LoadCertificateWithPrivateKey_                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__LoadCertificateWithPrivateKey_" of service binding "DeviceBinding"

/**

Operation details:

There might be some cases that a Certificate Authority or some other equivalent
creates a
				certificate without having PKCS#10 certificate signing
request. In such cases, the certificate
				will be bundled in conjunction with its private
key. This command will be used for such use
				case scenarios. The certificate ID in the request
is optionally set to the ID value the client
				wish to have. If the certificate ID is not specified
in the request, device can choose the ID
				accordingly.<br/>
				This operation imports a private/public key pair
into the device.
				The certificates shall be encoded using ASN.1 [X.681],
[X.682], [X.683] DER [X.690] encoding
				rules.<br/>
				A device that does not support onboard key pair
generation and support either TLS or IEEE
				802.1X using client certificate shall support this
command. A device that support onboard key
				pair generation MAY support this command. The security
policy of a device that supports this
				operation should make sure that the private key
is sufficiently protected.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/LoadCertificateWithPrivateKey"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/LoadCertificateWithPrivateKeyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__LoadCertificateWithPrivateKey_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__LoadCertificateWithPrivateKey* onvifDevice__LoadCertificateWithPrivateKey,
    // response parameters:
    _onvifDevice__LoadCertificateWithPrivateKeyResponse* onvifDevice__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__LoadCertificateWithPrivateKey_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__LoadCertificateWithPrivateKey* onvifDevice__LoadCertificateWithPrivateKey,
    // response parameters:
    _onvifDevice__LoadCertificateWithPrivateKeyResponse* onvifDevice__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	LoadCertificateWithPrivateKey_ document
//gsoap onvifDevice service method-encoding:	LoadCertificateWithPrivateKey_ literal
//gsoap onvifDevice service method-action:	LoadCertificateWithPrivateKey_ http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey
//gsoap onvifDevice service method-output-action:	LoadCertificateWithPrivateKey_ http://www.onvif.org/ver10/device/wsdl/Device/LoadCertificateWithPrivateKeyResponse
int __onvifDevice__LoadCertificateWithPrivateKey_(
    _onvifDevice__LoadCertificateWithPrivateKey* onvifDevice__LoadCertificateWithPrivateKey,	///< Request parameter
    _onvifDevice__LoadCertificateWithPrivateKeyResponse* onvifDevice__LoadCertificateWithPrivateKeyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetCertificateInformation_                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetCertificateInformation_" of service binding "DeviceBinding"

/**

Operation details:

This operation requests the information of a certificate specified by certificate
ID. The device
				should respond with its Issuer DN, Subject
DN, Key usage, "Extended key usage, Key
				Length, Version, Serial Number, Signature
Algorithm and Validity data as the
				information of the certificate, as long as the device
can retrieve such information from the
				specified certificate.<br/>
				A device that supports either TLS or IEEE 802.1X
should support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCertificateInformation"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetCertificateInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetCertificateInformation_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetCertificateInformation* onvifDevice__GetCertificateInformation,
    // response parameters:
    _onvifDevice__GetCertificateInformationResponse* onvifDevice__GetCertificateInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetCertificateInformation_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetCertificateInformation* onvifDevice__GetCertificateInformation,
    // response parameters:
    _onvifDevice__GetCertificateInformationResponse* onvifDevice__GetCertificateInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetCertificateInformation_ document
//gsoap onvifDevice service method-encoding:	GetCertificateInformation_ literal
//gsoap onvifDevice service method-action:	GetCertificateInformation_ http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation
//gsoap onvifDevice service method-output-action:	GetCertificateInformation_ http://www.onvif.org/ver10/device/wsdl/Device/GetCertificateInformationResponse
int __onvifDevice__GetCertificateInformation_(
    _onvifDevice__GetCertificateInformation* onvifDevice__GetCertificateInformation,	///< Request parameter
    _onvifDevice__GetCertificateInformationResponse* onvifDevice__GetCertificateInformationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__LoadCACertificates_                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__LoadCACertificates_" of service binding "DeviceBinding"

/**

Operation details:

This command is used when it is necessary to load trusted CA certificates or trusted
root
				certificates for the purpose of verification for
its counterpart i.e. client certificate verification in
				TLS function or server certificate verification
in IEEE 802.1X function.<br/>
				A device that support either TLS or IEEE 802.1X
shall support this command. As for the
				supported certificate format, either DER format
or PEM format is possible to be used. But a
				device that support this command shall support at
least DER format as supported format type.
				The device may sort the received certificate(s)
based on the public key and subject
				information in the certificate(s). Either all CA
certificates are loaded successfully or a fault
				message shall be returned without loading any CA
certificate.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/LoadCACertificates"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/LoadCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__LoadCACertificates_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__LoadCACertificates*   onvifDevice__LoadCACertificates,
    // response parameters:
    _onvifDevice__LoadCACertificatesResponse* onvifDevice__LoadCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__LoadCACertificates_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__LoadCACertificates*   onvifDevice__LoadCACertificates,
    // response parameters:
    _onvifDevice__LoadCACertificatesResponse* onvifDevice__LoadCACertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	LoadCACertificates_ document
//gsoap onvifDevice service method-encoding:	LoadCACertificates_ literal
//gsoap onvifDevice service method-action:	LoadCACertificates_ http://www.onvif.org/ver10/device/wsdl/LoadCACertificates
//gsoap onvifDevice service method-output-action:	LoadCACertificates_ http://www.onvif.org/ver10/device/wsdl/Device/LoadCACertificatesResponse
int __onvifDevice__LoadCACertificates_(
    _onvifDevice__LoadCACertificates*   onvifDevice__LoadCACertificates,	///< Request parameter
    _onvifDevice__LoadCACertificatesResponse* onvifDevice__LoadCACertificatesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__CreateDot1XConfiguration_                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__CreateDot1XConfiguration_" of service binding "DeviceBinding"

/**

Operation details:

This operation newly creates IEEE 802.1X configuration parameter set of the device.
The
				device shall support this command if it supports
IEEE 802.1X. If the device receives this
				request with already existing configuration token
(Dot1XConfigurationToken) specification, the
				device should respond with 'ter:ReferenceToken '
error to indicate there is some configuration
				conflict.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/CreateDot1XConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/CreateDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__CreateDot1XConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__CreateDot1XConfiguration* onvifDevice__CreateDot1XConfiguration,
    // response parameters:
    _onvifDevice__CreateDot1XConfigurationResponse* onvifDevice__CreateDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__CreateDot1XConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__CreateDot1XConfiguration* onvifDevice__CreateDot1XConfiguration,
    // response parameters:
    _onvifDevice__CreateDot1XConfigurationResponse* onvifDevice__CreateDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	CreateDot1XConfiguration_ document
//gsoap onvifDevice service method-encoding:	CreateDot1XConfiguration_ literal
//gsoap onvifDevice service method-action:	CreateDot1XConfiguration_ http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration
//gsoap onvifDevice service method-output-action:	CreateDot1XConfiguration_ http://www.onvif.org/ver10/device/wsdl/Device/CreateDot1XConfigurationResponse
int __onvifDevice__CreateDot1XConfiguration_(
    _onvifDevice__CreateDot1XConfiguration* onvifDevice__CreateDot1XConfiguration,	///< Request parameter
    _onvifDevice__CreateDot1XConfigurationResponse* onvifDevice__CreateDot1XConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__SetDot1XConfiguration_                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__SetDot1XConfiguration_" of service binding "DeviceBinding"

/**

Operation details:

While the CreateDot1XConfiguration command is trying to create a new configuration
				parameter set, this operation modifies existing
IEEE 802.1X configuration parameter set of
				the device. A device that support IEEE 802.1X shall
support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDot1XConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/SetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__SetDot1XConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetDot1XConfiguration* onvifDevice__SetDot1XConfiguration,
    // response parameters:
    _onvifDevice__SetDot1XConfigurationResponse* onvifDevice__SetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__SetDot1XConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetDot1XConfiguration* onvifDevice__SetDot1XConfiguration,
    // response parameters:
    _onvifDevice__SetDot1XConfigurationResponse* onvifDevice__SetDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	SetDot1XConfiguration_ document
//gsoap onvifDevice service method-encoding:	SetDot1XConfiguration_ literal
//gsoap onvifDevice service method-action:	SetDot1XConfiguration_ http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration
//gsoap onvifDevice service method-output-action:	SetDot1XConfiguration_ http://www.onvif.org/ver10/device/wsdl/Device/SetDot1XConfigurationResponse
int __onvifDevice__SetDot1XConfiguration_(
    _onvifDevice__SetDot1XConfiguration* onvifDevice__SetDot1XConfiguration,	///< Request parameter
    _onvifDevice__SetDot1XConfigurationResponse* onvifDevice__SetDot1XConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDot1XConfiguration_                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDot1XConfiguration_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets one IEEE 802.1X configuration parameter set from the device
by
				specifying the configuration token (Dot1XConfigurationToken).<br/>
				A device that supports IEEE 802.1X shall support
this command.
				Regardless of whether the 802.1X method in the retrieved
configuration has a password or
				not, the device shall not include the Password element
in the response.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot1XConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDot1XConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDot1XConfiguration* onvifDevice__GetDot1XConfiguration,
    // response parameters:
    _onvifDevice__GetDot1XConfigurationResponse* onvifDevice__GetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDot1XConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDot1XConfiguration* onvifDevice__GetDot1XConfiguration,
    // response parameters:
    _onvifDevice__GetDot1XConfigurationResponse* onvifDevice__GetDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDot1XConfiguration_ document
//gsoap onvifDevice service method-encoding:	GetDot1XConfiguration_ literal
//gsoap onvifDevice service method-action:	GetDot1XConfiguration_ http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration
//gsoap onvifDevice service method-output-action:	GetDot1XConfiguration_ http://www.onvif.org/ver10/device/wsdl/Device/GetDot1XConfigurationResponse
int __onvifDevice__GetDot1XConfiguration_(
    _onvifDevice__GetDot1XConfiguration* onvifDevice__GetDot1XConfiguration,	///< Request parameter
    _onvifDevice__GetDot1XConfigurationResponse* onvifDevice__GetDot1XConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDot1XConfigurations_                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDot1XConfigurations_" of service binding "DeviceBinding"

/**

Operation details:

This operation gets all the existing IEEE 802.1X configuration parameter sets from
the device.
				The device shall respond with all the IEEE 802.1X
configurations so that the client can get to
				know how many IEEE 802.1X configurations are existing
and how they are configured.<br/>
				A device that support IEEE 802.1X shall support
this command.<br/>
				Regardless of whether the 802.1X method in the retrieved
configuration has a password or
				not, the device shall not include the Password element
in the response.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot1XConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot1XConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDot1XConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDot1XConfigurations* onvifDevice__GetDot1XConfigurations,
    // response parameters:
    _onvifDevice__GetDot1XConfigurationsResponse* onvifDevice__GetDot1XConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDot1XConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDot1XConfigurations* onvifDevice__GetDot1XConfigurations,
    // response parameters:
    _onvifDevice__GetDot1XConfigurationsResponse* onvifDevice__GetDot1XConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDot1XConfigurations_ document
//gsoap onvifDevice service method-encoding:	GetDot1XConfigurations_ literal
//gsoap onvifDevice service method-action:	GetDot1XConfigurations_ http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations
//gsoap onvifDevice service method-output-action:	GetDot1XConfigurations_ http://www.onvif.org/ver10/device/wsdl/Device/GetDot1XConfigurationsResponse
int __onvifDevice__GetDot1XConfigurations_(
    _onvifDevice__GetDot1XConfigurations* onvifDevice__GetDot1XConfigurations,	///< Request parameter
    _onvifDevice__GetDot1XConfigurationsResponse* onvifDevice__GetDot1XConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__DeleteDot1XConfiguration_                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__DeleteDot1XConfiguration_" of service binding "DeviceBinding"

/**

Operation details:

This operation deletes an IEEE 802.1X configuration parameter set from the device.
Which
				configuration should be deleted is specified by
the 'Dot1XConfigurationToken' in the request.
				A device that support IEEE 802.1X shall support
this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/DeleteDot1XConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/DeleteDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__DeleteDot1XConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__DeleteDot1XConfiguration* onvifDevice__DeleteDot1XConfiguration,
    // response parameters:
    _onvifDevice__DeleteDot1XConfigurationResponse* onvifDevice__DeleteDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__DeleteDot1XConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__DeleteDot1XConfiguration* onvifDevice__DeleteDot1XConfiguration,
    // response parameters:
    _onvifDevice__DeleteDot1XConfigurationResponse* onvifDevice__DeleteDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	DeleteDot1XConfiguration_ document
//gsoap onvifDevice service method-encoding:	DeleteDot1XConfiguration_ literal
//gsoap onvifDevice service method-action:	DeleteDot1XConfiguration_ http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration
//gsoap onvifDevice service method-output-action:	DeleteDot1XConfiguration_ http://www.onvif.org/ver10/device/wsdl/Device/DeleteDot1XConfigurationResponse
int __onvifDevice__DeleteDot1XConfiguration_(
    _onvifDevice__DeleteDot1XConfiguration* onvifDevice__DeleteDot1XConfiguration,	///< Request parameter
    _onvifDevice__DeleteDot1XConfigurationResponse* onvifDevice__DeleteDot1XConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDot11Capabilities_                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDot11Capabilities_" of service binding "DeviceBinding"

/**

Operation details:

This operation returns the IEEE802.11 capabilities. The device shall support
				this operation.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot11Capabilities"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot11CapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDot11Capabilities_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDot11Capabilities* onvifDevice__GetDot11Capabilities,
    // response parameters:
    _onvifDevice__GetDot11CapabilitiesResponse* onvifDevice__GetDot11CapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDot11Capabilities_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDot11Capabilities* onvifDevice__GetDot11Capabilities,
    // response parameters:
    _onvifDevice__GetDot11CapabilitiesResponse* onvifDevice__GetDot11CapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDot11Capabilities_ document
//gsoap onvifDevice service method-encoding:	GetDot11Capabilities_ literal
//gsoap onvifDevice service method-action:	GetDot11Capabilities_ http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities
//gsoap onvifDevice service method-output-action:	GetDot11Capabilities_ http://www.onvif.org/ver10/device/wsdl/Device/GetDot11CapabilitiesResponse
int __onvifDevice__GetDot11Capabilities_(
    _onvifDevice__GetDot11Capabilities* onvifDevice__GetDot11Capabilities,	///< Request parameter
    _onvifDevice__GetDot11CapabilitiesResponse* onvifDevice__GetDot11CapabilitiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetDot11Status_                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetDot11Status_" of service binding "DeviceBinding"

/**

Operation details:

This operation returns the status of a wireless network interface. The device shall
support this
				command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot11Status"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetDot11StatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetDot11Status_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetDot11Status*       onvifDevice__GetDot11Status,
    // response parameters:
    _onvifDevice__GetDot11StatusResponse* onvifDevice__GetDot11StatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetDot11Status_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetDot11Status*       onvifDevice__GetDot11Status,
    // response parameters:
    _onvifDevice__GetDot11StatusResponse* onvifDevice__GetDot11StatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetDot11Status_ document
//gsoap onvifDevice service method-encoding:	GetDot11Status_ literal
//gsoap onvifDevice service method-action:	GetDot11Status_ http://www.onvif.org/ver10/device/wsdl/GetDot11Status
//gsoap onvifDevice service method-output-action:	GetDot11Status_ http://www.onvif.org/ver10/device/wsdl/Device/GetDot11StatusResponse
int __onvifDevice__GetDot11Status_(
    _onvifDevice__GetDot11Status*       onvifDevice__GetDot11Status,	///< Request parameter
    _onvifDevice__GetDot11StatusResponse* onvifDevice__GetDot11StatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__ScanAvailableDot11Networks_                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__ScanAvailableDot11Networks_" of service binding "DeviceBinding"

/**

Operation details:

This operation returns a lists of the wireless networks in range of the device.
A device should
				support this operation.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/ScanAvailableDot11Networks"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/ScanAvailableDot11NetworksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__ScanAvailableDot11Networks_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__ScanAvailableDot11Networks* onvifDevice__ScanAvailableDot11Networks,
    // response parameters:
    _onvifDevice__ScanAvailableDot11NetworksResponse* onvifDevice__ScanAvailableDot11NetworksResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__ScanAvailableDot11Networks_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__ScanAvailableDot11Networks* onvifDevice__ScanAvailableDot11Networks,
    // response parameters:
    _onvifDevice__ScanAvailableDot11NetworksResponse* onvifDevice__ScanAvailableDot11NetworksResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	ScanAvailableDot11Networks_ document
//gsoap onvifDevice service method-encoding:	ScanAvailableDot11Networks_ literal
//gsoap onvifDevice service method-action:	ScanAvailableDot11Networks_ http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks
//gsoap onvifDevice service method-output-action:	ScanAvailableDot11Networks_ http://www.onvif.org/ver10/device/wsdl/Device/ScanAvailableDot11NetworksResponse
int __onvifDevice__ScanAvailableDot11Networks_(
    _onvifDevice__ScanAvailableDot11Networks* onvifDevice__ScanAvailableDot11Networks,	///< Request parameter
    _onvifDevice__ScanAvailableDot11NetworksResponse* onvifDevice__ScanAvailableDot11NetworksResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__GetSystemUris_                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__GetSystemUris_" of service binding "DeviceBinding"

/**

Operation details:

This operation is used to retrieve URIs from which system information may be downloaded
				using HTTP. URIs may be returned for the following
system information:<br/>
				System Logs. Multiple system logs may be returned,
of different types. The exact format of
				the system logs is outside the scope of this specification.<br/>
				Support Information. This consists of arbitrary
device diagnostics information from a device.
				The exact format of the diagnostic information is
outside the scope of this specification.<br/>
				System Backup. The received file is a backup file
that can be used to restore the current
				device configuration at a later date. The exact
format of the backup configuration file is
				outside the scope of this specification.<br/>
				If the device allows retrieval of system logs, support
information or system backup data, it
				should make them available via HTTP GET. If it does,
it shall support the GetSystemUris
				command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemUris"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/GetSystemUrisResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__GetSystemUris_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetSystemUris*        onvifDevice__GetSystemUris,
    // response parameters:
    _onvifDevice__GetSystemUrisResponse* onvifDevice__GetSystemUrisResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__GetSystemUris_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetSystemUris*        onvifDevice__GetSystemUris,
    // response parameters:
    _onvifDevice__GetSystemUrisResponse* onvifDevice__GetSystemUrisResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	GetSystemUris_ document
//gsoap onvifDevice service method-encoding:	GetSystemUris_ literal
//gsoap onvifDevice service method-action:	GetSystemUris_ http://www.onvif.org/ver10/device/wsdl/GetSystemUris
//gsoap onvifDevice service method-output-action:	GetSystemUris_ http://www.onvif.org/ver10/device/wsdl/Device/GetSystemUrisResponse
int __onvifDevice__GetSystemUris_(
    _onvifDevice__GetSystemUris*        onvifDevice__GetSystemUris,	///< Request parameter
    _onvifDevice__GetSystemUrisResponse* onvifDevice__GetSystemUrisResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__StartFirmwareUpgrade_                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__StartFirmwareUpgrade_" of service binding "DeviceBinding"

/**

Operation details:

This operation initiates a firmware upgrade using the HTTP POST mechanism. The response
				to the command includes an HTTP URL to which the
upgrade file may be uploaded. The
				actual upgrade takes place as soon as the HTTP POST
operation has completed. The device
				should support firmware upgrade through the StartFirmwareUpgrade
command. The exact
				format of the firmware data is outside the scope
of this specification.
				Firmware upgrade over HTTP may be achieved using
the following steps:<ol>
					<li>Client calls StartFirmwareUpgrade.</li>
					<li>Server responds with upload URI and
optional delay value.</li>
					<li>Client waits for delay duration if specified
by server.</li>
					<li>Client transmits the firmware image
to the upload URI using HTTP POST.</li>
					<li>Server reprograms itself using the uploaded
image, then reboots.</li>
				</ol>
				If the firmware upgrade fails because the upgrade
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
firmware upgrade fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/StartFirmwareUpgrade"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/StartFirmwareUpgradeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__StartFirmwareUpgrade_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__StartFirmwareUpgrade* onvifDevice__StartFirmwareUpgrade,
    // response parameters:
    _onvifDevice__StartFirmwareUpgradeResponse* onvifDevice__StartFirmwareUpgradeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__StartFirmwareUpgrade_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__StartFirmwareUpgrade* onvifDevice__StartFirmwareUpgrade,
    // response parameters:
    _onvifDevice__StartFirmwareUpgradeResponse* onvifDevice__StartFirmwareUpgradeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	StartFirmwareUpgrade_ document
//gsoap onvifDevice service method-encoding:	StartFirmwareUpgrade_ literal
//gsoap onvifDevice service method-action:	StartFirmwareUpgrade_ http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade
//gsoap onvifDevice service method-output-action:	StartFirmwareUpgrade_ http://www.onvif.org/ver10/device/wsdl/Device/StartFirmwareUpgradeResponse
int __onvifDevice__StartFirmwareUpgrade_(
    _onvifDevice__StartFirmwareUpgrade* onvifDevice__StartFirmwareUpgrade,	///< Request parameter
    _onvifDevice__StartFirmwareUpgradeResponse* onvifDevice__StartFirmwareUpgradeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDevice__StartSystemRestore_                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDevice__StartSystemRestore_" of service binding "DeviceBinding"

/**

Operation details:

This operation initiates a system restore from backed up configuration data using
the HTTP
				POST mechanism. The response to the command includes
an HTTP URL to which the backup
				file may be uploaded. The actual restore takes place
as soon as the HTTP POST operation
				has completed. Devices should support system restore
through the StartSystemRestore
				command. The exact format of the backup configuration
data is outside the scope of this
				specification.<br/>
				System restore over HTTP may be achieved using the
following steps:<ol>
					<li>Client calls StartSystemRestore.</li>
					<li>Server responds with upload URI.</li>
					<li>Client transmits the configuration data
to the upload URI using HTTP POST.</li>
					<li>Server applies the uploaded configuration,
then reboots if necessary.</li>
				</ol>
				If the system restore fails because the uploaded
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
system restore fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing action: "http://www.onvif.org/ver10/device/wsdl/Device/StartSystemRestore"

  - Addressing response action: "http://www.onvif.org/ver10/device/wsdl/Device/StartSystemRestoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDevice__StartSystemRestore_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__StartSystemRestore*   onvifDevice__StartSystemRestore,
    // response parameters:
    _onvifDevice__StartSystemRestoreResponse* onvifDevice__StartSystemRestoreResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDevice__StartSystemRestore_(
    struct soap *soap,
    // request parameters:
    _onvifDevice__StartSystemRestore*   onvifDevice__StartSystemRestore,
    // response parameters:
    _onvifDevice__StartSystemRestoreResponse* onvifDevice__StartSystemRestoreResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDevice service method-style:	StartSystemRestore_ document
//gsoap onvifDevice service method-encoding:	StartSystemRestore_ literal
//gsoap onvifDevice service method-action:	StartSystemRestore_ http://www.onvif.org/ver10/device/wsdl/StartSystemRestore
//gsoap onvifDevice service method-output-action:	StartSystemRestore_ http://www.onvif.org/ver10/device/wsdl/Device/StartSystemRestoreResponse
int __onvifDevice__StartSystemRestore_(
    _onvifDevice__StartSystemRestore*   onvifDevice__StartSystemRestore,	///< Request parameter
    _onvifDevice__StartSystemRestoreResponse* onvifDevice__StartSystemRestoreResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceIOBinding                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetServiceCapabilities                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetServiceCapabilities" of service binding "DeviceIOBinding"

/**

Operation details:

Returns the capabilities of the device IO service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetServiceCapabilities"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetServiceCapabilities* onvifDeviceIO__GetServiceCapabilities,
    // response parameters:
    _onvifDeviceIO__GetServiceCapabilitiesResponse* onvifDeviceIO__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetServiceCapabilities(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetServiceCapabilities* onvifDeviceIO__GetServiceCapabilities,
    // response parameters:
    _onvifDeviceIO__GetServiceCapabilitiesResponse* onvifDeviceIO__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetServiceCapabilities document
//gsoap onvifDeviceIO service method-encoding:	GetServiceCapabilities literal
//gsoap onvifDeviceIO service method-action:	GetServiceCapabilities http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities
//gsoap onvifDeviceIO service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetServiceCapabilitiesResponse
int __onvifDeviceIO__GetServiceCapabilities(
    _onvifDeviceIO__GetServiceCapabilities* onvifDeviceIO__GetServiceCapabilities,	///< Request parameter
    _onvifDeviceIO__GetServiceCapabilitiesResponse* onvifDeviceIO__GetServiceCapabilitiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetRelayOutputOptions                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetRelayOutputOptions" of service binding "DeviceIOBinding"

/**

Operation details:

Request the available settings and ranges for one or all relay outputs. A device
that has one or more RelayOutputs should support this command.<br/>
				Two examples that illustrate usage:
				<ul>
					<li>
					Device supports range PT1S to PT120S:
					<pre>
<tmd:RelayOutputOptions token='44'>
  <tmd:Mode>Monostable</tmd:Mode>
  <tmd:DelayTimes>1 120</tmd:DelayTimes>
</tmd:RelayOutputOptions>
							</pre>
						<li/>
					2) Device supports values PT0.5S, PT1S,
PT2s and PT1M:
					<pre>
<tmd:RelayOutputOptions token='123'>
  <tmd:Mode>Monostable</tmd:Mode>
  <tmd:DelayTimes>0.5 1 2 60</tmd:DelayTimes>
  <tmd:Discrete>True</tmd:Discrete>
</tmd:RelayOutputOptions>
								</pre>
					</li>
				</ul>
			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetRelayOutputOptions"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetRelayOutputOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetRelayOutputOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetRelayOutputOptions* onvifDeviceIO__GetRelayOutputOptions,
    // response parameters:
    _onvifDeviceIO__GetRelayOutputOptionsResponse* onvifDeviceIO__GetRelayOutputOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetRelayOutputOptions(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetRelayOutputOptions* onvifDeviceIO__GetRelayOutputOptions,
    // response parameters:
    _onvifDeviceIO__GetRelayOutputOptionsResponse* onvifDeviceIO__GetRelayOutputOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetRelayOutputOptions document
//gsoap onvifDeviceIO service method-encoding:	GetRelayOutputOptions literal
//gsoap onvifDeviceIO service method-action:	GetRelayOutputOptions http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions
//gsoap onvifDeviceIO service method-output-action:	GetRelayOutputOptions http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetRelayOutputOptionsResponse
int __onvifDeviceIO__GetRelayOutputOptions(
    _onvifDeviceIO__GetRelayOutputOptions* onvifDeviceIO__GetRelayOutputOptions,	///< Request parameter
    _onvifDeviceIO__GetRelayOutputOptionsResponse* onvifDeviceIO__GetRelayOutputOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetAudioSources                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetAudioSources" of service binding "DeviceIOBinding"

/**

Operation details:

List all available audio sources for the device. The device that has one or more
audio sources shall support the listing of available audio inputs through the GetAudioSources
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioSources"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetAudioSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioSources*       onvifMedia__GetAudioSources,
    // response parameters:
    _onvifMedia__GetAudioSourcesResponse* onvifMedia__GetAudioSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetAudioSources(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioSources*       onvifMedia__GetAudioSources,
    // response parameters:
    _onvifMedia__GetAudioSourcesResponse* onvifMedia__GetAudioSourcesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetAudioSources document
//gsoap onvifDeviceIO service method-encoding:	GetAudioSources literal
//gsoap onvifDeviceIO service method-action:	GetAudioSources http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources
//gsoap onvifDeviceIO service method-output-action:	GetAudioSources http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioSourcesResponse
int __onvifDeviceIO__GetAudioSources(
    _onvifMedia__GetAudioSources*       onvifMedia__GetAudioSources,	///< Request parameter
    _onvifMedia__GetAudioSourcesResponse* onvifMedia__GetAudioSourcesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetAudioOutputs                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetAudioOutputs" of service binding "DeviceIOBinding"

/**

Operation details:

List all available audio outputs of a device. A device that has one ore more physical
audio outputs shall support listing of available audio outputs through the GetAudioOutputs
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioOutputs"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetAudioOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioOutputs*       onvifMedia__GetAudioOutputs,
    // response parameters:
    _onvifMedia__GetAudioOutputsResponse* onvifMedia__GetAudioOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetAudioOutputs(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioOutputs*       onvifMedia__GetAudioOutputs,
    // response parameters:
    _onvifMedia__GetAudioOutputsResponse* onvifMedia__GetAudioOutputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetAudioOutputs document
//gsoap onvifDeviceIO service method-encoding:	GetAudioOutputs literal
//gsoap onvifDeviceIO service method-action:	GetAudioOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs
//gsoap onvifDeviceIO service method-output-action:	GetAudioOutputs http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioOutputsResponse
int __onvifDeviceIO__GetAudioOutputs(
    _onvifMedia__GetAudioOutputs*       onvifMedia__GetAudioOutputs,	///< Request parameter
    _onvifMedia__GetAudioOutputsResponse* onvifMedia__GetAudioOutputsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetVideoSources                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetVideoSources" of service binding "DeviceIOBinding"

/**

Operation details:

List all available video sources for the device. The device that has one or more
video inputs shall support the listing of available video sources through the GetVideoSources
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoSources"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetVideoSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoSources*       onvifMedia__GetVideoSources,
    // response parameters:
    _onvifMedia__GetVideoSourcesResponse* onvifMedia__GetVideoSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetVideoSources(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoSources*       onvifMedia__GetVideoSources,
    // response parameters:
    _onvifMedia__GetVideoSourcesResponse* onvifMedia__GetVideoSourcesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetVideoSources document
//gsoap onvifDeviceIO service method-encoding:	GetVideoSources literal
//gsoap onvifDeviceIO service method-action:	GetVideoSources http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources
//gsoap onvifDeviceIO service method-output-action:	GetVideoSources http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoSourcesResponse
int __onvifDeviceIO__GetVideoSources(
    _onvifMedia__GetVideoSources*       onvifMedia__GetVideoSources,	///< Request parameter
    _onvifMedia__GetVideoSourcesResponse* onvifMedia__GetVideoSourcesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetVideoOutputs                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetVideoOutputs" of service binding "DeviceIOBinding"

/**

Operation details:

List all available video outputs of a device. A device that has one or more physical
video outputs shall support listing of available video outputs through the GetVideoOutputs
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoOutputs"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetVideoOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetVideoOutputs*    onvifDeviceIO__GetVideoOutputs,
    // response parameters:
    _onvifDeviceIO__GetVideoOutputsResponse* onvifDeviceIO__GetVideoOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetVideoOutputs(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetVideoOutputs*    onvifDeviceIO__GetVideoOutputs,
    // response parameters:
    _onvifDeviceIO__GetVideoOutputsResponse* onvifDeviceIO__GetVideoOutputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetVideoOutputs document
//gsoap onvifDeviceIO service method-encoding:	GetVideoOutputs literal
//gsoap onvifDeviceIO service method-action:	GetVideoOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs
//gsoap onvifDeviceIO service method-output-action:	GetVideoOutputs http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoOutputsResponse
int __onvifDeviceIO__GetVideoOutputs(
    _onvifDeviceIO__GetVideoOutputs*    onvifDeviceIO__GetVideoOutputs,	///< Request parameter
    _onvifDeviceIO__GetVideoOutputsResponse* onvifDeviceIO__GetVideoOutputsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetVideoSourceConfiguration                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetVideoSourceConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:

Get the video source configurations of a VideoSource. A device with one or more
video sources shall support the GetVideoSourceConfigurations command..

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetVideoSourceConfiguration* onvifDeviceIO__GetVideoSourceConfiguration,
    // response parameters:
    _onvifDeviceIO__GetVideoSourceConfigurationResponse* onvifDeviceIO__GetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetVideoSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetVideoSourceConfiguration* onvifDeviceIO__GetVideoSourceConfiguration,
    // response parameters:
    _onvifDeviceIO__GetVideoSourceConfigurationResponse* onvifDeviceIO__GetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetVideoSourceConfiguration document
//gsoap onvifDeviceIO service method-encoding:	GetVideoSourceConfiguration literal
//gsoap onvifDeviceIO service method-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration
//gsoap onvifDeviceIO service method-output-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoSourceConfigurationResponse
int __onvifDeviceIO__GetVideoSourceConfiguration(
    _onvifDeviceIO__GetVideoSourceConfiguration* onvifDeviceIO__GetVideoSourceConfiguration,	///< Request parameter
    _onvifDeviceIO__GetVideoSourceConfigurationResponse* onvifDeviceIO__GetVideoSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetVideoOutputConfiguration                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetVideoOutputConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:

Get the configuration of a Video Output. A device that has one or more Video Outputs
shall support the retrieval of the VideoOutputConfiguration through this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoOutputConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetVideoOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetVideoOutputConfiguration* onvifDeviceIO__GetVideoOutputConfiguration,
    // response parameters:
    _onvifDeviceIO__GetVideoOutputConfigurationResponse* onvifDeviceIO__GetVideoOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetVideoOutputConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetVideoOutputConfiguration* onvifDeviceIO__GetVideoOutputConfiguration,
    // response parameters:
    _onvifDeviceIO__GetVideoOutputConfigurationResponse* onvifDeviceIO__GetVideoOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetVideoOutputConfiguration document
//gsoap onvifDeviceIO service method-encoding:	GetVideoOutputConfiguration literal
//gsoap onvifDeviceIO service method-action:	GetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration
//gsoap onvifDeviceIO service method-output-action:	GetVideoOutputConfiguration http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoOutputConfigurationResponse
int __onvifDeviceIO__GetVideoOutputConfiguration(
    _onvifDeviceIO__GetVideoOutputConfiguration* onvifDeviceIO__GetVideoOutputConfiguration,	///< Request parameter
    _onvifDeviceIO__GetVideoOutputConfigurationResponse* onvifDeviceIO__GetVideoOutputConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetAudioSourceConfiguration                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetAudioSourceConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:

List the configuration of an Audio Input. A device with one or more audio inputs
shall support the GetAudioSourceConfiguration command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetAudioSourceConfiguration* onvifDeviceIO__GetAudioSourceConfiguration,
    // response parameters:
    _onvifDeviceIO__GetAudioSourceConfigurationResponse* onvifDeviceIO__GetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetAudioSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetAudioSourceConfiguration* onvifDeviceIO__GetAudioSourceConfiguration,
    // response parameters:
    _onvifDeviceIO__GetAudioSourceConfigurationResponse* onvifDeviceIO__GetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetAudioSourceConfiguration document
//gsoap onvifDeviceIO service method-encoding:	GetAudioSourceConfiguration literal
//gsoap onvifDeviceIO service method-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration
//gsoap onvifDeviceIO service method-output-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioSourceConfigurationResponse
int __onvifDeviceIO__GetAudioSourceConfiguration(
    _onvifDeviceIO__GetAudioSourceConfiguration* onvifDeviceIO__GetAudioSourceConfiguration,	///< Request parameter
    _onvifDeviceIO__GetAudioSourceConfigurationResponse* onvifDeviceIO__GetAudioSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetAudioOutputConfiguration                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetAudioOutputConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:

Request the current configuration of a physical Audio output. A device that has
one or more AudioOutputs shall support the retrieval of the AudioOutputConfiguration
through this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioOutputConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetAudioOutputConfiguration* onvifDeviceIO__GetAudioOutputConfiguration,
    // response parameters:
    _onvifDeviceIO__GetAudioOutputConfigurationResponse* onvifDeviceIO__GetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetAudioOutputConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetAudioOutputConfiguration* onvifDeviceIO__GetAudioOutputConfiguration,
    // response parameters:
    _onvifDeviceIO__GetAudioOutputConfigurationResponse* onvifDeviceIO__GetAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetAudioOutputConfiguration document
//gsoap onvifDeviceIO service method-encoding:	GetAudioOutputConfiguration literal
//gsoap onvifDeviceIO service method-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration
//gsoap onvifDeviceIO service method-output-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioOutputConfigurationResponse
int __onvifDeviceIO__GetAudioOutputConfiguration(
    _onvifDeviceIO__GetAudioOutputConfiguration* onvifDeviceIO__GetAudioOutputConfiguration,	///< Request parameter
    _onvifDeviceIO__GetAudioOutputConfigurationResponse* onvifDeviceIO__GetAudioOutputConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__SetVideoSourceConfiguration                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__SetVideoSourceConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:

Modify a video input configuration. A device that has one or more video sources
shall support the setting of the VideoSourceConfiguration through this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetVideoSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__SetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__SetVideoSourceConfiguration* onvifDeviceIO__SetVideoSourceConfiguration,
    // response parameters:
    _onvifDeviceIO__SetVideoSourceConfigurationResponse* onvifDeviceIO__SetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__SetVideoSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__SetVideoSourceConfiguration* onvifDeviceIO__SetVideoSourceConfiguration,
    // response parameters:
    _onvifDeviceIO__SetVideoSourceConfigurationResponse* onvifDeviceIO__SetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	SetVideoSourceConfiguration document
//gsoap onvifDeviceIO service method-encoding:	SetVideoSourceConfiguration literal
//gsoap onvifDeviceIO service method-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration
//gsoap onvifDeviceIO service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetVideoSourceConfigurationResponse
int __onvifDeviceIO__SetVideoSourceConfiguration(
    _onvifDeviceIO__SetVideoSourceConfiguration* onvifDeviceIO__SetVideoSourceConfiguration,	///< Request parameter
    _onvifDeviceIO__SetVideoSourceConfigurationResponse* onvifDeviceIO__SetVideoSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__SetVideoOutputConfiguration                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__SetVideoOutputConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:

Modify a video output configuration. A device that has one or more video outputs
shall support the setting of its video output configuration through this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetVideoOutputConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetVideoOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__SetVideoOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__SetVideoOutputConfiguration* onvifDeviceIO__SetVideoOutputConfiguration,
    // response parameters:
    _onvifDeviceIO__SetVideoOutputConfigurationResponse* onvifDeviceIO__SetVideoOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__SetVideoOutputConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__SetVideoOutputConfiguration* onvifDeviceIO__SetVideoOutputConfiguration,
    // response parameters:
    _onvifDeviceIO__SetVideoOutputConfigurationResponse* onvifDeviceIO__SetVideoOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	SetVideoOutputConfiguration document
//gsoap onvifDeviceIO service method-encoding:	SetVideoOutputConfiguration literal
//gsoap onvifDeviceIO service method-action:	SetVideoOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration
//gsoap onvifDeviceIO service method-output-action:	SetVideoOutputConfiguration http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetVideoOutputConfigurationResponse
int __onvifDeviceIO__SetVideoOutputConfiguration(
    _onvifDeviceIO__SetVideoOutputConfiguration* onvifDeviceIO__SetVideoOutputConfiguration,	///< Request parameter
    _onvifDeviceIO__SetVideoOutputConfigurationResponse* onvifDeviceIO__SetVideoOutputConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__SetAudioSourceConfiguration                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__SetAudioSourceConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:

Modify an audio source configuration. A device that has a one or more audio sources
shall support the setting of the AudioSourceConfiguration through this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetAudioSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__SetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__SetAudioSourceConfiguration* onvifDeviceIO__SetAudioSourceConfiguration,
    // response parameters:
    _onvifDeviceIO__SetAudioSourceConfigurationResponse* onvifDeviceIO__SetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__SetAudioSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__SetAudioSourceConfiguration* onvifDeviceIO__SetAudioSourceConfiguration,
    // response parameters:
    _onvifDeviceIO__SetAudioSourceConfigurationResponse* onvifDeviceIO__SetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	SetAudioSourceConfiguration document
//gsoap onvifDeviceIO service method-encoding:	SetAudioSourceConfiguration literal
//gsoap onvifDeviceIO service method-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration
//gsoap onvifDeviceIO service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetAudioSourceConfigurationResponse
int __onvifDeviceIO__SetAudioSourceConfiguration(
    _onvifDeviceIO__SetAudioSourceConfiguration* onvifDeviceIO__SetAudioSourceConfiguration,	///< Request parameter
    _onvifDeviceIO__SetAudioSourceConfigurationResponse* onvifDeviceIO__SetAudioSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__SetAudioOutputConfiguration                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__SetAudioOutputConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:

Modify an audio output configuration. A device that has one ore more audio outputs
shall support the setting of the AudioOutputConfiguration through this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetAudioOutputConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__SetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__SetAudioOutputConfiguration* onvifDeviceIO__SetAudioOutputConfiguration,
    // response parameters:
    _onvifDeviceIO__SetAudioOutputConfigurationResponse* onvifDeviceIO__SetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__SetAudioOutputConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__SetAudioOutputConfiguration* onvifDeviceIO__SetAudioOutputConfiguration,
    // response parameters:
    _onvifDeviceIO__SetAudioOutputConfigurationResponse* onvifDeviceIO__SetAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	SetAudioOutputConfiguration document
//gsoap onvifDeviceIO service method-encoding:	SetAudioOutputConfiguration literal
//gsoap onvifDeviceIO service method-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration
//gsoap onvifDeviceIO service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetAudioOutputConfigurationResponse
int __onvifDeviceIO__SetAudioOutputConfiguration(
    _onvifDeviceIO__SetAudioOutputConfiguration* onvifDeviceIO__SetAudioOutputConfiguration,	///< Request parameter
    _onvifDeviceIO__SetAudioOutputConfigurationResponse* onvifDeviceIO__SetAudioOutputConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetVideoSourceConfigurationOptions                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetVideoSourceConfigurationOptions" of service binding "DeviceIOBinding"

/**

Operation details:

Request the VideoSourceConfigurationOptions of a VideoSource. A device with one
or more video sources shall support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoSourceConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetVideoSourceConfigurationOptions* onvifDeviceIO__GetVideoSourceConfigurationOptions,
    // response parameters:
    _onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse* onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetVideoSourceConfigurationOptions* onvifDeviceIO__GetVideoSourceConfigurationOptions,
    // response parameters:
    _onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse* onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetVideoSourceConfigurationOptions document
//gsoap onvifDeviceIO service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap onvifDeviceIO service method-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions
//gsoap onvifDeviceIO service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoSourceConfigurationOptionsResponse
int __onvifDeviceIO__GetVideoSourceConfigurationOptions(
    _onvifDeviceIO__GetVideoSourceConfigurationOptions* onvifDeviceIO__GetVideoSourceConfigurationOptions,	///< Request parameter
    _onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse* onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetVideoOutputConfigurationOptions                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetVideoOutputConfigurationOptions" of service binding "DeviceIOBinding"

/**

Operation details:

Request the VideoOutputConfigurationOptions of a VideoOutput. A device that has
one or more video outputs shall support the retrieval of VideoOutputConfigurationOptions
through this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoOutputConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetVideoOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetVideoOutputConfigurationOptions* onvifDeviceIO__GetVideoOutputConfigurationOptions,
    // response parameters:
    _onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse* onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetVideoOutputConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetVideoOutputConfigurationOptions* onvifDeviceIO__GetVideoOutputConfigurationOptions,
    // response parameters:
    _onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse* onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetVideoOutputConfigurationOptions document
//gsoap onvifDeviceIO service method-encoding:	GetVideoOutputConfigurationOptions literal
//gsoap onvifDeviceIO service method-action:	GetVideoOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions
//gsoap onvifDeviceIO service method-output-action:	GetVideoOutputConfigurationOptions http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetVideoOutputConfigurationOptionsResponse
int __onvifDeviceIO__GetVideoOutputConfigurationOptions(
    _onvifDeviceIO__GetVideoOutputConfigurationOptions* onvifDeviceIO__GetVideoOutputConfigurationOptions,	///< Request parameter
    _onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse* onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetAudioSourceConfigurationOptions                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetAudioSourceConfigurationOptions" of service binding "DeviceIOBinding"

/**

Operation details:

Request the AudioSourceConfigurationOptions of an AudioSource. A device with one
ore more AudioSources shall support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioSourceConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetAudioSourceConfigurationOptions* onvifDeviceIO__GetAudioSourceConfigurationOptions,
    // response parameters:
    _onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse* onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetAudioSourceConfigurationOptions* onvifDeviceIO__GetAudioSourceConfigurationOptions,
    // response parameters:
    _onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse* onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetAudioSourceConfigurationOptions document
//gsoap onvifDeviceIO service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap onvifDeviceIO service method-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions
//gsoap onvifDeviceIO service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioSourceConfigurationOptionsResponse
int __onvifDeviceIO__GetAudioSourceConfigurationOptions(
    _onvifDeviceIO__GetAudioSourceConfigurationOptions* onvifDeviceIO__GetAudioSourceConfigurationOptions,	///< Request parameter
    _onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse* onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetAudioOutputConfigurationOptions                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetAudioOutputConfigurationOptions" of service binding "DeviceIOBinding"

/**

Operation details:

Request the available settings and ranges for a physical Audio output. A device
that has one or more AudioOutputs shall support this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioOutputConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetAudioOutputConfigurationOptions* onvifDeviceIO__GetAudioOutputConfigurationOptions,
    // response parameters:
    _onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse* onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetAudioOutputConfigurationOptions* onvifDeviceIO__GetAudioOutputConfigurationOptions,
    // response parameters:
    _onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse* onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetAudioOutputConfigurationOptions document
//gsoap onvifDeviceIO service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap onvifDeviceIO service method-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions
//gsoap onvifDeviceIO service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetAudioOutputConfigurationOptionsResponse
int __onvifDeviceIO__GetAudioOutputConfigurationOptions(
    _onvifDeviceIO__GetAudioOutputConfigurationOptions* onvifDeviceIO__GetAudioOutputConfigurationOptions,	///< Request parameter
    _onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse* onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetRelayOutputs                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetRelayOutputs" of service binding "DeviceIOBinding"

/**

Operation details:

This operation gets a list of all available relay outputs and their settings.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetRelayOutputs"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetRelayOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetRelayOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__GetRelayOutputs*      onvifDevice__GetRelayOutputs,
    // response parameters:
    _onvifDevice__GetRelayOutputsResponse* onvifDevice__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetRelayOutputs(
    struct soap *soap,
    // request parameters:
    _onvifDevice__GetRelayOutputs*      onvifDevice__GetRelayOutputs,
    // response parameters:
    _onvifDevice__GetRelayOutputsResponse* onvifDevice__GetRelayOutputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetRelayOutputs document
//gsoap onvifDeviceIO service method-encoding:	GetRelayOutputs literal
//gsoap onvifDeviceIO service method-action:	GetRelayOutputs http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs
//gsoap onvifDeviceIO service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetRelayOutputsResponse
int __onvifDeviceIO__GetRelayOutputs(
    _onvifDevice__GetRelayOutputs*      onvifDevice__GetRelayOutputs,	///< Request parameter
    _onvifDevice__GetRelayOutputsResponse* onvifDevice__GetRelayOutputsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__SetRelayOutputSettings                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__SetRelayOutputSettings" of service binding "DeviceIOBinding"

/**

Operation details:

This operation sets the settings of a relay output.
				The relay can work in two relay modes: <ul>
					<li>
				Bistable  After setting the state, the relay
remains in this state.</li>
					<li>
				Monostable  After setting the state, the relay
returns to its idle state after the
				specified time.</li>
				</ul>
				The physical idle state of a relay output can be
configured by setting the IdleState to open or
				closed (inversion of the relay behaviour).<br/>
				Idle State open means that the relay is open
when the relay state is set to inactive through
				the trigger command (see Section 8.5.3) and closed
when the state is set to active through
				the same command.<br/>
				Idle State closed means, that the relay is
closed when the relay state is set to inactive
				through the trigger command (see Section 8.5.3)
and open when the state is set to active
				through the same command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetRelayOutputSettings"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetRelayOutputSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__SetRelayOutputSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__SetRelayOutputSettings* onvifDeviceIO__SetRelayOutputSettings,
    // response parameters:
    _onvifDeviceIO__SetRelayOutputSettingsResponse* onvifDeviceIO__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__SetRelayOutputSettings(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__SetRelayOutputSettings* onvifDeviceIO__SetRelayOutputSettings,
    // response parameters:
    _onvifDeviceIO__SetRelayOutputSettingsResponse* onvifDeviceIO__SetRelayOutputSettingsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	SetRelayOutputSettings document
//gsoap onvifDeviceIO service method-encoding:	SetRelayOutputSettings literal
//gsoap onvifDeviceIO service method-action:	SetRelayOutputSettings http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings
//gsoap onvifDeviceIO service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetRelayOutputSettingsResponse
int __onvifDeviceIO__SetRelayOutputSettings(
    _onvifDeviceIO__SetRelayOutputSettings* onvifDeviceIO__SetRelayOutputSettings,	///< Request parameter
    _onvifDeviceIO__SetRelayOutputSettingsResponse* onvifDeviceIO__SetRelayOutputSettingsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__SetRelayOutputState                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__SetRelayOutputState" of service binding "DeviceIOBinding"

/**

Operation details:

Modify the relay state.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetRelayOutputState"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetRelayOutputStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__SetRelayOutputState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDevice__SetRelayOutputState*  onvifDevice__SetRelayOutputState,
    // response parameters:
    _onvifDevice__SetRelayOutputStateResponse* onvifDevice__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__SetRelayOutputState(
    struct soap *soap,
    // request parameters:
    _onvifDevice__SetRelayOutputState*  onvifDevice__SetRelayOutputState,
    // response parameters:
    _onvifDevice__SetRelayOutputStateResponse* onvifDevice__SetRelayOutputStateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	SetRelayOutputState document
//gsoap onvifDeviceIO service method-encoding:	SetRelayOutputState literal
//gsoap onvifDeviceIO service method-action:	SetRelayOutputState http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState
//gsoap onvifDeviceIO service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetRelayOutputStateResponse
int __onvifDeviceIO__SetRelayOutputState(
    _onvifDevice__SetRelayOutputState*  onvifDevice__SetRelayOutputState,	///< Request parameter
    _onvifDevice__SetRelayOutputStateResponse* onvifDevice__SetRelayOutputStateResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetDigitalInputs                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetDigitalInputs" of service binding "DeviceIOBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetDigitalInputs"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetDigitalInputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetDigitalInputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetDigitalInputs*   onvifDeviceIO__GetDigitalInputs,
    // response parameters:
    _onvifDeviceIO__GetDigitalInputsResponse* onvifDeviceIO__GetDigitalInputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetDigitalInputs(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetDigitalInputs*   onvifDeviceIO__GetDigitalInputs,
    // response parameters:
    _onvifDeviceIO__GetDigitalInputsResponse* onvifDeviceIO__GetDigitalInputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetDigitalInputs document
//gsoap onvifDeviceIO service method-encoding:	GetDigitalInputs literal
//gsoap onvifDeviceIO service method-action:	GetDigitalInputs http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs
//gsoap onvifDeviceIO service method-output-action:	GetDigitalInputs http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetDigitalInputsResponse
int __onvifDeviceIO__GetDigitalInputs(
    _onvifDeviceIO__GetDigitalInputs*   onvifDeviceIO__GetDigitalInputs,	///< Request parameter
    _onvifDeviceIO__GetDigitalInputsResponse* onvifDeviceIO__GetDigitalInputsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetSerialPorts                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetSerialPorts" of service binding "DeviceIOBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetSerialPorts"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetSerialPortsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetSerialPorts(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetSerialPorts*     onvifDeviceIO__GetSerialPorts,
    // response parameters:
    _onvifDeviceIO__GetSerialPortsResponse* onvifDeviceIO__GetSerialPortsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetSerialPorts(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetSerialPorts*     onvifDeviceIO__GetSerialPorts,
    // response parameters:
    _onvifDeviceIO__GetSerialPortsResponse* onvifDeviceIO__GetSerialPortsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetSerialPorts document
//gsoap onvifDeviceIO service method-encoding:	GetSerialPorts literal
//gsoap onvifDeviceIO service method-action:	GetSerialPorts http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts
//gsoap onvifDeviceIO service method-output-action:	GetSerialPorts http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetSerialPortsResponse
int __onvifDeviceIO__GetSerialPorts(
    _onvifDeviceIO__GetSerialPorts*     onvifDeviceIO__GetSerialPorts,	///< Request parameter
    _onvifDeviceIO__GetSerialPortsResponse* onvifDeviceIO__GetSerialPortsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetSerialPortConfiguration                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetSerialPortConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetSerialPortConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetSerialPortConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetSerialPortConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetSerialPortConfiguration* onvifDeviceIO__GetSerialPortConfiguration,
    // response parameters:
    _onvifDeviceIO__GetSerialPortConfigurationResponse* onvifDeviceIO__GetSerialPortConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetSerialPortConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetSerialPortConfiguration* onvifDeviceIO__GetSerialPortConfiguration,
    // response parameters:
    _onvifDeviceIO__GetSerialPortConfigurationResponse* onvifDeviceIO__GetSerialPortConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetSerialPortConfiguration document
//gsoap onvifDeviceIO service method-encoding:	GetSerialPortConfiguration literal
//gsoap onvifDeviceIO service method-action:	GetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations
//gsoap onvifDeviceIO service method-output-action:	GetSerialPortConfiguration http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetSerialPortConfigurationResponse
int __onvifDeviceIO__GetSerialPortConfiguration(
    _onvifDeviceIO__GetSerialPortConfiguration* onvifDeviceIO__GetSerialPortConfiguration,	///< Request parameter
    _onvifDeviceIO__GetSerialPortConfigurationResponse* onvifDeviceIO__GetSerialPortConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__SetSerialPortConfiguration                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__SetSerialPortConfiguration" of service binding "DeviceIOBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetSerialPortConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetSerialPortConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__SetSerialPortConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__SetSerialPortConfiguration* onvifDeviceIO__SetSerialPortConfiguration,
    // response parameters:
    _onvifDeviceIO__SetSerialPortConfigurationResponse* onvifDeviceIO__SetSerialPortConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__SetSerialPortConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__SetSerialPortConfiguration* onvifDeviceIO__SetSerialPortConfiguration,
    // response parameters:
    _onvifDeviceIO__SetSerialPortConfigurationResponse* onvifDeviceIO__SetSerialPortConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	SetSerialPortConfiguration document
//gsoap onvifDeviceIO service method-encoding:	SetSerialPortConfiguration literal
//gsoap onvifDeviceIO service method-action:	SetSerialPortConfiguration http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration
//gsoap onvifDeviceIO service method-output-action:	SetSerialPortConfiguration http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SetSerialPortConfigurationResponse
int __onvifDeviceIO__SetSerialPortConfiguration(
    _onvifDeviceIO__SetSerialPortConfiguration* onvifDeviceIO__SetSerialPortConfiguration,	///< Request parameter
    _onvifDeviceIO__SetSerialPortConfigurationResponse* onvifDeviceIO__SetSerialPortConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__GetSerialPortConfigurationOptions                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__GetSerialPortConfigurationOptions" of service binding "DeviceIOBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetSerialPortConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetSerialPortConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__GetSerialPortConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__GetSerialPortConfigurationOptions* onvifDeviceIO__GetSerialPortConfigurationOptions,
    // response parameters:
    _onvifDeviceIO__GetSerialPortConfigurationOptionsResponse* onvifDeviceIO__GetSerialPortConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__GetSerialPortConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__GetSerialPortConfigurationOptions* onvifDeviceIO__GetSerialPortConfigurationOptions,
    // response parameters:
    _onvifDeviceIO__GetSerialPortConfigurationOptionsResponse* onvifDeviceIO__GetSerialPortConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	GetSerialPortConfigurationOptions document
//gsoap onvifDeviceIO service method-encoding:	GetSerialPortConfigurationOptions literal
//gsoap onvifDeviceIO service method-action:	GetSerialPortConfigurationOptions http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions
//gsoap onvifDeviceIO service method-output-action:	GetSerialPortConfigurationOptions http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/GetSerialPortConfigurationOptionsResponse
int __onvifDeviceIO__GetSerialPortConfigurationOptions(
    _onvifDeviceIO__GetSerialPortConfigurationOptions* onvifDeviceIO__GetSerialPortConfigurationOptions,	///< Request parameter
    _onvifDeviceIO__GetSerialPortConfigurationOptionsResponse* onvifDeviceIO__GetSerialPortConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifDeviceIO__SendReceiveSerialCommand                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifDeviceIO__SendReceiveSerialCommand" of service binding "DeviceIOBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand"

  - Addressing action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SendReceiveSerialCommand"

  - Addressing response action: "http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SendReceiveSerialCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifDeviceIO__SendReceiveSerialCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifDeviceIO__SendReceiveSerialCommand* onvifDeviceIO__SendReceiveSerialCommand,
    // response parameters:
    _onvifDeviceIO__SendReceiveSerialCommandResponse* onvifDeviceIO__SendReceiveSerialCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifDeviceIO__SendReceiveSerialCommand(
    struct soap *soap,
    // request parameters:
    _onvifDeviceIO__SendReceiveSerialCommand* onvifDeviceIO__SendReceiveSerialCommand,
    // response parameters:
    _onvifDeviceIO__SendReceiveSerialCommandResponse* onvifDeviceIO__SendReceiveSerialCommandResponse
  );
@endcode

C++ proxy class (defined in soapDeviceIOBindingProxy.h):
@code
  class DeviceIOBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceIOBindingService.h):
@code
  class DeviceIOBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifDeviceIO service method-style:	SendReceiveSerialCommand document
//gsoap onvifDeviceIO service method-encoding:	SendReceiveSerialCommand literal
//gsoap onvifDeviceIO service method-action:	SendReceiveSerialCommand http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand
//gsoap onvifDeviceIO service method-output-action:	SendReceiveSerialCommand http://www.onvif.org/ver10/deviceIO/wsdl/DeviceIOPort/SendReceiveSerialCommandResponse
int __onvifDeviceIO__SendReceiveSerialCommand(
    _onvifDeviceIO__SendReceiveSerialCommand* onvifDeviceIO__SendReceiveSerialCommand,	///< Request parameter
    _onvifDeviceIO__SendReceiveSerialCommandResponse* onvifDeviceIO__SendReceiveSerialCommandResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   ImagingBinding                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifImg__GetServiceCapabilities                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifImg__GetServiceCapabilities" of service binding "ImagingBinding"

/**

Operation details:

Returns the capabilities of the imaging service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities"

  - Addressing action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetServiceCapabilities"

  - Addressing response action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifImg__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifImg__GetServiceCapabilities*  onvifImg__GetServiceCapabilities,
    // response parameters:
    _onvifImg__GetServiceCapabilitiesResponse* onvifImg__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifImg__GetServiceCapabilities(
    struct soap *soap,
    // request parameters:
    _onvifImg__GetServiceCapabilities*  onvifImg__GetServiceCapabilities,
    // response parameters:
    _onvifImg__GetServiceCapabilitiesResponse* onvifImg__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifImg service method-style:	GetServiceCapabilities document
//gsoap onvifImg service method-encoding:	GetServiceCapabilities literal
//gsoap onvifImg service method-action:	GetServiceCapabilities http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities
//gsoap onvifImg service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetServiceCapabilitiesResponse
int __onvifImg__GetServiceCapabilities(
    _onvifImg__GetServiceCapabilities*  onvifImg__GetServiceCapabilities,	///< Request parameter
    _onvifImg__GetServiceCapabilitiesResponse* onvifImg__GetServiceCapabilitiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifImg__GetImagingSettings                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifImg__GetImagingSettings" of service binding "ImagingBinding"

/**

Operation details:

Get the ImagingConfiguration for the requested VideoSource.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings"

  - Addressing action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetImagingSettings"

  - Addressing response action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetImagingSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifImg__GetImagingSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifImg__GetImagingSettings*      onvifImg__GetImagingSettings,
    // response parameters:
    _onvifImg__GetImagingSettingsResponse* onvifImg__GetImagingSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifImg__GetImagingSettings(
    struct soap *soap,
    // request parameters:
    _onvifImg__GetImagingSettings*      onvifImg__GetImagingSettings,
    // response parameters:
    _onvifImg__GetImagingSettingsResponse* onvifImg__GetImagingSettingsResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifImg service method-style:	GetImagingSettings document
//gsoap onvifImg service method-encoding:	GetImagingSettings literal
//gsoap onvifImg service method-action:	GetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings
//gsoap onvifImg service method-output-action:	GetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetImagingSettingsResponse
int __onvifImg__GetImagingSettings(
    _onvifImg__GetImagingSettings*      onvifImg__GetImagingSettings,	///< Request parameter
    _onvifImg__GetImagingSettingsResponse* onvifImg__GetImagingSettingsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifImg__SetImagingSettings                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifImg__SetImagingSettings" of service binding "ImagingBinding"

/**

Operation details:

Set the ImagingConfiguration for the requested VideoSource.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings"

  - Addressing action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/SetImagingSettings"

  - Addressing response action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/SetImagingSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifImg__SetImagingSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifImg__SetImagingSettings*      onvifImg__SetImagingSettings,
    // response parameters:
    _onvifImg__SetImagingSettingsResponse* onvifImg__SetImagingSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifImg__SetImagingSettings(
    struct soap *soap,
    // request parameters:
    _onvifImg__SetImagingSettings*      onvifImg__SetImagingSettings,
    // response parameters:
    _onvifImg__SetImagingSettingsResponse* onvifImg__SetImagingSettingsResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifImg service method-style:	SetImagingSettings document
//gsoap onvifImg service method-encoding:	SetImagingSettings literal
//gsoap onvifImg service method-action:	SetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings
//gsoap onvifImg service method-output-action:	SetImagingSettings http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/SetImagingSettingsResponse
int __onvifImg__SetImagingSettings(
    _onvifImg__SetImagingSettings*      onvifImg__SetImagingSettings,	///< Request parameter
    _onvifImg__SetImagingSettingsResponse* onvifImg__SetImagingSettingsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifImg__GetOptions                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifImg__GetOptions" of service binding "ImagingBinding"

/**

Operation details:

This operation gets the valid ranges for the imaging parameters that have device
specific ranges. 
			This command is mandatory for all device implementing the
imaging service. The command returns all supported parameters and their ranges

			such that these can be applied to the SetImagingSettings
command.<br/>
			For read-only parameters which cannot be modified via the
SetImagingSettings command only a single option or identical Min and Max values

			is provided.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/imaging/wsdl/GetOptions"

  - Addressing action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetOptions"

  - Addressing response action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifImg__GetOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifImg__GetOptions*              onvifImg__GetOptions,
    // response parameters:
    _onvifImg__GetOptionsResponse*      onvifImg__GetOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifImg__GetOptions(
    struct soap *soap,
    // request parameters:
    _onvifImg__GetOptions*              onvifImg__GetOptions,
    // response parameters:
    _onvifImg__GetOptionsResponse*      onvifImg__GetOptionsResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifImg service method-style:	GetOptions document
//gsoap onvifImg service method-encoding:	GetOptions literal
//gsoap onvifImg service method-action:	GetOptions http://www.onvif.org/ver20/imaging/wsdl/GetOptions
//gsoap onvifImg service method-output-action:	GetOptions http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetOptionsResponse
int __onvifImg__GetOptions(
    _onvifImg__GetOptions*              onvifImg__GetOptions,	///< Request parameter
    _onvifImg__GetOptionsResponse*      onvifImg__GetOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifImg__Move                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifImg__Move" of service binding "ImagingBinding"

/**

Operation details:

The Move command moves the focus lens in an absolute, a relative or in a continuous
manner from its current position. 
			The speed argument is optional for absolute and relative
control, but required for continuous. If no speed argument is used, the default
speed is used. 
			Focus adjustments through this operation will turn off the
autofocus. A device with support for remote focus control should support absolute,

			relative or continuous control through the Move operation.
The supported MoveOpions are signalled via the GetMoveOptions command.
			At least one focus control capability is required for this
operation to be functional. <br/>
			The move operation contains the following commands:<br/>
				<b>Absolute</b>  Requires position parameter
and optionally takes a speed argument. A unitless type is used by default for focus
positioning and speed. Optionally, if supported, the position may be requested
in m-1 units. <br/>
				<b>Relative</b>  Requires distance parameter
and optionally takes a speed argument. Negative distance means negative direction.

			<b>Continuous</b>  Requires a speed argument. Negative
speed argument means negative direction.
			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/imaging/wsdl/Move"

  - Addressing action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/Move"

  - Addressing response action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/MoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifImg__Move(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifImg__Move*                    onvifImg__Move,
    // response parameters:
    _onvifImg__MoveResponse*            onvifImg__MoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifImg__Move(
    struct soap *soap,
    // request parameters:
    _onvifImg__Move*                    onvifImg__Move,
    // response parameters:
    _onvifImg__MoveResponse*            onvifImg__MoveResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifImg service method-style:	Move document
//gsoap onvifImg service method-encoding:	Move literal
//gsoap onvifImg service method-action:	Move http://www.onvif.org/ver20/imaging/wsdl/Move
//gsoap onvifImg service method-output-action:	Move http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/MoveResponse
int __onvifImg__Move(
    _onvifImg__Move*                    onvifImg__Move,	///< Request parameter
    _onvifImg__MoveResponse*            onvifImg__MoveResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifImg__Stop                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifImg__Stop" of service binding "ImagingBinding"

/**

Operation details:

The Stop command stops all ongoing focus movements of the lense. A device with support
for remote focus control as signalled via 
			the GetMoveOptions supports this command. <br/>The operation
will not affect ongoing autofocus operation.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/imaging/wsdl/FocusStop"

  - Addressing action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/Stop"

  - Addressing response action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/StopResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifImg__Stop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifImg__Stop*                    onvifImg__Stop,
    // response parameters:
    _onvifImg__StopResponse*            onvifImg__StopResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifImg__Stop(
    struct soap *soap,
    // request parameters:
    _onvifImg__Stop*                    onvifImg__Stop,
    // response parameters:
    _onvifImg__StopResponse*            onvifImg__StopResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifImg service method-style:	Stop document
//gsoap onvifImg service method-encoding:	Stop literal
//gsoap onvifImg service method-action:	Stop http://www.onvif.org/ver20/imaging/wsdl/FocusStop
//gsoap onvifImg service method-output-action:	Stop http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/StopResponse
int __onvifImg__Stop(
    _onvifImg__Stop*                    onvifImg__Stop,	///< Request parameter
    _onvifImg__StopResponse*            onvifImg__StopResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifImg__GetStatus                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifImg__GetStatus" of service binding "ImagingBinding"

/**

Operation details:

Via this command the current status of the Move operation can be requested. Supported
for this command is available if the support for the Move operation is signalled
via GetMoveOptions.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/imaging/wsdl/GetStatus"

  - Addressing action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetStatus"

  - Addressing response action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifImg__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifImg__GetStatus*               onvifImg__GetStatus,
    // response parameters:
    _onvifImg__GetStatusResponse*       onvifImg__GetStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifImg__GetStatus(
    struct soap *soap,
    // request parameters:
    _onvifImg__GetStatus*               onvifImg__GetStatus,
    // response parameters:
    _onvifImg__GetStatusResponse*       onvifImg__GetStatusResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifImg service method-style:	GetStatus document
//gsoap onvifImg service method-encoding:	GetStatus literal
//gsoap onvifImg service method-action:	GetStatus http://www.onvif.org/ver20/imaging/wsdl/GetStatus
//gsoap onvifImg service method-output-action:	GetStatus http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetStatusResponse
int __onvifImg__GetStatus(
    _onvifImg__GetStatus*               onvifImg__GetStatus,	///< Request parameter
    _onvifImg__GetStatusResponse*       onvifImg__GetStatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifImg__GetMoveOptions                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifImg__GetMoveOptions" of service binding "ImagingBinding"

/**

Operation details:

Imaging move operation options supported for the Video source.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions"

  - Addressing action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetMoveOptions"

  - Addressing response action: "http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetMoveOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifImg__GetMoveOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifImg__GetMoveOptions*          onvifImg__GetMoveOptions,
    // response parameters:
    _onvifImg__GetMoveOptionsResponse*  onvifImg__GetMoveOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifImg__GetMoveOptions(
    struct soap *soap,
    // request parameters:
    _onvifImg__GetMoveOptions*          onvifImg__GetMoveOptions,
    // response parameters:
    _onvifImg__GetMoveOptionsResponse*  onvifImg__GetMoveOptionsResponse
  );
@endcode

C++ proxy class (defined in soapImagingBindingProxy.h):
@code
  class ImagingBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapImagingBindingService.h):
@code
  class ImagingBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifImg service method-style:	GetMoveOptions document
//gsoap onvifImg service method-encoding:	GetMoveOptions literal
//gsoap onvifImg service method-action:	GetMoveOptions http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions
//gsoap onvifImg service method-output-action:	GetMoveOptions http://www.onvif.org/ver20/imaging/wsdl/ImagingPort/GetMoveOptionsResponse
int __onvifImg__GetMoveOptions(
    _onvifImg__GetMoveOptions*          onvifImg__GetMoveOptions,	///< Request parameter
    _onvifImg__GetMoveOptionsResponse*  onvifImg__GetMoveOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   MediaBinding                                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetServiceCapabilities                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetServiceCapabilities" of service binding "MediaBinding"

/**

Operation details:

Returns the capabilities of the media service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetServiceCapabilities"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetServiceCapabilities* onvifMedia__GetServiceCapabilities,
    // response parameters:
    _onvifMedia__GetServiceCapabilitiesResponse* onvifMedia__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetServiceCapabilities(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetServiceCapabilities* onvifMedia__GetServiceCapabilities,
    // response parameters:
    _onvifMedia__GetServiceCapabilitiesResponse* onvifMedia__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetServiceCapabilities document
//gsoap onvifMedia service method-encoding:	GetServiceCapabilities literal
//gsoap onvifMedia service method-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities
//gsoap onvifMedia service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/Media/GetServiceCapabilitiesResponse
int __onvifMedia__GetServiceCapabilities(
    _onvifMedia__GetServiceCapabilities* onvifMedia__GetServiceCapabilities,	///< Request parameter
    _onvifMedia__GetServiceCapabilitiesResponse* onvifMedia__GetServiceCapabilitiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoSources                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoSources" of service binding "MediaBinding"

/**

Operation details:

This command lists all available physical video inputs of the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSources"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoSources*       onvifMedia__GetVideoSources,
    // response parameters:
    _onvifMedia__GetVideoSourcesResponse* onvifMedia__GetVideoSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoSources(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoSources*       onvifMedia__GetVideoSources,
    // response parameters:
    _onvifMedia__GetVideoSourcesResponse* onvifMedia__GetVideoSourcesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoSources document
//gsoap onvifMedia service method-encoding:	GetVideoSources literal
//gsoap onvifMedia service method-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/
//gsoap onvifMedia service method-output-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourcesResponse
int __onvifMedia__GetVideoSources(
    _onvifMedia__GetVideoSources*       onvifMedia__GetVideoSources,	///< Request parameter
    _onvifMedia__GetVideoSourcesResponse* onvifMedia__GetVideoSourcesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioSources                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioSources" of service binding "MediaBinding"

/**

Operation details:

This command lists all available physical audio inputs of the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSources"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioSources*       onvifMedia__GetAudioSources,
    // response parameters:
    _onvifMedia__GetAudioSourcesResponse* onvifMedia__GetAudioSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioSources(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioSources*       onvifMedia__GetAudioSources,
    // response parameters:
    _onvifMedia__GetAudioSourcesResponse* onvifMedia__GetAudioSourcesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioSources document
//gsoap onvifMedia service method-encoding:	GetAudioSources literal
//gsoap onvifMedia service method-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSources
//gsoap onvifMedia service method-output-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourcesResponse
int __onvifMedia__GetAudioSources(
    _onvifMedia__GetAudioSources*       onvifMedia__GetAudioSources,	///< Request parameter
    _onvifMedia__GetAudioSourcesResponse* onvifMedia__GetAudioSourcesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioOutputs                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioOutputs" of service binding "MediaBinding"

/**

Operation details:

This command lists all available physical audio outputs of the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputs"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioOutputs*       onvifMedia__GetAudioOutputs,
    // response parameters:
    _onvifMedia__GetAudioOutputsResponse* onvifMedia__GetAudioOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioOutputs(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioOutputs*       onvifMedia__GetAudioOutputs,
    // response parameters:
    _onvifMedia__GetAudioOutputsResponse* onvifMedia__GetAudioOutputsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioOutputs document
//gsoap onvifMedia service method-encoding:	GetAudioOutputs literal
//gsoap onvifMedia service method-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs
//gsoap onvifMedia service method-output-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputsResponse
int __onvifMedia__GetAudioOutputs(
    _onvifMedia__GetAudioOutputs*       onvifMedia__GetAudioOutputs,	///< Request parameter
    _onvifMedia__GetAudioOutputsResponse* onvifMedia__GetAudioOutputsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__CreateProfile                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__CreateProfile" of service binding "MediaBinding"

/**

Operation details:

This operation creates a new empty media profile. The media profile shall be created
in the
device and shall be persistent (remain after reboot). A created profile shall be
deletable and a device shall set the fixed attribute to false in the
returned Profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/CreateProfile"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/CreateProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__CreateProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__CreateProfile*         onvifMedia__CreateProfile,
    // response parameters:
    _onvifMedia__CreateProfileResponse* onvifMedia__CreateProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__CreateProfile(
    struct soap *soap,
    // request parameters:
    _onvifMedia__CreateProfile*         onvifMedia__CreateProfile,
    // response parameters:
    _onvifMedia__CreateProfileResponse* onvifMedia__CreateProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	CreateProfile document
//gsoap onvifMedia service method-encoding:	CreateProfile literal
//gsoap onvifMedia service method-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfile
//gsoap onvifMedia service method-output-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/Media/CreateProfileResponse
int __onvifMedia__CreateProfile(
    _onvifMedia__CreateProfile*         onvifMedia__CreateProfile,	///< Request parameter
    _onvifMedia__CreateProfileResponse* onvifMedia__CreateProfileResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetProfile                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetProfile" of service binding "MediaBinding"

/**

Operation details:

If the profile token is already known, a profile can be fetched through the GetProfile
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetProfile"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetProfile*            onvifMedia__GetProfile,
    // response parameters:
    _onvifMedia__GetProfileResponse*    onvifMedia__GetProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetProfile(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetProfile*            onvifMedia__GetProfile,
    // response parameters:
    _onvifMedia__GetProfileResponse*    onvifMedia__GetProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetProfile document
//gsoap onvifMedia service method-encoding:	GetProfile literal
//gsoap onvifMedia service method-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/
//gsoap onvifMedia service method-output-action:	GetProfile http://www.onvif.org/ver10/media/wsdl/Media/GetProfileResponse
int __onvifMedia__GetProfile(
    _onvifMedia__GetProfile*            onvifMedia__GetProfile,	///< Request parameter
    _onvifMedia__GetProfileResponse*    onvifMedia__GetProfileResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetProfiles                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetProfiles" of service binding "MediaBinding"

/**

Operation details:

Any endpoint can ask for the existing media profiles of a device using the GetProfiles
command. Pre-configured or dynamically configured profiles can be retrieved using
this
command. This command lists all configured profiles in a device. The client does
not need to
know the media profile in order to use the command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetProfiles"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetProfiles*           onvifMedia__GetProfiles,
    // response parameters:
    _onvifMedia__GetProfilesResponse*   onvifMedia__GetProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetProfiles(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetProfiles*           onvifMedia__GetProfiles,
    // response parameters:
    _onvifMedia__GetProfilesResponse*   onvifMedia__GetProfilesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetProfiles document
//gsoap onvifMedia service method-encoding:	GetProfiles literal
//gsoap onvifMedia service method-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfiles
//gsoap onvifMedia service method-output-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/Media/GetProfilesResponse
int __onvifMedia__GetProfiles(
    _onvifMedia__GetProfiles*           onvifMedia__GetProfiles,	///< Request parameter
    _onvifMedia__GetProfilesResponse*   onvifMedia__GetProfilesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddVideoEncoderConfiguration                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddVideoEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation adds a VideoEncoderConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a VideoEncoderConfiguration to a Profile means that a stream
using that Profile will
contain video data. Video encoder configurations should be added after adding a
video source configuration.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddVideoEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddVideoEncoderConfiguration* onvifMedia__AddVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__AddVideoEncoderConfigurationResponse* onvifMedia__AddVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddVideoEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddVideoEncoderConfiguration* onvifMedia__AddVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__AddVideoEncoderConfigurationResponse* onvifMedia__AddVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddVideoEncoderConfiguration document
//gsoap onvifMedia service method-encoding:	AddVideoEncoderConfiguration literal
//gsoap onvifMedia service method-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration
//gsoap onvifMedia service method-output-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/Media/AddVideoEncoderConfigurationResponse
int __onvifMedia__AddVideoEncoderConfiguration(
    _onvifMedia__AddVideoEncoderConfiguration* onvifMedia__AddVideoEncoderConfiguration,	///< Request parameter
    _onvifMedia__AddVideoEncoderConfigurationResponse* onvifMedia__AddVideoEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddVideoSourceConfiguration                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddVideoSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation adds a VideoSourceConfiguration to an existing media profile. If
such a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddVideoSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddVideoSourceConfiguration* onvifMedia__AddVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__AddVideoSourceConfigurationResponse* onvifMedia__AddVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddVideoSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddVideoSourceConfiguration* onvifMedia__AddVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__AddVideoSourceConfigurationResponse* onvifMedia__AddVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddVideoSourceConfiguration document
//gsoap onvifMedia service method-encoding:	AddVideoSourceConfiguration literal
//gsoap onvifMedia service method-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration
//gsoap onvifMedia service method-output-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/Media/AddVideoSourceConfigurationResponse
int __onvifMedia__AddVideoSourceConfiguration(
    _onvifMedia__AddVideoSourceConfiguration* onvifMedia__AddVideoSourceConfiguration,	///< Request parameter
    _onvifMedia__AddVideoSourceConfigurationResponse* onvifMedia__AddVideoSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddAudioEncoderConfiguration                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddAudioEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation adds an AudioEncoderConfiguration to an existing media profile. If
a configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding an AudioEncoderConfiguration to a media profile means that
streams using that media profile will contain audio data. Audio encoder configurations
should be added after adding an audio source configuration.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddAudioEncoderConfiguration* onvifMedia__AddAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__AddAudioEncoderConfigurationResponse* onvifMedia__AddAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddAudioEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddAudioEncoderConfiguration* onvifMedia__AddAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__AddAudioEncoderConfigurationResponse* onvifMedia__AddAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddAudioEncoderConfiguration document
//gsoap onvifMedia service method-encoding:	AddAudioEncoderConfiguration literal
//gsoap onvifMedia service method-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration
//gsoap onvifMedia service method-output-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/Media/AddAudioEncoderConfigurationResponse
int __onvifMedia__AddAudioEncoderConfiguration(
    _onvifMedia__AddAudioEncoderConfiguration* onvifMedia__AddAudioEncoderConfiguration,	///< Request parameter
    _onvifMedia__AddAudioEncoderConfigurationResponse* onvifMedia__AddAudioEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddAudioSourceConfiguration                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddAudioSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation adds an AudioSourceConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddAudioSourceConfiguration* onvifMedia__AddAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__AddAudioSourceConfigurationResponse* onvifMedia__AddAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddAudioSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddAudioSourceConfiguration* onvifMedia__AddAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__AddAudioSourceConfigurationResponse* onvifMedia__AddAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddAudioSourceConfiguration document
//gsoap onvifMedia service method-encoding:	AddAudioSourceConfiguration literal
//gsoap onvifMedia service method-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration
//gsoap onvifMedia service method-output-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/Media/AddAudioSourceConfigurationResponse
int __onvifMedia__AddAudioSourceConfiguration(
    _onvifMedia__AddAudioSourceConfiguration* onvifMedia__AddAudioSourceConfiguration,	///< Request parameter
    _onvifMedia__AddAudioSourceConfigurationResponse* onvifMedia__AddAudioSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddPTZConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddPTZConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation adds a PTZConfiguration to an existing media profile. If a configuration
exists
in the media profile, it will be replaced. The change shall be persistent. Adding
a PTZConfiguration to a media profile means that streams using that media profile
can
contain PTZ status (in the metadata), and that the media profile can be used for
controlling
PTZ movement.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddPTZConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddPTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddPTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddPTZConfiguration*   onvifMedia__AddPTZConfiguration,
    // response parameters:
    _onvifMedia__AddPTZConfigurationResponse* onvifMedia__AddPTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddPTZConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddPTZConfiguration*   onvifMedia__AddPTZConfiguration,
    // response parameters:
    _onvifMedia__AddPTZConfigurationResponse* onvifMedia__AddPTZConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddPTZConfiguration document
//gsoap onvifMedia service method-encoding:	AddPTZConfiguration literal
//gsoap onvifMedia service method-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration
//gsoap onvifMedia service method-output-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/Media/AddPTZConfigurationResponse
int __onvifMedia__AddPTZConfiguration(
    _onvifMedia__AddPTZConfiguration*   onvifMedia__AddPTZConfiguration,	///< Request parameter
    _onvifMedia__AddPTZConfigurationResponse* onvifMedia__AddPTZConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddVideoAnalyticsConfiguration                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddVideoAnalyticsConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation adds a VideoAnalytics configuration to an existing media profile.
If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a VideoAnalyticsConfiguration to a media profile means that
streams using that media
profile can contain video analytics data (in the metadata) as defined by the submitted
configuration reference. A profile containing only a video analytics configuration
but no video source configuration is incomplete. Therefore, a client should first
add a video source configuration to a profile before adding a video analytics configuration.
The device can deny adding of a video analytics
configuration before a video source configuration.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddVideoAnalyticsConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddVideoAnalyticsConfiguration* onvifMedia__AddVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__AddVideoAnalyticsConfigurationResponse* onvifMedia__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddVideoAnalyticsConfiguration* onvifMedia__AddVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__AddVideoAnalyticsConfigurationResponse* onvifMedia__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddVideoAnalyticsConfiguration document
//gsoap onvifMedia service method-encoding:	AddVideoAnalyticsConfiguration literal
//gsoap onvifMedia service method-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration
//gsoap onvifMedia service method-output-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/Media/AddVideoAnalyticsConfigurationResponse
int __onvifMedia__AddVideoAnalyticsConfiguration(
    _onvifMedia__AddVideoAnalyticsConfiguration* onvifMedia__AddVideoAnalyticsConfiguration,	///< Request parameter
    _onvifMedia__AddVideoAnalyticsConfigurationResponse* onvifMedia__AddVideoAnalyticsConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddMetadataConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddMetadataConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation adds a Metadata configuration to an existing media profile. If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a MetadataConfiguration to a Profile means that streams using
that profile contain metadata. Metadata can consist of events, PTZ status, and/or
video analytics data.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddMetadataConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddMetadataConfiguration* onvifMedia__AddMetadataConfiguration,
    // response parameters:
    _onvifMedia__AddMetadataConfigurationResponse* onvifMedia__AddMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddMetadataConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddMetadataConfiguration* onvifMedia__AddMetadataConfiguration,
    // response parameters:
    _onvifMedia__AddMetadataConfigurationResponse* onvifMedia__AddMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddMetadataConfiguration document
//gsoap onvifMedia service method-encoding:	AddMetadataConfiguration literal
//gsoap onvifMedia service method-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration
//gsoap onvifMedia service method-output-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/Media/AddMetadataConfigurationResponse
int __onvifMedia__AddMetadataConfiguration(
    _onvifMedia__AddMetadataConfiguration* onvifMedia__AddMetadataConfiguration,	///< Request parameter
    _onvifMedia__AddMetadataConfigurationResponse* onvifMedia__AddMetadataConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddAudioOutputConfiguration                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddAudioOutputConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation adds an AudioOutputConfiguration to an existing media profile. If
a configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioOutputConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddAudioOutputConfiguration* onvifMedia__AddAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__AddAudioOutputConfigurationResponse* onvifMedia__AddAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddAudioOutputConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddAudioOutputConfiguration* onvifMedia__AddAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__AddAudioOutputConfigurationResponse* onvifMedia__AddAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddAudioOutputConfiguration document
//gsoap onvifMedia service method-encoding:	AddAudioOutputConfiguration literal
//gsoap onvifMedia service method-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration
//gsoap onvifMedia service method-output-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/Media/AddAudioOutputConfigurationResponse
int __onvifMedia__AddAudioOutputConfiguration(
    _onvifMedia__AddAudioOutputConfiguration* onvifMedia__AddAudioOutputConfiguration,	///< Request parameter
    _onvifMedia__AddAudioOutputConfigurationResponse* onvifMedia__AddAudioOutputConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddAudioDecoderConfiguration                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddAudioDecoderConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation adds an AudioDecoderConfiguration to an existing media profile. If
a configuration exists in the media profile, it shall be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioDecoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddAudioDecoderConfiguration* onvifMedia__AddAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__AddAudioDecoderConfigurationResponse* onvifMedia__AddAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddAudioDecoderConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddAudioDecoderConfiguration* onvifMedia__AddAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__AddAudioDecoderConfigurationResponse* onvifMedia__AddAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddAudioDecoderConfiguration document
//gsoap onvifMedia service method-encoding:	AddAudioDecoderConfiguration literal
//gsoap onvifMedia service method-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration
//gsoap onvifMedia service method-output-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/Media/AddAudioDecoderConfigurationResponse
int __onvifMedia__AddAudioDecoderConfiguration(
    _onvifMedia__AddAudioDecoderConfiguration* onvifMedia__AddAudioDecoderConfiguration,	///< Request parameter
    _onvifMedia__AddAudioDecoderConfigurationResponse* onvifMedia__AddAudioDecoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveVideoEncoderConfiguration                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveVideoEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation removes a VideoEncoderConfiguration from an existing media profile.
If the
media profile does not contain a VideoEncoderConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveVideoEncoderConfiguration* onvifMedia__RemoveVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__RemoveVideoEncoderConfigurationResponse* onvifMedia__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveVideoEncoderConfiguration* onvifMedia__RemoveVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__RemoveVideoEncoderConfigurationResponse* onvifMedia__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveVideoEncoderConfiguration document
//gsoap onvifMedia service method-encoding:	RemoveVideoEncoderConfiguration literal
//gsoap onvifMedia service method-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration
//gsoap onvifMedia service method-output-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoEncoderConfigurationResponse
int __onvifMedia__RemoveVideoEncoderConfiguration(
    _onvifMedia__RemoveVideoEncoderConfiguration* onvifMedia__RemoveVideoEncoderConfiguration,	///< Request parameter
    _onvifMedia__RemoveVideoEncoderConfigurationResponse* onvifMedia__RemoveVideoEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveVideoSourceConfiguration                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveVideoSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation removes a VideoSourceConfiguration from an existing media profile.
If the
media profile does not contain a VideoSourceConfiguration, the operation has no
effect. The removal shall be persistent. Video source configurations should only
be removed after removing a
VideoEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveVideoSourceConfiguration* onvifMedia__RemoveVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__RemoveVideoSourceConfigurationResponse* onvifMedia__RemoveVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveVideoSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveVideoSourceConfiguration* onvifMedia__RemoveVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__RemoveVideoSourceConfigurationResponse* onvifMedia__RemoveVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveVideoSourceConfiguration document
//gsoap onvifMedia service method-encoding:	RemoveVideoSourceConfiguration literal
//gsoap onvifMedia service method-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration
//gsoap onvifMedia service method-output-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoSourceConfigurationResponse
int __onvifMedia__RemoveVideoSourceConfiguration(
    _onvifMedia__RemoveVideoSourceConfiguration* onvifMedia__RemoveVideoSourceConfiguration,	///< Request parameter
    _onvifMedia__RemoveVideoSourceConfigurationResponse* onvifMedia__RemoveVideoSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveAudioEncoderConfiguration                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveAudioEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation removes an AudioEncoderConfiguration from an existing media profile.
If the
media profile does not contain an AudioEncoderConfiguration, the operation has
no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveAudioEncoderConfiguration* onvifMedia__RemoveAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioEncoderConfigurationResponse* onvifMedia__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveAudioEncoderConfiguration* onvifMedia__RemoveAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioEncoderConfigurationResponse* onvifMedia__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveAudioEncoderConfiguration document
//gsoap onvifMedia service method-encoding:	RemoveAudioEncoderConfiguration literal
//gsoap onvifMedia service method-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration
//gsoap onvifMedia service method-output-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioEncoderConfigurationResponse
int __onvifMedia__RemoveAudioEncoderConfiguration(
    _onvifMedia__RemoveAudioEncoderConfiguration* onvifMedia__RemoveAudioEncoderConfiguration,	///< Request parameter
    _onvifMedia__RemoveAudioEncoderConfigurationResponse* onvifMedia__RemoveAudioEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveAudioSourceConfiguration                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveAudioSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation removes an AudioSourceConfiguration from an existing media profile.
If the
media profile does not contain an AudioSourceConfiguration, the operation has no
effect. The
removal shall be persistent. Audio source configurations should only be removed
after removing an
AudioEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveAudioSourceConfiguration* onvifMedia__RemoveAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioSourceConfigurationResponse* onvifMedia__RemoveAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveAudioSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveAudioSourceConfiguration* onvifMedia__RemoveAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioSourceConfigurationResponse* onvifMedia__RemoveAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveAudioSourceConfiguration document
//gsoap onvifMedia service method-encoding:	RemoveAudioSourceConfiguration literal
//gsoap onvifMedia service method-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration
//gsoap onvifMedia service method-output-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioSourceConfigurationResponse
int __onvifMedia__RemoveAudioSourceConfiguration(
    _onvifMedia__RemoveAudioSourceConfiguration* onvifMedia__RemoveAudioSourceConfiguration,	///< Request parameter
    _onvifMedia__RemoveAudioSourceConfigurationResponse* onvifMedia__RemoveAudioSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemovePTZConfiguration                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemovePTZConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation removes a PTZConfiguration from an existing media profile. If the
media profile
does not contain a PTZConfiguration, the operation has no effect. The removal shall
be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemovePTZConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemovePTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemovePTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemovePTZConfiguration* onvifMedia__RemovePTZConfiguration,
    // response parameters:
    _onvifMedia__RemovePTZConfigurationResponse* onvifMedia__RemovePTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemovePTZConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemovePTZConfiguration* onvifMedia__RemovePTZConfiguration,
    // response parameters:
    _onvifMedia__RemovePTZConfigurationResponse* onvifMedia__RemovePTZConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemovePTZConfiguration document
//gsoap onvifMedia service method-encoding:	RemovePTZConfiguration literal
//gsoap onvifMedia service method-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration
//gsoap onvifMedia service method-output-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/Media/RemovePTZConfigurationResponse
int __onvifMedia__RemovePTZConfiguration(
    _onvifMedia__RemovePTZConfiguration* onvifMedia__RemovePTZConfiguration,	///< Request parameter
    _onvifMedia__RemovePTZConfigurationResponse* onvifMedia__RemovePTZConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveVideoAnalyticsConfiguration                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveVideoAnalyticsConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation removes a VideoAnalyticsConfiguration from an existing media profile.
If the media profile does not contain a VideoAnalyticsConfiguration, the operation
has no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoAnalyticsConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveVideoAnalyticsConfiguration* onvifMedia__RemoveVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__RemoveVideoAnalyticsConfigurationResponse* onvifMedia__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveVideoAnalyticsConfiguration* onvifMedia__RemoveVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__RemoveVideoAnalyticsConfigurationResponse* onvifMedia__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveVideoAnalyticsConfiguration document
//gsoap onvifMedia service method-encoding:	RemoveVideoAnalyticsConfiguration literal
//gsoap onvifMedia service method-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration
//gsoap onvifMedia service method-output-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoAnalyticsConfigurationResponse
int __onvifMedia__RemoveVideoAnalyticsConfiguration(
    _onvifMedia__RemoveVideoAnalyticsConfiguration* onvifMedia__RemoveVideoAnalyticsConfiguration,	///< Request parameter
    _onvifMedia__RemoveVideoAnalyticsConfigurationResponse* onvifMedia__RemoveVideoAnalyticsConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveMetadataConfiguration                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveMetadataConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation removes a MetadataConfiguration from an existing media profile. If
the media profile does not contain a MetadataConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveMetadataConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveMetadataConfiguration* onvifMedia__RemoveMetadataConfiguration,
    // response parameters:
    _onvifMedia__RemoveMetadataConfigurationResponse* onvifMedia__RemoveMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveMetadataConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveMetadataConfiguration* onvifMedia__RemoveMetadataConfiguration,
    // response parameters:
    _onvifMedia__RemoveMetadataConfigurationResponse* onvifMedia__RemoveMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveMetadataConfiguration document
//gsoap onvifMedia service method-encoding:	RemoveMetadataConfiguration literal
//gsoap onvifMedia service method-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration
//gsoap onvifMedia service method-output-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/Media/RemoveMetadataConfigurationResponse
int __onvifMedia__RemoveMetadataConfiguration(
    _onvifMedia__RemoveMetadataConfiguration* onvifMedia__RemoveMetadataConfiguration,	///< Request parameter
    _onvifMedia__RemoveMetadataConfigurationResponse* onvifMedia__RemoveMetadataConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveAudioOutputConfiguration                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveAudioOutputConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation removes an AudioOutputConfiguration from an existing media profile.
If the media profile does not contain an AudioOutputConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioOutputConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveAudioOutputConfiguration* onvifMedia__RemoveAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioOutputConfigurationResponse* onvifMedia__RemoveAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveAudioOutputConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveAudioOutputConfiguration* onvifMedia__RemoveAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioOutputConfigurationResponse* onvifMedia__RemoveAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveAudioOutputConfiguration document
//gsoap onvifMedia service method-encoding:	RemoveAudioOutputConfiguration literal
//gsoap onvifMedia service method-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration
//gsoap onvifMedia service method-output-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioOutputConfigurationResponse
int __onvifMedia__RemoveAudioOutputConfiguration(
    _onvifMedia__RemoveAudioOutputConfiguration* onvifMedia__RemoveAudioOutputConfiguration,	///< Request parameter
    _onvifMedia__RemoveAudioOutputConfigurationResponse* onvifMedia__RemoveAudioOutputConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveAudioDecoderConfiguration                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveAudioDecoderConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation removes an AudioDecoderConfiguration from an existing media profile.
If the media profile does not contain an AudioDecoderConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioDecoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveAudioDecoderConfiguration* onvifMedia__RemoveAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioDecoderConfigurationResponse* onvifMedia__RemoveAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveAudioDecoderConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveAudioDecoderConfiguration* onvifMedia__RemoveAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioDecoderConfigurationResponse* onvifMedia__RemoveAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveAudioDecoderConfiguration document
//gsoap onvifMedia service method-encoding:	RemoveAudioDecoderConfiguration literal
//gsoap onvifMedia service method-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration
//gsoap onvifMedia service method-output-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioDecoderConfigurationResponse
int __onvifMedia__RemoveAudioDecoderConfiguration(
    _onvifMedia__RemoveAudioDecoderConfiguration* onvifMedia__RemoveAudioDecoderConfiguration,	///< Request parameter
    _onvifMedia__RemoveAudioDecoderConfigurationResponse* onvifMedia__RemoveAudioDecoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__DeleteProfile                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__DeleteProfile" of service binding "MediaBinding"

/**

Operation details:

This operation deletes a profile. This change shall always be persistent. Deletion
of a profile is only possible for non-fixed profiles

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/DeleteProfile"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/DeleteProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__DeleteProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__DeleteProfile*         onvifMedia__DeleteProfile,
    // response parameters:
    _onvifMedia__DeleteProfileResponse* onvifMedia__DeleteProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__DeleteProfile(
    struct soap *soap,
    // request parameters:
    _onvifMedia__DeleteProfile*         onvifMedia__DeleteProfile,
    // response parameters:
    _onvifMedia__DeleteProfileResponse* onvifMedia__DeleteProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	DeleteProfile document
//gsoap onvifMedia service method-encoding:	DeleteProfile literal
//gsoap onvifMedia service method-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfile
//gsoap onvifMedia service method-output-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/Media/DeleteProfileResponse
int __onvifMedia__DeleteProfile(
    _onvifMedia__DeleteProfile*         onvifMedia__DeleteProfile,	///< Request parameter
    _onvifMedia__DeleteProfileResponse* onvifMedia__DeleteProfileResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoSourceConfigurations                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoSourceConfigurations" of service binding "MediaBinding"

/**

Operation details:

This operation lists all existing video source configurations for a device. The
client need not know anything about the video source configurations in order to
use the command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoSourceConfigurations* onvifMedia__GetVideoSourceConfigurations,
    // response parameters:
    _onvifMedia__GetVideoSourceConfigurationsResponse* onvifMedia__GetVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoSourceConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoSourceConfigurations* onvifMedia__GetVideoSourceConfigurations,
    // response parameters:
    _onvifMedia__GetVideoSourceConfigurationsResponse* onvifMedia__GetVideoSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoSourceConfigurations document
//gsoap onvifMedia service method-encoding:	GetVideoSourceConfigurations literal
//gsoap onvifMedia service method-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations
//gsoap onvifMedia service method-output-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurationsResponse
int __onvifMedia__GetVideoSourceConfigurations(
    _onvifMedia__GetVideoSourceConfigurations* onvifMedia__GetVideoSourceConfigurations,	///< Request parameter
    _onvifMedia__GetVideoSourceConfigurationsResponse* onvifMedia__GetVideoSourceConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoEncoderConfigurations                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoEncoderConfigurations" of service binding "MediaBinding"

/**

Operation details:

This operation lists all existing video encoder configurations of a device. This
command lists all configured video encoder configurations in a device. The client
need not know anything apriori about the video encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoEncoderConfigurations* onvifMedia__GetVideoEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetVideoEncoderConfigurationsResponse* onvifMedia__GetVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoEncoderConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoEncoderConfigurations* onvifMedia__GetVideoEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetVideoEncoderConfigurationsResponse* onvifMedia__GetVideoEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoEncoderConfigurations document
//gsoap onvifMedia service method-encoding:	GetVideoEncoderConfigurations literal
//gsoap onvifMedia service method-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations
//gsoap onvifMedia service method-output-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurationsResponse
int __onvifMedia__GetVideoEncoderConfigurations(
    _onvifMedia__GetVideoEncoderConfigurations* onvifMedia__GetVideoEncoderConfigurations,	///< Request parameter
    _onvifMedia__GetVideoEncoderConfigurationsResponse* onvifMedia__GetVideoEncoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioSourceConfigurations                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioSourceConfigurations" of service binding "MediaBinding"

/**

Operation details:

This operation lists all existing audio source configurations of a device. This
command lists all audio source configurations in a device. The client need not
know anything apriori about the audio source configurations in order to use the
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioSourceConfigurations* onvifMedia__GetAudioSourceConfigurations,
    // response parameters:
    _onvifMedia__GetAudioSourceConfigurationsResponse* onvifMedia__GetAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioSourceConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioSourceConfigurations* onvifMedia__GetAudioSourceConfigurations,
    // response parameters:
    _onvifMedia__GetAudioSourceConfigurationsResponse* onvifMedia__GetAudioSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioSourceConfigurations document
//gsoap onvifMedia service method-encoding:	GetAudioSourceConfigurations literal
//gsoap onvifMedia service method-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/
//gsoap onvifMedia service method-output-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurationsResponse
int __onvifMedia__GetAudioSourceConfigurations(
    _onvifMedia__GetAudioSourceConfigurations* onvifMedia__GetAudioSourceConfigurations,	///< Request parameter
    _onvifMedia__GetAudioSourceConfigurationsResponse* onvifMedia__GetAudioSourceConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioEncoderConfigurations                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioEncoderConfigurations" of service binding "MediaBinding"

/**

Operation details:

This operation lists all existing device audio encoder configurations. The client
need not know anything apriori about the audio encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioEncoderConfigurations* onvifMedia__GetAudioEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetAudioEncoderConfigurationsResponse* onvifMedia__GetAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioEncoderConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioEncoderConfigurations* onvifMedia__GetAudioEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetAudioEncoderConfigurationsResponse* onvifMedia__GetAudioEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioEncoderConfigurations document
//gsoap onvifMedia service method-encoding:	GetAudioEncoderConfigurations literal
//gsoap onvifMedia service method-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations
//gsoap onvifMedia service method-output-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurationsResponse
int __onvifMedia__GetAudioEncoderConfigurations(
    _onvifMedia__GetAudioEncoderConfigurations* onvifMedia__GetAudioEncoderConfigurations,	///< Request parameter
    _onvifMedia__GetAudioEncoderConfigurationsResponse* onvifMedia__GetAudioEncoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoAnalyticsConfigurations                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoAnalyticsConfigurations" of service binding "MediaBinding"

/**

Operation details:

This operation lists all video analytics configurations of a device. This command
lists all configured video analytics in a device. The client need not know anything
apriori about the video analytics in order to use the command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoAnalyticsConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoAnalyticsConfigurations* onvifMedia__GetVideoAnalyticsConfigurations,
    // response parameters:
    _onvifMedia__GetVideoAnalyticsConfigurationsResponse* onvifMedia__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoAnalyticsConfigurations* onvifMedia__GetVideoAnalyticsConfigurations,
    // response parameters:
    _onvifMedia__GetVideoAnalyticsConfigurationsResponse* onvifMedia__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoAnalyticsConfigurations document
//gsoap onvifMedia service method-encoding:	GetVideoAnalyticsConfigurations literal
//gsoap onvifMedia service method-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations
//gsoap onvifMedia service method-output-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetVideoAnalyticsConfigurationsResponse
int __onvifMedia__GetVideoAnalyticsConfigurations(
    _onvifMedia__GetVideoAnalyticsConfigurations* onvifMedia__GetVideoAnalyticsConfigurations,	///< Request parameter
    _onvifMedia__GetVideoAnalyticsConfigurationsResponse* onvifMedia__GetVideoAnalyticsConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetMetadataConfigurations                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetMetadataConfigurations" of service binding "MediaBinding"

/**

Operation details:

This operation lists all existing metadata configurations. The client need not know
anything apriori about the metadata in order to use the command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetMetadataConfigurations* onvifMedia__GetMetadataConfigurations,
    // response parameters:
    _onvifMedia__GetMetadataConfigurationsResponse* onvifMedia__GetMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetMetadataConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetMetadataConfigurations* onvifMedia__GetMetadataConfigurations,
    // response parameters:
    _onvifMedia__GetMetadataConfigurationsResponse* onvifMedia__GetMetadataConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetMetadataConfigurations document
//gsoap onvifMedia service method-encoding:	GetMetadataConfigurations literal
//gsoap onvifMedia service method-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations
//gsoap onvifMedia service method-output-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurationsResponse
int __onvifMedia__GetMetadataConfigurations(
    _onvifMedia__GetMetadataConfigurations* onvifMedia__GetMetadataConfigurations,	///< Request parameter
    _onvifMedia__GetMetadataConfigurationsResponse* onvifMedia__GetMetadataConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioOutputConfigurations                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioOutputConfigurations" of service binding "MediaBinding"

/**

Operation details:

This command lists all existing AudioOutputConfigurations of a device. The NVC need
not know anything apriori about the audio configurations to use this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioOutputConfigurations* onvifMedia__GetAudioOutputConfigurations,
    // response parameters:
    _onvifMedia__GetAudioOutputConfigurationsResponse* onvifMedia__GetAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioOutputConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioOutputConfigurations* onvifMedia__GetAudioOutputConfigurations,
    // response parameters:
    _onvifMedia__GetAudioOutputConfigurationsResponse* onvifMedia__GetAudioOutputConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioOutputConfigurations document
//gsoap onvifMedia service method-encoding:	GetAudioOutputConfigurations literal
//gsoap onvifMedia service method-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations
//gsoap onvifMedia service method-output-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurationsResponse
int __onvifMedia__GetAudioOutputConfigurations(
    _onvifMedia__GetAudioOutputConfigurations* onvifMedia__GetAudioOutputConfigurations,	///< Request parameter
    _onvifMedia__GetAudioOutputConfigurationsResponse* onvifMedia__GetAudioOutputConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioDecoderConfigurations                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioDecoderConfigurations" of service binding "MediaBinding"

/**

Operation details:

This command lists all existing AudioDecoderConfigurations of a device. The NVC
need not know anything apriori about the audio decoder configurations in order
to
use this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioDecoderConfigurations* onvifMedia__GetAudioDecoderConfigurations,
    // response parameters:
    _onvifMedia__GetAudioDecoderConfigurationsResponse* onvifMedia__GetAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioDecoderConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioDecoderConfigurations* onvifMedia__GetAudioDecoderConfigurations,
    // response parameters:
    _onvifMedia__GetAudioDecoderConfigurationsResponse* onvifMedia__GetAudioDecoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioDecoderConfigurations document
//gsoap onvifMedia service method-encoding:	GetAudioDecoderConfigurations literal
//gsoap onvifMedia service method-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations
//gsoap onvifMedia service method-output-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurationsResponse
int __onvifMedia__GetAudioDecoderConfigurations(
    _onvifMedia__GetAudioDecoderConfigurations* onvifMedia__GetAudioDecoderConfigurations,	///< Request parameter
    _onvifMedia__GetAudioDecoderConfigurationsResponse* onvifMedia__GetAudioDecoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoSourceConfiguration                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:

If the video source configuration token is already known, the video source configuration
can be fetched through the GetVideoSourceConfiguration command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoSourceConfiguration* onvifMedia__GetVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__GetVideoSourceConfigurationResponse* onvifMedia__GetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoSourceConfiguration* onvifMedia__GetVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__GetVideoSourceConfigurationResponse* onvifMedia__GetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoSourceConfiguration document
//gsoap onvifMedia service method-encoding:	GetVideoSourceConfiguration literal
//gsoap onvifMedia service method-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration
//gsoap onvifMedia service method-output-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurationResponse
int __onvifMedia__GetVideoSourceConfiguration(
    _onvifMedia__GetVideoSourceConfiguration* onvifMedia__GetVideoSourceConfiguration,	///< Request parameter
    _onvifMedia__GetVideoSourceConfigurationResponse* onvifMedia__GetVideoSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoEncoderConfiguration                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:

If the video encoder configuration token is already known, the encoder configuration
can be fetched through the GetVideoEncoderConfiguration command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoEncoderConfiguration* onvifMedia__GetVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__GetVideoEncoderConfigurationResponse* onvifMedia__GetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoEncoderConfiguration* onvifMedia__GetVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__GetVideoEncoderConfigurationResponse* onvifMedia__GetVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoEncoderConfiguration document
//gsoap onvifMedia service method-encoding:	GetVideoEncoderConfiguration literal
//gsoap onvifMedia service method-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration
//gsoap onvifMedia service method-output-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurationResponse
int __onvifMedia__GetVideoEncoderConfiguration(
    _onvifMedia__GetVideoEncoderConfiguration* onvifMedia__GetVideoEncoderConfiguration,	///< Request parameter
    _onvifMedia__GetVideoEncoderConfigurationResponse* onvifMedia__GetVideoEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioSourceConfiguration                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:

The GetAudioSourceConfiguration command fetches the audio source configurations
if the audio source configuration token is already known. An

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioSourceConfiguration* onvifMedia__GetAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__GetAudioSourceConfigurationResponse* onvifMedia__GetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioSourceConfiguration* onvifMedia__GetAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__GetAudioSourceConfigurationResponse* onvifMedia__GetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioSourceConfiguration document
//gsoap onvifMedia service method-encoding:	GetAudioSourceConfiguration literal
//gsoap onvifMedia service method-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration
//gsoap onvifMedia service method-output-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurationResponse
int __onvifMedia__GetAudioSourceConfiguration(
    _onvifMedia__GetAudioSourceConfiguration* onvifMedia__GetAudioSourceConfiguration,	///< Request parameter
    _onvifMedia__GetAudioSourceConfigurationResponse* onvifMedia__GetAudioSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioEncoderConfiguration                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:

The GetAudioEncoderConfiguration command fetches the encoder configuration if the
audio encoder configuration token is known.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioEncoderConfiguration* onvifMedia__GetAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__GetAudioEncoderConfigurationResponse* onvifMedia__GetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioEncoderConfiguration* onvifMedia__GetAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__GetAudioEncoderConfigurationResponse* onvifMedia__GetAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioEncoderConfiguration document
//gsoap onvifMedia service method-encoding:	GetAudioEncoderConfiguration literal
//gsoap onvifMedia service method-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration
//gsoap onvifMedia service method-output-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurationResponse
int __onvifMedia__GetAudioEncoderConfiguration(
    _onvifMedia__GetAudioEncoderConfiguration* onvifMedia__GetAudioEncoderConfiguration,	///< Request parameter
    _onvifMedia__GetAudioEncoderConfigurationResponse* onvifMedia__GetAudioEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoAnalyticsConfiguration                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoAnalyticsConfiguration" of service binding "MediaBinding"

/**

Operation details:

The GetVideoAnalyticsConfiguration command fetches the video analytics configuration
if the video analytics token is known.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoAnalyticsConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoAnalyticsConfiguration* onvifMedia__GetVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__GetVideoAnalyticsConfigurationResponse* onvifMedia__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoAnalyticsConfiguration* onvifMedia__GetVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__GetVideoAnalyticsConfigurationResponse* onvifMedia__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoAnalyticsConfiguration document
//gsoap onvifMedia service method-encoding:	GetVideoAnalyticsConfiguration literal
//gsoap onvifMedia service method-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration
//gsoap onvifMedia service method-output-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/Media/GetVideoAnalyticsConfigurationResponse
int __onvifMedia__GetVideoAnalyticsConfiguration(
    _onvifMedia__GetVideoAnalyticsConfiguration* onvifMedia__GetVideoAnalyticsConfiguration,	///< Request parameter
    _onvifMedia__GetVideoAnalyticsConfigurationResponse* onvifMedia__GetVideoAnalyticsConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetMetadataConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetMetadataConfiguration" of service binding "MediaBinding"

/**

Operation details:

The GetMetadataConfiguration command fetches the metadata configuration if the metadata
token is known.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetMetadataConfiguration* onvifMedia__GetMetadataConfiguration,
    // response parameters:
    _onvifMedia__GetMetadataConfigurationResponse* onvifMedia__GetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetMetadataConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetMetadataConfiguration* onvifMedia__GetMetadataConfiguration,
    // response parameters:
    _onvifMedia__GetMetadataConfigurationResponse* onvifMedia__GetMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetMetadataConfiguration document
//gsoap onvifMedia service method-encoding:	GetMetadataConfiguration literal
//gsoap onvifMedia service method-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration
//gsoap onvifMedia service method-output-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurationResponse
int __onvifMedia__GetMetadataConfiguration(
    _onvifMedia__GetMetadataConfiguration* onvifMedia__GetMetadataConfiguration,	///< Request parameter
    _onvifMedia__GetMetadataConfigurationResponse* onvifMedia__GetMetadataConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioOutputConfiguration                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioOutputConfiguration" of service binding "MediaBinding"

/**

Operation details:

If the audio output configuration token is already known, the output configuration
can be fetched through the GetAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioOutputConfiguration* onvifMedia__GetAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__GetAudioOutputConfigurationResponse* onvifMedia__GetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioOutputConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioOutputConfiguration* onvifMedia__GetAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__GetAudioOutputConfigurationResponse* onvifMedia__GetAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioOutputConfiguration document
//gsoap onvifMedia service method-encoding:	GetAudioOutputConfiguration literal
//gsoap onvifMedia service method-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration
//gsoap onvifMedia service method-output-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurationResponse
int __onvifMedia__GetAudioOutputConfiguration(
    _onvifMedia__GetAudioOutputConfiguration* onvifMedia__GetAudioOutputConfiguration,	///< Request parameter
    _onvifMedia__GetAudioOutputConfigurationResponse* onvifMedia__GetAudioOutputConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioDecoderConfiguration                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioDecoderConfiguration" of service binding "MediaBinding"

/**

Operation details:

If the audio decoder configuration token is already known, the decoder configuration
can be fetched through the GetAudioDecoderConfiguration command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioDecoderConfiguration* onvifMedia__GetAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__GetAudioDecoderConfigurationResponse* onvifMedia__GetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioDecoderConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioDecoderConfiguration* onvifMedia__GetAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__GetAudioDecoderConfigurationResponse* onvifMedia__GetAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioDecoderConfiguration document
//gsoap onvifMedia service method-encoding:	GetAudioDecoderConfiguration literal
//gsoap onvifMedia service method-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration
//gsoap onvifMedia service method-output-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurationResponse
int __onvifMedia__GetAudioDecoderConfiguration(
    _onvifMedia__GetAudioDecoderConfiguration* onvifMedia__GetAudioDecoderConfiguration,	///< Request parameter
    _onvifMedia__GetAudioDecoderConfigurationResponse* onvifMedia__GetAudioDecoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleVideoEncoderConfigurations                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleVideoEncoderConfigurations" of service binding "MediaBinding"

/**

Operation details:

This operation lists all the video encoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoEncoderConfiguration command on the
media profile. The result will vary depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoEncoderConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleVideoEncoderConfigurations* onvifMedia__GetCompatibleVideoEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse* onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleVideoEncoderConfigurations* onvifMedia__GetCompatibleVideoEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse* onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleVideoEncoderConfigurations document
//gsoap onvifMedia service method-encoding:	GetCompatibleVideoEncoderConfigurations literal
//gsoap onvifMedia service method-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoEncoderConfigurationsResponse
int __onvifMedia__GetCompatibleVideoEncoderConfigurations(
    _onvifMedia__GetCompatibleVideoEncoderConfigurations* onvifMedia__GetCompatibleVideoEncoderConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse* onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleVideoSourceConfigurations                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleVideoSourceConfigurations" of service binding "MediaBinding"

/**

Operation details:

This operation requests all the video source configurations of the device that are
compatible
with a certain media profile. Each of the returned configurations shall be a valid
input
parameter for the AddVideoSourceConfiguration command on the media profile. The
result
will vary depending on the capabilities, configurations and settings in the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoSourceConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleVideoSourceConfigurations* onvifMedia__GetCompatibleVideoSourceConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse* onvifMedia__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleVideoSourceConfigurations* onvifMedia__GetCompatibleVideoSourceConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse* onvifMedia__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleVideoSourceConfigurations document
//gsoap onvifMedia service method-encoding:	GetCompatibleVideoSourceConfigurations literal
//gsoap onvifMedia service method-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoSourceConfigurationsResponse
int __onvifMedia__GetCompatibleVideoSourceConfigurations(
    _onvifMedia__GetCompatibleVideoSourceConfigurations* onvifMedia__GetCompatibleVideoSourceConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse* onvifMedia__GetCompatibleVideoSourceConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleAudioEncoderConfigurations                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleAudioEncoderConfigurations" of service binding "MediaBinding"

/**

Operation details:

This operation requests all audio encoder configurations of a device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioSourceConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioEncoderConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleAudioEncoderConfigurations* onvifMedia__GetCompatibleAudioEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse* onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleAudioEncoderConfigurations* onvifMedia__GetCompatibleAudioEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse* onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleAudioEncoderConfigurations document
//gsoap onvifMedia service method-encoding:	GetCompatibleAudioEncoderConfigurations literal
//gsoap onvifMedia service method-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioEncoderConfigurationsResponse
int __onvifMedia__GetCompatibleAudioEncoderConfigurations(
    _onvifMedia__GetCompatibleAudioEncoderConfigurations* onvifMedia__GetCompatibleAudioEncoderConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse* onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleAudioSourceConfigurations                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleAudioSourceConfigurations" of service binding "MediaBinding"

/**

Operation details:

This operation requests all audio source configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioEncoderConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioSourceConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleAudioSourceConfigurations* onvifMedia__GetCompatibleAudioSourceConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse* onvifMedia__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleAudioSourceConfigurations* onvifMedia__GetCompatibleAudioSourceConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse* onvifMedia__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleAudioSourceConfigurations document
//gsoap onvifMedia service method-encoding:	GetCompatibleAudioSourceConfigurations literal
//gsoap onvifMedia service method-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioSourceConfigurationsResponse
int __onvifMedia__GetCompatibleAudioSourceConfigurations(
    _onvifMedia__GetCompatibleAudioSourceConfigurations* onvifMedia__GetCompatibleAudioSourceConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse* onvifMedia__GetCompatibleAudioSourceConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleVideoAnalyticsConfigurations                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleVideoAnalyticsConfigurations" of service binding "MediaBinding"

/**

Operation details:

This operation requests all video analytic configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoAnalyticsConfiguration command on the
media profile. The result varies depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleVideoAnalyticsConfigurations* onvifMedia__GetCompatibleVideoAnalyticsConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse* onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleVideoAnalyticsConfigurations* onvifMedia__GetCompatibleVideoAnalyticsConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse* onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleVideoAnalyticsConfigurations document
//gsoap onvifMedia service method-encoding:	GetCompatibleVideoAnalyticsConfigurations literal
//gsoap onvifMedia service method-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoAnalyticsConfigurationsResponse
int __onvifMedia__GetCompatibleVideoAnalyticsConfigurations(
    _onvifMedia__GetCompatibleVideoAnalyticsConfigurations* onvifMedia__GetCompatibleVideoAnalyticsConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse* onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleMetadataConfigurations                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleMetadataConfigurations" of service binding "MediaBinding"

/**

Operation details:

This operation requests all the metadata configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddMetadataConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleMetadataConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleMetadataConfigurations* onvifMedia__GetCompatibleMetadataConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleMetadataConfigurationsResponse* onvifMedia__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleMetadataConfigurations* onvifMedia__GetCompatibleMetadataConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleMetadataConfigurationsResponse* onvifMedia__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleMetadataConfigurations document
//gsoap onvifMedia service method-encoding:	GetCompatibleMetadataConfigurations literal
//gsoap onvifMedia service method-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleMetadataConfigurationsResponse
int __onvifMedia__GetCompatibleMetadataConfigurations(
    _onvifMedia__GetCompatibleMetadataConfigurations* onvifMedia__GetCompatibleMetadataConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleMetadataConfigurationsResponse* onvifMedia__GetCompatibleMetadataConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleAudioOutputConfigurations                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleAudioOutputConfigurations" of service binding "MediaBinding"

/**

Operation details:

This command lists all audio output configurations of a device that are compatible
with a certain media profile. Each returned configuration shall be a valid input
for the 
AddAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioOutputConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleAudioOutputConfigurations* onvifMedia__GetCompatibleAudioOutputConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse* onvifMedia__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleAudioOutputConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleAudioOutputConfigurations* onvifMedia__GetCompatibleAudioOutputConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse* onvifMedia__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleAudioOutputConfigurations document
//gsoap onvifMedia service method-encoding:	GetCompatibleAudioOutputConfigurations literal
//gsoap onvifMedia service method-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioOutputConfigurationsResponse
int __onvifMedia__GetCompatibleAudioOutputConfigurations(
    _onvifMedia__GetCompatibleAudioOutputConfigurations* onvifMedia__GetCompatibleAudioOutputConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse* onvifMedia__GetCompatibleAudioOutputConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleAudioDecoderConfigurations                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleAudioDecoderConfigurations" of service binding "MediaBinding"

/**

Operation details:

This operation lists all the audio decoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddAudioDecoderConfiguration command on the
media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioDecoderConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleAudioDecoderConfigurations* onvifMedia__GetCompatibleAudioDecoderConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse* onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleAudioDecoderConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleAudioDecoderConfigurations* onvifMedia__GetCompatibleAudioDecoderConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse* onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleAudioDecoderConfigurations document
//gsoap onvifMedia service method-encoding:	GetCompatibleAudioDecoderConfigurations literal
//gsoap onvifMedia service method-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioDecoderConfigurationsResponse
int __onvifMedia__GetCompatibleAudioDecoderConfigurations(
    _onvifMedia__GetCompatibleAudioDecoderConfigurations* onvifMedia__GetCompatibleAudioDecoderConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse* onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetVideoSourceConfiguration                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetVideoSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation modifies a video source configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Running streams
using this configuration may be immediately updated according to the new settings.
The changes are not guaranteed to take effect unless the client requests a new
stream URI and restarts any affected stream. NVC methods for changing a running
stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetVideoSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetVideoSourceConfiguration* onvifMedia__SetVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__SetVideoSourceConfigurationResponse* onvifMedia__SetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetVideoSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetVideoSourceConfiguration* onvifMedia__SetVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__SetVideoSourceConfigurationResponse* onvifMedia__SetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetVideoSourceConfiguration document
//gsoap onvifMedia service method-encoding:	SetVideoSourceConfiguration literal
//gsoap onvifMedia service method-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration
//gsoap onvifMedia service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/Media/SetVideoSourceConfigurationResponse
int __onvifMedia__SetVideoSourceConfiguration(
    _onvifMedia__SetVideoSourceConfiguration* onvifMedia__SetVideoSourceConfiguration,	///< Request parameter
    _onvifMedia__SetVideoSourceConfigurationResponse* onvifMedia__SetVideoSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetVideoEncoderConfiguration                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetVideoEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation modifies a video encoder configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Changes in the
Multicast settings shall always be persistent. Running streams using this configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream. NVC methods for changing a running stream are out of scope for this specification.
<br/>SessionTimeout is provided as a hint for keeping rtsp session by a device.
If necessary the device may adapt parameter values for SessionTimeout elements
without returning an error. For the time between keep alive calls the client shall
adhere to the timeout value signaled via RTSP.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetVideoEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetVideoEncoderConfiguration* onvifMedia__SetVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__SetVideoEncoderConfigurationResponse* onvifMedia__SetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetVideoEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetVideoEncoderConfiguration* onvifMedia__SetVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__SetVideoEncoderConfigurationResponse* onvifMedia__SetVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetVideoEncoderConfiguration document
//gsoap onvifMedia service method-encoding:	SetVideoEncoderConfiguration literal
//gsoap onvifMedia service method-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration
//gsoap onvifMedia service method-output-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/Media/SetVideoEncoderConfigurationResponse
int __onvifMedia__SetVideoEncoderConfiguration(
    _onvifMedia__SetVideoEncoderConfiguration* onvifMedia__SetVideoEncoderConfiguration,	///< Request parameter
    _onvifMedia__SetVideoEncoderConfigurationResponse* onvifMedia__SetVideoEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetAudioSourceConfiguration                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetAudioSourceConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation modifies an audio source configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream
NVC methods for changing a running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetAudioSourceConfiguration* onvifMedia__SetAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__SetAudioSourceConfigurationResponse* onvifMedia__SetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetAudioSourceConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetAudioSourceConfiguration* onvifMedia__SetAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__SetAudioSourceConfigurationResponse* onvifMedia__SetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetAudioSourceConfiguration document
//gsoap onvifMedia service method-encoding:	SetAudioSourceConfiguration literal
//gsoap onvifMedia service method-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration
//gsoap onvifMedia service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/Media/SetAudioSourceConfigurationResponse
int __onvifMedia__SetAudioSourceConfiguration(
    _onvifMedia__SetAudioSourceConfiguration* onvifMedia__SetAudioSourceConfiguration,	///< Request parameter
    _onvifMedia__SetAudioSourceConfigurationResponse* onvifMedia__SetAudioSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetAudioEncoderConfiguration                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetAudioEncoderConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation modifies an audio encoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration may be immediately updated
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetAudioEncoderConfiguration* onvifMedia__SetAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__SetAudioEncoderConfigurationResponse* onvifMedia__SetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetAudioEncoderConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetAudioEncoderConfiguration* onvifMedia__SetAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__SetAudioEncoderConfigurationResponse* onvifMedia__SetAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetAudioEncoderConfiguration document
//gsoap onvifMedia service method-encoding:	SetAudioEncoderConfiguration literal
//gsoap onvifMedia service method-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration
//gsoap onvifMedia service method-output-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/Media/SetAudioEncoderConfigurationResponse
int __onvifMedia__SetAudioEncoderConfiguration(
    _onvifMedia__SetAudioEncoderConfiguration* onvifMedia__SetAudioEncoderConfiguration,	///< Request parameter
    _onvifMedia__SetAudioEncoderConfigurationResponse* onvifMedia__SetAudioEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetVideoAnalyticsConfiguration                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetVideoAnalyticsConfiguration" of service binding "MediaBinding"

/**

Operation details:

A video analytics configuration is modified using this command. The ForcePersistence
flag
indicates if the changes shall remain after reboot of the device or not. Running
streams using
this configuration shall be immediately updated according to the new settings.
Otherwise
inconsistencies can occur between the scene description processed by the rule engine
and
the notifications produced by analytics engine and rule engine which reference
the very same
video analytics configuration token.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetVideoAnalyticsConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetVideoAnalyticsConfiguration* onvifMedia__SetVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__SetVideoAnalyticsConfigurationResponse* onvifMedia__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetVideoAnalyticsConfiguration* onvifMedia__SetVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__SetVideoAnalyticsConfigurationResponse* onvifMedia__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetVideoAnalyticsConfiguration document
//gsoap onvifMedia service method-encoding:	SetVideoAnalyticsConfiguration literal
//gsoap onvifMedia service method-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration
//gsoap onvifMedia service method-output-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/Media/SetVideoAnalyticsConfigurationResponse
int __onvifMedia__SetVideoAnalyticsConfiguration(
    _onvifMedia__SetVideoAnalyticsConfiguration* onvifMedia__SetVideoAnalyticsConfiguration,	///< Request parameter
    _onvifMedia__SetVideoAnalyticsConfigurationResponse* onvifMedia__SetVideoAnalyticsConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetMetadataConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetMetadataConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation modifies a metadata configuration. The ForcePersistence flag indicates
if the
changes shall remain after reboot of the device. Changes in the Multicast settings
shall
always be persistent. Running streams using this configuration may be updated immediately
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetMetadataConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetMetadataConfiguration* onvifMedia__SetMetadataConfiguration,
    // response parameters:
    _onvifMedia__SetMetadataConfigurationResponse* onvifMedia__SetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetMetadataConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetMetadataConfiguration* onvifMedia__SetMetadataConfiguration,
    // response parameters:
    _onvifMedia__SetMetadataConfigurationResponse* onvifMedia__SetMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetMetadataConfiguration document
//gsoap onvifMedia service method-encoding:	SetMetadataConfiguration literal
//gsoap onvifMedia service method-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration
//gsoap onvifMedia service method-output-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/Media/SetMetadataConfigurationResponse
int __onvifMedia__SetMetadataConfiguration(
    _onvifMedia__SetMetadataConfiguration* onvifMedia__SetMetadataConfiguration,	///< Request parameter
    _onvifMedia__SetMetadataConfigurationResponse* onvifMedia__SetMetadataConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetAudioOutputConfiguration                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetAudioOutputConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation modifies an audio output configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioOutputConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetAudioOutputConfiguration* onvifMedia__SetAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__SetAudioOutputConfigurationResponse* onvifMedia__SetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetAudioOutputConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetAudioOutputConfiguration* onvifMedia__SetAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__SetAudioOutputConfigurationResponse* onvifMedia__SetAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetAudioOutputConfiguration document
//gsoap onvifMedia service method-encoding:	SetAudioOutputConfiguration literal
//gsoap onvifMedia service method-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration
//gsoap onvifMedia service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/Media/SetAudioOutputConfigurationResponse
int __onvifMedia__SetAudioOutputConfiguration(
    _onvifMedia__SetAudioOutputConfiguration* onvifMedia__SetAudioOutputConfiguration,	///< Request parameter
    _onvifMedia__SetAudioOutputConfigurationResponse* onvifMedia__SetAudioOutputConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetAudioDecoderConfiguration                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetAudioDecoderConfiguration" of service binding "MediaBinding"

/**

Operation details:

This operation modifies an audio decoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioDecoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetAudioDecoderConfiguration* onvifMedia__SetAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__SetAudioDecoderConfigurationResponse* onvifMedia__SetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetAudioDecoderConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetAudioDecoderConfiguration* onvifMedia__SetAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__SetAudioDecoderConfigurationResponse* onvifMedia__SetAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetAudioDecoderConfiguration document
//gsoap onvifMedia service method-encoding:	SetAudioDecoderConfiguration literal
//gsoap onvifMedia service method-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration
//gsoap onvifMedia service method-output-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/Media/SetAudioDecoderConfigurationResponse
int __onvifMedia__SetAudioDecoderConfiguration(
    _onvifMedia__SetAudioDecoderConfiguration* onvifMedia__SetAudioDecoderConfiguration,	///< Request parameter
    _onvifMedia__SetAudioDecoderConfigurationResponse* onvifMedia__SetAudioDecoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoSourceConfigurationOptions                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoSourceConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:

This operation returns the available options  (supported values and ranges for video
source configuration parameters) when the video source parameters are
reconfigured If a video source configuration is specified, the options shall concern
that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoSourceConfigurationOptions* onvifMedia__GetVideoSourceConfigurationOptions,
    // response parameters:
    _onvifMedia__GetVideoSourceConfigurationOptionsResponse* onvifMedia__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoSourceConfigurationOptions* onvifMedia__GetVideoSourceConfigurationOptions,
    // response parameters:
    _onvifMedia__GetVideoSourceConfigurationOptionsResponse* onvifMedia__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoSourceConfigurationOptions document
//gsoap onvifMedia service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap onvifMedia service method-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/
//gsoap onvifMedia service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurationOptionsResponse
int __onvifMedia__GetVideoSourceConfigurationOptions(
    _onvifMedia__GetVideoSourceConfigurationOptions* onvifMedia__GetVideoSourceConfigurationOptions,	///< Request parameter
    _onvifMedia__GetVideoSourceConfigurationOptionsResponse* onvifMedia__GetVideoSourceConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoEncoderConfigurationOptions                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoEncoderConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:

This operation returns the available options (supported values and ranges for video
encoder 
				configuration parameters) when the video encoder
parameters are reconfigured. <br/>
				For JPEG, MPEG4 and H264 extension elements have
been defined that provide additional information. A device must provide the 
				XxxOption information for all encodings supported
and should additionally provide the corresponding XxxOption2 information.<br/>
				This response contains the available video encoder
configuration options. If a video encoder configuration is specified, 
				the options shall concern that particular configuration.
If a media profile is specified, the options shall be 
				compatible with that media profile. If no tokens
are specified, the options shall be considered generic for the device.
			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoEncoderConfigurationOptions* onvifMedia__GetVideoEncoderConfigurationOptions,
    // response parameters:
    _onvifMedia__GetVideoEncoderConfigurationOptionsResponse* onvifMedia__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoEncoderConfigurationOptions* onvifMedia__GetVideoEncoderConfigurationOptions,
    // response parameters:
    _onvifMedia__GetVideoEncoderConfigurationOptionsResponse* onvifMedia__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoEncoderConfigurationOptions document
//gsoap onvifMedia service method-encoding:	GetVideoEncoderConfigurationOptions literal
//gsoap onvifMedia service method-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions
//gsoap onvifMedia service method-output-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurationOptionsResponse
int __onvifMedia__GetVideoEncoderConfigurationOptions(
    _onvifMedia__GetVideoEncoderConfigurationOptions* onvifMedia__GetVideoEncoderConfigurationOptions,	///< Request parameter
    _onvifMedia__GetVideoEncoderConfigurationOptionsResponse* onvifMedia__GetVideoEncoderConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioSourceConfigurationOptions                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioSourceConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:

This operation returns the available options (supported values and ranges for audio
source configuration parameters) when the audio source parameters are
reconfigured. If an audio source configuration is specified, the options shall
concern that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioSourceConfigurationOptions* onvifMedia__GetAudioSourceConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioSourceConfigurationOptionsResponse* onvifMedia__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioSourceConfigurationOptions* onvifMedia__GetAudioSourceConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioSourceConfigurationOptionsResponse* onvifMedia__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioSourceConfigurationOptions document
//gsoap onvifMedia service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap onvifMedia service method-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions
//gsoap onvifMedia service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurationOptionsResponse
int __onvifMedia__GetAudioSourceConfigurationOptions(
    _onvifMedia__GetAudioSourceConfigurationOptions* onvifMedia__GetAudioSourceConfigurationOptions,	///< Request parameter
    _onvifMedia__GetAudioSourceConfigurationOptionsResponse* onvifMedia__GetAudioSourceConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioEncoderConfigurationOptions                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioEncoderConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:

This operation returns the available options  (supported values and ranges for audio
encoder configuration parameters) when the audio encoder parameters are
reconfigured.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioEncoderConfigurationOptions* onvifMedia__GetAudioEncoderConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioEncoderConfigurationOptionsResponse* onvifMedia__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioEncoderConfigurationOptions* onvifMedia__GetAudioEncoderConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioEncoderConfigurationOptionsResponse* onvifMedia__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioEncoderConfigurationOptions document
//gsoap onvifMedia service method-encoding:	GetAudioEncoderConfigurationOptions literal
//gsoap onvifMedia service method-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions
//gsoap onvifMedia service method-output-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurationOptionsResponse
int __onvifMedia__GetAudioEncoderConfigurationOptions(
    _onvifMedia__GetAudioEncoderConfigurationOptions* onvifMedia__GetAudioEncoderConfigurationOptions,	///< Request parameter
    _onvifMedia__GetAudioEncoderConfigurationOptionsResponse* onvifMedia__GetAudioEncoderConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetMetadataConfigurationOptions                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetMetadataConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:

This operation returns the available options (supported values and ranges for metadata
configuration parameters) for changing the metadata configuration.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetMetadataConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetMetadataConfigurationOptions* onvifMedia__GetMetadataConfigurationOptions,
    // response parameters:
    _onvifMedia__GetMetadataConfigurationOptionsResponse* onvifMedia__GetMetadataConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetMetadataConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetMetadataConfigurationOptions* onvifMedia__GetMetadataConfigurationOptions,
    // response parameters:
    _onvifMedia__GetMetadataConfigurationOptionsResponse* onvifMedia__GetMetadataConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetMetadataConfigurationOptions document
//gsoap onvifMedia service method-encoding:	GetMetadataConfigurationOptions literal
//gsoap onvifMedia service method-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions
//gsoap onvifMedia service method-output-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurationOptionsResponse
int __onvifMedia__GetMetadataConfigurationOptions(
    _onvifMedia__GetMetadataConfigurationOptions* onvifMedia__GetMetadataConfigurationOptions,	///< Request parameter
    _onvifMedia__GetMetadataConfigurationOptionsResponse* onvifMedia__GetMetadataConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioOutputConfigurationOptions                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioOutputConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:

This operation returns the available options (supported values and ranges for audio
output configuration parameters) for configuring an audio output.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioOutputConfigurationOptions* onvifMedia__GetAudioOutputConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioOutputConfigurationOptionsResponse* onvifMedia__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioOutputConfigurationOptions* onvifMedia__GetAudioOutputConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioOutputConfigurationOptionsResponse* onvifMedia__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioOutputConfigurationOptions document
//gsoap onvifMedia service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap onvifMedia service method-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions
//gsoap onvifMedia service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurationOptionsResponse
int __onvifMedia__GetAudioOutputConfigurationOptions(
    _onvifMedia__GetAudioOutputConfigurationOptions* onvifMedia__GetAudioOutputConfigurationOptions,	///< Request parameter
    _onvifMedia__GetAudioOutputConfigurationOptionsResponse* onvifMedia__GetAudioOutputConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioDecoderConfigurationOptions                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioDecoderConfigurationOptions" of service binding "MediaBinding"

/**

Operation details:

This command list the audio decoding capabilities for a given profile and configuration
of a
device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioDecoderConfigurationOptions* onvifMedia__GetAudioDecoderConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioDecoderConfigurationOptionsResponse* onvifMedia__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioDecoderConfigurationOptions* onvifMedia__GetAudioDecoderConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioDecoderConfigurationOptionsResponse* onvifMedia__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioDecoderConfigurationOptions document
//gsoap onvifMedia service method-encoding:	GetAudioDecoderConfigurationOptions literal
//gsoap onvifMedia service method-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions
//gsoap onvifMedia service method-output-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurationOptionsResponse
int __onvifMedia__GetAudioDecoderConfigurationOptions(
    _onvifMedia__GetAudioDecoderConfigurationOptions* onvifMedia__GetAudioDecoderConfigurationOptions,	///< Request parameter
    _onvifMedia__GetAudioDecoderConfigurationOptionsResponse* onvifMedia__GetAudioDecoderConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances" of service binding "MediaBinding"

/**

Operation details:

The GetGuaranteedNumberOfVideoEncoderInstances command can be used to request the
minimum number of guaranteed video encoder instances (applications) per Video Source
Configuration.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetGuaranteedNumberOfVideoEncoderInstancesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances* onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances,
    // response parameters:
    _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse* onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances* onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances,
    // response parameters:
    _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse* onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetGuaranteedNumberOfVideoEncoderInstances document
//gsoap onvifMedia service method-encoding:	GetGuaranteedNumberOfVideoEncoderInstances literal
//gsoap onvifMedia service method-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances
//gsoap onvifMedia service method-output-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/Media/GetGuaranteedNumberOfVideoEncoderInstancesResponse
int __onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(
    _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances* onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances,	///< Request parameter
    _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse* onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetStreamUri                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetStreamUri" of service binding "MediaBinding"

/**

Operation details:

This operation requests a URI that can be used to initiate a live media stream using
RTSP as
the control protocol. The returned URI shall remain valid indefinitely even if
the profile is
changed. The ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be
set
accordingly (ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). <br/>
				The correct syntax for the StreamSetup element for
these media stream setups defined in 5.1.1 of the streaming specification are as
follows:
				<ol>
					<li>RTP unicast over UDP: StreamType = "RTP_unicast",
TransportProtocol = "UDP"</li>
					<li>RTP over RTSP over HTTP over TCP: StreamType
= "RTP_unicast", TransportProtocol = "HTTP"</li>
					<li>RTP over RTSP over TCP: StreamType =
"RTP_unicast", TransportProtocol = "RTSP"</li>
				</ol>
				<br/>
If a multicast stream is requested the VideoEncoderConfiguration, AudioEncoderConfiguration
and MetadataConfiguration element inside the corresponding 
media profile must be configured with valid multicast settings.<br/>
For full compatibility with other ONVIF services a device should not generate Uris
longer than
128 octets.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetStreamUri"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetStreamUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetStreamUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetStreamUri*          onvifMedia__GetStreamUri,
    // response parameters:
    _onvifMedia__GetStreamUriResponse*  onvifMedia__GetStreamUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetStreamUri(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetStreamUri*          onvifMedia__GetStreamUri,
    // response parameters:
    _onvifMedia__GetStreamUriResponse*  onvifMedia__GetStreamUriResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetStreamUri document
//gsoap onvifMedia service method-encoding:	GetStreamUri literal
//gsoap onvifMedia service method-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUri
//gsoap onvifMedia service method-output-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/Media/GetStreamUriResponse
int __onvifMedia__GetStreamUri(
    _onvifMedia__GetStreamUri*          onvifMedia__GetStreamUri,	///< Request parameter
    _onvifMedia__GetStreamUriResponse*  onvifMedia__GetStreamUriResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__StartMulticastStreaming                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__StartMulticastStreaming" of service binding "MediaBinding"

/**

Operation details:

This command starts multicast streaming using a specified media profile of a device.
Streaming continues until StopMulticastStreaming is called for the same Profile.
The
streaming shall continue after a reboot of the device until a StopMulticastStreaming
request is
received. The multicast address, port and TTL are configured in the
VideoEncoderConfiguration, AudioEncoderConfiguration and MetadataConfiguration
respectively.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/StartMulticastStreaming"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/StartMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__StartMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__StartMulticastStreaming* onvifMedia__StartMulticastStreaming,
    // response parameters:
    _onvifMedia__StartMulticastStreamingResponse* onvifMedia__StartMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__StartMulticastStreaming(
    struct soap *soap,
    // request parameters:
    _onvifMedia__StartMulticastStreaming* onvifMedia__StartMulticastStreaming,
    // response parameters:
    _onvifMedia__StartMulticastStreamingResponse* onvifMedia__StartMulticastStreamingResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	StartMulticastStreaming document
//gsoap onvifMedia service method-encoding:	StartMulticastStreaming literal
//gsoap onvifMedia service method-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming
//gsoap onvifMedia service method-output-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/Media/StartMulticastStreamingResponse
int __onvifMedia__StartMulticastStreaming(
    _onvifMedia__StartMulticastStreaming* onvifMedia__StartMulticastStreaming,	///< Request parameter
    _onvifMedia__StartMulticastStreamingResponse* onvifMedia__StartMulticastStreamingResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__StopMulticastStreaming                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__StopMulticastStreaming" of service binding "MediaBinding"

/**

Operation details:

This command stop multicast streaming using a specified media profile of a device

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/StopMulticastStreaming"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/StopMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__StopMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__StopMulticastStreaming* onvifMedia__StopMulticastStreaming,
    // response parameters:
    _onvifMedia__StopMulticastStreamingResponse* onvifMedia__StopMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__StopMulticastStreaming(
    struct soap *soap,
    // request parameters:
    _onvifMedia__StopMulticastStreaming* onvifMedia__StopMulticastStreaming,
    // response parameters:
    _onvifMedia__StopMulticastStreamingResponse* onvifMedia__StopMulticastStreamingResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	StopMulticastStreaming document
//gsoap onvifMedia service method-encoding:	StopMulticastStreaming literal
//gsoap onvifMedia service method-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming
//gsoap onvifMedia service method-output-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/Media/StopMulticastStreamingResponse
int __onvifMedia__StopMulticastStreaming(
    _onvifMedia__StopMulticastStreaming* onvifMedia__StopMulticastStreaming,	///< Request parameter
    _onvifMedia__StopMulticastStreamingResponse* onvifMedia__StopMulticastStreamingResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetSynchronizationPoint                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetSynchronizationPoint" of service binding "MediaBinding"

/**

Operation details:

Synchronization points allow clients to decode and correctly use all data after
the
synchronization point.
For example, if a video stream is configured with a large I-frame distance and
a client loses a
single packet, the client does not display video until the next I-frame is transmitted.
In such
cases, the client can request a Synchronization Point which enforces the device
to add an I-Frame as soon as possible. Clients can request Synchronization Points
for profiles. The device
shall add synchronization points for all streams associated with this profile.
Similarly, a synchronization point is used to get an update on full PTZ or event
status through
the metadata stream.
If a video stream is associated with the profile, an I-frame shall be added to
this video stream.
If a PTZ metadata stream is associated to the profile,
the PTZ position shall be repeated within the metadata stream.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetSynchronizationPoint"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetSynchronizationPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetSynchronizationPoint* onvifMedia__SetSynchronizationPoint,
    // response parameters:
    _onvifMedia__SetSynchronizationPointResponse* onvifMedia__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetSynchronizationPoint(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetSynchronizationPoint* onvifMedia__SetSynchronizationPoint,
    // response parameters:
    _onvifMedia__SetSynchronizationPointResponse* onvifMedia__SetSynchronizationPointResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetSynchronizationPoint document
//gsoap onvifMedia service method-encoding:	SetSynchronizationPoint literal
//gsoap onvifMedia service method-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint
//gsoap onvifMedia service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/Media/SetSynchronizationPointResponse
int __onvifMedia__SetSynchronizationPoint(
    _onvifMedia__SetSynchronizationPoint* onvifMedia__SetSynchronizationPoint,	///< Request parameter
    _onvifMedia__SetSynchronizationPointResponse* onvifMedia__SetSynchronizationPointResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetSnapshotUri                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetSnapshotUri" of service binding "MediaBinding"

/**

Operation details:

A client uses the GetSnapshotUri command to obtain a JPEG snapshot from the
device. The returned URI shall remain valid indefinitely even if the profile is
changed. The
ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set accordingly
(ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). The URI can be
used for
acquiring a JPEG image through a HTTP GET operation. The image encoding will always
be
JPEG regardless of the encoding setting in the media profile. The Jpeg settings
(like resolution or quality) may be taken from the profile if suitable. The provided
image will be updated automatically and independent from calls to GetSnapshotUri.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetSnapshotUri"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetSnapshotUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetSnapshotUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetSnapshotUri*        onvifMedia__GetSnapshotUri,
    // response parameters:
    _onvifMedia__GetSnapshotUriResponse* onvifMedia__GetSnapshotUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetSnapshotUri(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetSnapshotUri*        onvifMedia__GetSnapshotUri,
    // response parameters:
    _onvifMedia__GetSnapshotUriResponse* onvifMedia__GetSnapshotUriResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetSnapshotUri document
//gsoap onvifMedia service method-encoding:	GetSnapshotUri literal
//gsoap onvifMedia service method-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri
//gsoap onvifMedia service method-output-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/Media/GetSnapshotUriResponse
int __onvifMedia__GetSnapshotUri(
    _onvifMedia__GetSnapshotUri*        onvifMedia__GetSnapshotUri,	///< Request parameter
    _onvifMedia__GetSnapshotUriResponse* onvifMedia__GetSnapshotUriResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetServiceCapabilities_                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetServiceCapabilities_" of service binding "MediaBinding"

/**

Operation details:

Returns the capabilities of the media service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetServiceCapabilities"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetServiceCapabilities_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetServiceCapabilities* onvifMedia__GetServiceCapabilities,
    // response parameters:
    _onvifMedia__GetServiceCapabilitiesResponse* onvifMedia__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetServiceCapabilities_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetServiceCapabilities* onvifMedia__GetServiceCapabilities,
    // response parameters:
    _onvifMedia__GetServiceCapabilitiesResponse* onvifMedia__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetServiceCapabilities_ document
//gsoap onvifMedia service method-encoding:	GetServiceCapabilities_ literal
//gsoap onvifMedia service method-action:	GetServiceCapabilities_ http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities
//gsoap onvifMedia service method-output-action:	GetServiceCapabilities_ http://www.onvif.org/ver10/media/wsdl/Media/GetServiceCapabilitiesResponse
int __onvifMedia__GetServiceCapabilities_(
    _onvifMedia__GetServiceCapabilities* onvifMedia__GetServiceCapabilities,	///< Request parameter
    _onvifMedia__GetServiceCapabilitiesResponse* onvifMedia__GetServiceCapabilitiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoSources_                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoSources_" of service binding "MediaBinding"

/**

Operation details:

This command lists all available physical video inputs of the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSources"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoSources_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoSources*       onvifMedia__GetVideoSources,
    // response parameters:
    _onvifMedia__GetVideoSourcesResponse* onvifMedia__GetVideoSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoSources_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoSources*       onvifMedia__GetVideoSources,
    // response parameters:
    _onvifMedia__GetVideoSourcesResponse* onvifMedia__GetVideoSourcesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoSources_ document
//gsoap onvifMedia service method-encoding:	GetVideoSources_ literal
//gsoap onvifMedia service method-action:	GetVideoSources_ http://www.onvif.org/ver10/media/wsdlGetVideoSources/
//gsoap onvifMedia service method-output-action:	GetVideoSources_ http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourcesResponse
int __onvifMedia__GetVideoSources_(
    _onvifMedia__GetVideoSources*       onvifMedia__GetVideoSources,	///< Request parameter
    _onvifMedia__GetVideoSourcesResponse* onvifMedia__GetVideoSourcesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioSources_                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioSources_" of service binding "MediaBinding"

/**

Operation details:

This command lists all available physical audio inputs of the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSources"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioSources_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioSources*       onvifMedia__GetAudioSources,
    // response parameters:
    _onvifMedia__GetAudioSourcesResponse* onvifMedia__GetAudioSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioSources_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioSources*       onvifMedia__GetAudioSources,
    // response parameters:
    _onvifMedia__GetAudioSourcesResponse* onvifMedia__GetAudioSourcesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioSources_ document
//gsoap onvifMedia service method-encoding:	GetAudioSources_ literal
//gsoap onvifMedia service method-action:	GetAudioSources_ http://www.onvif.org/ver10/media/wsdl/GetAudioSources
//gsoap onvifMedia service method-output-action:	GetAudioSources_ http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourcesResponse
int __onvifMedia__GetAudioSources_(
    _onvifMedia__GetAudioSources*       onvifMedia__GetAudioSources,	///< Request parameter
    _onvifMedia__GetAudioSourcesResponse* onvifMedia__GetAudioSourcesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioOutputs_                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioOutputs_" of service binding "MediaBinding"

/**

Operation details:

This command lists all available physical audio outputs of the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputs"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioOutputs_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioOutputs*       onvifMedia__GetAudioOutputs,
    // response parameters:
    _onvifMedia__GetAudioOutputsResponse* onvifMedia__GetAudioOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioOutputs_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioOutputs*       onvifMedia__GetAudioOutputs,
    // response parameters:
    _onvifMedia__GetAudioOutputsResponse* onvifMedia__GetAudioOutputsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioOutputs_ document
//gsoap onvifMedia service method-encoding:	GetAudioOutputs_ literal
//gsoap onvifMedia service method-action:	GetAudioOutputs_ http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs
//gsoap onvifMedia service method-output-action:	GetAudioOutputs_ http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputsResponse
int __onvifMedia__GetAudioOutputs_(
    _onvifMedia__GetAudioOutputs*       onvifMedia__GetAudioOutputs,	///< Request parameter
    _onvifMedia__GetAudioOutputsResponse* onvifMedia__GetAudioOutputsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__CreateProfile_                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__CreateProfile_" of service binding "MediaBinding"

/**

Operation details:

This operation creates a new empty media profile. The media profile shall be created
in the
device and shall be persistent (remain after reboot). A created profile shall be
deletable and a device shall set the fixed attribute to false in the
returned Profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/CreateProfile"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/CreateProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__CreateProfile_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__CreateProfile*         onvifMedia__CreateProfile,
    // response parameters:
    _onvifMedia__CreateProfileResponse* onvifMedia__CreateProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__CreateProfile_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__CreateProfile*         onvifMedia__CreateProfile,
    // response parameters:
    _onvifMedia__CreateProfileResponse* onvifMedia__CreateProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	CreateProfile_ document
//gsoap onvifMedia service method-encoding:	CreateProfile_ literal
//gsoap onvifMedia service method-action:	CreateProfile_ http://www.onvif.org/ver10/media/wsdl/CreateProfile
//gsoap onvifMedia service method-output-action:	CreateProfile_ http://www.onvif.org/ver10/media/wsdl/Media/CreateProfileResponse
int __onvifMedia__CreateProfile_(
    _onvifMedia__CreateProfile*         onvifMedia__CreateProfile,	///< Request parameter
    _onvifMedia__CreateProfileResponse* onvifMedia__CreateProfileResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetProfile_                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetProfile_" of service binding "MediaBinding"

/**

Operation details:

If the profile token is already known, a profile can be fetched through the GetProfile
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetProfile"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetProfile_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetProfile*            onvifMedia__GetProfile,
    // response parameters:
    _onvifMedia__GetProfileResponse*    onvifMedia__GetProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetProfile_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetProfile*            onvifMedia__GetProfile,
    // response parameters:
    _onvifMedia__GetProfileResponse*    onvifMedia__GetProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetProfile_ document
//gsoap onvifMedia service method-encoding:	GetProfile_ literal
//gsoap onvifMedia service method-action:	GetProfile_ http://www.onvif.org/ver10/media/wsdlGetProfile/
//gsoap onvifMedia service method-output-action:	GetProfile_ http://www.onvif.org/ver10/media/wsdl/Media/GetProfileResponse
int __onvifMedia__GetProfile_(
    _onvifMedia__GetProfile*            onvifMedia__GetProfile,	///< Request parameter
    _onvifMedia__GetProfileResponse*    onvifMedia__GetProfileResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetProfiles_                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetProfiles_" of service binding "MediaBinding"

/**

Operation details:

Any endpoint can ask for the existing media profiles of a device using the GetProfiles
command. Pre-configured or dynamically configured profiles can be retrieved using
this
command. This command lists all configured profiles in a device. The client does
not need to
know the media profile in order to use the command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetProfiles"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetProfiles_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetProfiles*           onvifMedia__GetProfiles,
    // response parameters:
    _onvifMedia__GetProfilesResponse*   onvifMedia__GetProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetProfiles_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetProfiles*           onvifMedia__GetProfiles,
    // response parameters:
    _onvifMedia__GetProfilesResponse*   onvifMedia__GetProfilesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetProfiles_ document
//gsoap onvifMedia service method-encoding:	GetProfiles_ literal
//gsoap onvifMedia service method-action:	GetProfiles_ http://www.onvif.org/ver10/media/wsdl/GetProfiles
//gsoap onvifMedia service method-output-action:	GetProfiles_ http://www.onvif.org/ver10/media/wsdl/Media/GetProfilesResponse
int __onvifMedia__GetProfiles_(
    _onvifMedia__GetProfiles*           onvifMedia__GetProfiles,	///< Request parameter
    _onvifMedia__GetProfilesResponse*   onvifMedia__GetProfilesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddVideoEncoderConfiguration_                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddVideoEncoderConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation adds a VideoEncoderConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a VideoEncoderConfiguration to a Profile means that a stream
using that Profile will
contain video data. Video encoder configurations should be added after adding a
video source configuration.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddVideoEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddVideoEncoderConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddVideoEncoderConfiguration* onvifMedia__AddVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__AddVideoEncoderConfigurationResponse* onvifMedia__AddVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddVideoEncoderConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddVideoEncoderConfiguration* onvifMedia__AddVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__AddVideoEncoderConfigurationResponse* onvifMedia__AddVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddVideoEncoderConfiguration_ document
//gsoap onvifMedia service method-encoding:	AddVideoEncoderConfiguration_ literal
//gsoap onvifMedia service method-action:	AddVideoEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration
//gsoap onvifMedia service method-output-action:	AddVideoEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/AddVideoEncoderConfigurationResponse
int __onvifMedia__AddVideoEncoderConfiguration_(
    _onvifMedia__AddVideoEncoderConfiguration* onvifMedia__AddVideoEncoderConfiguration,	///< Request parameter
    _onvifMedia__AddVideoEncoderConfigurationResponse* onvifMedia__AddVideoEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddVideoSourceConfiguration_                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddVideoSourceConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation adds a VideoSourceConfiguration to an existing media profile. If
such a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddVideoSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddVideoSourceConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddVideoSourceConfiguration* onvifMedia__AddVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__AddVideoSourceConfigurationResponse* onvifMedia__AddVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddVideoSourceConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddVideoSourceConfiguration* onvifMedia__AddVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__AddVideoSourceConfigurationResponse* onvifMedia__AddVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddVideoSourceConfiguration_ document
//gsoap onvifMedia service method-encoding:	AddVideoSourceConfiguration_ literal
//gsoap onvifMedia service method-action:	AddVideoSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration
//gsoap onvifMedia service method-output-action:	AddVideoSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/AddVideoSourceConfigurationResponse
int __onvifMedia__AddVideoSourceConfiguration_(
    _onvifMedia__AddVideoSourceConfiguration* onvifMedia__AddVideoSourceConfiguration,	///< Request parameter
    _onvifMedia__AddVideoSourceConfigurationResponse* onvifMedia__AddVideoSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddAudioEncoderConfiguration_                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddAudioEncoderConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation adds an AudioEncoderConfiguration to an existing media profile. If
a configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding an AudioEncoderConfiguration to a media profile means that
streams using that media profile will contain audio data. Audio encoder configurations
should be added after adding an audio source configuration.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddAudioEncoderConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddAudioEncoderConfiguration* onvifMedia__AddAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__AddAudioEncoderConfigurationResponse* onvifMedia__AddAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddAudioEncoderConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddAudioEncoderConfiguration* onvifMedia__AddAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__AddAudioEncoderConfigurationResponse* onvifMedia__AddAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddAudioEncoderConfiguration_ document
//gsoap onvifMedia service method-encoding:	AddAudioEncoderConfiguration_ literal
//gsoap onvifMedia service method-action:	AddAudioEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration
//gsoap onvifMedia service method-output-action:	AddAudioEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/AddAudioEncoderConfigurationResponse
int __onvifMedia__AddAudioEncoderConfiguration_(
    _onvifMedia__AddAudioEncoderConfiguration* onvifMedia__AddAudioEncoderConfiguration,	///< Request parameter
    _onvifMedia__AddAudioEncoderConfigurationResponse* onvifMedia__AddAudioEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddAudioSourceConfiguration_                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddAudioSourceConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation adds an AudioSourceConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddAudioSourceConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddAudioSourceConfiguration* onvifMedia__AddAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__AddAudioSourceConfigurationResponse* onvifMedia__AddAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddAudioSourceConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddAudioSourceConfiguration* onvifMedia__AddAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__AddAudioSourceConfigurationResponse* onvifMedia__AddAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddAudioSourceConfiguration_ document
//gsoap onvifMedia service method-encoding:	AddAudioSourceConfiguration_ literal
//gsoap onvifMedia service method-action:	AddAudioSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration
//gsoap onvifMedia service method-output-action:	AddAudioSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/AddAudioSourceConfigurationResponse
int __onvifMedia__AddAudioSourceConfiguration_(
    _onvifMedia__AddAudioSourceConfiguration* onvifMedia__AddAudioSourceConfiguration,	///< Request parameter
    _onvifMedia__AddAudioSourceConfigurationResponse* onvifMedia__AddAudioSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddPTZConfiguration_                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddPTZConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation adds a PTZConfiguration to an existing media profile. If a configuration
exists
in the media profile, it will be replaced. The change shall be persistent. Adding
a PTZConfiguration to a media profile means that streams using that media profile
can
contain PTZ status (in the metadata), and that the media profile can be used for
controlling
PTZ movement.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddPTZConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddPTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddPTZConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddPTZConfiguration*   onvifMedia__AddPTZConfiguration,
    // response parameters:
    _onvifMedia__AddPTZConfigurationResponse* onvifMedia__AddPTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddPTZConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddPTZConfiguration*   onvifMedia__AddPTZConfiguration,
    // response parameters:
    _onvifMedia__AddPTZConfigurationResponse* onvifMedia__AddPTZConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddPTZConfiguration_ document
//gsoap onvifMedia service method-encoding:	AddPTZConfiguration_ literal
//gsoap onvifMedia service method-action:	AddPTZConfiguration_ http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration
//gsoap onvifMedia service method-output-action:	AddPTZConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/AddPTZConfigurationResponse
int __onvifMedia__AddPTZConfiguration_(
    _onvifMedia__AddPTZConfiguration*   onvifMedia__AddPTZConfiguration,	///< Request parameter
    _onvifMedia__AddPTZConfigurationResponse* onvifMedia__AddPTZConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddVideoAnalyticsConfiguration_                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddVideoAnalyticsConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation adds a VideoAnalytics configuration to an existing media profile.
If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a VideoAnalyticsConfiguration to a media profile means that
streams using that media
profile can contain video analytics data (in the metadata) as defined by the submitted
configuration reference. A profile containing only a video analytics configuration
but no video source configuration is incomplete. Therefore, a client should first
add a video source configuration to a profile before adding a video analytics configuration.
The device can deny adding of a video analytics
configuration before a video source configuration.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddVideoAnalyticsConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddVideoAnalyticsConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddVideoAnalyticsConfiguration* onvifMedia__AddVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__AddVideoAnalyticsConfigurationResponse* onvifMedia__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddVideoAnalyticsConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddVideoAnalyticsConfiguration* onvifMedia__AddVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__AddVideoAnalyticsConfigurationResponse* onvifMedia__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddVideoAnalyticsConfiguration_ document
//gsoap onvifMedia service method-encoding:	AddVideoAnalyticsConfiguration_ literal
//gsoap onvifMedia service method-action:	AddVideoAnalyticsConfiguration_ http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration
//gsoap onvifMedia service method-output-action:	AddVideoAnalyticsConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/AddVideoAnalyticsConfigurationResponse
int __onvifMedia__AddVideoAnalyticsConfiguration_(
    _onvifMedia__AddVideoAnalyticsConfiguration* onvifMedia__AddVideoAnalyticsConfiguration,	///< Request parameter
    _onvifMedia__AddVideoAnalyticsConfigurationResponse* onvifMedia__AddVideoAnalyticsConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddMetadataConfiguration_                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddMetadataConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation adds a Metadata configuration to an existing media profile. If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a MetadataConfiguration to a Profile means that streams using
that profile contain metadata. Metadata can consist of events, PTZ status, and/or
video analytics data.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddMetadataConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddMetadataConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddMetadataConfiguration* onvifMedia__AddMetadataConfiguration,
    // response parameters:
    _onvifMedia__AddMetadataConfigurationResponse* onvifMedia__AddMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddMetadataConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddMetadataConfiguration* onvifMedia__AddMetadataConfiguration,
    // response parameters:
    _onvifMedia__AddMetadataConfigurationResponse* onvifMedia__AddMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddMetadataConfiguration_ document
//gsoap onvifMedia service method-encoding:	AddMetadataConfiguration_ literal
//gsoap onvifMedia service method-action:	AddMetadataConfiguration_ http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration
//gsoap onvifMedia service method-output-action:	AddMetadataConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/AddMetadataConfigurationResponse
int __onvifMedia__AddMetadataConfiguration_(
    _onvifMedia__AddMetadataConfiguration* onvifMedia__AddMetadataConfiguration,	///< Request parameter
    _onvifMedia__AddMetadataConfigurationResponse* onvifMedia__AddMetadataConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddAudioOutputConfiguration_                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddAudioOutputConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation adds an AudioOutputConfiguration to an existing media profile. If
a configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioOutputConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddAudioOutputConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddAudioOutputConfiguration* onvifMedia__AddAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__AddAudioOutputConfigurationResponse* onvifMedia__AddAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddAudioOutputConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddAudioOutputConfiguration* onvifMedia__AddAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__AddAudioOutputConfigurationResponse* onvifMedia__AddAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddAudioOutputConfiguration_ document
//gsoap onvifMedia service method-encoding:	AddAudioOutputConfiguration_ literal
//gsoap onvifMedia service method-action:	AddAudioOutputConfiguration_ http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration
//gsoap onvifMedia service method-output-action:	AddAudioOutputConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/AddAudioOutputConfigurationResponse
int __onvifMedia__AddAudioOutputConfiguration_(
    _onvifMedia__AddAudioOutputConfiguration* onvifMedia__AddAudioOutputConfiguration,	///< Request parameter
    _onvifMedia__AddAudioOutputConfigurationResponse* onvifMedia__AddAudioOutputConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__AddAudioDecoderConfiguration_                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__AddAudioDecoderConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation adds an AudioDecoderConfiguration to an existing media profile. If
a configuration exists in the media profile, it shall be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioDecoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/AddAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__AddAudioDecoderConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__AddAudioDecoderConfiguration* onvifMedia__AddAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__AddAudioDecoderConfigurationResponse* onvifMedia__AddAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__AddAudioDecoderConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__AddAudioDecoderConfiguration* onvifMedia__AddAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__AddAudioDecoderConfigurationResponse* onvifMedia__AddAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	AddAudioDecoderConfiguration_ document
//gsoap onvifMedia service method-encoding:	AddAudioDecoderConfiguration_ literal
//gsoap onvifMedia service method-action:	AddAudioDecoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration
//gsoap onvifMedia service method-output-action:	AddAudioDecoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/AddAudioDecoderConfigurationResponse
int __onvifMedia__AddAudioDecoderConfiguration_(
    _onvifMedia__AddAudioDecoderConfiguration* onvifMedia__AddAudioDecoderConfiguration,	///< Request parameter
    _onvifMedia__AddAudioDecoderConfigurationResponse* onvifMedia__AddAudioDecoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveVideoEncoderConfiguration_                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveVideoEncoderConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation removes a VideoEncoderConfiguration from an existing media profile.
If the
media profile does not contain a VideoEncoderConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveVideoEncoderConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveVideoEncoderConfiguration* onvifMedia__RemoveVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__RemoveVideoEncoderConfigurationResponse* onvifMedia__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveVideoEncoderConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveVideoEncoderConfiguration* onvifMedia__RemoveVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__RemoveVideoEncoderConfigurationResponse* onvifMedia__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveVideoEncoderConfiguration_ document
//gsoap onvifMedia service method-encoding:	RemoveVideoEncoderConfiguration_ literal
//gsoap onvifMedia service method-action:	RemoveVideoEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration
//gsoap onvifMedia service method-output-action:	RemoveVideoEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoEncoderConfigurationResponse
int __onvifMedia__RemoveVideoEncoderConfiguration_(
    _onvifMedia__RemoveVideoEncoderConfiguration* onvifMedia__RemoveVideoEncoderConfiguration,	///< Request parameter
    _onvifMedia__RemoveVideoEncoderConfigurationResponse* onvifMedia__RemoveVideoEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveVideoSourceConfiguration_                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveVideoSourceConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation removes a VideoSourceConfiguration from an existing media profile.
If the
media profile does not contain a VideoSourceConfiguration, the operation has no
effect. The removal shall be persistent. Video source configurations should only
be removed after removing a
VideoEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveVideoSourceConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveVideoSourceConfiguration* onvifMedia__RemoveVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__RemoveVideoSourceConfigurationResponse* onvifMedia__RemoveVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveVideoSourceConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveVideoSourceConfiguration* onvifMedia__RemoveVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__RemoveVideoSourceConfigurationResponse* onvifMedia__RemoveVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveVideoSourceConfiguration_ document
//gsoap onvifMedia service method-encoding:	RemoveVideoSourceConfiguration_ literal
//gsoap onvifMedia service method-action:	RemoveVideoSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration
//gsoap onvifMedia service method-output-action:	RemoveVideoSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoSourceConfigurationResponse
int __onvifMedia__RemoveVideoSourceConfiguration_(
    _onvifMedia__RemoveVideoSourceConfiguration* onvifMedia__RemoveVideoSourceConfiguration,	///< Request parameter
    _onvifMedia__RemoveVideoSourceConfigurationResponse* onvifMedia__RemoveVideoSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveAudioEncoderConfiguration_                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveAudioEncoderConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation removes an AudioEncoderConfiguration from an existing media profile.
If the
media profile does not contain an AudioEncoderConfiguration, the operation has
no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveAudioEncoderConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveAudioEncoderConfiguration* onvifMedia__RemoveAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioEncoderConfigurationResponse* onvifMedia__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveAudioEncoderConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveAudioEncoderConfiguration* onvifMedia__RemoveAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioEncoderConfigurationResponse* onvifMedia__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveAudioEncoderConfiguration_ document
//gsoap onvifMedia service method-encoding:	RemoveAudioEncoderConfiguration_ literal
//gsoap onvifMedia service method-action:	RemoveAudioEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration
//gsoap onvifMedia service method-output-action:	RemoveAudioEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioEncoderConfigurationResponse
int __onvifMedia__RemoveAudioEncoderConfiguration_(
    _onvifMedia__RemoveAudioEncoderConfiguration* onvifMedia__RemoveAudioEncoderConfiguration,	///< Request parameter
    _onvifMedia__RemoveAudioEncoderConfigurationResponse* onvifMedia__RemoveAudioEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveAudioSourceConfiguration_                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveAudioSourceConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation removes an AudioSourceConfiguration from an existing media profile.
If the
media profile does not contain an AudioSourceConfiguration, the operation has no
effect. The
removal shall be persistent. Audio source configurations should only be removed
after removing an
AudioEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveAudioSourceConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveAudioSourceConfiguration* onvifMedia__RemoveAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioSourceConfigurationResponse* onvifMedia__RemoveAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveAudioSourceConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveAudioSourceConfiguration* onvifMedia__RemoveAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioSourceConfigurationResponse* onvifMedia__RemoveAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveAudioSourceConfiguration_ document
//gsoap onvifMedia service method-encoding:	RemoveAudioSourceConfiguration_ literal
//gsoap onvifMedia service method-action:	RemoveAudioSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration
//gsoap onvifMedia service method-output-action:	RemoveAudioSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioSourceConfigurationResponse
int __onvifMedia__RemoveAudioSourceConfiguration_(
    _onvifMedia__RemoveAudioSourceConfiguration* onvifMedia__RemoveAudioSourceConfiguration,	///< Request parameter
    _onvifMedia__RemoveAudioSourceConfigurationResponse* onvifMedia__RemoveAudioSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemovePTZConfiguration_                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemovePTZConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation removes a PTZConfiguration from an existing media profile. If the
media profile
does not contain a PTZConfiguration, the operation has no effect. The removal shall
be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemovePTZConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemovePTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemovePTZConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemovePTZConfiguration* onvifMedia__RemovePTZConfiguration,
    // response parameters:
    _onvifMedia__RemovePTZConfigurationResponse* onvifMedia__RemovePTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemovePTZConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemovePTZConfiguration* onvifMedia__RemovePTZConfiguration,
    // response parameters:
    _onvifMedia__RemovePTZConfigurationResponse* onvifMedia__RemovePTZConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemovePTZConfiguration_ document
//gsoap onvifMedia service method-encoding:	RemovePTZConfiguration_ literal
//gsoap onvifMedia service method-action:	RemovePTZConfiguration_ http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration
//gsoap onvifMedia service method-output-action:	RemovePTZConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/RemovePTZConfigurationResponse
int __onvifMedia__RemovePTZConfiguration_(
    _onvifMedia__RemovePTZConfiguration* onvifMedia__RemovePTZConfiguration,	///< Request parameter
    _onvifMedia__RemovePTZConfigurationResponse* onvifMedia__RemovePTZConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveVideoAnalyticsConfiguration_                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveVideoAnalyticsConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation removes a VideoAnalyticsConfiguration from an existing media profile.
If the media profile does not contain a VideoAnalyticsConfiguration, the operation
has no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoAnalyticsConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveVideoAnalyticsConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveVideoAnalyticsConfiguration* onvifMedia__RemoveVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__RemoveVideoAnalyticsConfigurationResponse* onvifMedia__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveVideoAnalyticsConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveVideoAnalyticsConfiguration* onvifMedia__RemoveVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__RemoveVideoAnalyticsConfigurationResponse* onvifMedia__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveVideoAnalyticsConfiguration_ document
//gsoap onvifMedia service method-encoding:	RemoveVideoAnalyticsConfiguration_ literal
//gsoap onvifMedia service method-action:	RemoveVideoAnalyticsConfiguration_ http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration
//gsoap onvifMedia service method-output-action:	RemoveVideoAnalyticsConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/RemoveVideoAnalyticsConfigurationResponse
int __onvifMedia__RemoveVideoAnalyticsConfiguration_(
    _onvifMedia__RemoveVideoAnalyticsConfiguration* onvifMedia__RemoveVideoAnalyticsConfiguration,	///< Request parameter
    _onvifMedia__RemoveVideoAnalyticsConfigurationResponse* onvifMedia__RemoveVideoAnalyticsConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveMetadataConfiguration_                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveMetadataConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation removes a MetadataConfiguration from an existing media profile. If
the media profile does not contain a MetadataConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveMetadataConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveMetadataConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveMetadataConfiguration* onvifMedia__RemoveMetadataConfiguration,
    // response parameters:
    _onvifMedia__RemoveMetadataConfigurationResponse* onvifMedia__RemoveMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveMetadataConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveMetadataConfiguration* onvifMedia__RemoveMetadataConfiguration,
    // response parameters:
    _onvifMedia__RemoveMetadataConfigurationResponse* onvifMedia__RemoveMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveMetadataConfiguration_ document
//gsoap onvifMedia service method-encoding:	RemoveMetadataConfiguration_ literal
//gsoap onvifMedia service method-action:	RemoveMetadataConfiguration_ http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration
//gsoap onvifMedia service method-output-action:	RemoveMetadataConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/RemoveMetadataConfigurationResponse
int __onvifMedia__RemoveMetadataConfiguration_(
    _onvifMedia__RemoveMetadataConfiguration* onvifMedia__RemoveMetadataConfiguration,	///< Request parameter
    _onvifMedia__RemoveMetadataConfigurationResponse* onvifMedia__RemoveMetadataConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveAudioOutputConfiguration_                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveAudioOutputConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation removes an AudioOutputConfiguration from an existing media profile.
If the media profile does not contain an AudioOutputConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioOutputConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveAudioOutputConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveAudioOutputConfiguration* onvifMedia__RemoveAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioOutputConfigurationResponse* onvifMedia__RemoveAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveAudioOutputConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveAudioOutputConfiguration* onvifMedia__RemoveAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioOutputConfigurationResponse* onvifMedia__RemoveAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveAudioOutputConfiguration_ document
//gsoap onvifMedia service method-encoding:	RemoveAudioOutputConfiguration_ literal
//gsoap onvifMedia service method-action:	RemoveAudioOutputConfiguration_ http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration
//gsoap onvifMedia service method-output-action:	RemoveAudioOutputConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioOutputConfigurationResponse
int __onvifMedia__RemoveAudioOutputConfiguration_(
    _onvifMedia__RemoveAudioOutputConfiguration* onvifMedia__RemoveAudioOutputConfiguration,	///< Request parameter
    _onvifMedia__RemoveAudioOutputConfigurationResponse* onvifMedia__RemoveAudioOutputConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__RemoveAudioDecoderConfiguration_                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__RemoveAudioDecoderConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation removes an AudioDecoderConfiguration from an existing media profile.
If the media profile does not contain an AudioDecoderConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioDecoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__RemoveAudioDecoderConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__RemoveAudioDecoderConfiguration* onvifMedia__RemoveAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioDecoderConfigurationResponse* onvifMedia__RemoveAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__RemoveAudioDecoderConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__RemoveAudioDecoderConfiguration* onvifMedia__RemoveAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__RemoveAudioDecoderConfigurationResponse* onvifMedia__RemoveAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	RemoveAudioDecoderConfiguration_ document
//gsoap onvifMedia service method-encoding:	RemoveAudioDecoderConfiguration_ literal
//gsoap onvifMedia service method-action:	RemoveAudioDecoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration
//gsoap onvifMedia service method-output-action:	RemoveAudioDecoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/RemoveAudioDecoderConfigurationResponse
int __onvifMedia__RemoveAudioDecoderConfiguration_(
    _onvifMedia__RemoveAudioDecoderConfiguration* onvifMedia__RemoveAudioDecoderConfiguration,	///< Request parameter
    _onvifMedia__RemoveAudioDecoderConfigurationResponse* onvifMedia__RemoveAudioDecoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__DeleteProfile_                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__DeleteProfile_" of service binding "MediaBinding"

/**

Operation details:

This operation deletes a profile. This change shall always be persistent. Deletion
of a profile is only possible for non-fixed profiles

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/DeleteProfile"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/DeleteProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__DeleteProfile_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__DeleteProfile*         onvifMedia__DeleteProfile,
    // response parameters:
    _onvifMedia__DeleteProfileResponse* onvifMedia__DeleteProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__DeleteProfile_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__DeleteProfile*         onvifMedia__DeleteProfile,
    // response parameters:
    _onvifMedia__DeleteProfileResponse* onvifMedia__DeleteProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	DeleteProfile_ document
//gsoap onvifMedia service method-encoding:	DeleteProfile_ literal
//gsoap onvifMedia service method-action:	DeleteProfile_ http://www.onvif.org/ver10/media/wsdl/DeleteProfile
//gsoap onvifMedia service method-output-action:	DeleteProfile_ http://www.onvif.org/ver10/media/wsdl/Media/DeleteProfileResponse
int __onvifMedia__DeleteProfile_(
    _onvifMedia__DeleteProfile*         onvifMedia__DeleteProfile,	///< Request parameter
    _onvifMedia__DeleteProfileResponse* onvifMedia__DeleteProfileResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoSourceConfigurations_                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoSourceConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This operation lists all existing video source configurations for a device. The
client need not know anything about the video source configurations in order to
use the command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoSourceConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoSourceConfigurations* onvifMedia__GetVideoSourceConfigurations,
    // response parameters:
    _onvifMedia__GetVideoSourceConfigurationsResponse* onvifMedia__GetVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoSourceConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoSourceConfigurations* onvifMedia__GetVideoSourceConfigurations,
    // response parameters:
    _onvifMedia__GetVideoSourceConfigurationsResponse* onvifMedia__GetVideoSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoSourceConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetVideoSourceConfigurations_ literal
//gsoap onvifMedia service method-action:	GetVideoSourceConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations
//gsoap onvifMedia service method-output-action:	GetVideoSourceConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurationsResponse
int __onvifMedia__GetVideoSourceConfigurations_(
    _onvifMedia__GetVideoSourceConfigurations* onvifMedia__GetVideoSourceConfigurations,	///< Request parameter
    _onvifMedia__GetVideoSourceConfigurationsResponse* onvifMedia__GetVideoSourceConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoEncoderConfigurations_                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoEncoderConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This operation lists all existing video encoder configurations of a device. This
command lists all configured video encoder configurations in a device. The client
need not know anything apriori about the video encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoEncoderConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoEncoderConfigurations* onvifMedia__GetVideoEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetVideoEncoderConfigurationsResponse* onvifMedia__GetVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoEncoderConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoEncoderConfigurations* onvifMedia__GetVideoEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetVideoEncoderConfigurationsResponse* onvifMedia__GetVideoEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoEncoderConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetVideoEncoderConfigurations_ literal
//gsoap onvifMedia service method-action:	GetVideoEncoderConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations
//gsoap onvifMedia service method-output-action:	GetVideoEncoderConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurationsResponse
int __onvifMedia__GetVideoEncoderConfigurations_(
    _onvifMedia__GetVideoEncoderConfigurations* onvifMedia__GetVideoEncoderConfigurations,	///< Request parameter
    _onvifMedia__GetVideoEncoderConfigurationsResponse* onvifMedia__GetVideoEncoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioSourceConfigurations_                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioSourceConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This operation lists all existing audio source configurations of a device. This
command lists all audio source configurations in a device. The client need not
know anything apriori about the audio source configurations in order to use the
command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioSourceConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioSourceConfigurations* onvifMedia__GetAudioSourceConfigurations,
    // response parameters:
    _onvifMedia__GetAudioSourceConfigurationsResponse* onvifMedia__GetAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioSourceConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioSourceConfigurations* onvifMedia__GetAudioSourceConfigurations,
    // response parameters:
    _onvifMedia__GetAudioSourceConfigurationsResponse* onvifMedia__GetAudioSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioSourceConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetAudioSourceConfigurations_ literal
//gsoap onvifMedia service method-action:	GetAudioSourceConfigurations_ http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/
//gsoap onvifMedia service method-output-action:	GetAudioSourceConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurationsResponse
int __onvifMedia__GetAudioSourceConfigurations_(
    _onvifMedia__GetAudioSourceConfigurations* onvifMedia__GetAudioSourceConfigurations,	///< Request parameter
    _onvifMedia__GetAudioSourceConfigurationsResponse* onvifMedia__GetAudioSourceConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioEncoderConfigurations_                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioEncoderConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This operation lists all existing device audio encoder configurations. The client
need not know anything apriori about the audio encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioEncoderConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioEncoderConfigurations* onvifMedia__GetAudioEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetAudioEncoderConfigurationsResponse* onvifMedia__GetAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioEncoderConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioEncoderConfigurations* onvifMedia__GetAudioEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetAudioEncoderConfigurationsResponse* onvifMedia__GetAudioEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioEncoderConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetAudioEncoderConfigurations_ literal
//gsoap onvifMedia service method-action:	GetAudioEncoderConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations
//gsoap onvifMedia service method-output-action:	GetAudioEncoderConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurationsResponse
int __onvifMedia__GetAudioEncoderConfigurations_(
    _onvifMedia__GetAudioEncoderConfigurations* onvifMedia__GetAudioEncoderConfigurations,	///< Request parameter
    _onvifMedia__GetAudioEncoderConfigurationsResponse* onvifMedia__GetAudioEncoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoAnalyticsConfigurations_                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoAnalyticsConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This operation lists all video analytics configurations of a device. This command
lists all configured video analytics in a device. The client need not know anything
apriori about the video analytics in order to use the command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoAnalyticsConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoAnalyticsConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoAnalyticsConfigurations* onvifMedia__GetVideoAnalyticsConfigurations,
    // response parameters:
    _onvifMedia__GetVideoAnalyticsConfigurationsResponse* onvifMedia__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoAnalyticsConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoAnalyticsConfigurations* onvifMedia__GetVideoAnalyticsConfigurations,
    // response parameters:
    _onvifMedia__GetVideoAnalyticsConfigurationsResponse* onvifMedia__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoAnalyticsConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetVideoAnalyticsConfigurations_ literal
//gsoap onvifMedia service method-action:	GetVideoAnalyticsConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations
//gsoap onvifMedia service method-output-action:	GetVideoAnalyticsConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetVideoAnalyticsConfigurationsResponse
int __onvifMedia__GetVideoAnalyticsConfigurations_(
    _onvifMedia__GetVideoAnalyticsConfigurations* onvifMedia__GetVideoAnalyticsConfigurations,	///< Request parameter
    _onvifMedia__GetVideoAnalyticsConfigurationsResponse* onvifMedia__GetVideoAnalyticsConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetMetadataConfigurations_                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetMetadataConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This operation lists all existing metadata configurations. The client need not know
anything apriori about the metadata in order to use the command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetMetadataConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetMetadataConfigurations* onvifMedia__GetMetadataConfigurations,
    // response parameters:
    _onvifMedia__GetMetadataConfigurationsResponse* onvifMedia__GetMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetMetadataConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetMetadataConfigurations* onvifMedia__GetMetadataConfigurations,
    // response parameters:
    _onvifMedia__GetMetadataConfigurationsResponse* onvifMedia__GetMetadataConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetMetadataConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetMetadataConfigurations_ literal
//gsoap onvifMedia service method-action:	GetMetadataConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations
//gsoap onvifMedia service method-output-action:	GetMetadataConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurationsResponse
int __onvifMedia__GetMetadataConfigurations_(
    _onvifMedia__GetMetadataConfigurations* onvifMedia__GetMetadataConfigurations,	///< Request parameter
    _onvifMedia__GetMetadataConfigurationsResponse* onvifMedia__GetMetadataConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioOutputConfigurations_                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioOutputConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This command lists all existing AudioOutputConfigurations of a device. The NVC need
not know anything apriori about the audio configurations to use this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioOutputConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioOutputConfigurations* onvifMedia__GetAudioOutputConfigurations,
    // response parameters:
    _onvifMedia__GetAudioOutputConfigurationsResponse* onvifMedia__GetAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioOutputConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioOutputConfigurations* onvifMedia__GetAudioOutputConfigurations,
    // response parameters:
    _onvifMedia__GetAudioOutputConfigurationsResponse* onvifMedia__GetAudioOutputConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioOutputConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetAudioOutputConfigurations_ literal
//gsoap onvifMedia service method-action:	GetAudioOutputConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations
//gsoap onvifMedia service method-output-action:	GetAudioOutputConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurationsResponse
int __onvifMedia__GetAudioOutputConfigurations_(
    _onvifMedia__GetAudioOutputConfigurations* onvifMedia__GetAudioOutputConfigurations,	///< Request parameter
    _onvifMedia__GetAudioOutputConfigurationsResponse* onvifMedia__GetAudioOutputConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioDecoderConfigurations_                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioDecoderConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This command lists all existing AudioDecoderConfigurations of a device. The NVC
need not know anything apriori about the audio decoder configurations in order
to
use this command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioDecoderConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioDecoderConfigurations* onvifMedia__GetAudioDecoderConfigurations,
    // response parameters:
    _onvifMedia__GetAudioDecoderConfigurationsResponse* onvifMedia__GetAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioDecoderConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioDecoderConfigurations* onvifMedia__GetAudioDecoderConfigurations,
    // response parameters:
    _onvifMedia__GetAudioDecoderConfigurationsResponse* onvifMedia__GetAudioDecoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioDecoderConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetAudioDecoderConfigurations_ literal
//gsoap onvifMedia service method-action:	GetAudioDecoderConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations
//gsoap onvifMedia service method-output-action:	GetAudioDecoderConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurationsResponse
int __onvifMedia__GetAudioDecoderConfigurations_(
    _onvifMedia__GetAudioDecoderConfigurations* onvifMedia__GetAudioDecoderConfigurations,	///< Request parameter
    _onvifMedia__GetAudioDecoderConfigurationsResponse* onvifMedia__GetAudioDecoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoSourceConfiguration_                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoSourceConfiguration_" of service binding "MediaBinding"

/**

Operation details:

If the video source configuration token is already known, the video source configuration
can be fetched through the GetVideoSourceConfiguration command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoSourceConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoSourceConfiguration* onvifMedia__GetVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__GetVideoSourceConfigurationResponse* onvifMedia__GetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoSourceConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoSourceConfiguration* onvifMedia__GetVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__GetVideoSourceConfigurationResponse* onvifMedia__GetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoSourceConfiguration_ document
//gsoap onvifMedia service method-encoding:	GetVideoSourceConfiguration_ literal
//gsoap onvifMedia service method-action:	GetVideoSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration
//gsoap onvifMedia service method-output-action:	GetVideoSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurationResponse
int __onvifMedia__GetVideoSourceConfiguration_(
    _onvifMedia__GetVideoSourceConfiguration* onvifMedia__GetVideoSourceConfiguration,	///< Request parameter
    _onvifMedia__GetVideoSourceConfigurationResponse* onvifMedia__GetVideoSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoEncoderConfiguration_                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoEncoderConfiguration_" of service binding "MediaBinding"

/**

Operation details:

If the video encoder configuration token is already known, the encoder configuration
can be fetched through the GetVideoEncoderConfiguration command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoEncoderConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoEncoderConfiguration* onvifMedia__GetVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__GetVideoEncoderConfigurationResponse* onvifMedia__GetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoEncoderConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoEncoderConfiguration* onvifMedia__GetVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__GetVideoEncoderConfigurationResponse* onvifMedia__GetVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoEncoderConfiguration_ document
//gsoap onvifMedia service method-encoding:	GetVideoEncoderConfiguration_ literal
//gsoap onvifMedia service method-action:	GetVideoEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration
//gsoap onvifMedia service method-output-action:	GetVideoEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurationResponse
int __onvifMedia__GetVideoEncoderConfiguration_(
    _onvifMedia__GetVideoEncoderConfiguration* onvifMedia__GetVideoEncoderConfiguration,	///< Request parameter
    _onvifMedia__GetVideoEncoderConfigurationResponse* onvifMedia__GetVideoEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioSourceConfiguration_                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioSourceConfiguration_" of service binding "MediaBinding"

/**

Operation details:

The GetAudioSourceConfiguration command fetches the audio source configurations
if the audio source configuration token is already known. An

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioSourceConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioSourceConfiguration* onvifMedia__GetAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__GetAudioSourceConfigurationResponse* onvifMedia__GetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioSourceConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioSourceConfiguration* onvifMedia__GetAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__GetAudioSourceConfigurationResponse* onvifMedia__GetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioSourceConfiguration_ document
//gsoap onvifMedia service method-encoding:	GetAudioSourceConfiguration_ literal
//gsoap onvifMedia service method-action:	GetAudioSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration
//gsoap onvifMedia service method-output-action:	GetAudioSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurationResponse
int __onvifMedia__GetAudioSourceConfiguration_(
    _onvifMedia__GetAudioSourceConfiguration* onvifMedia__GetAudioSourceConfiguration,	///< Request parameter
    _onvifMedia__GetAudioSourceConfigurationResponse* onvifMedia__GetAudioSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioEncoderConfiguration_                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioEncoderConfiguration_" of service binding "MediaBinding"

/**

Operation details:

The GetAudioEncoderConfiguration command fetches the encoder configuration if the
audio encoder configuration token is known.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioEncoderConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioEncoderConfiguration* onvifMedia__GetAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__GetAudioEncoderConfigurationResponse* onvifMedia__GetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioEncoderConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioEncoderConfiguration* onvifMedia__GetAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__GetAudioEncoderConfigurationResponse* onvifMedia__GetAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioEncoderConfiguration_ document
//gsoap onvifMedia service method-encoding:	GetAudioEncoderConfiguration_ literal
//gsoap onvifMedia service method-action:	GetAudioEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration
//gsoap onvifMedia service method-output-action:	GetAudioEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurationResponse
int __onvifMedia__GetAudioEncoderConfiguration_(
    _onvifMedia__GetAudioEncoderConfiguration* onvifMedia__GetAudioEncoderConfiguration,	///< Request parameter
    _onvifMedia__GetAudioEncoderConfigurationResponse* onvifMedia__GetAudioEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoAnalyticsConfiguration_                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoAnalyticsConfiguration_" of service binding "MediaBinding"

/**

Operation details:

The GetVideoAnalyticsConfiguration command fetches the video analytics configuration
if the video analytics token is known.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoAnalyticsConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoAnalyticsConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoAnalyticsConfiguration* onvifMedia__GetVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__GetVideoAnalyticsConfigurationResponse* onvifMedia__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoAnalyticsConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoAnalyticsConfiguration* onvifMedia__GetVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__GetVideoAnalyticsConfigurationResponse* onvifMedia__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoAnalyticsConfiguration_ document
//gsoap onvifMedia service method-encoding:	GetVideoAnalyticsConfiguration_ literal
//gsoap onvifMedia service method-action:	GetVideoAnalyticsConfiguration_ http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration
//gsoap onvifMedia service method-output-action:	GetVideoAnalyticsConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/GetVideoAnalyticsConfigurationResponse
int __onvifMedia__GetVideoAnalyticsConfiguration_(
    _onvifMedia__GetVideoAnalyticsConfiguration* onvifMedia__GetVideoAnalyticsConfiguration,	///< Request parameter
    _onvifMedia__GetVideoAnalyticsConfigurationResponse* onvifMedia__GetVideoAnalyticsConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetMetadataConfiguration_                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetMetadataConfiguration_" of service binding "MediaBinding"

/**

Operation details:

The GetMetadataConfiguration command fetches the metadata configuration if the metadata
token is known.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetMetadataConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetMetadataConfiguration* onvifMedia__GetMetadataConfiguration,
    // response parameters:
    _onvifMedia__GetMetadataConfigurationResponse* onvifMedia__GetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetMetadataConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetMetadataConfiguration* onvifMedia__GetMetadataConfiguration,
    // response parameters:
    _onvifMedia__GetMetadataConfigurationResponse* onvifMedia__GetMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetMetadataConfiguration_ document
//gsoap onvifMedia service method-encoding:	GetMetadataConfiguration_ literal
//gsoap onvifMedia service method-action:	GetMetadataConfiguration_ http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration
//gsoap onvifMedia service method-output-action:	GetMetadataConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurationResponse
int __onvifMedia__GetMetadataConfiguration_(
    _onvifMedia__GetMetadataConfiguration* onvifMedia__GetMetadataConfiguration,	///< Request parameter
    _onvifMedia__GetMetadataConfigurationResponse* onvifMedia__GetMetadataConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioOutputConfiguration_                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioOutputConfiguration_" of service binding "MediaBinding"

/**

Operation details:

If the audio output configuration token is already known, the output configuration
can be fetched through the GetAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioOutputConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioOutputConfiguration* onvifMedia__GetAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__GetAudioOutputConfigurationResponse* onvifMedia__GetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioOutputConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioOutputConfiguration* onvifMedia__GetAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__GetAudioOutputConfigurationResponse* onvifMedia__GetAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioOutputConfiguration_ document
//gsoap onvifMedia service method-encoding:	GetAudioOutputConfiguration_ literal
//gsoap onvifMedia service method-action:	GetAudioOutputConfiguration_ http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration
//gsoap onvifMedia service method-output-action:	GetAudioOutputConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurationResponse
int __onvifMedia__GetAudioOutputConfiguration_(
    _onvifMedia__GetAudioOutputConfiguration* onvifMedia__GetAudioOutputConfiguration,	///< Request parameter
    _onvifMedia__GetAudioOutputConfigurationResponse* onvifMedia__GetAudioOutputConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioDecoderConfiguration_                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioDecoderConfiguration_" of service binding "MediaBinding"

/**

Operation details:

If the audio decoder configuration token is already known, the decoder configuration
can be fetched through the GetAudioDecoderConfiguration command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioDecoderConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioDecoderConfiguration* onvifMedia__GetAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__GetAudioDecoderConfigurationResponse* onvifMedia__GetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioDecoderConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioDecoderConfiguration* onvifMedia__GetAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__GetAudioDecoderConfigurationResponse* onvifMedia__GetAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioDecoderConfiguration_ document
//gsoap onvifMedia service method-encoding:	GetAudioDecoderConfiguration_ literal
//gsoap onvifMedia service method-action:	GetAudioDecoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration
//gsoap onvifMedia service method-output-action:	GetAudioDecoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurationResponse
int __onvifMedia__GetAudioDecoderConfiguration_(
    _onvifMedia__GetAudioDecoderConfiguration* onvifMedia__GetAudioDecoderConfiguration,	///< Request parameter
    _onvifMedia__GetAudioDecoderConfigurationResponse* onvifMedia__GetAudioDecoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleVideoEncoderConfigurations_                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleVideoEncoderConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This operation lists all the video encoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoEncoderConfiguration command on the
media profile. The result will vary depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoEncoderConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleVideoEncoderConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleVideoEncoderConfigurations* onvifMedia__GetCompatibleVideoEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse* onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleVideoEncoderConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleVideoEncoderConfigurations* onvifMedia__GetCompatibleVideoEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse* onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleVideoEncoderConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetCompatibleVideoEncoderConfigurations_ literal
//gsoap onvifMedia service method-action:	GetCompatibleVideoEncoderConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleVideoEncoderConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoEncoderConfigurationsResponse
int __onvifMedia__GetCompatibleVideoEncoderConfigurations_(
    _onvifMedia__GetCompatibleVideoEncoderConfigurations* onvifMedia__GetCompatibleVideoEncoderConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse* onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleVideoSourceConfigurations_                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleVideoSourceConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This operation requests all the video source configurations of the device that are
compatible
with a certain media profile. Each of the returned configurations shall be a valid
input
parameter for the AddVideoSourceConfiguration command on the media profile. The
result
will vary depending on the capabilities, configurations and settings in the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoSourceConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleVideoSourceConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleVideoSourceConfigurations* onvifMedia__GetCompatibleVideoSourceConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse* onvifMedia__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleVideoSourceConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleVideoSourceConfigurations* onvifMedia__GetCompatibleVideoSourceConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse* onvifMedia__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleVideoSourceConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetCompatibleVideoSourceConfigurations_ literal
//gsoap onvifMedia service method-action:	GetCompatibleVideoSourceConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleVideoSourceConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoSourceConfigurationsResponse
int __onvifMedia__GetCompatibleVideoSourceConfigurations_(
    _onvifMedia__GetCompatibleVideoSourceConfigurations* onvifMedia__GetCompatibleVideoSourceConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse* onvifMedia__GetCompatibleVideoSourceConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleAudioEncoderConfigurations_                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleAudioEncoderConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This operation requests all audio encoder configurations of a device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioSourceConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioEncoderConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleAudioEncoderConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleAudioEncoderConfigurations* onvifMedia__GetCompatibleAudioEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse* onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleAudioEncoderConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleAudioEncoderConfigurations* onvifMedia__GetCompatibleAudioEncoderConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse* onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleAudioEncoderConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetCompatibleAudioEncoderConfigurations_ literal
//gsoap onvifMedia service method-action:	GetCompatibleAudioEncoderConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleAudioEncoderConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioEncoderConfigurationsResponse
int __onvifMedia__GetCompatibleAudioEncoderConfigurations_(
    _onvifMedia__GetCompatibleAudioEncoderConfigurations* onvifMedia__GetCompatibleAudioEncoderConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse* onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleAudioSourceConfigurations_                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleAudioSourceConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This operation requests all audio source configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioEncoderConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioSourceConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleAudioSourceConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleAudioSourceConfigurations* onvifMedia__GetCompatibleAudioSourceConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse* onvifMedia__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleAudioSourceConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleAudioSourceConfigurations* onvifMedia__GetCompatibleAudioSourceConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse* onvifMedia__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleAudioSourceConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetCompatibleAudioSourceConfigurations_ literal
//gsoap onvifMedia service method-action:	GetCompatibleAudioSourceConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleAudioSourceConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioSourceConfigurationsResponse
int __onvifMedia__GetCompatibleAudioSourceConfigurations_(
    _onvifMedia__GetCompatibleAudioSourceConfigurations* onvifMedia__GetCompatibleAudioSourceConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse* onvifMedia__GetCompatibleAudioSourceConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleVideoAnalyticsConfigurations_                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleVideoAnalyticsConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This operation requests all video analytic configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoAnalyticsConfiguration command on the
media profile. The result varies depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleVideoAnalyticsConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleVideoAnalyticsConfigurations* onvifMedia__GetCompatibleVideoAnalyticsConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse* onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleVideoAnalyticsConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleVideoAnalyticsConfigurations* onvifMedia__GetCompatibleVideoAnalyticsConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse* onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleVideoAnalyticsConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetCompatibleVideoAnalyticsConfigurations_ literal
//gsoap onvifMedia service method-action:	GetCompatibleVideoAnalyticsConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleVideoAnalyticsConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleVideoAnalyticsConfigurationsResponse
int __onvifMedia__GetCompatibleVideoAnalyticsConfigurations_(
    _onvifMedia__GetCompatibleVideoAnalyticsConfigurations* onvifMedia__GetCompatibleVideoAnalyticsConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse* onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleMetadataConfigurations_                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleMetadataConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This operation requests all the metadata configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddMetadataConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleMetadataConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleMetadataConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleMetadataConfigurations* onvifMedia__GetCompatibleMetadataConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleMetadataConfigurationsResponse* onvifMedia__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleMetadataConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleMetadataConfigurations* onvifMedia__GetCompatibleMetadataConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleMetadataConfigurationsResponse* onvifMedia__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleMetadataConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetCompatibleMetadataConfigurations_ literal
//gsoap onvifMedia service method-action:	GetCompatibleMetadataConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleMetadataConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleMetadataConfigurationsResponse
int __onvifMedia__GetCompatibleMetadataConfigurations_(
    _onvifMedia__GetCompatibleMetadataConfigurations* onvifMedia__GetCompatibleMetadataConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleMetadataConfigurationsResponse* onvifMedia__GetCompatibleMetadataConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleAudioOutputConfigurations_                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleAudioOutputConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This command lists all audio output configurations of a device that are compatible
with a certain media profile. Each returned configuration shall be a valid input
for the 
AddAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioOutputConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleAudioOutputConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleAudioOutputConfigurations* onvifMedia__GetCompatibleAudioOutputConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse* onvifMedia__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleAudioOutputConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleAudioOutputConfigurations* onvifMedia__GetCompatibleAudioOutputConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse* onvifMedia__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleAudioOutputConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetCompatibleAudioOutputConfigurations_ literal
//gsoap onvifMedia service method-action:	GetCompatibleAudioOutputConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleAudioOutputConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioOutputConfigurationsResponse
int __onvifMedia__GetCompatibleAudioOutputConfigurations_(
    _onvifMedia__GetCompatibleAudioOutputConfigurations* onvifMedia__GetCompatibleAudioOutputConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse* onvifMedia__GetCompatibleAudioOutputConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetCompatibleAudioDecoderConfigurations_                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetCompatibleAudioDecoderConfigurations_" of service binding "MediaBinding"

/**

Operation details:

This operation lists all the audio decoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddAudioDecoderConfiguration command on the
media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioDecoderConfigurations"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetCompatibleAudioDecoderConfigurations_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetCompatibleAudioDecoderConfigurations* onvifMedia__GetCompatibleAudioDecoderConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse* onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetCompatibleAudioDecoderConfigurations_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetCompatibleAudioDecoderConfigurations* onvifMedia__GetCompatibleAudioDecoderConfigurations,
    // response parameters:
    _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse* onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetCompatibleAudioDecoderConfigurations_ document
//gsoap onvifMedia service method-encoding:	GetCompatibleAudioDecoderConfigurations_ literal
//gsoap onvifMedia service method-action:	GetCompatibleAudioDecoderConfigurations_ http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations
//gsoap onvifMedia service method-output-action:	GetCompatibleAudioDecoderConfigurations_ http://www.onvif.org/ver10/media/wsdl/Media/GetCompatibleAudioDecoderConfigurationsResponse
int __onvifMedia__GetCompatibleAudioDecoderConfigurations_(
    _onvifMedia__GetCompatibleAudioDecoderConfigurations* onvifMedia__GetCompatibleAudioDecoderConfigurations,	///< Request parameter
    _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse* onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetVideoSourceConfiguration_                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetVideoSourceConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation modifies a video source configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Running streams
using this configuration may be immediately updated according to the new settings.
The changes are not guaranteed to take effect unless the client requests a new
stream URI and restarts any affected stream. NVC methods for changing a running
stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetVideoSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetVideoSourceConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetVideoSourceConfiguration* onvifMedia__SetVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__SetVideoSourceConfigurationResponse* onvifMedia__SetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetVideoSourceConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetVideoSourceConfiguration* onvifMedia__SetVideoSourceConfiguration,
    // response parameters:
    _onvifMedia__SetVideoSourceConfigurationResponse* onvifMedia__SetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetVideoSourceConfiguration_ document
//gsoap onvifMedia service method-encoding:	SetVideoSourceConfiguration_ literal
//gsoap onvifMedia service method-action:	SetVideoSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration
//gsoap onvifMedia service method-output-action:	SetVideoSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/SetVideoSourceConfigurationResponse
int __onvifMedia__SetVideoSourceConfiguration_(
    _onvifMedia__SetVideoSourceConfiguration* onvifMedia__SetVideoSourceConfiguration,	///< Request parameter
    _onvifMedia__SetVideoSourceConfigurationResponse* onvifMedia__SetVideoSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetVideoEncoderConfiguration_                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetVideoEncoderConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation modifies a video encoder configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Changes in the
Multicast settings shall always be persistent. Running streams using this configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream. NVC methods for changing a running stream are out of scope for this specification.
<br/>SessionTimeout is provided as a hint for keeping rtsp session by a device.
If necessary the device may adapt parameter values for SessionTimeout elements
without returning an error. For the time between keep alive calls the client shall
adhere to the timeout value signaled via RTSP.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetVideoEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetVideoEncoderConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetVideoEncoderConfiguration* onvifMedia__SetVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__SetVideoEncoderConfigurationResponse* onvifMedia__SetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetVideoEncoderConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetVideoEncoderConfiguration* onvifMedia__SetVideoEncoderConfiguration,
    // response parameters:
    _onvifMedia__SetVideoEncoderConfigurationResponse* onvifMedia__SetVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetVideoEncoderConfiguration_ document
//gsoap onvifMedia service method-encoding:	SetVideoEncoderConfiguration_ literal
//gsoap onvifMedia service method-action:	SetVideoEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration
//gsoap onvifMedia service method-output-action:	SetVideoEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/SetVideoEncoderConfigurationResponse
int __onvifMedia__SetVideoEncoderConfiguration_(
    _onvifMedia__SetVideoEncoderConfiguration* onvifMedia__SetVideoEncoderConfiguration,	///< Request parameter
    _onvifMedia__SetVideoEncoderConfigurationResponse* onvifMedia__SetVideoEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetAudioSourceConfiguration_                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetAudioSourceConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation modifies an audio source configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream
NVC methods for changing a running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioSourceConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetAudioSourceConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetAudioSourceConfiguration* onvifMedia__SetAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__SetAudioSourceConfigurationResponse* onvifMedia__SetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetAudioSourceConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetAudioSourceConfiguration* onvifMedia__SetAudioSourceConfiguration,
    // response parameters:
    _onvifMedia__SetAudioSourceConfigurationResponse* onvifMedia__SetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetAudioSourceConfiguration_ document
//gsoap onvifMedia service method-encoding:	SetAudioSourceConfiguration_ literal
//gsoap onvifMedia service method-action:	SetAudioSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration
//gsoap onvifMedia service method-output-action:	SetAudioSourceConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/SetAudioSourceConfigurationResponse
int __onvifMedia__SetAudioSourceConfiguration_(
    _onvifMedia__SetAudioSourceConfiguration* onvifMedia__SetAudioSourceConfiguration,	///< Request parameter
    _onvifMedia__SetAudioSourceConfigurationResponse* onvifMedia__SetAudioSourceConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetAudioEncoderConfiguration_                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetAudioEncoderConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation modifies an audio encoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration may be immediately updated
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioEncoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetAudioEncoderConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetAudioEncoderConfiguration* onvifMedia__SetAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__SetAudioEncoderConfigurationResponse* onvifMedia__SetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetAudioEncoderConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetAudioEncoderConfiguration* onvifMedia__SetAudioEncoderConfiguration,
    // response parameters:
    _onvifMedia__SetAudioEncoderConfigurationResponse* onvifMedia__SetAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetAudioEncoderConfiguration_ document
//gsoap onvifMedia service method-encoding:	SetAudioEncoderConfiguration_ literal
//gsoap onvifMedia service method-action:	SetAudioEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration
//gsoap onvifMedia service method-output-action:	SetAudioEncoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/SetAudioEncoderConfigurationResponse
int __onvifMedia__SetAudioEncoderConfiguration_(
    _onvifMedia__SetAudioEncoderConfiguration* onvifMedia__SetAudioEncoderConfiguration,	///< Request parameter
    _onvifMedia__SetAudioEncoderConfigurationResponse* onvifMedia__SetAudioEncoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetVideoAnalyticsConfiguration_                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetVideoAnalyticsConfiguration_" of service binding "MediaBinding"

/**

Operation details:

A video analytics configuration is modified using this command. The ForcePersistence
flag
indicates if the changes shall remain after reboot of the device or not. Running
streams using
this configuration shall be immediately updated according to the new settings.
Otherwise
inconsistencies can occur between the scene description processed by the rule engine
and
the notifications produced by analytics engine and rule engine which reference
the very same
video analytics configuration token.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetVideoAnalyticsConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetVideoAnalyticsConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetVideoAnalyticsConfiguration* onvifMedia__SetVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__SetVideoAnalyticsConfigurationResponse* onvifMedia__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetVideoAnalyticsConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetVideoAnalyticsConfiguration* onvifMedia__SetVideoAnalyticsConfiguration,
    // response parameters:
    _onvifMedia__SetVideoAnalyticsConfigurationResponse* onvifMedia__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetVideoAnalyticsConfiguration_ document
//gsoap onvifMedia service method-encoding:	SetVideoAnalyticsConfiguration_ literal
//gsoap onvifMedia service method-action:	SetVideoAnalyticsConfiguration_ http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration
//gsoap onvifMedia service method-output-action:	SetVideoAnalyticsConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/SetVideoAnalyticsConfigurationResponse
int __onvifMedia__SetVideoAnalyticsConfiguration_(
    _onvifMedia__SetVideoAnalyticsConfiguration* onvifMedia__SetVideoAnalyticsConfiguration,	///< Request parameter
    _onvifMedia__SetVideoAnalyticsConfigurationResponse* onvifMedia__SetVideoAnalyticsConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetMetadataConfiguration_                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetMetadataConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation modifies a metadata configuration. The ForcePersistence flag indicates
if the
changes shall remain after reboot of the device. Changes in the Multicast settings
shall
always be persistent. Running streams using this configuration may be updated immediately
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetMetadataConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetMetadataConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetMetadataConfiguration* onvifMedia__SetMetadataConfiguration,
    // response parameters:
    _onvifMedia__SetMetadataConfigurationResponse* onvifMedia__SetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetMetadataConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetMetadataConfiguration* onvifMedia__SetMetadataConfiguration,
    // response parameters:
    _onvifMedia__SetMetadataConfigurationResponse* onvifMedia__SetMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetMetadataConfiguration_ document
//gsoap onvifMedia service method-encoding:	SetMetadataConfiguration_ literal
//gsoap onvifMedia service method-action:	SetMetadataConfiguration_ http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration
//gsoap onvifMedia service method-output-action:	SetMetadataConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/SetMetadataConfigurationResponse
int __onvifMedia__SetMetadataConfiguration_(
    _onvifMedia__SetMetadataConfiguration* onvifMedia__SetMetadataConfiguration,	///< Request parameter
    _onvifMedia__SetMetadataConfigurationResponse* onvifMedia__SetMetadataConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetAudioOutputConfiguration_                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetAudioOutputConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation modifies an audio output configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioOutputConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetAudioOutputConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetAudioOutputConfiguration* onvifMedia__SetAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__SetAudioOutputConfigurationResponse* onvifMedia__SetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetAudioOutputConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetAudioOutputConfiguration* onvifMedia__SetAudioOutputConfiguration,
    // response parameters:
    _onvifMedia__SetAudioOutputConfigurationResponse* onvifMedia__SetAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetAudioOutputConfiguration_ document
//gsoap onvifMedia service method-encoding:	SetAudioOutputConfiguration_ literal
//gsoap onvifMedia service method-action:	SetAudioOutputConfiguration_ http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration
//gsoap onvifMedia service method-output-action:	SetAudioOutputConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/SetAudioOutputConfigurationResponse
int __onvifMedia__SetAudioOutputConfiguration_(
    _onvifMedia__SetAudioOutputConfiguration* onvifMedia__SetAudioOutputConfiguration,	///< Request parameter
    _onvifMedia__SetAudioOutputConfigurationResponse* onvifMedia__SetAudioOutputConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetAudioDecoderConfiguration_                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetAudioDecoderConfiguration_" of service binding "MediaBinding"

/**

Operation details:

This operation modifies an audio decoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioDecoderConfiguration"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetAudioDecoderConfiguration_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetAudioDecoderConfiguration* onvifMedia__SetAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__SetAudioDecoderConfigurationResponse* onvifMedia__SetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetAudioDecoderConfiguration_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetAudioDecoderConfiguration* onvifMedia__SetAudioDecoderConfiguration,
    // response parameters:
    _onvifMedia__SetAudioDecoderConfigurationResponse* onvifMedia__SetAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetAudioDecoderConfiguration_ document
//gsoap onvifMedia service method-encoding:	SetAudioDecoderConfiguration_ literal
//gsoap onvifMedia service method-action:	SetAudioDecoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration
//gsoap onvifMedia service method-output-action:	SetAudioDecoderConfiguration_ http://www.onvif.org/ver10/media/wsdl/Media/SetAudioDecoderConfigurationResponse
int __onvifMedia__SetAudioDecoderConfiguration_(
    _onvifMedia__SetAudioDecoderConfiguration* onvifMedia__SetAudioDecoderConfiguration,	///< Request parameter
    _onvifMedia__SetAudioDecoderConfigurationResponse* onvifMedia__SetAudioDecoderConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoSourceConfigurationOptions_                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoSourceConfigurationOptions_" of service binding "MediaBinding"

/**

Operation details:

This operation returns the available options  (supported values and ranges for video
source configuration parameters) when the video source parameters are
reconfigured If a video source configuration is specified, the options shall concern
that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoSourceConfigurationOptions_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoSourceConfigurationOptions* onvifMedia__GetVideoSourceConfigurationOptions,
    // response parameters:
    _onvifMedia__GetVideoSourceConfigurationOptionsResponse* onvifMedia__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoSourceConfigurationOptions_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoSourceConfigurationOptions* onvifMedia__GetVideoSourceConfigurationOptions,
    // response parameters:
    _onvifMedia__GetVideoSourceConfigurationOptionsResponse* onvifMedia__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoSourceConfigurationOptions_ document
//gsoap onvifMedia service method-encoding:	GetVideoSourceConfigurationOptions_ literal
//gsoap onvifMedia service method-action:	GetVideoSourceConfigurationOptions_ http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/
//gsoap onvifMedia service method-output-action:	GetVideoSourceConfigurationOptions_ http://www.onvif.org/ver10/media/wsdl/Media/GetVideoSourceConfigurationOptionsResponse
int __onvifMedia__GetVideoSourceConfigurationOptions_(
    _onvifMedia__GetVideoSourceConfigurationOptions* onvifMedia__GetVideoSourceConfigurationOptions,	///< Request parameter
    _onvifMedia__GetVideoSourceConfigurationOptionsResponse* onvifMedia__GetVideoSourceConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetVideoEncoderConfigurationOptions_                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetVideoEncoderConfigurationOptions_" of service binding "MediaBinding"

/**

Operation details:

This operation returns the available options (supported values and ranges for video
encoder 
				configuration parameters) when the video encoder
parameters are reconfigured. <br/>
				For JPEG, MPEG4 and H264 extension elements have
been defined that provide additional information. A device must provide the 
				XxxOption information for all encodings supported
and should additionally provide the corresponding XxxOption2 information.<br/>
				This response contains the available video encoder
configuration options. If a video encoder configuration is specified, 
				the options shall concern that particular configuration.
If a media profile is specified, the options shall be 
				compatible with that media profile. If no tokens
are specified, the options shall be considered generic for the device.
			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetVideoEncoderConfigurationOptions_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetVideoEncoderConfigurationOptions* onvifMedia__GetVideoEncoderConfigurationOptions,
    // response parameters:
    _onvifMedia__GetVideoEncoderConfigurationOptionsResponse* onvifMedia__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetVideoEncoderConfigurationOptions_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetVideoEncoderConfigurationOptions* onvifMedia__GetVideoEncoderConfigurationOptions,
    // response parameters:
    _onvifMedia__GetVideoEncoderConfigurationOptionsResponse* onvifMedia__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetVideoEncoderConfigurationOptions_ document
//gsoap onvifMedia service method-encoding:	GetVideoEncoderConfigurationOptions_ literal
//gsoap onvifMedia service method-action:	GetVideoEncoderConfigurationOptions_ http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions
//gsoap onvifMedia service method-output-action:	GetVideoEncoderConfigurationOptions_ http://www.onvif.org/ver10/media/wsdl/Media/GetVideoEncoderConfigurationOptionsResponse
int __onvifMedia__GetVideoEncoderConfigurationOptions_(
    _onvifMedia__GetVideoEncoderConfigurationOptions* onvifMedia__GetVideoEncoderConfigurationOptions,	///< Request parameter
    _onvifMedia__GetVideoEncoderConfigurationOptionsResponse* onvifMedia__GetVideoEncoderConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioSourceConfigurationOptions_                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioSourceConfigurationOptions_" of service binding "MediaBinding"

/**

Operation details:

This operation returns the available options (supported values and ranges for audio
source configuration parameters) when the audio source parameters are
reconfigured. If an audio source configuration is specified, the options shall
concern that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioSourceConfigurationOptions_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioSourceConfigurationOptions* onvifMedia__GetAudioSourceConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioSourceConfigurationOptionsResponse* onvifMedia__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioSourceConfigurationOptions_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioSourceConfigurationOptions* onvifMedia__GetAudioSourceConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioSourceConfigurationOptionsResponse* onvifMedia__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioSourceConfigurationOptions_ document
//gsoap onvifMedia service method-encoding:	GetAudioSourceConfigurationOptions_ literal
//gsoap onvifMedia service method-action:	GetAudioSourceConfigurationOptions_ http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions
//gsoap onvifMedia service method-output-action:	GetAudioSourceConfigurationOptions_ http://www.onvif.org/ver10/media/wsdl/Media/GetAudioSourceConfigurationOptionsResponse
int __onvifMedia__GetAudioSourceConfigurationOptions_(
    _onvifMedia__GetAudioSourceConfigurationOptions* onvifMedia__GetAudioSourceConfigurationOptions,	///< Request parameter
    _onvifMedia__GetAudioSourceConfigurationOptionsResponse* onvifMedia__GetAudioSourceConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioEncoderConfigurationOptions_                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioEncoderConfigurationOptions_" of service binding "MediaBinding"

/**

Operation details:

This operation returns the available options  (supported values and ranges for audio
encoder configuration parameters) when the audio encoder parameters are
reconfigured.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioEncoderConfigurationOptions_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioEncoderConfigurationOptions* onvifMedia__GetAudioEncoderConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioEncoderConfigurationOptionsResponse* onvifMedia__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioEncoderConfigurationOptions_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioEncoderConfigurationOptions* onvifMedia__GetAudioEncoderConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioEncoderConfigurationOptionsResponse* onvifMedia__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioEncoderConfigurationOptions_ document
//gsoap onvifMedia service method-encoding:	GetAudioEncoderConfigurationOptions_ literal
//gsoap onvifMedia service method-action:	GetAudioEncoderConfigurationOptions_ http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions
//gsoap onvifMedia service method-output-action:	GetAudioEncoderConfigurationOptions_ http://www.onvif.org/ver10/media/wsdl/Media/GetAudioEncoderConfigurationOptionsResponse
int __onvifMedia__GetAudioEncoderConfigurationOptions_(
    _onvifMedia__GetAudioEncoderConfigurationOptions* onvifMedia__GetAudioEncoderConfigurationOptions,	///< Request parameter
    _onvifMedia__GetAudioEncoderConfigurationOptionsResponse* onvifMedia__GetAudioEncoderConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetMetadataConfigurationOptions_                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetMetadataConfigurationOptions_" of service binding "MediaBinding"

/**

Operation details:

This operation returns the available options (supported values and ranges for metadata
configuration parameters) for changing the metadata configuration.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetMetadataConfigurationOptions_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetMetadataConfigurationOptions* onvifMedia__GetMetadataConfigurationOptions,
    // response parameters:
    _onvifMedia__GetMetadataConfigurationOptionsResponse* onvifMedia__GetMetadataConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetMetadataConfigurationOptions_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetMetadataConfigurationOptions* onvifMedia__GetMetadataConfigurationOptions,
    // response parameters:
    _onvifMedia__GetMetadataConfigurationOptionsResponse* onvifMedia__GetMetadataConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetMetadataConfigurationOptions_ document
//gsoap onvifMedia service method-encoding:	GetMetadataConfigurationOptions_ literal
//gsoap onvifMedia service method-action:	GetMetadataConfigurationOptions_ http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions
//gsoap onvifMedia service method-output-action:	GetMetadataConfigurationOptions_ http://www.onvif.org/ver10/media/wsdl/Media/GetMetadataConfigurationOptionsResponse
int __onvifMedia__GetMetadataConfigurationOptions_(
    _onvifMedia__GetMetadataConfigurationOptions* onvifMedia__GetMetadataConfigurationOptions,	///< Request parameter
    _onvifMedia__GetMetadataConfigurationOptionsResponse* onvifMedia__GetMetadataConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioOutputConfigurationOptions_                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioOutputConfigurationOptions_" of service binding "MediaBinding"

/**

Operation details:

This operation returns the available options (supported values and ranges for audio
output configuration parameters) for configuring an audio output.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioOutputConfigurationOptions_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioOutputConfigurationOptions* onvifMedia__GetAudioOutputConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioOutputConfigurationOptionsResponse* onvifMedia__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioOutputConfigurationOptions_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioOutputConfigurationOptions* onvifMedia__GetAudioOutputConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioOutputConfigurationOptionsResponse* onvifMedia__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioOutputConfigurationOptions_ document
//gsoap onvifMedia service method-encoding:	GetAudioOutputConfigurationOptions_ literal
//gsoap onvifMedia service method-action:	GetAudioOutputConfigurationOptions_ http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions
//gsoap onvifMedia service method-output-action:	GetAudioOutputConfigurationOptions_ http://www.onvif.org/ver10/media/wsdl/Media/GetAudioOutputConfigurationOptionsResponse
int __onvifMedia__GetAudioOutputConfigurationOptions_(
    _onvifMedia__GetAudioOutputConfigurationOptions* onvifMedia__GetAudioOutputConfigurationOptions,	///< Request parameter
    _onvifMedia__GetAudioOutputConfigurationOptionsResponse* onvifMedia__GetAudioOutputConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetAudioDecoderConfigurationOptions_                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetAudioDecoderConfigurationOptions_" of service binding "MediaBinding"

/**

Operation details:

This command list the audio decoding capabilities for a given profile and configuration
of a
device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetAudioDecoderConfigurationOptions_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetAudioDecoderConfigurationOptions* onvifMedia__GetAudioDecoderConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioDecoderConfigurationOptionsResponse* onvifMedia__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetAudioDecoderConfigurationOptions_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetAudioDecoderConfigurationOptions* onvifMedia__GetAudioDecoderConfigurationOptions,
    // response parameters:
    _onvifMedia__GetAudioDecoderConfigurationOptionsResponse* onvifMedia__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetAudioDecoderConfigurationOptions_ document
//gsoap onvifMedia service method-encoding:	GetAudioDecoderConfigurationOptions_ literal
//gsoap onvifMedia service method-action:	GetAudioDecoderConfigurationOptions_ http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions
//gsoap onvifMedia service method-output-action:	GetAudioDecoderConfigurationOptions_ http://www.onvif.org/ver10/media/wsdl/Media/GetAudioDecoderConfigurationOptionsResponse
int __onvifMedia__GetAudioDecoderConfigurationOptions_(
    _onvifMedia__GetAudioDecoderConfigurationOptions* onvifMedia__GetAudioDecoderConfigurationOptions,	///< Request parameter
    _onvifMedia__GetAudioDecoderConfigurationOptionsResponse* onvifMedia__GetAudioDecoderConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_" of service binding "MediaBinding"

/**

Operation details:

The GetGuaranteedNumberOfVideoEncoderInstances command can be used to request the
minimum number of guaranteed video encoder instances (applications) per Video Source
Configuration.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetGuaranteedNumberOfVideoEncoderInstancesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances* onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances,
    // response parameters:
    _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse* onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances* onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances,
    // response parameters:
    _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse* onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetGuaranteedNumberOfVideoEncoderInstances_ document
//gsoap onvifMedia service method-encoding:	GetGuaranteedNumberOfVideoEncoderInstances_ literal
//gsoap onvifMedia service method-action:	GetGuaranteedNumberOfVideoEncoderInstances_ http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances
//gsoap onvifMedia service method-output-action:	GetGuaranteedNumberOfVideoEncoderInstances_ http://www.onvif.org/ver10/media/wsdl/Media/GetGuaranteedNumberOfVideoEncoderInstancesResponse
int __onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_(
    _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances* onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances,	///< Request parameter
    _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse* onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetStreamUri_                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetStreamUri_" of service binding "MediaBinding"

/**

Operation details:

This operation requests a URI that can be used to initiate a live media stream using
RTSP as
the control protocol. The returned URI shall remain valid indefinitely even if
the profile is
changed. The ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be
set
accordingly (ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). <br/>
				The correct syntax for the StreamSetup element for
these media stream setups defined in 5.1.1 of the streaming specification are as
follows:
				<ol>
					<li>RTP unicast over UDP: StreamType = "RTP_unicast",
TransportProtocol = "UDP"</li>
					<li>RTP over RTSP over HTTP over TCP: StreamType
= "RTP_unicast", TransportProtocol = "HTTP"</li>
					<li>RTP over RTSP over TCP: StreamType =
"RTP_unicast", TransportProtocol = "RTSP"</li>
				</ol>
				<br/>
If a multicast stream is requested the VideoEncoderConfiguration, AudioEncoderConfiguration
and MetadataConfiguration element inside the corresponding 
media profile must be configured with valid multicast settings.<br/>
For full compatibility with other ONVIF services a device should not generate Uris
longer than
128 octets.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetStreamUri"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetStreamUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetStreamUri_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetStreamUri*          onvifMedia__GetStreamUri,
    // response parameters:
    _onvifMedia__GetStreamUriResponse*  onvifMedia__GetStreamUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetStreamUri_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetStreamUri*          onvifMedia__GetStreamUri,
    // response parameters:
    _onvifMedia__GetStreamUriResponse*  onvifMedia__GetStreamUriResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetStreamUri_ document
//gsoap onvifMedia service method-encoding:	GetStreamUri_ literal
//gsoap onvifMedia service method-action:	GetStreamUri_ http://www.onvif.org/ver10/media/wsdl/GetStreamUri
//gsoap onvifMedia service method-output-action:	GetStreamUri_ http://www.onvif.org/ver10/media/wsdl/Media/GetStreamUriResponse
int __onvifMedia__GetStreamUri_(
    _onvifMedia__GetStreamUri*          onvifMedia__GetStreamUri,	///< Request parameter
    _onvifMedia__GetStreamUriResponse*  onvifMedia__GetStreamUriResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__StartMulticastStreaming_                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__StartMulticastStreaming_" of service binding "MediaBinding"

/**

Operation details:

This command starts multicast streaming using a specified media profile of a device.
Streaming continues until StopMulticastStreaming is called for the same Profile.
The
streaming shall continue after a reboot of the device until a StopMulticastStreaming
request is
received. The multicast address, port and TTL are configured in the
VideoEncoderConfiguration, AudioEncoderConfiguration and MetadataConfiguration
respectively.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/StartMulticastStreaming"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/StartMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__StartMulticastStreaming_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__StartMulticastStreaming* onvifMedia__StartMulticastStreaming,
    // response parameters:
    _onvifMedia__StartMulticastStreamingResponse* onvifMedia__StartMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__StartMulticastStreaming_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__StartMulticastStreaming* onvifMedia__StartMulticastStreaming,
    // response parameters:
    _onvifMedia__StartMulticastStreamingResponse* onvifMedia__StartMulticastStreamingResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	StartMulticastStreaming_ document
//gsoap onvifMedia service method-encoding:	StartMulticastStreaming_ literal
//gsoap onvifMedia service method-action:	StartMulticastStreaming_ http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming
//gsoap onvifMedia service method-output-action:	StartMulticastStreaming_ http://www.onvif.org/ver10/media/wsdl/Media/StartMulticastStreamingResponse
int __onvifMedia__StartMulticastStreaming_(
    _onvifMedia__StartMulticastStreaming* onvifMedia__StartMulticastStreaming,	///< Request parameter
    _onvifMedia__StartMulticastStreamingResponse* onvifMedia__StartMulticastStreamingResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__StopMulticastStreaming_                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__StopMulticastStreaming_" of service binding "MediaBinding"

/**

Operation details:

This command stop multicast streaming using a specified media profile of a device

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/StopMulticastStreaming"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/StopMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__StopMulticastStreaming_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__StopMulticastStreaming* onvifMedia__StopMulticastStreaming,
    // response parameters:
    _onvifMedia__StopMulticastStreamingResponse* onvifMedia__StopMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__StopMulticastStreaming_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__StopMulticastStreaming* onvifMedia__StopMulticastStreaming,
    // response parameters:
    _onvifMedia__StopMulticastStreamingResponse* onvifMedia__StopMulticastStreamingResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	StopMulticastStreaming_ document
//gsoap onvifMedia service method-encoding:	StopMulticastStreaming_ literal
//gsoap onvifMedia service method-action:	StopMulticastStreaming_ http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming
//gsoap onvifMedia service method-output-action:	StopMulticastStreaming_ http://www.onvif.org/ver10/media/wsdl/Media/StopMulticastStreamingResponse
int __onvifMedia__StopMulticastStreaming_(
    _onvifMedia__StopMulticastStreaming* onvifMedia__StopMulticastStreaming,	///< Request parameter
    _onvifMedia__StopMulticastStreamingResponse* onvifMedia__StopMulticastStreamingResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__SetSynchronizationPoint_                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__SetSynchronizationPoint_" of service binding "MediaBinding"

/**

Operation details:

Synchronization points allow clients to decode and correctly use all data after
the
synchronization point.
For example, if a video stream is configured with a large I-frame distance and
a client loses a
single packet, the client does not display video until the next I-frame is transmitted.
In such
cases, the client can request a Synchronization Point which enforces the device
to add an I-Frame as soon as possible. Clients can request Synchronization Points
for profiles. The device
shall add synchronization points for all streams associated with this profile.
Similarly, a synchronization point is used to get an update on full PTZ or event
status through
the metadata stream.
If a video stream is associated with the profile, an I-frame shall be added to
this video stream.
If a PTZ metadata stream is associated to the profile,
the PTZ position shall be repeated within the metadata stream.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/SetSynchronizationPoint"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/SetSynchronizationPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__SetSynchronizationPoint_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__SetSynchronizationPoint* onvifMedia__SetSynchronizationPoint,
    // response parameters:
    _onvifMedia__SetSynchronizationPointResponse* onvifMedia__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__SetSynchronizationPoint_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__SetSynchronizationPoint* onvifMedia__SetSynchronizationPoint,
    // response parameters:
    _onvifMedia__SetSynchronizationPointResponse* onvifMedia__SetSynchronizationPointResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	SetSynchronizationPoint_ document
//gsoap onvifMedia service method-encoding:	SetSynchronizationPoint_ literal
//gsoap onvifMedia service method-action:	SetSynchronizationPoint_ http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint
//gsoap onvifMedia service method-output-action:	SetSynchronizationPoint_ http://www.onvif.org/ver10/media/wsdl/Media/SetSynchronizationPointResponse
int __onvifMedia__SetSynchronizationPoint_(
    _onvifMedia__SetSynchronizationPoint* onvifMedia__SetSynchronizationPoint,	///< Request parameter
    _onvifMedia__SetSynchronizationPointResponse* onvifMedia__SetSynchronizationPointResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifMedia__GetSnapshotUri_                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifMedia__GetSnapshotUri_" of service binding "MediaBinding"

/**

Operation details:

A client uses the GetSnapshotUri command to obtain a JPEG snapshot from the
device. The returned URI shall remain valid indefinitely even if the profile is
changed. The
ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set accordingly
(ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). The URI can be
used for
acquiring a JPEG image through a HTTP GET operation. The image encoding will always
be
JPEG regardless of the encoding setting in the media profile. The Jpeg settings
(like resolution or quality) may be taken from the profile if suitable. The provided
image will be updated automatically and independent from calls to GetSnapshotUri.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing action: "http://www.onvif.org/ver10/media/wsdl/Media/GetSnapshotUri"

  - Addressing response action: "http://www.onvif.org/ver10/media/wsdl/Media/GetSnapshotUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifMedia__GetSnapshotUri_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifMedia__GetSnapshotUri*        onvifMedia__GetSnapshotUri,
    // response parameters:
    _onvifMedia__GetSnapshotUriResponse* onvifMedia__GetSnapshotUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifMedia__GetSnapshotUri_(
    struct soap *soap,
    // request parameters:
    _onvifMedia__GetSnapshotUri*        onvifMedia__GetSnapshotUri,
    // response parameters:
    _onvifMedia__GetSnapshotUriResponse* onvifMedia__GetSnapshotUriResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifMedia service method-style:	GetSnapshotUri_ document
//gsoap onvifMedia service method-encoding:	GetSnapshotUri_ literal
//gsoap onvifMedia service method-action:	GetSnapshotUri_ http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri
//gsoap onvifMedia service method-output-action:	GetSnapshotUri_ http://www.onvif.org/ver10/media/wsdl/Media/GetSnapshotUriResponse
int __onvifMedia__GetSnapshotUri_(
    _onvifMedia__GetSnapshotUri*        onvifMedia__GetSnapshotUri,	///< Request parameter
    _onvifMedia__GetSnapshotUriResponse* onvifMedia__GetSnapshotUriResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PTZBinding                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__GetServiceCapabilities                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__GetServiceCapabilities" of service binding "PTZBinding"

/**

Operation details:

Returns the capabilities of the PTZ service. The result is returned in a typed answer.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetServiceCapabilities"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__GetServiceCapabilities*  onvifPtz__GetServiceCapabilities,
    // response parameters:
    _onvifPtz__GetServiceCapabilitiesResponse* onvifPtz__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__GetServiceCapabilities(
    struct soap *soap,
    // request parameters:
    _onvifPtz__GetServiceCapabilities*  onvifPtz__GetServiceCapabilities,
    // response parameters:
    _onvifPtz__GetServiceCapabilitiesResponse* onvifPtz__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	GetServiceCapabilities document
//gsoap onvifPtz service method-encoding:	GetServiceCapabilities literal
//gsoap onvifPtz service method-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities
//gsoap onvifPtz service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetServiceCapabilitiesResponse
int __onvifPtz__GetServiceCapabilities(
    _onvifPtz__GetServiceCapabilities*  onvifPtz__GetServiceCapabilities,	///< Request parameter
    _onvifPtz__GetServiceCapabilitiesResponse* onvifPtz__GetServiceCapabilitiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__GetConfigurations                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__GetConfigurations" of service binding "PTZBinding"

/**

Operation details:


		        Get all the existing PTZConfigurations from the device.
				<br/>
				The default Position/Translation/Velocity Spaces
are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate
system. The default Speeds are
				introduced to control the speed of move requests
(absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits
is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position
Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt
limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements.
The limits shall be checked within the
				coordinate system for which the limits have been
specified. That means that even if
				movements are specified in a different coordinate
system, the requested movements shall be
				transformed to the coordinate system of the limits
where the limits can be checked. When a
				relative or continuous movements is specified, which
would leave the specified limits, the PTZ
				unit has to move along the specified limits. The
Zoom Limits have to be interpreted
				accordingly.
			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetConfigurations"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__GetConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__GetConfigurations*       onvifPtz__GetConfigurations,
    // response parameters:
    _onvifPtz__GetConfigurationsResponse* onvifPtz__GetConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__GetConfigurations(
    struct soap *soap,
    // request parameters:
    _onvifPtz__GetConfigurations*       onvifPtz__GetConfigurations,
    // response parameters:
    _onvifPtz__GetConfigurationsResponse* onvifPtz__GetConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	GetConfigurations document
//gsoap onvifPtz service method-encoding:	GetConfigurations literal
//gsoap onvifPtz service method-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations
//gsoap onvifPtz service method-output-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetConfigurationsResponse
int __onvifPtz__GetConfigurations(
    _onvifPtz__GetConfigurations*       onvifPtz__GetConfigurations,	///< Request parameter
    _onvifPtz__GetConfigurationsResponse* onvifPtz__GetConfigurationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__GetPresets                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__GetPresets" of service binding "PTZBinding"

/**

Operation details:


        Operation to request all PTZ presets for the PTZNode
        in the selected profile. The operation is supported if there is support
        for at least on PTZ preset by the PTZNode.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresets"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetPresets"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetPresetsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__GetPresets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__GetPresets*              onvifPtz__GetPresets,
    // response parameters:
    _onvifPtz__GetPresetsResponse*      onvifPtz__GetPresetsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__GetPresets(
    struct soap *soap,
    // request parameters:
    _onvifPtz__GetPresets*              onvifPtz__GetPresets,
    // response parameters:
    _onvifPtz__GetPresetsResponse*      onvifPtz__GetPresetsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	GetPresets document
//gsoap onvifPtz service method-encoding:	GetPresets literal
//gsoap onvifPtz service method-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/GetPresets
//gsoap onvifPtz service method-output-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetPresetsResponse
int __onvifPtz__GetPresets(
    _onvifPtz__GetPresets*              onvifPtz__GetPresets,	///< Request parameter
    _onvifPtz__GetPresetsResponse*      onvifPtz__GetPresetsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__SetPreset                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__SetPreset" of service binding "PTZBinding"

/**

Operation details:


				The SetPreset command saves the current device position
parameters so that the device can
				move to the saved preset position through the GotoPreset
operation.
				In order to create a new preset, the SetPresetRequest
contains no PresetToken. If creation is
				successful, the Response contains the PresetToken
which uniquely identifies the Preset. An
				existing Preset can be overwritten by specifying
the PresetToken of the corresponding Preset.
				In both cases (overwriting or creation) an optional
PresetName can be specified. The
				operation fails if the PTZ device is moving during
the SetPreset operation.
				The device MAY internally save additional states
such as imaging properties in the PTZ
				Preset which then should be recalled in the GotoPreset
operation.      

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/SetPreset"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/SetPreset"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/SetPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__SetPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__SetPreset*               onvifPtz__SetPreset,
    // response parameters:
    _onvifPtz__SetPresetResponse*       onvifPtz__SetPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__SetPreset(
    struct soap *soap,
    // request parameters:
    _onvifPtz__SetPreset*               onvifPtz__SetPreset,
    // response parameters:
    _onvifPtz__SetPresetResponse*       onvifPtz__SetPresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	SetPreset document
//gsoap onvifPtz service method-encoding:	SetPreset literal
//gsoap onvifPtz service method-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/SetPreset
//gsoap onvifPtz service method-output-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/PTZ/SetPresetResponse
int __onvifPtz__SetPreset(
    _onvifPtz__SetPreset*               onvifPtz__SetPreset,	///< Request parameter
    _onvifPtz__SetPresetResponse*       onvifPtz__SetPresetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__RemovePreset                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__RemovePreset" of service binding "PTZBinding"

/**

Operation details:


        Operation to remove a PTZ preset for the Node in
        the
        selected profile. The operation is supported if the
        PresetPosition
        capability exists for teh Node in the
        selected profile.
      

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/RemovePreset"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/RemovePresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__RemovePreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__RemovePreset*            onvifPtz__RemovePreset,
    // response parameters:
    _onvifPtz__RemovePresetResponse*    onvifPtz__RemovePresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__RemovePreset(
    struct soap *soap,
    // request parameters:
    _onvifPtz__RemovePreset*            onvifPtz__RemovePreset,
    // response parameters:
    _onvifPtz__RemovePresetResponse*    onvifPtz__RemovePresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	RemovePreset document
//gsoap onvifPtz service method-encoding:	RemovePreset literal
//gsoap onvifPtz service method-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/RemovePreset
//gsoap onvifPtz service method-output-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/PTZ/RemovePresetResponse
int __onvifPtz__RemovePreset(
    _onvifPtz__RemovePreset*            onvifPtz__RemovePreset,	///< Request parameter
    _onvifPtz__RemovePresetResponse*    onvifPtz__RemovePresetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__GotoPreset                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__GotoPreset" of service binding "PTZBinding"

/**

Operation details:


        Operation to go to a saved preset position for the
        PTZNode in the selected profile. The operation is supported if there is
        support for at least on PTZ preset by the PTZNode.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GotoPreset"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GotoPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__GotoPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__GotoPreset*              onvifPtz__GotoPreset,
    // response parameters:
    _onvifPtz__GotoPresetResponse*      onvifPtz__GotoPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__GotoPreset(
    struct soap *soap,
    // request parameters:
    _onvifPtz__GotoPreset*              onvifPtz__GotoPreset,
    // response parameters:
    _onvifPtz__GotoPresetResponse*      onvifPtz__GotoPresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	GotoPreset document
//gsoap onvifPtz service method-encoding:	GotoPreset literal
//gsoap onvifPtz service method-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/GotoPreset
//gsoap onvifPtz service method-output-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/PTZ/GotoPresetResponse
int __onvifPtz__GotoPreset(
    _onvifPtz__GotoPreset*              onvifPtz__GotoPreset,	///< Request parameter
    _onvifPtz__GotoPresetResponse*      onvifPtz__GotoPresetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__GetStatus                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__GetStatus" of service binding "PTZBinding"

/**

Operation details:


				Operation to request PTZ status for the Node in
the
				selected profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatus"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetStatus"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__GetStatus*               onvifPtz__GetStatus,
    // response parameters:
    _onvifPtz__GetStatusResponse*       onvifPtz__GetStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__GetStatus(
    struct soap *soap,
    // request parameters:
    _onvifPtz__GetStatus*               onvifPtz__GetStatus,
    // response parameters:
    _onvifPtz__GetStatusResponse*       onvifPtz__GetStatusResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	GetStatus document
//gsoap onvifPtz service method-encoding:	GetStatus literal
//gsoap onvifPtz service method-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/GetStatus
//gsoap onvifPtz service method-output-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetStatusResponse
int __onvifPtz__GetStatus(
    _onvifPtz__GetStatus*               onvifPtz__GetStatus,	///< Request parameter
    _onvifPtz__GetStatusResponse*       onvifPtz__GetStatusResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__GetConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__GetConfiguration" of service binding "PTZBinding"

/**

Operation details:

Get a specific PTZonfiguration from the device, identified by its reference token
or name.
				<br/>
				The default Position/Translation/Velocity Spaces
are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate
system. The default Speeds are
				introduced to control the speed of move requests
(absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits
is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position
Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt
limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements.
The limits shall be checked within the
				coordinate system for which the limits have been
specified. That means that even if
				movements are specified in a different coordinate
system, the requested movements shall be
				transformed to the coordinate system of the limits
where the limits can be checked. When a
				relative or continuous movements is specified, which
would leave the specified limits, the PTZ
				unit has to move along the specified limits. The
Zoom Limits have to be interpreted
				accordingly.
			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetConfiguration"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__GetConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__GetConfiguration*        onvifPtz__GetConfiguration,
    // response parameters:
    _onvifPtz__GetConfigurationResponse* onvifPtz__GetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__GetConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifPtz__GetConfiguration*        onvifPtz__GetConfiguration,
    // response parameters:
    _onvifPtz__GetConfigurationResponse* onvifPtz__GetConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	GetConfiguration document
//gsoap onvifPtz service method-encoding:	GetConfiguration literal
//gsoap onvifPtz service method-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration
//gsoap onvifPtz service method-output-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetConfigurationResponse
int __onvifPtz__GetConfiguration(
    _onvifPtz__GetConfiguration*        onvifPtz__GetConfiguration,	///< Request parameter
    _onvifPtz__GetConfigurationResponse* onvifPtz__GetConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__GetNodes                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__GetNodes" of service binding "PTZBinding"

/**

Operation details:


				Get the descriptions of the available PTZ Nodes.
				<br/>
				A PTZ-capable device may have multiple PTZ Nodes.
The PTZ Nodes may represent
				mechanical PTZ drivers, uploaded PTZ drivers or
digital PTZ drivers. PTZ Nodes are the
				lowest level entities in the PTZ control API and
reflect the supported PTZ capabilities. The
				PTZ Node is referenced either by its name or by
its reference token. 
      		

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodes"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetNodes"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetNodesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__GetNodes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__GetNodes*                onvifPtz__GetNodes,
    // response parameters:
    _onvifPtz__GetNodesResponse*        onvifPtz__GetNodesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__GetNodes(
    struct soap *soap,
    // request parameters:
    _onvifPtz__GetNodes*                onvifPtz__GetNodes,
    // response parameters:
    _onvifPtz__GetNodesResponse*        onvifPtz__GetNodesResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	GetNodes document
//gsoap onvifPtz service method-encoding:	GetNodes literal
//gsoap onvifPtz service method-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/GetNodes
//gsoap onvifPtz service method-output-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetNodesResponse
int __onvifPtz__GetNodes(
    _onvifPtz__GetNodes*                onvifPtz__GetNodes,	///< Request parameter
    _onvifPtz__GetNodesResponse*        onvifPtz__GetNodesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__GetNode                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__GetNode" of service binding "PTZBinding"

/**

Operation details:

Get a specific PTZ Node identified by a reference
        token or a name.
	  

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/GetNode"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetNode"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetNodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__GetNode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__GetNode*                 onvifPtz__GetNode,
    // response parameters:
    _onvifPtz__GetNodeResponse*         onvifPtz__GetNodeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__GetNode(
    struct soap *soap,
    // request parameters:
    _onvifPtz__GetNode*                 onvifPtz__GetNode,
    // response parameters:
    _onvifPtz__GetNodeResponse*         onvifPtz__GetNodeResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	GetNode document
//gsoap onvifPtz service method-encoding:	GetNode literal
//gsoap onvifPtz service method-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/GetNode
//gsoap onvifPtz service method-output-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetNodeResponse
int __onvifPtz__GetNode(
    _onvifPtz__GetNode*                 onvifPtz__GetNode,	///< Request parameter
    _onvifPtz__GetNodeResponse*         onvifPtz__GetNodeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__SetConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__SetConfiguration" of service binding "PTZBinding"

/**

Operation details:


        Set/update a existing PTZConfiguration on the device.
      

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/SetConfiguration"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/SetConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__SetConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__SetConfiguration*        onvifPtz__SetConfiguration,
    // response parameters:
    _onvifPtz__SetConfigurationResponse* onvifPtz__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__SetConfiguration(
    struct soap *soap,
    // request parameters:
    _onvifPtz__SetConfiguration*        onvifPtz__SetConfiguration,
    // response parameters:
    _onvifPtz__SetConfigurationResponse* onvifPtz__SetConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	SetConfiguration document
//gsoap onvifPtz service method-encoding:	SetConfiguration literal
//gsoap onvifPtz service method-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration
//gsoap onvifPtz service method-output-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/PTZ/SetConfigurationResponse
int __onvifPtz__SetConfiguration(
    _onvifPtz__SetConfiguration*        onvifPtz__SetConfiguration,	///< Request parameter
    _onvifPtz__SetConfigurationResponse* onvifPtz__SetConfigurationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__GetConfigurationOptions                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__GetConfigurationOptions" of service binding "PTZBinding"

/**

Operation details:


				List supported coordinate systems including their
range limitations. Therefore, the options
				MAY differ depending on whether the PTZ Configuration
is assigned to a Profile containing a
				Video Source Configuration. In that case, the options
may additionally contain coordinate
				systems referring to the image coordinate system
described by the Video Source
				Configuration. If the PTZ Node supports continuous
movements, it shall return a Timeout Range within
				which Timeouts are accepted by the PTZ Node.				
			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetConfigurationOptions"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__GetConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__GetConfigurationOptions* onvifPtz__GetConfigurationOptions,
    // response parameters:
    _onvifPtz__GetConfigurationOptionsResponse* onvifPtz__GetConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__GetConfigurationOptions(
    struct soap *soap,
    // request parameters:
    _onvifPtz__GetConfigurationOptions* onvifPtz__GetConfigurationOptions,
    // response parameters:
    _onvifPtz__GetConfigurationOptionsResponse* onvifPtz__GetConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	GetConfigurationOptions document
//gsoap onvifPtz service method-encoding:	GetConfigurationOptions literal
//gsoap onvifPtz service method-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions
//gsoap onvifPtz service method-output-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetConfigurationOptionsResponse
int __onvifPtz__GetConfigurationOptions(
    _onvifPtz__GetConfigurationOptions* onvifPtz__GetConfigurationOptions,	///< Request parameter
    _onvifPtz__GetConfigurationOptionsResponse* onvifPtz__GetConfigurationOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__GotoHomePosition                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__GotoHomePosition" of service binding "PTZBinding"

/**

Operation details:


        Operation to move the PTZ device to it's "home" position. The operation
is supported if the HomeSupported element in the PTZNode is true.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GotoHomePosition"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GotoHomePositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__GotoHomePosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__GotoHomePosition*        onvifPtz__GotoHomePosition,
    // response parameters:
    _onvifPtz__GotoHomePositionResponse* onvifPtz__GotoHomePositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__GotoHomePosition(
    struct soap *soap,
    // request parameters:
    _onvifPtz__GotoHomePosition*        onvifPtz__GotoHomePosition,
    // response parameters:
    _onvifPtz__GotoHomePositionResponse* onvifPtz__GotoHomePositionResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	GotoHomePosition document
//gsoap onvifPtz service method-encoding:	GotoHomePosition literal
//gsoap onvifPtz service method-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition
//gsoap onvifPtz service method-output-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/PTZ/GotoHomePositionResponse
int __onvifPtz__GotoHomePosition(
    _onvifPtz__GotoHomePosition*        onvifPtz__GotoHomePosition,	///< Request parameter
    _onvifPtz__GotoHomePositionResponse* onvifPtz__GotoHomePositionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__SetHomePosition                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__SetHomePosition" of service binding "PTZBinding"

/**

Operation details:

Operation to save current position as the home position.
				The SetHomePosition command returns with a failure
if the home position is fixed and
				cannot be overwritten. If the SetHomePosition is
successful, it is possible to recall the
				Home Position with the GotoHomePosition command.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/SetHomePosition"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/SetHomePositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__SetHomePosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__SetHomePosition*         onvifPtz__SetHomePosition,
    // response parameters:
    _onvifPtz__SetHomePositionResponse* onvifPtz__SetHomePositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__SetHomePosition(
    struct soap *soap,
    // request parameters:
    _onvifPtz__SetHomePosition*         onvifPtz__SetHomePosition,
    // response parameters:
    _onvifPtz__SetHomePositionResponse* onvifPtz__SetHomePositionResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	SetHomePosition document
//gsoap onvifPtz service method-encoding:	SetHomePosition literal
//gsoap onvifPtz service method-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition
//gsoap onvifPtz service method-output-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/PTZ/SetHomePositionResponse
int __onvifPtz__SetHomePosition(
    _onvifPtz__SetHomePosition*         onvifPtz__SetHomePosition,	///< Request parameter
    _onvifPtz__SetHomePositionResponse* onvifPtz__SetHomePositionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__ContinuousMove                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__ContinuousMove" of service binding "PTZBinding"

/**

Operation details:

Operation for continuous Pan/Tilt and Zoom movements. The operation is supported
if the PTZNode supports at least one continuous Pan/Tilt or Zoom space. Speed argument
is optional. If the speed argument is omitted, the default speed set by the PTZConfiguration
will be used.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/ContinuousMove"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/ContinuousMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__ContinuousMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__ContinuousMove*          onvifPtz__ContinuousMove,
    // response parameters:
    _onvifPtz__ContinuousMoveResponse*  onvifPtz__ContinuousMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__ContinuousMove(
    struct soap *soap,
    // request parameters:
    _onvifPtz__ContinuousMove*          onvifPtz__ContinuousMove,
    // response parameters:
    _onvifPtz__ContinuousMoveResponse*  onvifPtz__ContinuousMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	ContinuousMove document
//gsoap onvifPtz service method-encoding:	ContinuousMove literal
//gsoap onvifPtz service method-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove
//gsoap onvifPtz service method-output-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/PTZ/ContinuousMoveResponse
int __onvifPtz__ContinuousMove(
    _onvifPtz__ContinuousMove*          onvifPtz__ContinuousMove,	///< Request parameter
    _onvifPtz__ContinuousMoveResponse*  onvifPtz__ContinuousMoveResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__RelativeMove                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__RelativeMove" of service binding "PTZBinding"

/**

Operation details:

Operation for Relative Pan/Tilt and Zoom Move. The operation is supported if the
PTZNode supports at least one relative Pan/Tilt or Zoom space.<br/> 
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/RelativeMove"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/RelativeMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__RelativeMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__RelativeMove*            onvifPtz__RelativeMove,
    // response parameters:
    _onvifPtz__RelativeMoveResponse*    onvifPtz__RelativeMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__RelativeMove(
    struct soap *soap,
    // request parameters:
    _onvifPtz__RelativeMove*            onvifPtz__RelativeMove,
    // response parameters:
    _onvifPtz__RelativeMoveResponse*    onvifPtz__RelativeMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	RelativeMove document
//gsoap onvifPtz service method-encoding:	RelativeMove literal
//gsoap onvifPtz service method-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/RelativeMove
//gsoap onvifPtz service method-output-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/PTZ/RelativeMoveResponse
int __onvifPtz__RelativeMove(
    _onvifPtz__RelativeMove*            onvifPtz__RelativeMove,	///< Request parameter
    _onvifPtz__RelativeMoveResponse*    onvifPtz__RelativeMoveResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__SendAuxiliaryCommand                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__SendAuxiliaryCommand" of service binding "PTZBinding"

/**

Operation details:


        Operation to send auxiliary commands to the PTZ device
        mapped by the PTZNode in the selected profile. The
        operation is supported
        if the AuxiliarySupported element of the PTZNode is true
      

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/SendAuxiliaryCommand"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__SendAuxiliaryCommand*    onvifPtz__SendAuxiliaryCommand,
    // response parameters:
    _onvifPtz__SendAuxiliaryCommandResponse* onvifPtz__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__SendAuxiliaryCommand(
    struct soap *soap,
    // request parameters:
    _onvifPtz__SendAuxiliaryCommand*    onvifPtz__SendAuxiliaryCommand,
    // response parameters:
    _onvifPtz__SendAuxiliaryCommandResponse* onvifPtz__SendAuxiliaryCommandResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	SendAuxiliaryCommand document
//gsoap onvifPtz service method-encoding:	SendAuxiliaryCommand literal
//gsoap onvifPtz service method-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand
//gsoap onvifPtz service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/PTZ/SendAuxiliaryCommandResponse
int __onvifPtz__SendAuxiliaryCommand(
    _onvifPtz__SendAuxiliaryCommand*    onvifPtz__SendAuxiliaryCommand,	///< Request parameter
    _onvifPtz__SendAuxiliaryCommandResponse* onvifPtz__SendAuxiliaryCommandResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__AbsoluteMove                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__AbsoluteMove" of service binding "PTZBinding"

/**

Operation details:

Operation to move pan,tilt or zoom to a absolute destination. <br/>
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/AbsoluteMove"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/AbsoluteMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__AbsoluteMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__AbsoluteMove*            onvifPtz__AbsoluteMove,
    // response parameters:
    _onvifPtz__AbsoluteMoveResponse*    onvifPtz__AbsoluteMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__AbsoluteMove(
    struct soap *soap,
    // request parameters:
    _onvifPtz__AbsoluteMove*            onvifPtz__AbsoluteMove,
    // response parameters:
    _onvifPtz__AbsoluteMoveResponse*    onvifPtz__AbsoluteMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	AbsoluteMove document
//gsoap onvifPtz service method-encoding:	AbsoluteMove literal
//gsoap onvifPtz service method-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove
//gsoap onvifPtz service method-output-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/PTZ/AbsoluteMoveResponse
int __onvifPtz__AbsoluteMove(
    _onvifPtz__AbsoluteMove*            onvifPtz__AbsoluteMove,	///< Request parameter
    _onvifPtz__AbsoluteMoveResponse*    onvifPtz__AbsoluteMoveResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__Stop                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__Stop" of service binding "PTZBinding"

/**

Operation details:

Operation to stop ongoing pan, tilt and zoom movements of absolute relative and
continuous type.
If no stop argument for pan, tilt or zoom is set, the device will stop all ongoing
pan, tilt and zoom movements.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/Stop"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/Stop"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/StopResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__Stop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__Stop*                    onvifPtz__Stop,
    // response parameters:
    _onvifPtz__StopResponse*            onvifPtz__StopResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__Stop(
    struct soap *soap,
    // request parameters:
    _onvifPtz__Stop*                    onvifPtz__Stop,
    // response parameters:
    _onvifPtz__StopResponse*            onvifPtz__StopResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	Stop document
//gsoap onvifPtz service method-encoding:	Stop literal
//gsoap onvifPtz service method-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/Stop
//gsoap onvifPtz service method-output-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/PTZ/StopResponse
int __onvifPtz__Stop(
    _onvifPtz__Stop*                    onvifPtz__Stop,	///< Request parameter
    _onvifPtz__StopResponse*            onvifPtz__StopResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__GetPresetTours                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__GetPresetTours" of service binding "PTZBinding"

/**

Operation details:

Operation to request PTZ preset tours in the selected media profiles.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetPresetTours"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetPresetToursResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__GetPresetTours(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__GetPresetTours*          onvifPtz__GetPresetTours,
    // response parameters:
    _onvifPtz__GetPresetToursResponse*  onvifPtz__GetPresetToursResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__GetPresetTours(
    struct soap *soap,
    // request parameters:
    _onvifPtz__GetPresetTours*          onvifPtz__GetPresetTours,
    // response parameters:
    _onvifPtz__GetPresetToursResponse*  onvifPtz__GetPresetToursResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	GetPresetTours document
//gsoap onvifPtz service method-encoding:	GetPresetTours literal
//gsoap onvifPtz service method-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours
//gsoap onvifPtz service method-output-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetPresetToursResponse
int __onvifPtz__GetPresetTours(
    _onvifPtz__GetPresetTours*          onvifPtz__GetPresetTours,	///< Request parameter
    _onvifPtz__GetPresetToursResponse*  onvifPtz__GetPresetToursResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__GetPresetTour                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__GetPresetTour" of service binding "PTZBinding"

/**

Operation details:

Operation to request a specific PTZ preset tour in the selected media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetPresetTour"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetPresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__GetPresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__GetPresetTour*           onvifPtz__GetPresetTour,
    // response parameters:
    _onvifPtz__GetPresetTourResponse*   onvifPtz__GetPresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__GetPresetTour(
    struct soap *soap,
    // request parameters:
    _onvifPtz__GetPresetTour*           onvifPtz__GetPresetTour,
    // response parameters:
    _onvifPtz__GetPresetTourResponse*   onvifPtz__GetPresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	GetPresetTour document
//gsoap onvifPtz service method-encoding:	GetPresetTour literal
//gsoap onvifPtz service method-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour
//gsoap onvifPtz service method-output-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetPresetTourResponse
int __onvifPtz__GetPresetTour(
    _onvifPtz__GetPresetTour*           onvifPtz__GetPresetTour,	///< Request parameter
    _onvifPtz__GetPresetTourResponse*   onvifPtz__GetPresetTourResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__GetPresetTourOptions                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__GetPresetTourOptions" of service binding "PTZBinding"

/**

Operation details:

Operation to request available options to configure PTZ preset tour.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetPresetTourOptions"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetPresetTourOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__GetPresetTourOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__GetPresetTourOptions*    onvifPtz__GetPresetTourOptions,
    // response parameters:
    _onvifPtz__GetPresetTourOptionsResponse* onvifPtz__GetPresetTourOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__GetPresetTourOptions(
    struct soap *soap,
    // request parameters:
    _onvifPtz__GetPresetTourOptions*    onvifPtz__GetPresetTourOptions,
    // response parameters:
    _onvifPtz__GetPresetTourOptionsResponse* onvifPtz__GetPresetTourOptionsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	GetPresetTourOptions document
//gsoap onvifPtz service method-encoding:	GetPresetTourOptions literal
//gsoap onvifPtz service method-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions
//gsoap onvifPtz service method-output-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/PTZ/GetPresetTourOptionsResponse
int __onvifPtz__GetPresetTourOptions(
    _onvifPtz__GetPresetTourOptions*    onvifPtz__GetPresetTourOptions,	///< Request parameter
    _onvifPtz__GetPresetTourOptionsResponse* onvifPtz__GetPresetTourOptionsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__CreatePresetTour                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__CreatePresetTour" of service binding "PTZBinding"

/**

Operation details:

Operation to create a preset tour for the selected media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/CreatePresetTour"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/CreatePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__CreatePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__CreatePresetTour*        onvifPtz__CreatePresetTour,
    // response parameters:
    _onvifPtz__CreatePresetTourResponse* onvifPtz__CreatePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__CreatePresetTour(
    struct soap *soap,
    // request parameters:
    _onvifPtz__CreatePresetTour*        onvifPtz__CreatePresetTour,
    // response parameters:
    _onvifPtz__CreatePresetTourResponse* onvifPtz__CreatePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	CreatePresetTour document
//gsoap onvifPtz service method-encoding:	CreatePresetTour literal
//gsoap onvifPtz service method-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour
//gsoap onvifPtz service method-output-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/PTZ/CreatePresetTourResponse
int __onvifPtz__CreatePresetTour(
    _onvifPtz__CreatePresetTour*        onvifPtz__CreatePresetTour,	///< Request parameter
    _onvifPtz__CreatePresetTourResponse* onvifPtz__CreatePresetTourResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__ModifyPresetTour                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__ModifyPresetTour" of service binding "PTZBinding"

/**

Operation details:

Operation to modify a preset tour for the selected media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/ModifyPresetTour"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/ModifyPresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__ModifyPresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__ModifyPresetTour*        onvifPtz__ModifyPresetTour,
    // response parameters:
    _onvifPtz__ModifyPresetTourResponse* onvifPtz__ModifyPresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__ModifyPresetTour(
    struct soap *soap,
    // request parameters:
    _onvifPtz__ModifyPresetTour*        onvifPtz__ModifyPresetTour,
    // response parameters:
    _onvifPtz__ModifyPresetTourResponse* onvifPtz__ModifyPresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	ModifyPresetTour document
//gsoap onvifPtz service method-encoding:	ModifyPresetTour literal
//gsoap onvifPtz service method-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour
//gsoap onvifPtz service method-output-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/PTZ/ModifyPresetTourResponse
int __onvifPtz__ModifyPresetTour(
    _onvifPtz__ModifyPresetTour*        onvifPtz__ModifyPresetTour,	///< Request parameter
    _onvifPtz__ModifyPresetTourResponse* onvifPtz__ModifyPresetTourResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__OperatePresetTour                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__OperatePresetTour" of service binding "PTZBinding"

/**

Operation details:

Operation to perform specific operation on the preset tour in selected media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/OperatePresetTour"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/OperatePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__OperatePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__OperatePresetTour*       onvifPtz__OperatePresetTour,
    // response parameters:
    _onvifPtz__OperatePresetTourResponse* onvifPtz__OperatePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__OperatePresetTour(
    struct soap *soap,
    // request parameters:
    _onvifPtz__OperatePresetTour*       onvifPtz__OperatePresetTour,
    // response parameters:
    _onvifPtz__OperatePresetTourResponse* onvifPtz__OperatePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	OperatePresetTour document
//gsoap onvifPtz service method-encoding:	OperatePresetTour literal
//gsoap onvifPtz service method-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour
//gsoap onvifPtz service method-output-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/PTZ/OperatePresetTourResponse
int __onvifPtz__OperatePresetTour(
    _onvifPtz__OperatePresetTour*       onvifPtz__OperatePresetTour,	///< Request parameter
    _onvifPtz__OperatePresetTourResponse* onvifPtz__OperatePresetTourResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __onvifPtz__RemovePresetTour                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__onvifPtz__RemovePresetTour" of service binding "PTZBinding"

/**

Operation details:

Operation to delete a specific preset tour from the media profile.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"

  - Addressing action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/RemovePresetTour"

  - Addressing response action: "http://www.onvif.org/ver20/ptz/wsdl/PTZ/RemovePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___onvifPtz__RemovePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifPtz__RemovePresetTour*        onvifPtz__RemovePresetTour,
    // response parameters:
    _onvifPtz__RemovePresetTourResponse* onvifPtz__RemovePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __onvifPtz__RemovePresetTour(
    struct soap *soap,
    // request parameters:
    _onvifPtz__RemovePresetTour*        onvifPtz__RemovePresetTour,
    // response parameters:
    _onvifPtz__RemovePresetTourResponse* onvifPtz__RemovePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap onvifPtz service method-style:	RemovePresetTour document
//gsoap onvifPtz service method-encoding:	RemovePresetTour literal
//gsoap onvifPtz service method-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour
//gsoap onvifPtz service method-output-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/PTZ/RemovePresetTourResponse
int __onvifPtz__RemovePresetTour(
    _onvifPtz__RemovePresetTour*        onvifPtz__RemovePresetTour,	///< Request parameter
    _onvifPtz__RemovePresetTourResponse* onvifPtz__RemovePresetTourResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   CreatePullPointBinding                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev_cpb__CreatePullPoint                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev_cpb__CreatePullPoint" of service binding "CreatePullPointBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/CreatePullPoint/CreatePullPointRequest"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/CreatePullPoint/CreatePullPointResponse"

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev_cpb__CreatePullPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _oasisWsnB2__CreatePullPoint*       oasisWsnB2__CreatePullPoint,
    // response parameters:
    _oasisWsnB2__CreatePullPointResponse* oasisWsnB2__CreatePullPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev_cpb__CreatePullPoint(
    struct soap *soap,
    // request parameters:
    _oasisWsnB2__CreatePullPoint*       oasisWsnB2__CreatePullPoint,
    // response parameters:
    _oasisWsnB2__CreatePullPointResponse* oasisWsnB2__CreatePullPointResponse
  );
@endcode

C++ proxy class (defined in soapCreatePullPointBindingProxy.h):
@code
  class CreatePullPointBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCreatePullPointBindingService.h):
@code
  class CreatePullPointBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev-cpb service method-style:	CreatePullPoint document
//gsoap tev-cpb service method-encoding:	CreatePullPoint literal
//gsoap tev-cpb service method-action:	CreatePullPoint http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest
//gsoap tev-cpb service method-output-action:	CreatePullPoint http://www.onvif.org/ver10/events/wsdl/CreatePullPoint/CreatePullPointResponse
//gsoap tev-cpb service method-fault:	CreatePullPoint oasisWsnB2__UnableToCreatePullPointFault
int __tev_cpb__CreatePullPoint(
    _oasisWsnB2__CreatePullPoint*       oasisWsnB2__CreatePullPoint,	///< Request parameter
    _oasisWsnB2__CreatePullPointResponse* oasisWsnB2__CreatePullPointResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   EventBinding                                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev_eb__GetServiceCapabilities                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev_eb__GetServiceCapabilities" of service binding "EventBinding"

/**

Operation details:

Returns the capabilities of the event service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilities"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilities"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev_eb__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifEvents__GetServiceCapabilities* onvifEvents__GetServiceCapabilities,
    // response parameters:
    _onvifEvents__GetServiceCapabilitiesResponse* onvifEvents__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev_eb__GetServiceCapabilities(
    struct soap *soap,
    // request parameters:
    _onvifEvents__GetServiceCapabilities* onvifEvents__GetServiceCapabilities,
    // response parameters:
    _onvifEvents__GetServiceCapabilitiesResponse* onvifEvents__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapEventBindingProxy.h):
@code
  class EventBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapEventBindingService.h):
@code
  class EventBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev-eb service method-style:	GetServiceCapabilities document
//gsoap tev-eb service method-encoding:	GetServiceCapabilities literal
//gsoap tev-eb service method-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilities
//gsoap tev-eb service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesResponse
int __tev_eb__GetServiceCapabilities(
    _onvifEvents__GetServiceCapabilities* onvifEvents__GetServiceCapabilities,	///< Request parameter
    _onvifEvents__GetServiceCapabilitiesResponse* onvifEvents__GetServiceCapabilitiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev_eb__CreatePullPointSubscription                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev_eb__CreatePullPointSubscription" of service binding "EventBinding"

/**

Operation details:

This method returns a PullPointSubscription that can be polled using PullMessages.

				This message contains the same elements as the SubscriptionRequest
of the WS-BaseNotification without the ConsumerReference.<br/>
				If no Filter is specified the pullpoint notifies
all occurring events to the client.<br/>
				This method is mandatory.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscription"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionResponse"

  - SOAP Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev_eb__CreatePullPointSubscription(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifEvents__CreatePullPointSubscription* onvifEvents__CreatePullPointSubscription,
    // response parameters:
    _onvifEvents__CreatePullPointSubscriptionResponse* onvifEvents__CreatePullPointSubscriptionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev_eb__CreatePullPointSubscription(
    struct soap *soap,
    // request parameters:
    _onvifEvents__CreatePullPointSubscription* onvifEvents__CreatePullPointSubscription,
    // response parameters:
    _onvifEvents__CreatePullPointSubscriptionResponse* onvifEvents__CreatePullPointSubscriptionResponse
  );
@endcode

C++ proxy class (defined in soapEventBindingProxy.h):
@code
  class EventBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapEventBindingService.h):
@code
  class EventBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev-eb service method-style:	CreatePullPointSubscription document
//gsoap tev-eb service method-encoding:	CreatePullPointSubscription literal
//gsoap tev-eb service method-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest
//gsoap tev-eb service method-output-action:	CreatePullPointSubscription http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionResponse
//gsoap tev-eb service method-fault:	CreatePullPointSubscription oasisWsrfR2__ResourceUnknownFault
//gsoap tev-eb service method-fault:	CreatePullPointSubscription oasisWsnB2__InvalidFilterFault
//gsoap tev-eb service method-fault:	CreatePullPointSubscription oasisWsnB2__TopicExpressionDialectUnknownFault
//gsoap tev-eb service method-fault:	CreatePullPointSubscription oasisWsnB2__InvalidTopicExpressionFault
//gsoap tev-eb service method-fault:	CreatePullPointSubscription oasisWsnB2__TopicNotSupportedFault
//gsoap tev-eb service method-fault:	CreatePullPointSubscription oasisWsnB2__InvalidProducerPropertiesExpressionFault
//gsoap tev-eb service method-fault:	CreatePullPointSubscription oasisWsnB2__InvalidMessageContentExpressionFault
//gsoap tev-eb service method-fault:	CreatePullPointSubscription oasisWsnB2__UnacceptableInitialTerminationTimeFault
//gsoap tev-eb service method-fault:	CreatePullPointSubscription oasisWsnB2__UnrecognizedPolicyRequestFault
//gsoap tev-eb service method-fault:	CreatePullPointSubscription oasisWsnB2__UnsupportedPolicyRequestFault
//gsoap tev-eb service method-fault:	CreatePullPointSubscription oasisWsnB2__NotifyMessageNotSupportedFault
//gsoap tev-eb service method-fault:	CreatePullPointSubscription oasisWsnB2__SubscribeCreationFailedFault
int __tev_eb__CreatePullPointSubscription(
    _onvifEvents__CreatePullPointSubscription* onvifEvents__CreatePullPointSubscription,	///< Request parameter
    _onvifEvents__CreatePullPointSubscriptionResponse* onvifEvents__CreatePullPointSubscriptionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev_eb__GetEventProperties                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev_eb__GetEventProperties" of service binding "EventBinding"

/**

Operation details:

The WS-BaseNotification specification defines a set of OPTIONAL WS-ResouceProperties.
				This specification does not require the implementation
of the WS-ResourceProperty interface.
				Instead, the subsequent direct interface shall be
implemented by an ONVIF compliant device
				in order to provide information about the FilterDialects,
Schema files and topics supported by
				the device.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventProperties"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev_eb__GetEventProperties(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifEvents__GetEventProperties*   onvifEvents__GetEventProperties,
    // response parameters:
    _onvifEvents__GetEventPropertiesResponse* onvifEvents__GetEventPropertiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev_eb__GetEventProperties(
    struct soap *soap,
    // request parameters:
    _onvifEvents__GetEventProperties*   onvifEvents__GetEventProperties,
    // response parameters:
    _onvifEvents__GetEventPropertiesResponse* onvifEvents__GetEventPropertiesResponse
  );
@endcode

C++ proxy class (defined in soapEventBindingProxy.h):
@code
  class EventBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapEventBindingService.h):
@code
  class EventBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev-eb service method-style:	GetEventProperties document
//gsoap tev-eb service method-encoding:	GetEventProperties literal
//gsoap tev-eb service method-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest
//gsoap tev-eb service method-output-action:	GetEventProperties http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesResponse
int __tev_eb__GetEventProperties(
    _onvifEvents__GetEventProperties*   onvifEvents__GetEventProperties,	///< Request parameter
    _onvifEvents__GetEventPropertiesResponse* onvifEvents__GetEventPropertiesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   NotificationConsumerBinding                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev_ncb__Notify                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev_ncb__Notify" of service binding "NotificationConsumerBinding"

/**

Operation details:


  - One-way message

  - SOAP document/literal style messaging

  - SOAP action: "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/NotificationConsumer/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev_ncb__Notify(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _oasisWsnB2__Notify*                oasisWsnB2__Notify,
    // response parameters:
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev_ncb__Notify(
    struct soap *soap,
    // request parameters:
    _oasisWsnB2__Notify*                oasisWsnB2__Notify,
    // response parameters:
  );
@endcode

C++ proxy class (defined in soapNotificationConsumerBindingProxy.h):
@code
  class NotificationConsumerBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapNotificationConsumerBindingService.h):
@code
  class NotificationConsumerBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev-ncb service method-style:	Notify document
//gsoap tev-ncb service method-encoding:	Notify literal
//gsoap tev-ncb service method-action:	Notify http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify
int __tev_ncb__Notify(
    _oasisWsnB2__Notify*                oasisWsnB2__Notify,	///< Request parameter
    void	///< One-way message: no response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   NotificationProducerBinding                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev_npb__Subscribe                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev_npb__Subscribe" of service binding "NotificationProducerBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/NotificationProducer/Subscribe"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/NotificationProducer/SubscribeResponse"

  - SOAP Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev_npb__Subscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _oasisWsnB2__Subscribe*             oasisWsnB2__Subscribe,
    // response parameters:
    _oasisWsnB2__SubscribeResponse*     oasisWsnB2__SubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev_npb__Subscribe(
    struct soap *soap,
    // request parameters:
    _oasisWsnB2__Subscribe*             oasisWsnB2__Subscribe,
    // response parameters:
    _oasisWsnB2__SubscribeResponse*     oasisWsnB2__SubscribeResponse
  );
@endcode

C++ proxy class (defined in soapNotificationProducerBindingProxy.h):
@code
  class NotificationProducerBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapNotificationProducerBindingService.h):
@code
  class NotificationProducerBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev-npb service method-style:	Subscribe document
//gsoap tev-npb service method-encoding:	Subscribe literal
//gsoap tev-npb service method-action:	Subscribe http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest
//gsoap tev-npb service method-output-action:	Subscribe http://www.onvif.org/ver10/events/wsdl/NotificationProducer/SubscribeResponse
//gsoap tev-npb service method-fault:	Subscribe oasisWsrfR2__ResourceUnknownFault
//gsoap tev-npb service method-fault:	Subscribe oasisWsnB2__InvalidFilterFault
//gsoap tev-npb service method-fault:	Subscribe oasisWsnB2__TopicExpressionDialectUnknownFault
//gsoap tev-npb service method-fault:	Subscribe oasisWsnB2__InvalidTopicExpressionFault
//gsoap tev-npb service method-fault:	Subscribe oasisWsnB2__TopicNotSupportedFault
//gsoap tev-npb service method-fault:	Subscribe oasisWsnB2__InvalidProducerPropertiesExpressionFault
//gsoap tev-npb service method-fault:	Subscribe oasisWsnB2__InvalidMessageContentExpressionFault
//gsoap tev-npb service method-fault:	Subscribe oasisWsnB2__UnacceptableInitialTerminationTimeFault
//gsoap tev-npb service method-fault:	Subscribe oasisWsnB2__UnrecognizedPolicyRequestFault
//gsoap tev-npb service method-fault:	Subscribe oasisWsnB2__UnsupportedPolicyRequestFault
//gsoap tev-npb service method-fault:	Subscribe oasisWsnB2__NotifyMessageNotSupportedFault
//gsoap tev-npb service method-fault:	Subscribe oasisWsnB2__SubscribeCreationFailedFault
int __tev_npb__Subscribe(
    _oasisWsnB2__Subscribe*             oasisWsnB2__Subscribe,	///< Request parameter
    _oasisWsnB2__SubscribeResponse*     oasisWsnB2__SubscribeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev_npb__GetCurrentMessage                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev_npb__GetCurrentMessage" of service binding "NotificationProducerBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/NotificationProducer/GetCurrentMessage"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/NotificationProducer/GetCurrentMessageResponse"

  - SOAP Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev_npb__GetCurrentMessage(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _oasisWsnB2__GetCurrentMessage*     oasisWsnB2__GetCurrentMessage,
    // response parameters:
    _oasisWsnB2__GetCurrentMessageResponse* oasisWsnB2__GetCurrentMessageResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev_npb__GetCurrentMessage(
    struct soap *soap,
    // request parameters:
    _oasisWsnB2__GetCurrentMessage*     oasisWsnB2__GetCurrentMessage,
    // response parameters:
    _oasisWsnB2__GetCurrentMessageResponse* oasisWsnB2__GetCurrentMessageResponse
  );
@endcode

C++ proxy class (defined in soapNotificationProducerBindingProxy.h):
@code
  class NotificationProducerBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapNotificationProducerBindingService.h):
@code
  class NotificationProducerBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev-npb service method-style:	GetCurrentMessage document
//gsoap tev-npb service method-encoding:	GetCurrentMessage literal
//gsoap tev-npb service method-action:	GetCurrentMessage http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest
//gsoap tev-npb service method-output-action:	GetCurrentMessage http://www.onvif.org/ver10/events/wsdl/NotificationProducer/GetCurrentMessageResponse
//gsoap tev-npb service method-fault:	GetCurrentMessage oasisWsrfR2__ResourceUnknownFault
//gsoap tev-npb service method-fault:	GetCurrentMessage oasisWsnB2__TopicExpressionDialectUnknownFault
//gsoap tev-npb service method-fault:	GetCurrentMessage oasisWsnB2__InvalidTopicExpressionFault
//gsoap tev-npb service method-fault:	GetCurrentMessage oasisWsnB2__TopicNotSupportedFault
//gsoap tev-npb service method-fault:	GetCurrentMessage oasisWsnB2__NoCurrentMessageOnTopicFault
//gsoap tev-npb service method-fault:	GetCurrentMessage oasisWsnB2__MultipleTopicsSpecifiedFault
int __tev_npb__GetCurrentMessage(
    _oasisWsnB2__GetCurrentMessage*     oasisWsnB2__GetCurrentMessage,	///< Request parameter
    _oasisWsnB2__GetCurrentMessageResponse* oasisWsnB2__GetCurrentMessageResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PullPointBinding                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev_ppb__GetMessages                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev_ppb__GetMessages" of service binding "PullPointBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/PullPoint/GetMessagesRequest"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/PullPoint/GetMessagesResponse"

  - SOAP Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev_ppb__GetMessages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _oasisWsnB2__GetMessages*           oasisWsnB2__GetMessages,
    // response parameters:
    _oasisWsnB2__GetMessagesResponse*   oasisWsnB2__GetMessagesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev_ppb__GetMessages(
    struct soap *soap,
    // request parameters:
    _oasisWsnB2__GetMessages*           oasisWsnB2__GetMessages,
    // response parameters:
    _oasisWsnB2__GetMessagesResponse*   oasisWsnB2__GetMessagesResponse
  );
@endcode

C++ proxy class (defined in soapPullPointBindingProxy.h):
@code
  class PullPointBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointBindingService.h):
@code
  class PullPointBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev-ppb service method-style:	GetMessages document
//gsoap tev-ppb service method-encoding:	GetMessages literal
//gsoap tev-ppb service method-action:	GetMessages http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest
//gsoap tev-ppb service method-output-action:	GetMessages http://www.onvif.org/ver10/events/wsdl/PullPoint/GetMessagesResponse
//gsoap tev-ppb service method-fault:	GetMessages oasisWsrfR2__ResourceUnknownFault
//gsoap tev-ppb service method-fault:	GetMessages oasisWsnB2__UnableToGetMessagesFault
int __tev_ppb__GetMessages(
    _oasisWsnB2__GetMessages*           oasisWsnB2__GetMessages,	///< Request parameter
    _oasisWsnB2__GetMessagesResponse*   oasisWsnB2__GetMessagesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev_ppb__DestroyPullPoint                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev_ppb__DestroyPullPoint" of service binding "PullPointBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/PullPoint/DestroyPullPointRequest"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/PullPoint/DestroyPullPointResponse"

  - SOAP Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev_ppb__DestroyPullPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _oasisWsnB2__DestroyPullPoint*      oasisWsnB2__DestroyPullPoint,
    // response parameters:
    _oasisWsnB2__DestroyPullPointResponse* oasisWsnB2__DestroyPullPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev_ppb__DestroyPullPoint(
    struct soap *soap,
    // request parameters:
    _oasisWsnB2__DestroyPullPoint*      oasisWsnB2__DestroyPullPoint,
    // response parameters:
    _oasisWsnB2__DestroyPullPointResponse* oasisWsnB2__DestroyPullPointResponse
  );
@endcode

C++ proxy class (defined in soapPullPointBindingProxy.h):
@code
  class PullPointBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointBindingService.h):
@code
  class PullPointBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev-ppb service method-style:	DestroyPullPoint document
//gsoap tev-ppb service method-encoding:	DestroyPullPoint literal
//gsoap tev-ppb service method-action:	DestroyPullPoint http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest
//gsoap tev-ppb service method-output-action:	DestroyPullPoint http://www.onvif.org/ver10/events/wsdl/PullPoint/DestroyPullPointResponse
//gsoap tev-ppb service method-fault:	DestroyPullPoint oasisWsrfR2__ResourceUnknownFault
//gsoap tev-ppb service method-fault:	DestroyPullPoint oasisWsnB2__UnableToDestroyPullPointFault
int __tev_ppb__DestroyPullPoint(
    _oasisWsnB2__DestroyPullPoint*      oasisWsnB2__DestroyPullPoint,	///< Request parameter
    _oasisWsnB2__DestroyPullPointResponse* oasisWsnB2__DestroyPullPointResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev_ppb__Notify                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev_ppb__Notify" of service binding "PullPointBinding"

/**

Operation details:


  - One-way message

  - SOAP document/literal style messaging

  - SOAP action: "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/PullPoint/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev_ppb__Notify(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _oasisWsnB2__Notify*                oasisWsnB2__Notify,
    // response parameters:
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev_ppb__Notify(
    struct soap *soap,
    // request parameters:
    _oasisWsnB2__Notify*                oasisWsnB2__Notify,
    // response parameters:
  );
@endcode

C++ proxy class (defined in soapPullPointBindingProxy.h):
@code
  class PullPointBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointBindingService.h):
@code
  class PullPointBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev-ppb service method-style:	Notify document
//gsoap tev-ppb service method-encoding:	Notify literal
//gsoap tev-ppb service method-action:	Notify http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify
int __tev_ppb__Notify(
    _oasisWsnB2__Notify*                oasisWsnB2__Notify,	///< Request parameter
    void	///< One-way message: no response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PullPointSubscriptionBinding                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev_pps__PullMessages                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev_pps__PullMessages" of service binding "PullPointSubscriptionBinding"

/**

Operation details:


				This method pulls one or more messages from a PullPoint.
				The device shall provide the following PullMessages
command for all SubscriptionManager
				endpoints returned by the CreatePullPointSubscription
command. This method shall not wait until
				the requested number of messages is available but
return as soon as at least one message is available.<br/>
				The command shall at least support a Timeout of
one minute. In case a device supports retrieval of less messages 
				than requested it shall return these without generating
a fault.

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessages"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesResponse"

  - SOAP Fault: "http://www.onvif.org/ver10/events/wsdl":PullMessagesFaultResponse (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev_pps__PullMessages(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifEvents__PullMessages*         onvifEvents__PullMessages,
    // response parameters:
    _onvifEvents__PullMessagesResponse* onvifEvents__PullMessagesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev_pps__PullMessages(
    struct soap *soap,
    // request parameters:
    _onvifEvents__PullMessages*         onvifEvents__PullMessages,
    // response parameters:
    _onvifEvents__PullMessagesResponse* onvifEvents__PullMessagesResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev-pps service method-style:	PullMessages document
//gsoap tev-pps service method-encoding:	PullMessages literal
//gsoap tev-pps service method-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest
//gsoap tev-pps service method-output-action:	PullMessages http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesResponse
//gsoap tev-pps service method-fault:	PullMessages onvifEvents__PullMessagesFaultResponse
int __tev_pps__PullMessages(
    _onvifEvents__PullMessages*         onvifEvents__PullMessages,	///< Request parameter
    _onvifEvents__PullMessagesResponse* onvifEvents__PullMessagesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev_pps__SetSynchronizationPoint                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev_pps__SetSynchronizationPoint" of service binding "PullPointSubscriptionBinding"

/**

Operation details:

Properties inform a client about property creation, changes and
				deletion in a uniform way. When a client wants to
synchronize its properties with the
				properties of the device, it can request a synchronization
point which repeats the current
				status of all properties to which a client has subscribed.
The PropertyOperation of all
				produced notifications is set to Initialized
(see Section 15.5). The Synchronization Point is
				requested directly from the SubscriptionManager
which was returned in either the
				SubscriptionResponse or in the CreatePullPointSubscriptionResponse.
The property update is
				transmitted via the notification transportation
of the notification interface. This method is mandatory.
			

  - SOAP document/literal style messaging

  - SOAP action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPoint"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev_pps__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _onvifEvents__SetSynchronizationPoint* onvifEvents__SetSynchronizationPoint,
    // response parameters:
    _onvifEvents__SetSynchronizationPointResponse* onvifEvents__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev_pps__SetSynchronizationPoint(
    struct soap *soap,
    // request parameters:
    _onvifEvents__SetSynchronizationPoint* onvifEvents__SetSynchronizationPoint,
    // response parameters:
    _onvifEvents__SetSynchronizationPointResponse* onvifEvents__SetSynchronizationPointResponse
  );
@endcode

C++ proxy class (defined in soapPullPointSubscriptionBindingProxy.h):
@code
  class PullPointSubscriptionBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPullPointSubscriptionBindingService.h):
@code
  class PullPointSubscriptionBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev-pps service method-style:	SetSynchronizationPoint document
//gsoap tev-pps service method-encoding:	SetSynchronizationPoint literal
//gsoap tev-pps service method-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest
//gsoap tev-pps service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointResponse
int __tev_pps__SetSynchronizationPoint(
    _onvifEvents__SetSynchronizationPoint* onvifEvents__SetSynchronizationPoint,	///< Request parameter
    _onvifEvents__SetSynchronizationPointResponse* onvifEvents__SetSynchronizationPointResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   SubscriptionManagerBinding                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev_smb__Renew                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev_smb__Renew" of service binding "SubscriptionManagerBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/SubscriptionManager/RenewRequest"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/SubscriptionManager/RenewResponse"

  - SOAP Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev_smb__Renew(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _oasisWsnB2__Renew*                 oasisWsnB2__Renew,
    // response parameters:
    _oasisWsnB2__RenewResponse*         oasisWsnB2__RenewResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev_smb__Renew(
    struct soap *soap,
    // request parameters:
    _oasisWsnB2__Renew*                 oasisWsnB2__Renew,
    // response parameters:
    _oasisWsnB2__RenewResponse*         oasisWsnB2__RenewResponse
  );
@endcode

C++ proxy class (defined in soapSubscriptionManagerBindingProxy.h):
@code
  class SubscriptionManagerBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSubscriptionManagerBindingService.h):
@code
  class SubscriptionManagerBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev-smb service method-style:	Renew document
//gsoap tev-smb service method-encoding:	Renew literal
//gsoap tev-smb service method-action:	Renew http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest
//gsoap tev-smb service method-output-action:	Renew http://www.onvif.org/ver10/events/wsdl/SubscriptionManager/RenewResponse
//gsoap tev-smb service method-fault:	Renew oasisWsrfR2__ResourceUnknownFault
//gsoap tev-smb service method-fault:	Renew oasisWsnB2__UnacceptableTerminationTimeFault
int __tev_smb__Renew(
    _oasisWsnB2__Renew*                 oasisWsnB2__Renew,	///< Request parameter
    _oasisWsnB2__RenewResponse*         oasisWsnB2__RenewResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tev_smb__Unsubscribe                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tev_smb__Unsubscribe" of service binding "SubscriptionManagerBinding"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest"

  - Addressing action: "http://www.onvif.org/ver10/events/wsdl/SubscriptionManager/UnsubscribeRequest"

  - Addressing response action: "http://www.onvif.org/ver10/events/wsdl/SubscriptionManager/UnsubscribeResponse"

  - SOAP Fault: "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault (literal)

  - SOAP Fault: "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tev_smb__Unsubscribe(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _oasisWsnB2__Unsubscribe*           oasisWsnB2__Unsubscribe,
    // response parameters:
    _oasisWsnB2__UnsubscribeResponse*   oasisWsnB2__UnsubscribeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tev_smb__Unsubscribe(
    struct soap *soap,
    // request parameters:
    _oasisWsnB2__Unsubscribe*           oasisWsnB2__Unsubscribe,
    // response parameters:
    _oasisWsnB2__UnsubscribeResponse*   oasisWsnB2__UnsubscribeResponse
  );
@endcode

C++ proxy class (defined in soapSubscriptionManagerBindingProxy.h):
@code
  class SubscriptionManagerBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSubscriptionManagerBindingService.h):
@code
  class SubscriptionManagerBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap tev-smb service method-style:	Unsubscribe document
//gsoap tev-smb service method-encoding:	Unsubscribe literal
//gsoap tev-smb service method-action:	Unsubscribe http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest
//gsoap tev-smb service method-output-action:	Unsubscribe http://www.onvif.org/ver10/events/wsdl/SubscriptionManager/UnsubscribeResponse
//gsoap tev-smb service method-fault:	Unsubscribe oasisWsrfR2__ResourceUnknownFault
//gsoap tev-smb service method-fault:	Unsubscribe oasisWsnB2__UnableToDestroySubscriptionFault
int __tev_smb__Unsubscribe(
    _oasisWsnB2__Unsubscribe*           oasisWsnB2__Unsubscribe,	///< Request parameter
    _oasisWsnB2__UnsubscribeResponse*   oasisWsnB2__UnsubscribeResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns1 Top-level root elements of schema "http://www.w3.org/2005/08/addressing"

  - <ns1:EndpointReference> (use wsdl2h option -g to auto-generate)

  - <ns1:ReferenceParameters> (use wsdl2h option -g to auto-generate)

  - <ns1:Metadata> (use wsdl2h option -g to auto-generate)

  - <ns1:MessageID> (use wsdl2h option -g to auto-generate)

  - <ns1:RelatesTo> (use wsdl2h option -g to auto-generate)

  - <ns1:ReplyTo> (use wsdl2h option -g to auto-generate)

  - <ns1:From> (use wsdl2h option -g to auto-generate)

  - <ns1:FaultTo> (use wsdl2h option -g to auto-generate)

  - <ns1:To> (use wsdl2h option -g to auto-generate)

  - <ns1:Action> (use wsdl2h option -g to auto-generate)

  - <ns1:RetryAfter> (use wsdl2h option -g to auto-generate)

  - <ns1:ProblemHeaderQName> (use wsdl2h option -g to auto-generate)

  - <ns1:ProblemIRI> (use wsdl2h option -g to auto-generate)

  - <ns1:ProblemAction> (use wsdl2h option -g to auto-generate)

@section ns1 Top-level root elements of schema ""

@section oasisWsrfRw2 Top-level root elements of schema "http://docs.oasis-open.org/wsrf/rw-2"

@section oasisWsrfR2 Top-level root elements of schema "http://docs.oasis-open.org/wsrf/r-2"

  - <oasisWsrfR2:ResourceUnknownFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsrfR2:ResourceUnavailableFault> (use wsdl2h option -g to auto-generate)

@section oasisWsrf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <oasisWsrf:BaseFault> (use wsdl2h option -g to auto-generate)

@section oasisWsnB2 Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <oasisWsnB2:TopicExpression> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:FixedTopicSet> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:TopicExpressionDialect> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:NotificationProducerRP> @ref _oasisWsnB2__NotificationProducerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__NotificationProducerRP(struct soap*, _oasisWsnB2__NotificationProducerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__NotificationProducerRP(struct soap*, _oasisWsnB2__NotificationProducerRP*);
    @endcode

  - <oasisWsnB2:ConsumerReference> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:Filter> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:SubscriptionPolicy> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:CreationTime> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:SubscriptionManagerRP> @ref _oasisWsnB2__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__SubscriptionManagerRP(struct soap*, _oasisWsnB2__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__SubscriptionManagerRP(struct soap*, _oasisWsnB2__SubscriptionManagerRP*);
    @endcode

  - <oasisWsnB2:SubscriptionReference> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:Topic> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:ProducerReference> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:NotificationMessage> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:Notify> @ref _oasisWsnB2__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__Notify(struct soap*, _oasisWsnB2__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__Notify(struct soap*, _oasisWsnB2__Notify*);
    @endcode

  - <oasisWsnB2:CurrentTime> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:TerminationTime> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:ProducerProperties> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:MessageContent> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:UseRaw> @ref _oasisWsnB2__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__UseRaw(struct soap*, _oasisWsnB2__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__UseRaw(struct soap*, _oasisWsnB2__UseRaw*);
    @endcode

  - <oasisWsnB2:Subscribe> @ref _oasisWsnB2__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__Subscribe(struct soap*, _oasisWsnB2__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__Subscribe(struct soap*, _oasisWsnB2__Subscribe*);
    @endcode

  - <oasisWsnB2:SubscribeResponse> @ref _oasisWsnB2__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__SubscribeResponse(struct soap*, _oasisWsnB2__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__SubscribeResponse(struct soap*, _oasisWsnB2__SubscribeResponse*);
    @endcode

  - <oasisWsnB2:GetCurrentMessage> @ref _oasisWsnB2__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__GetCurrentMessage(struct soap*, _oasisWsnB2__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__GetCurrentMessage(struct soap*, _oasisWsnB2__GetCurrentMessage*);
    @endcode

  - <oasisWsnB2:GetCurrentMessageResponse> @ref _oasisWsnB2__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__GetCurrentMessageResponse(struct soap*, _oasisWsnB2__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__GetCurrentMessageResponse(struct soap*, _oasisWsnB2__GetCurrentMessageResponse*);
    @endcode

  - <oasisWsnB2:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:InvalidFilterFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:GetMessages> @ref _oasisWsnB2__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__GetMessages(struct soap*, _oasisWsnB2__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__GetMessages(struct soap*, _oasisWsnB2__GetMessages*);
    @endcode

  - <oasisWsnB2:GetMessagesResponse> @ref _oasisWsnB2__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__GetMessagesResponse(struct soap*, _oasisWsnB2__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__GetMessagesResponse(struct soap*, _oasisWsnB2__GetMessagesResponse*);
    @endcode

  - <oasisWsnB2:DestroyPullPoint> @ref _oasisWsnB2__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__DestroyPullPoint(struct soap*, _oasisWsnB2__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__DestroyPullPoint(struct soap*, _oasisWsnB2__DestroyPullPoint*);
    @endcode

  - <oasisWsnB2:DestroyPullPointResponse> @ref _oasisWsnB2__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__DestroyPullPointResponse(struct soap*, _oasisWsnB2__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__DestroyPullPointResponse(struct soap*, _oasisWsnB2__DestroyPullPointResponse*);
    @endcode

  - <oasisWsnB2:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:CreatePullPoint> @ref _oasisWsnB2__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__CreatePullPoint(struct soap*, _oasisWsnB2__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__CreatePullPoint(struct soap*, _oasisWsnB2__CreatePullPoint*);
    @endcode

  - <oasisWsnB2:CreatePullPointResponse> @ref _oasisWsnB2__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__CreatePullPointResponse(struct soap*, _oasisWsnB2__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__CreatePullPointResponse(struct soap*, _oasisWsnB2__CreatePullPointResponse*);
    @endcode

  - <oasisWsnB2:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:Renew> @ref _oasisWsnB2__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__Renew(struct soap*, _oasisWsnB2__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__Renew(struct soap*, _oasisWsnB2__Renew*);
    @endcode

  - <oasisWsnB2:RenewResponse> @ref _oasisWsnB2__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__RenewResponse(struct soap*, _oasisWsnB2__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__RenewResponse(struct soap*, _oasisWsnB2__RenewResponse*);
    @endcode

  - <oasisWsnB2:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:Unsubscribe> @ref _oasisWsnB2__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__Unsubscribe(struct soap*, _oasisWsnB2__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__Unsubscribe(struct soap*, _oasisWsnB2__Unsubscribe*);
    @endcode

  - <oasisWsnB2:UnsubscribeResponse> @ref _oasisWsnB2__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__UnsubscribeResponse(struct soap*, _oasisWsnB2__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__UnsubscribeResponse(struct soap*, _oasisWsnB2__UnsubscribeResponse*);
    @endcode

  - <oasisWsnB2:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:PauseSubscription> @ref _oasisWsnB2__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__PauseSubscription(struct soap*, _oasisWsnB2__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__PauseSubscription(struct soap*, _oasisWsnB2__PauseSubscription*);
    @endcode

  - <oasisWsnB2:PauseSubscriptionResponse> @ref _oasisWsnB2__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__PauseSubscriptionResponse(struct soap*, _oasisWsnB2__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__PauseSubscriptionResponse(struct soap*, _oasisWsnB2__PauseSubscriptionResponse*);
    @endcode

  - <oasisWsnB2:ResumeSubscription> @ref _oasisWsnB2__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__ResumeSubscription(struct soap*, _oasisWsnB2__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__ResumeSubscription(struct soap*, _oasisWsnB2__ResumeSubscription*);
    @endcode

  - <oasisWsnB2:ResumeSubscriptionResponse> @ref _oasisWsnB2__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__oasisWsnB2__ResumeSubscriptionResponse(struct soap*, _oasisWsnB2__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__oasisWsnB2__ResumeSubscriptionResponse(struct soap*, _oasisWsnB2__ResumeSubscriptionResponse*);
    @endcode

  - <oasisWsnB2:PauseFailedFault> (use wsdl2h option -g to auto-generate)

  - <oasisWsnB2:ResumeFailedFault> (use wsdl2h option -g to auto-generate)

@section oasisWsnT1 Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <oasisWsnT1:TopicNamespace> (use wsdl2h option -g to auto-generate)

  - <oasisWsnT1:TopicSet> (use wsdl2h option -g to auto-generate)

@section onvifDevice Top-level root elements of schema "http://www.onvif.org/ver10/device/wsdl"

  - <onvifDevice:GetServices> @ref _onvifDevice__GetServices
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetServices(struct soap*, _onvifDevice__GetServices*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetServices(struct soap*, _onvifDevice__GetServices*);
    @endcode

  - <onvifDevice:GetServicesResponse> @ref _onvifDevice__GetServicesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetServicesResponse(struct soap*, _onvifDevice__GetServicesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetServicesResponse(struct soap*, _onvifDevice__GetServicesResponse*);
    @endcode

  - <onvifDevice:GetServiceCapabilities> @ref _onvifDevice__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetServiceCapabilities(struct soap*, _onvifDevice__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetServiceCapabilities(struct soap*, _onvifDevice__GetServiceCapabilities*);
    @endcode

  - <onvifDevice:GetServiceCapabilitiesResponse> @ref _onvifDevice__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetServiceCapabilitiesResponse(struct soap*, _onvifDevice__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetServiceCapabilitiesResponse(struct soap*, _onvifDevice__GetServiceCapabilitiesResponse*);
    @endcode

  - <onvifDevice:Capabilities> (use wsdl2h option -g to auto-generate)

  - <onvifDevice:GetDeviceInformation> @ref _onvifDevice__GetDeviceInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDeviceInformation(struct soap*, _onvifDevice__GetDeviceInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDeviceInformation(struct soap*, _onvifDevice__GetDeviceInformation*);
    @endcode

  - <onvifDevice:GetDeviceInformationResponse> @ref _onvifDevice__GetDeviceInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDeviceInformationResponse(struct soap*, _onvifDevice__GetDeviceInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDeviceInformationResponse(struct soap*, _onvifDevice__GetDeviceInformationResponse*);
    @endcode

  - <onvifDevice:SetSystemDateAndTime> @ref _onvifDevice__SetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetSystemDateAndTime(struct soap*, _onvifDevice__SetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetSystemDateAndTime(struct soap*, _onvifDevice__SetSystemDateAndTime*);
    @endcode

  - <onvifDevice:SetSystemDateAndTimeResponse> @ref _onvifDevice__SetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetSystemDateAndTimeResponse(struct soap*, _onvifDevice__SetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetSystemDateAndTimeResponse(struct soap*, _onvifDevice__SetSystemDateAndTimeResponse*);
    @endcode

  - <onvifDevice:GetSystemDateAndTime> @ref _onvifDevice__GetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetSystemDateAndTime(struct soap*, _onvifDevice__GetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetSystemDateAndTime(struct soap*, _onvifDevice__GetSystemDateAndTime*);
    @endcode

  - <onvifDevice:GetSystemDateAndTimeResponse> @ref _onvifDevice__GetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetSystemDateAndTimeResponse(struct soap*, _onvifDevice__GetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetSystemDateAndTimeResponse(struct soap*, _onvifDevice__GetSystemDateAndTimeResponse*);
    @endcode

  - <onvifDevice:SetSystemFactoryDefault> @ref _onvifDevice__SetSystemFactoryDefault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetSystemFactoryDefault(struct soap*, _onvifDevice__SetSystemFactoryDefault*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetSystemFactoryDefault(struct soap*, _onvifDevice__SetSystemFactoryDefault*);
    @endcode

  - <onvifDevice:SetSystemFactoryDefaultResponse> @ref _onvifDevice__SetSystemFactoryDefaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetSystemFactoryDefaultResponse(struct soap*, _onvifDevice__SetSystemFactoryDefaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetSystemFactoryDefaultResponse(struct soap*, _onvifDevice__SetSystemFactoryDefaultResponse*);
    @endcode

  - <onvifDevice:UpgradeSystemFirmware> @ref _onvifDevice__UpgradeSystemFirmware
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__UpgradeSystemFirmware(struct soap*, _onvifDevice__UpgradeSystemFirmware*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__UpgradeSystemFirmware(struct soap*, _onvifDevice__UpgradeSystemFirmware*);
    @endcode

  - <onvifDevice:UpgradeSystemFirmwareResponse> @ref _onvifDevice__UpgradeSystemFirmwareResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__UpgradeSystemFirmwareResponse(struct soap*, _onvifDevice__UpgradeSystemFirmwareResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__UpgradeSystemFirmwareResponse(struct soap*, _onvifDevice__UpgradeSystemFirmwareResponse*);
    @endcode

  - <onvifDevice:SystemReboot> @ref _onvifDevice__SystemReboot
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SystemReboot(struct soap*, _onvifDevice__SystemReboot*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SystemReboot(struct soap*, _onvifDevice__SystemReboot*);
    @endcode

  - <onvifDevice:SystemRebootResponse> @ref _onvifDevice__SystemRebootResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SystemRebootResponse(struct soap*, _onvifDevice__SystemRebootResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SystemRebootResponse(struct soap*, _onvifDevice__SystemRebootResponse*);
    @endcode

  - <onvifDevice:RestoreSystem> @ref _onvifDevice__RestoreSystem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__RestoreSystem(struct soap*, _onvifDevice__RestoreSystem*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__RestoreSystem(struct soap*, _onvifDevice__RestoreSystem*);
    @endcode

  - <onvifDevice:RestoreSystemResponse> @ref _onvifDevice__RestoreSystemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__RestoreSystemResponse(struct soap*, _onvifDevice__RestoreSystemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__RestoreSystemResponse(struct soap*, _onvifDevice__RestoreSystemResponse*);
    @endcode

  - <onvifDevice:GetSystemBackup> @ref _onvifDevice__GetSystemBackup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetSystemBackup(struct soap*, _onvifDevice__GetSystemBackup*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetSystemBackup(struct soap*, _onvifDevice__GetSystemBackup*);
    @endcode

  - <onvifDevice:GetSystemBackupResponse> @ref _onvifDevice__GetSystemBackupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetSystemBackupResponse(struct soap*, _onvifDevice__GetSystemBackupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetSystemBackupResponse(struct soap*, _onvifDevice__GetSystemBackupResponse*);
    @endcode

  - <onvifDevice:GetSystemSupportInformation> @ref _onvifDevice__GetSystemSupportInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetSystemSupportInformation(struct soap*, _onvifDevice__GetSystemSupportInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetSystemSupportInformation(struct soap*, _onvifDevice__GetSystemSupportInformation*);
    @endcode

  - <onvifDevice:GetSystemSupportInformationResponse> @ref _onvifDevice__GetSystemSupportInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetSystemSupportInformationResponse(struct soap*, _onvifDevice__GetSystemSupportInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetSystemSupportInformationResponse(struct soap*, _onvifDevice__GetSystemSupportInformationResponse*);
    @endcode

  - <onvifDevice:GetSystemLog> @ref _onvifDevice__GetSystemLog
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetSystemLog(struct soap*, _onvifDevice__GetSystemLog*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetSystemLog(struct soap*, _onvifDevice__GetSystemLog*);
    @endcode

  - <onvifDevice:GetSystemLogResponse> @ref _onvifDevice__GetSystemLogResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetSystemLogResponse(struct soap*, _onvifDevice__GetSystemLogResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetSystemLogResponse(struct soap*, _onvifDevice__GetSystemLogResponse*);
    @endcode

  - <onvifDevice:GetScopes> @ref _onvifDevice__GetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetScopes(struct soap*, _onvifDevice__GetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetScopes(struct soap*, _onvifDevice__GetScopes*);
    @endcode

  - <onvifDevice:GetScopesResponse> @ref _onvifDevice__GetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetScopesResponse(struct soap*, _onvifDevice__GetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetScopesResponse(struct soap*, _onvifDevice__GetScopesResponse*);
    @endcode

  - <onvifDevice:SetScopes> @ref _onvifDevice__SetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetScopes(struct soap*, _onvifDevice__SetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetScopes(struct soap*, _onvifDevice__SetScopes*);
    @endcode

  - <onvifDevice:SetScopesResponse> @ref _onvifDevice__SetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetScopesResponse(struct soap*, _onvifDevice__SetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetScopesResponse(struct soap*, _onvifDevice__SetScopesResponse*);
    @endcode

  - <onvifDevice:AddScopes> @ref _onvifDevice__AddScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__AddScopes(struct soap*, _onvifDevice__AddScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__AddScopes(struct soap*, _onvifDevice__AddScopes*);
    @endcode

  - <onvifDevice:AddScopesResponse> @ref _onvifDevice__AddScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__AddScopesResponse(struct soap*, _onvifDevice__AddScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__AddScopesResponse(struct soap*, _onvifDevice__AddScopesResponse*);
    @endcode

  - <onvifDevice:RemoveScopes> @ref _onvifDevice__RemoveScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__RemoveScopes(struct soap*, _onvifDevice__RemoveScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__RemoveScopes(struct soap*, _onvifDevice__RemoveScopes*);
    @endcode

  - <onvifDevice:RemoveScopesResponse> @ref _onvifDevice__RemoveScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__RemoveScopesResponse(struct soap*, _onvifDevice__RemoveScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__RemoveScopesResponse(struct soap*, _onvifDevice__RemoveScopesResponse*);
    @endcode

  - <onvifDevice:GetDiscoveryMode> @ref _onvifDevice__GetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDiscoveryMode(struct soap*, _onvifDevice__GetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDiscoveryMode(struct soap*, _onvifDevice__GetDiscoveryMode*);
    @endcode

  - <onvifDevice:GetDiscoveryModeResponse> @ref _onvifDevice__GetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDiscoveryModeResponse(struct soap*, _onvifDevice__GetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDiscoveryModeResponse(struct soap*, _onvifDevice__GetDiscoveryModeResponse*);
    @endcode

  - <onvifDevice:SetDiscoveryMode> @ref _onvifDevice__SetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetDiscoveryMode(struct soap*, _onvifDevice__SetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetDiscoveryMode(struct soap*, _onvifDevice__SetDiscoveryMode*);
    @endcode

  - <onvifDevice:SetDiscoveryModeResponse> @ref _onvifDevice__SetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetDiscoveryModeResponse(struct soap*, _onvifDevice__SetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetDiscoveryModeResponse(struct soap*, _onvifDevice__SetDiscoveryModeResponse*);
    @endcode

  - <onvifDevice:GetRemoteDiscoveryMode> @ref _onvifDevice__GetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetRemoteDiscoveryMode(struct soap*, _onvifDevice__GetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetRemoteDiscoveryMode(struct soap*, _onvifDevice__GetRemoteDiscoveryMode*);
    @endcode

  - <onvifDevice:GetRemoteDiscoveryModeResponse> @ref _onvifDevice__GetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetRemoteDiscoveryModeResponse(struct soap*, _onvifDevice__GetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetRemoteDiscoveryModeResponse(struct soap*, _onvifDevice__GetRemoteDiscoveryModeResponse*);
    @endcode

  - <onvifDevice:SetRemoteDiscoveryMode> @ref _onvifDevice__SetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetRemoteDiscoveryMode(struct soap*, _onvifDevice__SetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetRemoteDiscoveryMode(struct soap*, _onvifDevice__SetRemoteDiscoveryMode*);
    @endcode

  - <onvifDevice:SetRemoteDiscoveryModeResponse> @ref _onvifDevice__SetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetRemoteDiscoveryModeResponse(struct soap*, _onvifDevice__SetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetRemoteDiscoveryModeResponse(struct soap*, _onvifDevice__SetRemoteDiscoveryModeResponse*);
    @endcode

  - <onvifDevice:GetDPAddresses> @ref _onvifDevice__GetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDPAddresses(struct soap*, _onvifDevice__GetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDPAddresses(struct soap*, _onvifDevice__GetDPAddresses*);
    @endcode

  - <onvifDevice:GetDPAddressesResponse> @ref _onvifDevice__GetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDPAddressesResponse(struct soap*, _onvifDevice__GetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDPAddressesResponse(struct soap*, _onvifDevice__GetDPAddressesResponse*);
    @endcode

  - <onvifDevice:SetDPAddresses> @ref _onvifDevice__SetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetDPAddresses(struct soap*, _onvifDevice__SetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetDPAddresses(struct soap*, _onvifDevice__SetDPAddresses*);
    @endcode

  - <onvifDevice:SetDPAddressesResponse> @ref _onvifDevice__SetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetDPAddressesResponse(struct soap*, _onvifDevice__SetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetDPAddressesResponse(struct soap*, _onvifDevice__SetDPAddressesResponse*);
    @endcode

  - <onvifDevice:GetEndpointReference> @ref _onvifDevice__GetEndpointReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetEndpointReference(struct soap*, _onvifDevice__GetEndpointReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetEndpointReference(struct soap*, _onvifDevice__GetEndpointReference*);
    @endcode

  - <onvifDevice:GetEndpointReferenceResponse> @ref _onvifDevice__GetEndpointReferenceResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetEndpointReferenceResponse(struct soap*, _onvifDevice__GetEndpointReferenceResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetEndpointReferenceResponse(struct soap*, _onvifDevice__GetEndpointReferenceResponse*);
    @endcode

  - <onvifDevice:GetRemoteUser> @ref _onvifDevice__GetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetRemoteUser(struct soap*, _onvifDevice__GetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetRemoteUser(struct soap*, _onvifDevice__GetRemoteUser*);
    @endcode

  - <onvifDevice:GetRemoteUserResponse> @ref _onvifDevice__GetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetRemoteUserResponse(struct soap*, _onvifDevice__GetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetRemoteUserResponse(struct soap*, _onvifDevice__GetRemoteUserResponse*);
    @endcode

  - <onvifDevice:SetRemoteUser> @ref _onvifDevice__SetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetRemoteUser(struct soap*, _onvifDevice__SetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetRemoteUser(struct soap*, _onvifDevice__SetRemoteUser*);
    @endcode

  - <onvifDevice:SetRemoteUserResponse> @ref _onvifDevice__SetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetRemoteUserResponse(struct soap*, _onvifDevice__SetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetRemoteUserResponse(struct soap*, _onvifDevice__SetRemoteUserResponse*);
    @endcode

  - <onvifDevice:GetUsers> @ref _onvifDevice__GetUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetUsers(struct soap*, _onvifDevice__GetUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetUsers(struct soap*, _onvifDevice__GetUsers*);
    @endcode

  - <onvifDevice:GetUsersResponse> @ref _onvifDevice__GetUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetUsersResponse(struct soap*, _onvifDevice__GetUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetUsersResponse(struct soap*, _onvifDevice__GetUsersResponse*);
    @endcode

  - <onvifDevice:CreateUsers> @ref _onvifDevice__CreateUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__CreateUsers(struct soap*, _onvifDevice__CreateUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__CreateUsers(struct soap*, _onvifDevice__CreateUsers*);
    @endcode

  - <onvifDevice:CreateUsersResponse> @ref _onvifDevice__CreateUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__CreateUsersResponse(struct soap*, _onvifDevice__CreateUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__CreateUsersResponse(struct soap*, _onvifDevice__CreateUsersResponse*);
    @endcode

  - <onvifDevice:DeleteUsers> @ref _onvifDevice__DeleteUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__DeleteUsers(struct soap*, _onvifDevice__DeleteUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__DeleteUsers(struct soap*, _onvifDevice__DeleteUsers*);
    @endcode

  - <onvifDevice:DeleteUsersResponse> @ref _onvifDevice__DeleteUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__DeleteUsersResponse(struct soap*, _onvifDevice__DeleteUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__DeleteUsersResponse(struct soap*, _onvifDevice__DeleteUsersResponse*);
    @endcode

  - <onvifDevice:SetUser> @ref _onvifDevice__SetUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetUser(struct soap*, _onvifDevice__SetUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetUser(struct soap*, _onvifDevice__SetUser*);
    @endcode

  - <onvifDevice:SetUserResponse> @ref _onvifDevice__SetUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetUserResponse(struct soap*, _onvifDevice__SetUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetUserResponse(struct soap*, _onvifDevice__SetUserResponse*);
    @endcode

  - <onvifDevice:GetWsdlUrl> @ref _onvifDevice__GetWsdlUrl
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetWsdlUrl(struct soap*, _onvifDevice__GetWsdlUrl*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetWsdlUrl(struct soap*, _onvifDevice__GetWsdlUrl*);
    @endcode

  - <onvifDevice:GetWsdlUrlResponse> @ref _onvifDevice__GetWsdlUrlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetWsdlUrlResponse(struct soap*, _onvifDevice__GetWsdlUrlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetWsdlUrlResponse(struct soap*, _onvifDevice__GetWsdlUrlResponse*);
    @endcode

  - <onvifDevice:GetCapabilities> @ref _onvifDevice__GetCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetCapabilities(struct soap*, _onvifDevice__GetCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetCapabilities(struct soap*, _onvifDevice__GetCapabilities*);
    @endcode

  - <onvifDevice:GetCapabilitiesResponse> @ref _onvifDevice__GetCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetCapabilitiesResponse(struct soap*, _onvifDevice__GetCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetCapabilitiesResponse(struct soap*, _onvifDevice__GetCapabilitiesResponse*);
    @endcode

  - <onvifDevice:GetHostname> @ref _onvifDevice__GetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetHostname(struct soap*, _onvifDevice__GetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetHostname(struct soap*, _onvifDevice__GetHostname*);
    @endcode

  - <onvifDevice:GetHostnameResponse> @ref _onvifDevice__GetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetHostnameResponse(struct soap*, _onvifDevice__GetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetHostnameResponse(struct soap*, _onvifDevice__GetHostnameResponse*);
    @endcode

  - <onvifDevice:SetHostname> @ref _onvifDevice__SetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetHostname(struct soap*, _onvifDevice__SetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetHostname(struct soap*, _onvifDevice__SetHostname*);
    @endcode

  - <onvifDevice:SetHostnameResponse> @ref _onvifDevice__SetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetHostnameResponse(struct soap*, _onvifDevice__SetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetHostnameResponse(struct soap*, _onvifDevice__SetHostnameResponse*);
    @endcode

  - <onvifDevice:SetHostnameFromDHCP> @ref _onvifDevice__SetHostnameFromDHCP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetHostnameFromDHCP(struct soap*, _onvifDevice__SetHostnameFromDHCP*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetHostnameFromDHCP(struct soap*, _onvifDevice__SetHostnameFromDHCP*);
    @endcode

  - <onvifDevice:SetHostnameFromDHCPResponse> @ref _onvifDevice__SetHostnameFromDHCPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetHostnameFromDHCPResponse(struct soap*, _onvifDevice__SetHostnameFromDHCPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetHostnameFromDHCPResponse(struct soap*, _onvifDevice__SetHostnameFromDHCPResponse*);
    @endcode

  - <onvifDevice:GetDNS> @ref _onvifDevice__GetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDNS(struct soap*, _onvifDevice__GetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDNS(struct soap*, _onvifDevice__GetDNS*);
    @endcode

  - <onvifDevice:GetDNSResponse> @ref _onvifDevice__GetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDNSResponse(struct soap*, _onvifDevice__GetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDNSResponse(struct soap*, _onvifDevice__GetDNSResponse*);
    @endcode

  - <onvifDevice:SetDNS> @ref _onvifDevice__SetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetDNS(struct soap*, _onvifDevice__SetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetDNS(struct soap*, _onvifDevice__SetDNS*);
    @endcode

  - <onvifDevice:SetDNSResponse> @ref _onvifDevice__SetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetDNSResponse(struct soap*, _onvifDevice__SetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetDNSResponse(struct soap*, _onvifDevice__SetDNSResponse*);
    @endcode

  - <onvifDevice:GetNTP> @ref _onvifDevice__GetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetNTP(struct soap*, _onvifDevice__GetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetNTP(struct soap*, _onvifDevice__GetNTP*);
    @endcode

  - <onvifDevice:GetNTPResponse> @ref _onvifDevice__GetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetNTPResponse(struct soap*, _onvifDevice__GetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetNTPResponse(struct soap*, _onvifDevice__GetNTPResponse*);
    @endcode

  - <onvifDevice:SetNTP> @ref _onvifDevice__SetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetNTP(struct soap*, _onvifDevice__SetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetNTP(struct soap*, _onvifDevice__SetNTP*);
    @endcode

  - <onvifDevice:SetNTPResponse> @ref _onvifDevice__SetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetNTPResponse(struct soap*, _onvifDevice__SetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetNTPResponse(struct soap*, _onvifDevice__SetNTPResponse*);
    @endcode

  - <onvifDevice:GetDynamicDNS> @ref _onvifDevice__GetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDynamicDNS(struct soap*, _onvifDevice__GetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDynamicDNS(struct soap*, _onvifDevice__GetDynamicDNS*);
    @endcode

  - <onvifDevice:GetDynamicDNSResponse> @ref _onvifDevice__GetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDynamicDNSResponse(struct soap*, _onvifDevice__GetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDynamicDNSResponse(struct soap*, _onvifDevice__GetDynamicDNSResponse*);
    @endcode

  - <onvifDevice:SetDynamicDNS> @ref _onvifDevice__SetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetDynamicDNS(struct soap*, _onvifDevice__SetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetDynamicDNS(struct soap*, _onvifDevice__SetDynamicDNS*);
    @endcode

  - <onvifDevice:SetDynamicDNSResponse> @ref _onvifDevice__SetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetDynamicDNSResponse(struct soap*, _onvifDevice__SetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetDynamicDNSResponse(struct soap*, _onvifDevice__SetDynamicDNSResponse*);
    @endcode

  - <onvifDevice:GetNetworkInterfaces> @ref _onvifDevice__GetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetNetworkInterfaces(struct soap*, _onvifDevice__GetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetNetworkInterfaces(struct soap*, _onvifDevice__GetNetworkInterfaces*);
    @endcode

  - <onvifDevice:GetNetworkInterfacesResponse> @ref _onvifDevice__GetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetNetworkInterfacesResponse(struct soap*, _onvifDevice__GetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetNetworkInterfacesResponse(struct soap*, _onvifDevice__GetNetworkInterfacesResponse*);
    @endcode

  - <onvifDevice:SetNetworkInterfaces> @ref _onvifDevice__SetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetNetworkInterfaces(struct soap*, _onvifDevice__SetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetNetworkInterfaces(struct soap*, _onvifDevice__SetNetworkInterfaces*);
    @endcode

  - <onvifDevice:SetNetworkInterfacesResponse> @ref _onvifDevice__SetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetNetworkInterfacesResponse(struct soap*, _onvifDevice__SetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetNetworkInterfacesResponse(struct soap*, _onvifDevice__SetNetworkInterfacesResponse*);
    @endcode

  - <onvifDevice:GetNetworkProtocols> @ref _onvifDevice__GetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetNetworkProtocols(struct soap*, _onvifDevice__GetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetNetworkProtocols(struct soap*, _onvifDevice__GetNetworkProtocols*);
    @endcode

  - <onvifDevice:GetNetworkProtocolsResponse> @ref _onvifDevice__GetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetNetworkProtocolsResponse(struct soap*, _onvifDevice__GetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetNetworkProtocolsResponse(struct soap*, _onvifDevice__GetNetworkProtocolsResponse*);
    @endcode

  - <onvifDevice:SetNetworkProtocols> @ref _onvifDevice__SetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetNetworkProtocols(struct soap*, _onvifDevice__SetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetNetworkProtocols(struct soap*, _onvifDevice__SetNetworkProtocols*);
    @endcode

  - <onvifDevice:SetNetworkProtocolsResponse> @ref _onvifDevice__SetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetNetworkProtocolsResponse(struct soap*, _onvifDevice__SetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetNetworkProtocolsResponse(struct soap*, _onvifDevice__SetNetworkProtocolsResponse*);
    @endcode

  - <onvifDevice:GetNetworkDefaultGateway> @ref _onvifDevice__GetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetNetworkDefaultGateway(struct soap*, _onvifDevice__GetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetNetworkDefaultGateway(struct soap*, _onvifDevice__GetNetworkDefaultGateway*);
    @endcode

  - <onvifDevice:GetNetworkDefaultGatewayResponse> @ref _onvifDevice__GetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetNetworkDefaultGatewayResponse(struct soap*, _onvifDevice__GetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetNetworkDefaultGatewayResponse(struct soap*, _onvifDevice__GetNetworkDefaultGatewayResponse*);
    @endcode

  - <onvifDevice:SetNetworkDefaultGateway> @ref _onvifDevice__SetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetNetworkDefaultGateway(struct soap*, _onvifDevice__SetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetNetworkDefaultGateway(struct soap*, _onvifDevice__SetNetworkDefaultGateway*);
    @endcode

  - <onvifDevice:SetNetworkDefaultGatewayResponse> @ref _onvifDevice__SetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetNetworkDefaultGatewayResponse(struct soap*, _onvifDevice__SetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetNetworkDefaultGatewayResponse(struct soap*, _onvifDevice__SetNetworkDefaultGatewayResponse*);
    @endcode

  - <onvifDevice:GetZeroConfiguration> @ref _onvifDevice__GetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetZeroConfiguration(struct soap*, _onvifDevice__GetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetZeroConfiguration(struct soap*, _onvifDevice__GetZeroConfiguration*);
    @endcode

  - <onvifDevice:GetZeroConfigurationResponse> @ref _onvifDevice__GetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetZeroConfigurationResponse(struct soap*, _onvifDevice__GetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetZeroConfigurationResponse(struct soap*, _onvifDevice__GetZeroConfigurationResponse*);
    @endcode

  - <onvifDevice:SetZeroConfiguration> @ref _onvifDevice__SetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetZeroConfiguration(struct soap*, _onvifDevice__SetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetZeroConfiguration(struct soap*, _onvifDevice__SetZeroConfiguration*);
    @endcode

  - <onvifDevice:SetZeroConfigurationResponse> @ref _onvifDevice__SetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetZeroConfigurationResponse(struct soap*, _onvifDevice__SetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetZeroConfigurationResponse(struct soap*, _onvifDevice__SetZeroConfigurationResponse*);
    @endcode

  - <onvifDevice:GetIPAddressFilter> @ref _onvifDevice__GetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetIPAddressFilter(struct soap*, _onvifDevice__GetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetIPAddressFilter(struct soap*, _onvifDevice__GetIPAddressFilter*);
    @endcode

  - <onvifDevice:GetIPAddressFilterResponse> @ref _onvifDevice__GetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetIPAddressFilterResponse(struct soap*, _onvifDevice__GetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetIPAddressFilterResponse(struct soap*, _onvifDevice__GetIPAddressFilterResponse*);
    @endcode

  - <onvifDevice:SetIPAddressFilter> @ref _onvifDevice__SetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetIPAddressFilter(struct soap*, _onvifDevice__SetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetIPAddressFilter(struct soap*, _onvifDevice__SetIPAddressFilter*);
    @endcode

  - <onvifDevice:SetIPAddressFilterResponse> @ref _onvifDevice__SetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetIPAddressFilterResponse(struct soap*, _onvifDevice__SetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetIPAddressFilterResponse(struct soap*, _onvifDevice__SetIPAddressFilterResponse*);
    @endcode

  - <onvifDevice:AddIPAddressFilter> @ref _onvifDevice__AddIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__AddIPAddressFilter(struct soap*, _onvifDevice__AddIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__AddIPAddressFilter(struct soap*, _onvifDevice__AddIPAddressFilter*);
    @endcode

  - <onvifDevice:AddIPAddressFilterResponse> @ref _onvifDevice__AddIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__AddIPAddressFilterResponse(struct soap*, _onvifDevice__AddIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__AddIPAddressFilterResponse(struct soap*, _onvifDevice__AddIPAddressFilterResponse*);
    @endcode

  - <onvifDevice:RemoveIPAddressFilter> @ref _onvifDevice__RemoveIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__RemoveIPAddressFilter(struct soap*, _onvifDevice__RemoveIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__RemoveIPAddressFilter(struct soap*, _onvifDevice__RemoveIPAddressFilter*);
    @endcode

  - <onvifDevice:RemoveIPAddressFilterResponse> @ref _onvifDevice__RemoveIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__RemoveIPAddressFilterResponse(struct soap*, _onvifDevice__RemoveIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__RemoveIPAddressFilterResponse(struct soap*, _onvifDevice__RemoveIPAddressFilterResponse*);
    @endcode

  - <onvifDevice:GetAccessPolicy> @ref _onvifDevice__GetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetAccessPolicy(struct soap*, _onvifDevice__GetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetAccessPolicy(struct soap*, _onvifDevice__GetAccessPolicy*);
    @endcode

  - <onvifDevice:GetAccessPolicyResponse> @ref _onvifDevice__GetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetAccessPolicyResponse(struct soap*, _onvifDevice__GetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetAccessPolicyResponse(struct soap*, _onvifDevice__GetAccessPolicyResponse*);
    @endcode

  - <onvifDevice:SetAccessPolicy> @ref _onvifDevice__SetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetAccessPolicy(struct soap*, _onvifDevice__SetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetAccessPolicy(struct soap*, _onvifDevice__SetAccessPolicy*);
    @endcode

  - <onvifDevice:SetAccessPolicyResponse> @ref _onvifDevice__SetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetAccessPolicyResponse(struct soap*, _onvifDevice__SetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetAccessPolicyResponse(struct soap*, _onvifDevice__SetAccessPolicyResponse*);
    @endcode

  - <onvifDevice:CreateCertificate> @ref _onvifDevice__CreateCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__CreateCertificate(struct soap*, _onvifDevice__CreateCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__CreateCertificate(struct soap*, _onvifDevice__CreateCertificate*);
    @endcode

  - <onvifDevice:CreateCertificateResponse> @ref _onvifDevice__CreateCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__CreateCertificateResponse(struct soap*, _onvifDevice__CreateCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__CreateCertificateResponse(struct soap*, _onvifDevice__CreateCertificateResponse*);
    @endcode

  - <onvifDevice:GetCertificates> @ref _onvifDevice__GetCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetCertificates(struct soap*, _onvifDevice__GetCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetCertificates(struct soap*, _onvifDevice__GetCertificates*);
    @endcode

  - <onvifDevice:GetCertificatesResponse> @ref _onvifDevice__GetCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetCertificatesResponse(struct soap*, _onvifDevice__GetCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetCertificatesResponse(struct soap*, _onvifDevice__GetCertificatesResponse*);
    @endcode

  - <onvifDevice:GetCertificatesStatus> @ref _onvifDevice__GetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetCertificatesStatus(struct soap*, _onvifDevice__GetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetCertificatesStatus(struct soap*, _onvifDevice__GetCertificatesStatus*);
    @endcode

  - <onvifDevice:GetCertificatesStatusResponse> @ref _onvifDevice__GetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetCertificatesStatusResponse(struct soap*, _onvifDevice__GetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetCertificatesStatusResponse(struct soap*, _onvifDevice__GetCertificatesStatusResponse*);
    @endcode

  - <onvifDevice:SetCertificatesStatus> @ref _onvifDevice__SetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetCertificatesStatus(struct soap*, _onvifDevice__SetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetCertificatesStatus(struct soap*, _onvifDevice__SetCertificatesStatus*);
    @endcode

  - <onvifDevice:SetCertificatesStatusResponse> @ref _onvifDevice__SetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetCertificatesStatusResponse(struct soap*, _onvifDevice__SetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetCertificatesStatusResponse(struct soap*, _onvifDevice__SetCertificatesStatusResponse*);
    @endcode

  - <onvifDevice:DeleteCertificates> @ref _onvifDevice__DeleteCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__DeleteCertificates(struct soap*, _onvifDevice__DeleteCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__DeleteCertificates(struct soap*, _onvifDevice__DeleteCertificates*);
    @endcode

  - <onvifDevice:DeleteCertificatesResponse> @ref _onvifDevice__DeleteCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__DeleteCertificatesResponse(struct soap*, _onvifDevice__DeleteCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__DeleteCertificatesResponse(struct soap*, _onvifDevice__DeleteCertificatesResponse*);
    @endcode

  - <onvifDevice:GetPkcs10Request> @ref _onvifDevice__GetPkcs10Request
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetPkcs10Request(struct soap*, _onvifDevice__GetPkcs10Request*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetPkcs10Request(struct soap*, _onvifDevice__GetPkcs10Request*);
    @endcode

  - <onvifDevice:GetPkcs10RequestResponse> @ref _onvifDevice__GetPkcs10RequestResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetPkcs10RequestResponse(struct soap*, _onvifDevice__GetPkcs10RequestResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetPkcs10RequestResponse(struct soap*, _onvifDevice__GetPkcs10RequestResponse*);
    @endcode

  - <onvifDevice:LoadCertificates> @ref _onvifDevice__LoadCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__LoadCertificates(struct soap*, _onvifDevice__LoadCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__LoadCertificates(struct soap*, _onvifDevice__LoadCertificates*);
    @endcode

  - <onvifDevice:LoadCertificatesResponse> @ref _onvifDevice__LoadCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__LoadCertificatesResponse(struct soap*, _onvifDevice__LoadCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__LoadCertificatesResponse(struct soap*, _onvifDevice__LoadCertificatesResponse*);
    @endcode

  - <onvifDevice:GetClientCertificateMode> @ref _onvifDevice__GetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetClientCertificateMode(struct soap*, _onvifDevice__GetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetClientCertificateMode(struct soap*, _onvifDevice__GetClientCertificateMode*);
    @endcode

  - <onvifDevice:GetClientCertificateModeResponse> @ref _onvifDevice__GetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetClientCertificateModeResponse(struct soap*, _onvifDevice__GetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetClientCertificateModeResponse(struct soap*, _onvifDevice__GetClientCertificateModeResponse*);
    @endcode

  - <onvifDevice:SetClientCertificateMode> @ref _onvifDevice__SetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetClientCertificateMode(struct soap*, _onvifDevice__SetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetClientCertificateMode(struct soap*, _onvifDevice__SetClientCertificateMode*);
    @endcode

  - <onvifDevice:SetClientCertificateModeResponse> @ref _onvifDevice__SetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetClientCertificateModeResponse(struct soap*, _onvifDevice__SetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetClientCertificateModeResponse(struct soap*, _onvifDevice__SetClientCertificateModeResponse*);
    @endcode

  - <onvifDevice:GetCACertificates> @ref _onvifDevice__GetCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetCACertificates(struct soap*, _onvifDevice__GetCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetCACertificates(struct soap*, _onvifDevice__GetCACertificates*);
    @endcode

  - <onvifDevice:GetCACertificatesResponse> @ref _onvifDevice__GetCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetCACertificatesResponse(struct soap*, _onvifDevice__GetCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetCACertificatesResponse(struct soap*, _onvifDevice__GetCACertificatesResponse*);
    @endcode

  - <onvifDevice:LoadCertificateWithPrivateKey> @ref _onvifDevice__LoadCertificateWithPrivateKey
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__LoadCertificateWithPrivateKey(struct soap*, _onvifDevice__LoadCertificateWithPrivateKey*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__LoadCertificateWithPrivateKey(struct soap*, _onvifDevice__LoadCertificateWithPrivateKey*);
    @endcode

  - <onvifDevice:LoadCertificateWithPrivateKeyResponse> @ref _onvifDevice__LoadCertificateWithPrivateKeyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__LoadCertificateWithPrivateKeyResponse(struct soap*, _onvifDevice__LoadCertificateWithPrivateKeyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__LoadCertificateWithPrivateKeyResponse(struct soap*, _onvifDevice__LoadCertificateWithPrivateKeyResponse*);
    @endcode

  - <onvifDevice:GetCertificateInformation> @ref _onvifDevice__GetCertificateInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetCertificateInformation(struct soap*, _onvifDevice__GetCertificateInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetCertificateInformation(struct soap*, _onvifDevice__GetCertificateInformation*);
    @endcode

  - <onvifDevice:GetCertificateInformationResponse> @ref _onvifDevice__GetCertificateInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetCertificateInformationResponse(struct soap*, _onvifDevice__GetCertificateInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetCertificateInformationResponse(struct soap*, _onvifDevice__GetCertificateInformationResponse*);
    @endcode

  - <onvifDevice:LoadCACertificates> @ref _onvifDevice__LoadCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__LoadCACertificates(struct soap*, _onvifDevice__LoadCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__LoadCACertificates(struct soap*, _onvifDevice__LoadCACertificates*);
    @endcode

  - <onvifDevice:LoadCACertificatesResponse> @ref _onvifDevice__LoadCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__LoadCACertificatesResponse(struct soap*, _onvifDevice__LoadCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__LoadCACertificatesResponse(struct soap*, _onvifDevice__LoadCACertificatesResponse*);
    @endcode

  - <onvifDevice:CreateDot1XConfiguration> @ref _onvifDevice__CreateDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__CreateDot1XConfiguration(struct soap*, _onvifDevice__CreateDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__CreateDot1XConfiguration(struct soap*, _onvifDevice__CreateDot1XConfiguration*);
    @endcode

  - <onvifDevice:CreateDot1XConfigurationResponse> @ref _onvifDevice__CreateDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__CreateDot1XConfigurationResponse(struct soap*, _onvifDevice__CreateDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__CreateDot1XConfigurationResponse(struct soap*, _onvifDevice__CreateDot1XConfigurationResponse*);
    @endcode

  - <onvifDevice:SetDot1XConfiguration> @ref _onvifDevice__SetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetDot1XConfiguration(struct soap*, _onvifDevice__SetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetDot1XConfiguration(struct soap*, _onvifDevice__SetDot1XConfiguration*);
    @endcode

  - <onvifDevice:SetDot1XConfigurationResponse> @ref _onvifDevice__SetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetDot1XConfigurationResponse(struct soap*, _onvifDevice__SetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetDot1XConfigurationResponse(struct soap*, _onvifDevice__SetDot1XConfigurationResponse*);
    @endcode

  - <onvifDevice:GetDot1XConfiguration> @ref _onvifDevice__GetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDot1XConfiguration(struct soap*, _onvifDevice__GetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDot1XConfiguration(struct soap*, _onvifDevice__GetDot1XConfiguration*);
    @endcode

  - <onvifDevice:GetDot1XConfigurationResponse> @ref _onvifDevice__GetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDot1XConfigurationResponse(struct soap*, _onvifDevice__GetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDot1XConfigurationResponse(struct soap*, _onvifDevice__GetDot1XConfigurationResponse*);
    @endcode

  - <onvifDevice:GetDot1XConfigurations> @ref _onvifDevice__GetDot1XConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDot1XConfigurations(struct soap*, _onvifDevice__GetDot1XConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDot1XConfigurations(struct soap*, _onvifDevice__GetDot1XConfigurations*);
    @endcode

  - <onvifDevice:GetDot1XConfigurationsResponse> @ref _onvifDevice__GetDot1XConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDot1XConfigurationsResponse(struct soap*, _onvifDevice__GetDot1XConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDot1XConfigurationsResponse(struct soap*, _onvifDevice__GetDot1XConfigurationsResponse*);
    @endcode

  - <onvifDevice:DeleteDot1XConfiguration> @ref _onvifDevice__DeleteDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__DeleteDot1XConfiguration(struct soap*, _onvifDevice__DeleteDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__DeleteDot1XConfiguration(struct soap*, _onvifDevice__DeleteDot1XConfiguration*);
    @endcode

  - <onvifDevice:DeleteDot1XConfigurationResponse> @ref _onvifDevice__DeleteDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__DeleteDot1XConfigurationResponse(struct soap*, _onvifDevice__DeleteDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__DeleteDot1XConfigurationResponse(struct soap*, _onvifDevice__DeleteDot1XConfigurationResponse*);
    @endcode

  - <onvifDevice:GetRelayOutputs> @ref _onvifDevice__GetRelayOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetRelayOutputs(struct soap*, _onvifDevice__GetRelayOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetRelayOutputs(struct soap*, _onvifDevice__GetRelayOutputs*);
    @endcode

  - <onvifDevice:GetRelayOutputsResponse> @ref _onvifDevice__GetRelayOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetRelayOutputsResponse(struct soap*, _onvifDevice__GetRelayOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetRelayOutputsResponse(struct soap*, _onvifDevice__GetRelayOutputsResponse*);
    @endcode

  - <onvifDevice:SetRelayOutputSettings> @ref _onvifDevice__SetRelayOutputSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetRelayOutputSettings(struct soap*, _onvifDevice__SetRelayOutputSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetRelayOutputSettings(struct soap*, _onvifDevice__SetRelayOutputSettings*);
    @endcode

  - <onvifDevice:SetRelayOutputSettingsResponse> @ref _onvifDevice__SetRelayOutputSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetRelayOutputSettingsResponse(struct soap*, _onvifDevice__SetRelayOutputSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetRelayOutputSettingsResponse(struct soap*, _onvifDevice__SetRelayOutputSettingsResponse*);
    @endcode

  - <onvifDevice:SetRelayOutputState> @ref _onvifDevice__SetRelayOutputState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetRelayOutputState(struct soap*, _onvifDevice__SetRelayOutputState*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetRelayOutputState(struct soap*, _onvifDevice__SetRelayOutputState*);
    @endcode

  - <onvifDevice:SetRelayOutputStateResponse> @ref _onvifDevice__SetRelayOutputStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SetRelayOutputStateResponse(struct soap*, _onvifDevice__SetRelayOutputStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SetRelayOutputStateResponse(struct soap*, _onvifDevice__SetRelayOutputStateResponse*);
    @endcode

  - <onvifDevice:SendAuxiliaryCommand> @ref _onvifDevice__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SendAuxiliaryCommand(struct soap*, _onvifDevice__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SendAuxiliaryCommand(struct soap*, _onvifDevice__SendAuxiliaryCommand*);
    @endcode

  - <onvifDevice:SendAuxiliaryCommandResponse> @ref _onvifDevice__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__SendAuxiliaryCommandResponse(struct soap*, _onvifDevice__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__SendAuxiliaryCommandResponse(struct soap*, _onvifDevice__SendAuxiliaryCommandResponse*);
    @endcode

  - <onvifDevice:GetDot11Capabilities> @ref _onvifDevice__GetDot11Capabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDot11Capabilities(struct soap*, _onvifDevice__GetDot11Capabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDot11Capabilities(struct soap*, _onvifDevice__GetDot11Capabilities*);
    @endcode

  - <onvifDevice:GetDot11CapabilitiesResponse> @ref _onvifDevice__GetDot11CapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDot11CapabilitiesResponse(struct soap*, _onvifDevice__GetDot11CapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDot11CapabilitiesResponse(struct soap*, _onvifDevice__GetDot11CapabilitiesResponse*);
    @endcode

  - <onvifDevice:GetDot11Status> @ref _onvifDevice__GetDot11Status
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDot11Status(struct soap*, _onvifDevice__GetDot11Status*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDot11Status(struct soap*, _onvifDevice__GetDot11Status*);
    @endcode

  - <onvifDevice:GetDot11StatusResponse> @ref _onvifDevice__GetDot11StatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetDot11StatusResponse(struct soap*, _onvifDevice__GetDot11StatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetDot11StatusResponse(struct soap*, _onvifDevice__GetDot11StatusResponse*);
    @endcode

  - <onvifDevice:ScanAvailableDot11Networks> @ref _onvifDevice__ScanAvailableDot11Networks
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__ScanAvailableDot11Networks(struct soap*, _onvifDevice__ScanAvailableDot11Networks*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__ScanAvailableDot11Networks(struct soap*, _onvifDevice__ScanAvailableDot11Networks*);
    @endcode

  - <onvifDevice:ScanAvailableDot11NetworksResponse> @ref _onvifDevice__ScanAvailableDot11NetworksResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__ScanAvailableDot11NetworksResponse(struct soap*, _onvifDevice__ScanAvailableDot11NetworksResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__ScanAvailableDot11NetworksResponse(struct soap*, _onvifDevice__ScanAvailableDot11NetworksResponse*);
    @endcode

  - <onvifDevice:GetSystemUris> @ref _onvifDevice__GetSystemUris
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetSystemUris(struct soap*, _onvifDevice__GetSystemUris*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetSystemUris(struct soap*, _onvifDevice__GetSystemUris*);
    @endcode

  - <onvifDevice:GetSystemUrisResponse> @ref _onvifDevice__GetSystemUrisResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__GetSystemUrisResponse(struct soap*, _onvifDevice__GetSystemUrisResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__GetSystemUrisResponse(struct soap*, _onvifDevice__GetSystemUrisResponse*);
    @endcode

  - <onvifDevice:StartFirmwareUpgrade> @ref _onvifDevice__StartFirmwareUpgrade
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__StartFirmwareUpgrade(struct soap*, _onvifDevice__StartFirmwareUpgrade*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__StartFirmwareUpgrade(struct soap*, _onvifDevice__StartFirmwareUpgrade*);
    @endcode

  - <onvifDevice:StartFirmwareUpgradeResponse> @ref _onvifDevice__StartFirmwareUpgradeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__StartFirmwareUpgradeResponse(struct soap*, _onvifDevice__StartFirmwareUpgradeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__StartFirmwareUpgradeResponse(struct soap*, _onvifDevice__StartFirmwareUpgradeResponse*);
    @endcode

  - <onvifDevice:StartSystemRestore> @ref _onvifDevice__StartSystemRestore
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__StartSystemRestore(struct soap*, _onvifDevice__StartSystemRestore*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__StartSystemRestore(struct soap*, _onvifDevice__StartSystemRestore*);
    @endcode

  - <onvifDevice:StartSystemRestoreResponse> @ref _onvifDevice__StartSystemRestoreResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDevice__StartSystemRestoreResponse(struct soap*, _onvifDevice__StartSystemRestoreResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDevice__StartSystemRestoreResponse(struct soap*, _onvifDevice__StartSystemRestoreResponse*);
    @endcode

@section onvifXsd Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <onvifXsd:VideoSourceConfiguration> (use wsdl2h option -g to auto-generate)

  - <onvifXsd:AudioSourceConfiguration> (use wsdl2h option -g to auto-generate)

  - <onvifXsd:VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <onvifXsd:AudioEncoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <onvifXsd:VideoAnalyticsConfiguration> (use wsdl2h option -g to auto-generate)

  - <onvifXsd:PTZConfiguration> (use wsdl2h option -g to auto-generate)

  - <onvifXsd:MetadataConfiguration> (use wsdl2h option -g to auto-generate)

  - <onvifXsd:AudioOutputConfiguration> (use wsdl2h option -g to auto-generate)

  - <onvifXsd:AudioDecoderConfiguration> (use wsdl2h option -g to auto-generate)

  - <onvifXsd:Message> @ref _onvifXsd__Message
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifXsd__Message(struct soap*, _onvifXsd__Message*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifXsd__Message(struct soap*, _onvifXsd__Message*);
    @endcode

  - <onvifXsd:Polygon> (use wsdl2h option -g to auto-generate)

  - <onvifXsd:Polyline> (use wsdl2h option -g to auto-generate)

  - <onvifXsd:MetadataStream> (use wsdl2h option -g to auto-generate)

@section ns5 Top-level root elements of schema "http://www.w3.org/2004/08/xop/include"

  - <ns5:Include> (use wsdl2h option -g to auto-generate)

@section onvifEvents Top-level root elements of schema "http://www.onvif.org/ver10/events/wsdl"

  - <onvifEvents:GetServiceCapabilities> @ref _onvifEvents__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifEvents__GetServiceCapabilities(struct soap*, _onvifEvents__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifEvents__GetServiceCapabilities(struct soap*, _onvifEvents__GetServiceCapabilities*);
    @endcode

  - <onvifEvents:GetServiceCapabilitiesResponse> @ref _onvifEvents__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifEvents__GetServiceCapabilitiesResponse(struct soap*, _onvifEvents__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifEvents__GetServiceCapabilitiesResponse(struct soap*, _onvifEvents__GetServiceCapabilitiesResponse*);
    @endcode

  - <onvifEvents:Capabilities> (use wsdl2h option -g to auto-generate)

  - <onvifEvents:CreatePullPointSubscription> @ref _onvifEvents__CreatePullPointSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifEvents__CreatePullPointSubscription(struct soap*, _onvifEvents__CreatePullPointSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifEvents__CreatePullPointSubscription(struct soap*, _onvifEvents__CreatePullPointSubscription*);
    @endcode

  - <onvifEvents:CreatePullPointSubscriptionResponse> @ref _onvifEvents__CreatePullPointSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifEvents__CreatePullPointSubscriptionResponse(struct soap*, _onvifEvents__CreatePullPointSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifEvents__CreatePullPointSubscriptionResponse(struct soap*, _onvifEvents__CreatePullPointSubscriptionResponse*);
    @endcode

  - <onvifEvents:PullMessages> @ref _onvifEvents__PullMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifEvents__PullMessages(struct soap*, _onvifEvents__PullMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifEvents__PullMessages(struct soap*, _onvifEvents__PullMessages*);
    @endcode

  - <onvifEvents:PullMessagesResponse> @ref _onvifEvents__PullMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifEvents__PullMessagesResponse(struct soap*, _onvifEvents__PullMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifEvents__PullMessagesResponse(struct soap*, _onvifEvents__PullMessagesResponse*);
    @endcode

  - <onvifEvents:PullMessagesFaultResponse> @ref _onvifEvents__PullMessagesFaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifEvents__PullMessagesFaultResponse(struct soap*, _onvifEvents__PullMessagesFaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifEvents__PullMessagesFaultResponse(struct soap*, _onvifEvents__PullMessagesFaultResponse*);
    @endcode

  - <onvifEvents:SetSynchronizationPoint> @ref _onvifEvents__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifEvents__SetSynchronizationPoint(struct soap*, _onvifEvents__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifEvents__SetSynchronizationPoint(struct soap*, _onvifEvents__SetSynchronizationPoint*);
    @endcode

  - <onvifEvents:SetSynchronizationPointResponse> @ref _onvifEvents__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifEvents__SetSynchronizationPointResponse(struct soap*, _onvifEvents__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifEvents__SetSynchronizationPointResponse(struct soap*, _onvifEvents__SetSynchronizationPointResponse*);
    @endcode

  - <onvifEvents:GetEventProperties> @ref _onvifEvents__GetEventProperties
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifEvents__GetEventProperties(struct soap*, _onvifEvents__GetEventProperties*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifEvents__GetEventProperties(struct soap*, _onvifEvents__GetEventProperties*);
    @endcode

  - <onvifEvents:GetEventPropertiesResponse> @ref _onvifEvents__GetEventPropertiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifEvents__GetEventPropertiesResponse(struct soap*, _onvifEvents__GetEventPropertiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifEvents__GetEventPropertiesResponse(struct soap*, _onvifEvents__GetEventPropertiesResponse*);
    @endcode

@section onvifImg Top-level root elements of schema "http://www.onvif.org/ver20/imaging/wsdl"

  - <onvifImg:GetServiceCapabilities> @ref _onvifImg__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__GetServiceCapabilities(struct soap*, _onvifImg__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__GetServiceCapabilities(struct soap*, _onvifImg__GetServiceCapabilities*);
    @endcode

  - <onvifImg:GetServiceCapabilitiesResponse> @ref _onvifImg__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__GetServiceCapabilitiesResponse(struct soap*, _onvifImg__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__GetServiceCapabilitiesResponse(struct soap*, _onvifImg__GetServiceCapabilitiesResponse*);
    @endcode

  - <onvifImg:Capabilities> (use wsdl2h option -g to auto-generate)

  - <onvifImg:GetImagingSettings> @ref _onvifImg__GetImagingSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__GetImagingSettings(struct soap*, _onvifImg__GetImagingSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__GetImagingSettings(struct soap*, _onvifImg__GetImagingSettings*);
    @endcode

  - <onvifImg:GetImagingSettingsResponse> @ref _onvifImg__GetImagingSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__GetImagingSettingsResponse(struct soap*, _onvifImg__GetImagingSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__GetImagingSettingsResponse(struct soap*, _onvifImg__GetImagingSettingsResponse*);
    @endcode

  - <onvifImg:SetImagingSettings> @ref _onvifImg__SetImagingSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__SetImagingSettings(struct soap*, _onvifImg__SetImagingSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__SetImagingSettings(struct soap*, _onvifImg__SetImagingSettings*);
    @endcode

  - <onvifImg:SetImagingSettingsResponse> @ref _onvifImg__SetImagingSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__SetImagingSettingsResponse(struct soap*, _onvifImg__SetImagingSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__SetImagingSettingsResponse(struct soap*, _onvifImg__SetImagingSettingsResponse*);
    @endcode

  - <onvifImg:GetOptions> @ref _onvifImg__GetOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__GetOptions(struct soap*, _onvifImg__GetOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__GetOptions(struct soap*, _onvifImg__GetOptions*);
    @endcode

  - <onvifImg:GetOptionsResponse> @ref _onvifImg__GetOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__GetOptionsResponse(struct soap*, _onvifImg__GetOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__GetOptionsResponse(struct soap*, _onvifImg__GetOptionsResponse*);
    @endcode

  - <onvifImg:Move> @ref _onvifImg__Move
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__Move(struct soap*, _onvifImg__Move*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__Move(struct soap*, _onvifImg__Move*);
    @endcode

  - <onvifImg:MoveResponse> @ref _onvifImg__MoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__MoveResponse(struct soap*, _onvifImg__MoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__MoveResponse(struct soap*, _onvifImg__MoveResponse*);
    @endcode

  - <onvifImg:GetMoveOptions> @ref _onvifImg__GetMoveOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__GetMoveOptions(struct soap*, _onvifImg__GetMoveOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__GetMoveOptions(struct soap*, _onvifImg__GetMoveOptions*);
    @endcode

  - <onvifImg:GetMoveOptionsResponse> @ref _onvifImg__GetMoveOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__GetMoveOptionsResponse(struct soap*, _onvifImg__GetMoveOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__GetMoveOptionsResponse(struct soap*, _onvifImg__GetMoveOptionsResponse*);
    @endcode

  - <onvifImg:Stop> @ref _onvifImg__Stop
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__Stop(struct soap*, _onvifImg__Stop*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__Stop(struct soap*, _onvifImg__Stop*);
    @endcode

  - <onvifImg:StopResponse> @ref _onvifImg__StopResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__StopResponse(struct soap*, _onvifImg__StopResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__StopResponse(struct soap*, _onvifImg__StopResponse*);
    @endcode

  - <onvifImg:GetStatus> @ref _onvifImg__GetStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__GetStatus(struct soap*, _onvifImg__GetStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__GetStatus(struct soap*, _onvifImg__GetStatus*);
    @endcode

  - <onvifImg:GetStatusResponse> @ref _onvifImg__GetStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifImg__GetStatusResponse(struct soap*, _onvifImg__GetStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifImg__GetStatusResponse(struct soap*, _onvifImg__GetStatusResponse*);
    @endcode

@section onvifMedia Top-level root elements of schema "http://www.onvif.org/ver10/media/wsdl"

  - <onvifMedia:GetServiceCapabilities> @ref _onvifMedia__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetServiceCapabilities(struct soap*, _onvifMedia__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetServiceCapabilities(struct soap*, _onvifMedia__GetServiceCapabilities*);
    @endcode

  - <onvifMedia:GetServiceCapabilitiesResponse> @ref _onvifMedia__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetServiceCapabilitiesResponse(struct soap*, _onvifMedia__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetServiceCapabilitiesResponse(struct soap*, _onvifMedia__GetServiceCapabilitiesResponse*);
    @endcode

  - <onvifMedia:Capabilities> (use wsdl2h option -g to auto-generate)

  - <onvifMedia:GetVideoSources> @ref _onvifMedia__GetVideoSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoSources(struct soap*, _onvifMedia__GetVideoSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoSources(struct soap*, _onvifMedia__GetVideoSources*);
    @endcode

  - <onvifMedia:GetVideoSourcesResponse> @ref _onvifMedia__GetVideoSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoSourcesResponse(struct soap*, _onvifMedia__GetVideoSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoSourcesResponse(struct soap*, _onvifMedia__GetVideoSourcesResponse*);
    @endcode

  - <onvifMedia:GetAudioSources> @ref _onvifMedia__GetAudioSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioSources(struct soap*, _onvifMedia__GetAudioSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioSources(struct soap*, _onvifMedia__GetAudioSources*);
    @endcode

  - <onvifMedia:GetAudioSourcesResponse> @ref _onvifMedia__GetAudioSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioSourcesResponse(struct soap*, _onvifMedia__GetAudioSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioSourcesResponse(struct soap*, _onvifMedia__GetAudioSourcesResponse*);
    @endcode

  - <onvifMedia:GetAudioOutputs> @ref _onvifMedia__GetAudioOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioOutputs(struct soap*, _onvifMedia__GetAudioOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioOutputs(struct soap*, _onvifMedia__GetAudioOutputs*);
    @endcode

  - <onvifMedia:GetAudioOutputsResponse> @ref _onvifMedia__GetAudioOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioOutputsResponse(struct soap*, _onvifMedia__GetAudioOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioOutputsResponse(struct soap*, _onvifMedia__GetAudioOutputsResponse*);
    @endcode

  - <onvifMedia:CreateProfile> @ref _onvifMedia__CreateProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__CreateProfile(struct soap*, _onvifMedia__CreateProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__CreateProfile(struct soap*, _onvifMedia__CreateProfile*);
    @endcode

  - <onvifMedia:CreateProfileResponse> @ref _onvifMedia__CreateProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__CreateProfileResponse(struct soap*, _onvifMedia__CreateProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__CreateProfileResponse(struct soap*, _onvifMedia__CreateProfileResponse*);
    @endcode

  - <onvifMedia:GetProfile> @ref _onvifMedia__GetProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetProfile(struct soap*, _onvifMedia__GetProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetProfile(struct soap*, _onvifMedia__GetProfile*);
    @endcode

  - <onvifMedia:GetProfileResponse> @ref _onvifMedia__GetProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetProfileResponse(struct soap*, _onvifMedia__GetProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetProfileResponse(struct soap*, _onvifMedia__GetProfileResponse*);
    @endcode

  - <onvifMedia:GetProfiles> @ref _onvifMedia__GetProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetProfiles(struct soap*, _onvifMedia__GetProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetProfiles(struct soap*, _onvifMedia__GetProfiles*);
    @endcode

  - <onvifMedia:GetProfilesResponse> @ref _onvifMedia__GetProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetProfilesResponse(struct soap*, _onvifMedia__GetProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetProfilesResponse(struct soap*, _onvifMedia__GetProfilesResponse*);
    @endcode

  - <onvifMedia:AddVideoEncoderConfiguration> @ref _onvifMedia__AddVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddVideoEncoderConfiguration(struct soap*, _onvifMedia__AddVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddVideoEncoderConfiguration(struct soap*, _onvifMedia__AddVideoEncoderConfiguration*);
    @endcode

  - <onvifMedia:AddVideoEncoderConfigurationResponse> @ref _onvifMedia__AddVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddVideoEncoderConfigurationResponse(struct soap*, _onvifMedia__AddVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddVideoEncoderConfigurationResponse(struct soap*, _onvifMedia__AddVideoEncoderConfigurationResponse*);
    @endcode

  - <onvifMedia:RemoveVideoEncoderConfiguration> @ref _onvifMedia__RemoveVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveVideoEncoderConfiguration(struct soap*, _onvifMedia__RemoveVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveVideoEncoderConfiguration(struct soap*, _onvifMedia__RemoveVideoEncoderConfiguration*);
    @endcode

  - <onvifMedia:RemoveVideoEncoderConfigurationResponse> @ref _onvifMedia__RemoveVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveVideoEncoderConfigurationResponse(struct soap*, _onvifMedia__RemoveVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveVideoEncoderConfigurationResponse(struct soap*, _onvifMedia__RemoveVideoEncoderConfigurationResponse*);
    @endcode

  - <onvifMedia:AddVideoSourceConfiguration> @ref _onvifMedia__AddVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddVideoSourceConfiguration(struct soap*, _onvifMedia__AddVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddVideoSourceConfiguration(struct soap*, _onvifMedia__AddVideoSourceConfiguration*);
    @endcode

  - <onvifMedia:AddVideoSourceConfigurationResponse> @ref _onvifMedia__AddVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddVideoSourceConfigurationResponse(struct soap*, _onvifMedia__AddVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddVideoSourceConfigurationResponse(struct soap*, _onvifMedia__AddVideoSourceConfigurationResponse*);
    @endcode

  - <onvifMedia:RemoveVideoSourceConfiguration> @ref _onvifMedia__RemoveVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveVideoSourceConfiguration(struct soap*, _onvifMedia__RemoveVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveVideoSourceConfiguration(struct soap*, _onvifMedia__RemoveVideoSourceConfiguration*);
    @endcode

  - <onvifMedia:RemoveVideoSourceConfigurationResponse> @ref _onvifMedia__RemoveVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveVideoSourceConfigurationResponse(struct soap*, _onvifMedia__RemoveVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveVideoSourceConfigurationResponse(struct soap*, _onvifMedia__RemoveVideoSourceConfigurationResponse*);
    @endcode

  - <onvifMedia:AddAudioEncoderConfiguration> @ref _onvifMedia__AddAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddAudioEncoderConfiguration(struct soap*, _onvifMedia__AddAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddAudioEncoderConfiguration(struct soap*, _onvifMedia__AddAudioEncoderConfiguration*);
    @endcode

  - <onvifMedia:AddAudioEncoderConfigurationResponse> @ref _onvifMedia__AddAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddAudioEncoderConfigurationResponse(struct soap*, _onvifMedia__AddAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddAudioEncoderConfigurationResponse(struct soap*, _onvifMedia__AddAudioEncoderConfigurationResponse*);
    @endcode

  - <onvifMedia:RemoveAudioEncoderConfiguration> @ref _onvifMedia__RemoveAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveAudioEncoderConfiguration(struct soap*, _onvifMedia__RemoveAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveAudioEncoderConfiguration(struct soap*, _onvifMedia__RemoveAudioEncoderConfiguration*);
    @endcode

  - <onvifMedia:RemoveAudioEncoderConfigurationResponse> @ref _onvifMedia__RemoveAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveAudioEncoderConfigurationResponse(struct soap*, _onvifMedia__RemoveAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveAudioEncoderConfigurationResponse(struct soap*, _onvifMedia__RemoveAudioEncoderConfigurationResponse*);
    @endcode

  - <onvifMedia:AddAudioSourceConfiguration> @ref _onvifMedia__AddAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddAudioSourceConfiguration(struct soap*, _onvifMedia__AddAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddAudioSourceConfiguration(struct soap*, _onvifMedia__AddAudioSourceConfiguration*);
    @endcode

  - <onvifMedia:AddAudioSourceConfigurationResponse> @ref _onvifMedia__AddAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddAudioSourceConfigurationResponse(struct soap*, _onvifMedia__AddAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddAudioSourceConfigurationResponse(struct soap*, _onvifMedia__AddAudioSourceConfigurationResponse*);
    @endcode

  - <onvifMedia:RemoveAudioSourceConfiguration> @ref _onvifMedia__RemoveAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveAudioSourceConfiguration(struct soap*, _onvifMedia__RemoveAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveAudioSourceConfiguration(struct soap*, _onvifMedia__RemoveAudioSourceConfiguration*);
    @endcode

  - <onvifMedia:RemoveAudioSourceConfigurationResponse> @ref _onvifMedia__RemoveAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveAudioSourceConfigurationResponse(struct soap*, _onvifMedia__RemoveAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveAudioSourceConfigurationResponse(struct soap*, _onvifMedia__RemoveAudioSourceConfigurationResponse*);
    @endcode

  - <onvifMedia:AddPTZConfiguration> @ref _onvifMedia__AddPTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddPTZConfiguration(struct soap*, _onvifMedia__AddPTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddPTZConfiguration(struct soap*, _onvifMedia__AddPTZConfiguration*);
    @endcode

  - <onvifMedia:AddPTZConfigurationResponse> @ref _onvifMedia__AddPTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddPTZConfigurationResponse(struct soap*, _onvifMedia__AddPTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddPTZConfigurationResponse(struct soap*, _onvifMedia__AddPTZConfigurationResponse*);
    @endcode

  - <onvifMedia:RemovePTZConfiguration> @ref _onvifMedia__RemovePTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemovePTZConfiguration(struct soap*, _onvifMedia__RemovePTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemovePTZConfiguration(struct soap*, _onvifMedia__RemovePTZConfiguration*);
    @endcode

  - <onvifMedia:RemovePTZConfigurationResponse> @ref _onvifMedia__RemovePTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemovePTZConfigurationResponse(struct soap*, _onvifMedia__RemovePTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemovePTZConfigurationResponse(struct soap*, _onvifMedia__RemovePTZConfigurationResponse*);
    @endcode

  - <onvifMedia:AddVideoAnalyticsConfiguration> @ref _onvifMedia__AddVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddVideoAnalyticsConfiguration(struct soap*, _onvifMedia__AddVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddVideoAnalyticsConfiguration(struct soap*, _onvifMedia__AddVideoAnalyticsConfiguration*);
    @endcode

  - <onvifMedia:AddVideoAnalyticsConfigurationResponse> @ref _onvifMedia__AddVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddVideoAnalyticsConfigurationResponse(struct soap*, _onvifMedia__AddVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddVideoAnalyticsConfigurationResponse(struct soap*, _onvifMedia__AddVideoAnalyticsConfigurationResponse*);
    @endcode

  - <onvifMedia:RemoveVideoAnalyticsConfiguration> @ref _onvifMedia__RemoveVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveVideoAnalyticsConfiguration(struct soap*, _onvifMedia__RemoveVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveVideoAnalyticsConfiguration(struct soap*, _onvifMedia__RemoveVideoAnalyticsConfiguration*);
    @endcode

  - <onvifMedia:RemoveVideoAnalyticsConfigurationResponse> @ref _onvifMedia__RemoveVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _onvifMedia__RemoveVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _onvifMedia__RemoveVideoAnalyticsConfigurationResponse*);
    @endcode

  - <onvifMedia:AddMetadataConfiguration> @ref _onvifMedia__AddMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddMetadataConfiguration(struct soap*, _onvifMedia__AddMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddMetadataConfiguration(struct soap*, _onvifMedia__AddMetadataConfiguration*);
    @endcode

  - <onvifMedia:AddMetadataConfigurationResponse> @ref _onvifMedia__AddMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddMetadataConfigurationResponse(struct soap*, _onvifMedia__AddMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddMetadataConfigurationResponse(struct soap*, _onvifMedia__AddMetadataConfigurationResponse*);
    @endcode

  - <onvifMedia:RemoveMetadataConfiguration> @ref _onvifMedia__RemoveMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveMetadataConfiguration(struct soap*, _onvifMedia__RemoveMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveMetadataConfiguration(struct soap*, _onvifMedia__RemoveMetadataConfiguration*);
    @endcode

  - <onvifMedia:RemoveMetadataConfigurationResponse> @ref _onvifMedia__RemoveMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveMetadataConfigurationResponse(struct soap*, _onvifMedia__RemoveMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveMetadataConfigurationResponse(struct soap*, _onvifMedia__RemoveMetadataConfigurationResponse*);
    @endcode

  - <onvifMedia:AddAudioOutputConfiguration> @ref _onvifMedia__AddAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddAudioOutputConfiguration(struct soap*, _onvifMedia__AddAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddAudioOutputConfiguration(struct soap*, _onvifMedia__AddAudioOutputConfiguration*);
    @endcode

  - <onvifMedia:AddAudioOutputConfigurationResponse> @ref _onvifMedia__AddAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddAudioOutputConfigurationResponse(struct soap*, _onvifMedia__AddAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddAudioOutputConfigurationResponse(struct soap*, _onvifMedia__AddAudioOutputConfigurationResponse*);
    @endcode

  - <onvifMedia:RemoveAudioOutputConfiguration> @ref _onvifMedia__RemoveAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveAudioOutputConfiguration(struct soap*, _onvifMedia__RemoveAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveAudioOutputConfiguration(struct soap*, _onvifMedia__RemoveAudioOutputConfiguration*);
    @endcode

  - <onvifMedia:RemoveAudioOutputConfigurationResponse> @ref _onvifMedia__RemoveAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveAudioOutputConfigurationResponse(struct soap*, _onvifMedia__RemoveAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveAudioOutputConfigurationResponse(struct soap*, _onvifMedia__RemoveAudioOutputConfigurationResponse*);
    @endcode

  - <onvifMedia:AddAudioDecoderConfiguration> @ref _onvifMedia__AddAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddAudioDecoderConfiguration(struct soap*, _onvifMedia__AddAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddAudioDecoderConfiguration(struct soap*, _onvifMedia__AddAudioDecoderConfiguration*);
    @endcode

  - <onvifMedia:AddAudioDecoderConfigurationResponse> @ref _onvifMedia__AddAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__AddAudioDecoderConfigurationResponse(struct soap*, _onvifMedia__AddAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__AddAudioDecoderConfigurationResponse(struct soap*, _onvifMedia__AddAudioDecoderConfigurationResponse*);
    @endcode

  - <onvifMedia:RemoveAudioDecoderConfiguration> @ref _onvifMedia__RemoveAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveAudioDecoderConfiguration(struct soap*, _onvifMedia__RemoveAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveAudioDecoderConfiguration(struct soap*, _onvifMedia__RemoveAudioDecoderConfiguration*);
    @endcode

  - <onvifMedia:RemoveAudioDecoderConfigurationResponse> @ref _onvifMedia__RemoveAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__RemoveAudioDecoderConfigurationResponse(struct soap*, _onvifMedia__RemoveAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__RemoveAudioDecoderConfigurationResponse(struct soap*, _onvifMedia__RemoveAudioDecoderConfigurationResponse*);
    @endcode

  - <onvifMedia:DeleteProfile> @ref _onvifMedia__DeleteProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__DeleteProfile(struct soap*, _onvifMedia__DeleteProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__DeleteProfile(struct soap*, _onvifMedia__DeleteProfile*);
    @endcode

  - <onvifMedia:DeleteProfileResponse> @ref _onvifMedia__DeleteProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__DeleteProfileResponse(struct soap*, _onvifMedia__DeleteProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__DeleteProfileResponse(struct soap*, _onvifMedia__DeleteProfileResponse*);
    @endcode

  - <onvifMedia:GetVideoEncoderConfigurations> @ref _onvifMedia__GetVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoEncoderConfigurations(struct soap*, _onvifMedia__GetVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoEncoderConfigurations(struct soap*, _onvifMedia__GetVideoEncoderConfigurations*);
    @endcode

  - <onvifMedia:GetVideoEncoderConfigurationsResponse> @ref _onvifMedia__GetVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoEncoderConfigurationsResponse(struct soap*, _onvifMedia__GetVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoEncoderConfigurationsResponse(struct soap*, _onvifMedia__GetVideoEncoderConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetVideoSourceConfigurations> @ref _onvifMedia__GetVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoSourceConfigurations(struct soap*, _onvifMedia__GetVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoSourceConfigurations(struct soap*, _onvifMedia__GetVideoSourceConfigurations*);
    @endcode

  - <onvifMedia:GetVideoSourceConfigurationsResponse> @ref _onvifMedia__GetVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoSourceConfigurationsResponse(struct soap*, _onvifMedia__GetVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoSourceConfigurationsResponse(struct soap*, _onvifMedia__GetVideoSourceConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetAudioEncoderConfigurations> @ref _onvifMedia__GetAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioEncoderConfigurations(struct soap*, _onvifMedia__GetAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioEncoderConfigurations(struct soap*, _onvifMedia__GetAudioEncoderConfigurations*);
    @endcode

  - <onvifMedia:GetAudioEncoderConfigurationsResponse> @ref _onvifMedia__GetAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioEncoderConfigurationsResponse(struct soap*, _onvifMedia__GetAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioEncoderConfigurationsResponse(struct soap*, _onvifMedia__GetAudioEncoderConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetAudioSourceConfigurations> @ref _onvifMedia__GetAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioSourceConfigurations(struct soap*, _onvifMedia__GetAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioSourceConfigurations(struct soap*, _onvifMedia__GetAudioSourceConfigurations*);
    @endcode

  - <onvifMedia:GetAudioSourceConfigurationsResponse> @ref _onvifMedia__GetAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioSourceConfigurationsResponse(struct soap*, _onvifMedia__GetAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioSourceConfigurationsResponse(struct soap*, _onvifMedia__GetAudioSourceConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetVideoAnalyticsConfigurations> @ref _onvifMedia__GetVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoAnalyticsConfigurations(struct soap*, _onvifMedia__GetVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoAnalyticsConfigurations(struct soap*, _onvifMedia__GetVideoAnalyticsConfigurations*);
    @endcode

  - <onvifMedia:GetVideoAnalyticsConfigurationsResponse> @ref _onvifMedia__GetVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoAnalyticsConfigurationsResponse(struct soap*, _onvifMedia__GetVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoAnalyticsConfigurationsResponse(struct soap*, _onvifMedia__GetVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetMetadataConfigurations> @ref _onvifMedia__GetMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetMetadataConfigurations(struct soap*, _onvifMedia__GetMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetMetadataConfigurations(struct soap*, _onvifMedia__GetMetadataConfigurations*);
    @endcode

  - <onvifMedia:GetMetadataConfigurationsResponse> @ref _onvifMedia__GetMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetMetadataConfigurationsResponse(struct soap*, _onvifMedia__GetMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetMetadataConfigurationsResponse(struct soap*, _onvifMedia__GetMetadataConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetAudioOutputConfigurations> @ref _onvifMedia__GetAudioOutputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioOutputConfigurations(struct soap*, _onvifMedia__GetAudioOutputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioOutputConfigurations(struct soap*, _onvifMedia__GetAudioOutputConfigurations*);
    @endcode

  - <onvifMedia:GetAudioOutputConfigurationsResponse> @ref _onvifMedia__GetAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioOutputConfigurationsResponse(struct soap*, _onvifMedia__GetAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioOutputConfigurationsResponse(struct soap*, _onvifMedia__GetAudioOutputConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetAudioDecoderConfigurations> @ref _onvifMedia__GetAudioDecoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioDecoderConfigurations(struct soap*, _onvifMedia__GetAudioDecoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioDecoderConfigurations(struct soap*, _onvifMedia__GetAudioDecoderConfigurations*);
    @endcode

  - <onvifMedia:GetAudioDecoderConfigurationsResponse> @ref _onvifMedia__GetAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioDecoderConfigurationsResponse(struct soap*, _onvifMedia__GetAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioDecoderConfigurationsResponse(struct soap*, _onvifMedia__GetAudioDecoderConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetVideoSourceConfiguration> @ref _onvifMedia__GetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoSourceConfiguration(struct soap*, _onvifMedia__GetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoSourceConfiguration(struct soap*, _onvifMedia__GetVideoSourceConfiguration*);
    @endcode

  - <onvifMedia:GetVideoSourceConfigurationResponse> @ref _onvifMedia__GetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoSourceConfigurationResponse(struct soap*, _onvifMedia__GetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoSourceConfigurationResponse(struct soap*, _onvifMedia__GetVideoSourceConfigurationResponse*);
    @endcode

  - <onvifMedia:GetVideoEncoderConfiguration> @ref _onvifMedia__GetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoEncoderConfiguration(struct soap*, _onvifMedia__GetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoEncoderConfiguration(struct soap*, _onvifMedia__GetVideoEncoderConfiguration*);
    @endcode

  - <onvifMedia:GetVideoEncoderConfigurationResponse> @ref _onvifMedia__GetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoEncoderConfigurationResponse(struct soap*, _onvifMedia__GetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoEncoderConfigurationResponse(struct soap*, _onvifMedia__GetVideoEncoderConfigurationResponse*);
    @endcode

  - <onvifMedia:GetAudioSourceConfiguration> @ref _onvifMedia__GetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioSourceConfiguration(struct soap*, _onvifMedia__GetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioSourceConfiguration(struct soap*, _onvifMedia__GetAudioSourceConfiguration*);
    @endcode

  - <onvifMedia:GetAudioSourceConfigurationResponse> @ref _onvifMedia__GetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioSourceConfigurationResponse(struct soap*, _onvifMedia__GetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioSourceConfigurationResponse(struct soap*, _onvifMedia__GetAudioSourceConfigurationResponse*);
    @endcode

  - <onvifMedia:GetAudioEncoderConfiguration> @ref _onvifMedia__GetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioEncoderConfiguration(struct soap*, _onvifMedia__GetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioEncoderConfiguration(struct soap*, _onvifMedia__GetAudioEncoderConfiguration*);
    @endcode

  - <onvifMedia:GetAudioEncoderConfigurationResponse> @ref _onvifMedia__GetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioEncoderConfigurationResponse(struct soap*, _onvifMedia__GetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioEncoderConfigurationResponse(struct soap*, _onvifMedia__GetAudioEncoderConfigurationResponse*);
    @endcode

  - <onvifMedia:GetVideoAnalyticsConfiguration> @ref _onvifMedia__GetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoAnalyticsConfiguration(struct soap*, _onvifMedia__GetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoAnalyticsConfiguration(struct soap*, _onvifMedia__GetVideoAnalyticsConfiguration*);
    @endcode

  - <onvifMedia:GetVideoAnalyticsConfigurationResponse> @ref _onvifMedia__GetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoAnalyticsConfigurationResponse(struct soap*, _onvifMedia__GetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoAnalyticsConfigurationResponse(struct soap*, _onvifMedia__GetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <onvifMedia:GetMetadataConfiguration> @ref _onvifMedia__GetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetMetadataConfiguration(struct soap*, _onvifMedia__GetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetMetadataConfiguration(struct soap*, _onvifMedia__GetMetadataConfiguration*);
    @endcode

  - <onvifMedia:GetMetadataConfigurationResponse> @ref _onvifMedia__GetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetMetadataConfigurationResponse(struct soap*, _onvifMedia__GetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetMetadataConfigurationResponse(struct soap*, _onvifMedia__GetMetadataConfigurationResponse*);
    @endcode

  - <onvifMedia:GetAudioOutputConfiguration> @ref _onvifMedia__GetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioOutputConfiguration(struct soap*, _onvifMedia__GetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioOutputConfiguration(struct soap*, _onvifMedia__GetAudioOutputConfiguration*);
    @endcode

  - <onvifMedia:GetAudioOutputConfigurationResponse> @ref _onvifMedia__GetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioOutputConfigurationResponse(struct soap*, _onvifMedia__GetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioOutputConfigurationResponse(struct soap*, _onvifMedia__GetAudioOutputConfigurationResponse*);
    @endcode

  - <onvifMedia:GetAudioDecoderConfiguration> @ref _onvifMedia__GetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioDecoderConfiguration(struct soap*, _onvifMedia__GetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioDecoderConfiguration(struct soap*, _onvifMedia__GetAudioDecoderConfiguration*);
    @endcode

  - <onvifMedia:GetAudioDecoderConfigurationResponse> @ref _onvifMedia__GetAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioDecoderConfigurationResponse(struct soap*, _onvifMedia__GetAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioDecoderConfigurationResponse(struct soap*, _onvifMedia__GetAudioDecoderConfigurationResponse*);
    @endcode

  - <onvifMedia:GetCompatibleVideoEncoderConfigurations> @ref _onvifMedia__GetCompatibleVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleVideoEncoderConfigurations(struct soap*, _onvifMedia__GetCompatibleVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleVideoEncoderConfigurations(struct soap*, _onvifMedia__GetCompatibleVideoEncoderConfigurations*);
    @endcode

  - <onvifMedia:GetCompatibleVideoEncoderConfigurationsResponse> @ref _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetCompatibleVideoSourceConfigurations> @ref _onvifMedia__GetCompatibleVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleVideoSourceConfigurations(struct soap*, _onvifMedia__GetCompatibleVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleVideoSourceConfigurations(struct soap*, _onvifMedia__GetCompatibleVideoSourceConfigurations*);
    @endcode

  - <onvifMedia:GetCompatibleVideoSourceConfigurationsResponse> @ref _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetCompatibleAudioEncoderConfigurations> @ref _onvifMedia__GetCompatibleAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleAudioEncoderConfigurations(struct soap*, _onvifMedia__GetCompatibleAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleAudioEncoderConfigurations(struct soap*, _onvifMedia__GetCompatibleAudioEncoderConfigurations*);
    @endcode

  - <onvifMedia:GetCompatibleAudioEncoderConfigurationsResponse> @ref _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetCompatibleAudioSourceConfigurations> @ref _onvifMedia__GetCompatibleAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleAudioSourceConfigurations(struct soap*, _onvifMedia__GetCompatibleAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleAudioSourceConfigurations(struct soap*, _onvifMedia__GetCompatibleAudioSourceConfigurations*);
    @endcode

  - <onvifMedia:GetCompatibleAudioSourceConfigurationsResponse> @ref _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetCompatibleVideoAnalyticsConfigurations> @ref _onvifMedia__GetCompatibleVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _onvifMedia__GetCompatibleVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _onvifMedia__GetCompatibleVideoAnalyticsConfigurations*);
    @endcode

  - <onvifMedia:GetCompatibleVideoAnalyticsConfigurationsResponse> @ref _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetCompatibleMetadataConfigurations> @ref _onvifMedia__GetCompatibleMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleMetadataConfigurations(struct soap*, _onvifMedia__GetCompatibleMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleMetadataConfigurations(struct soap*, _onvifMedia__GetCompatibleMetadataConfigurations*);
    @endcode

  - <onvifMedia:GetCompatibleMetadataConfigurationsResponse> @ref _onvifMedia__GetCompatibleMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleMetadataConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleMetadataConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleMetadataConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetCompatibleAudioOutputConfigurations> @ref _onvifMedia__GetCompatibleAudioOutputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleAudioOutputConfigurations(struct soap*, _onvifMedia__GetCompatibleAudioOutputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleAudioOutputConfigurations(struct soap*, _onvifMedia__GetCompatibleAudioOutputConfigurations*);
    @endcode

  - <onvifMedia:GetCompatibleAudioOutputConfigurationsResponse> @ref _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse*);
    @endcode

  - <onvifMedia:GetCompatibleAudioDecoderConfigurations> @ref _onvifMedia__GetCompatibleAudioDecoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleAudioDecoderConfigurations(struct soap*, _onvifMedia__GetCompatibleAudioDecoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleAudioDecoderConfigurations(struct soap*, _onvifMedia__GetCompatibleAudioDecoderConfigurations*);
    @endcode

  - <onvifMedia:GetCompatibleAudioDecoderConfigurationsResponse> @ref _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse*);
    @endcode

  - <onvifMedia:SetVideoEncoderConfiguration> @ref _onvifMedia__SetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetVideoEncoderConfiguration(struct soap*, _onvifMedia__SetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetVideoEncoderConfiguration(struct soap*, _onvifMedia__SetVideoEncoderConfiguration*);
    @endcode

  - <onvifMedia:SetVideoEncoderConfigurationResponse> @ref _onvifMedia__SetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetVideoEncoderConfigurationResponse(struct soap*, _onvifMedia__SetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetVideoEncoderConfigurationResponse(struct soap*, _onvifMedia__SetVideoEncoderConfigurationResponse*);
    @endcode

  - <onvifMedia:SetVideoSourceConfiguration> @ref _onvifMedia__SetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetVideoSourceConfiguration(struct soap*, _onvifMedia__SetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetVideoSourceConfiguration(struct soap*, _onvifMedia__SetVideoSourceConfiguration*);
    @endcode

  - <onvifMedia:SetVideoSourceConfigurationResponse> @ref _onvifMedia__SetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetVideoSourceConfigurationResponse(struct soap*, _onvifMedia__SetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetVideoSourceConfigurationResponse(struct soap*, _onvifMedia__SetVideoSourceConfigurationResponse*);
    @endcode

  - <onvifMedia:SetAudioEncoderConfiguration> @ref _onvifMedia__SetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetAudioEncoderConfiguration(struct soap*, _onvifMedia__SetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetAudioEncoderConfiguration(struct soap*, _onvifMedia__SetAudioEncoderConfiguration*);
    @endcode

  - <onvifMedia:SetAudioEncoderConfigurationResponse> @ref _onvifMedia__SetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetAudioEncoderConfigurationResponse(struct soap*, _onvifMedia__SetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetAudioEncoderConfigurationResponse(struct soap*, _onvifMedia__SetAudioEncoderConfigurationResponse*);
    @endcode

  - <onvifMedia:SetAudioSourceConfiguration> @ref _onvifMedia__SetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetAudioSourceConfiguration(struct soap*, _onvifMedia__SetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetAudioSourceConfiguration(struct soap*, _onvifMedia__SetAudioSourceConfiguration*);
    @endcode

  - <onvifMedia:SetAudioSourceConfigurationResponse> @ref _onvifMedia__SetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetAudioSourceConfigurationResponse(struct soap*, _onvifMedia__SetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetAudioSourceConfigurationResponse(struct soap*, _onvifMedia__SetAudioSourceConfigurationResponse*);
    @endcode

  - <onvifMedia:SetVideoAnalyticsConfiguration> @ref _onvifMedia__SetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetVideoAnalyticsConfiguration(struct soap*, _onvifMedia__SetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetVideoAnalyticsConfiguration(struct soap*, _onvifMedia__SetVideoAnalyticsConfiguration*);
    @endcode

  - <onvifMedia:SetVideoAnalyticsConfigurationResponse> @ref _onvifMedia__SetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetVideoAnalyticsConfigurationResponse(struct soap*, _onvifMedia__SetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetVideoAnalyticsConfigurationResponse(struct soap*, _onvifMedia__SetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <onvifMedia:SetMetadataConfiguration> @ref _onvifMedia__SetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetMetadataConfiguration(struct soap*, _onvifMedia__SetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetMetadataConfiguration(struct soap*, _onvifMedia__SetMetadataConfiguration*);
    @endcode

  - <onvifMedia:SetMetadataConfigurationResponse> @ref _onvifMedia__SetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetMetadataConfigurationResponse(struct soap*, _onvifMedia__SetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetMetadataConfigurationResponse(struct soap*, _onvifMedia__SetMetadataConfigurationResponse*);
    @endcode

  - <onvifMedia:SetAudioOutputConfiguration> @ref _onvifMedia__SetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetAudioOutputConfiguration(struct soap*, _onvifMedia__SetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetAudioOutputConfiguration(struct soap*, _onvifMedia__SetAudioOutputConfiguration*);
    @endcode

  - <onvifMedia:SetAudioOutputConfigurationResponse> @ref _onvifMedia__SetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetAudioOutputConfigurationResponse(struct soap*, _onvifMedia__SetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetAudioOutputConfigurationResponse(struct soap*, _onvifMedia__SetAudioOutputConfigurationResponse*);
    @endcode

  - <onvifMedia:SetAudioDecoderConfiguration> @ref _onvifMedia__SetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetAudioDecoderConfiguration(struct soap*, _onvifMedia__SetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetAudioDecoderConfiguration(struct soap*, _onvifMedia__SetAudioDecoderConfiguration*);
    @endcode

  - <onvifMedia:SetAudioDecoderConfigurationResponse> @ref _onvifMedia__SetAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetAudioDecoderConfigurationResponse(struct soap*, _onvifMedia__SetAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetAudioDecoderConfigurationResponse(struct soap*, _onvifMedia__SetAudioDecoderConfigurationResponse*);
    @endcode

  - <onvifMedia:GetVideoSourceConfigurationOptions> @ref _onvifMedia__GetVideoSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoSourceConfigurationOptions(struct soap*, _onvifMedia__GetVideoSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoSourceConfigurationOptions(struct soap*, _onvifMedia__GetVideoSourceConfigurationOptions*);
    @endcode

  - <onvifMedia:GetVideoSourceConfigurationOptionsResponse> @ref _onvifMedia__GetVideoSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoSourceConfigurationOptionsResponse(struct soap*, _onvifMedia__GetVideoSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoSourceConfigurationOptionsResponse(struct soap*, _onvifMedia__GetVideoSourceConfigurationOptionsResponse*);
    @endcode

  - <onvifMedia:GetVideoEncoderConfigurationOptions> @ref _onvifMedia__GetVideoEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoEncoderConfigurationOptions(struct soap*, _onvifMedia__GetVideoEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoEncoderConfigurationOptions(struct soap*, _onvifMedia__GetVideoEncoderConfigurationOptions*);
    @endcode

  - <onvifMedia:GetVideoEncoderConfigurationOptionsResponse> @ref _onvifMedia__GetVideoEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _onvifMedia__GetVideoEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _onvifMedia__GetVideoEncoderConfigurationOptionsResponse*);
    @endcode

  - <onvifMedia:GetAudioSourceConfigurationOptions> @ref _onvifMedia__GetAudioSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioSourceConfigurationOptions(struct soap*, _onvifMedia__GetAudioSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioSourceConfigurationOptions(struct soap*, _onvifMedia__GetAudioSourceConfigurationOptions*);
    @endcode

  - <onvifMedia:GetAudioSourceConfigurationOptionsResponse> @ref _onvifMedia__GetAudioSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioSourceConfigurationOptionsResponse(struct soap*, _onvifMedia__GetAudioSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioSourceConfigurationOptionsResponse(struct soap*, _onvifMedia__GetAudioSourceConfigurationOptionsResponse*);
    @endcode

  - <onvifMedia:GetAudioEncoderConfigurationOptions> @ref _onvifMedia__GetAudioEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioEncoderConfigurationOptions(struct soap*, _onvifMedia__GetAudioEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioEncoderConfigurationOptions(struct soap*, _onvifMedia__GetAudioEncoderConfigurationOptions*);
    @endcode

  - <onvifMedia:GetAudioEncoderConfigurationOptionsResponse> @ref _onvifMedia__GetAudioEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _onvifMedia__GetAudioEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _onvifMedia__GetAudioEncoderConfigurationOptionsResponse*);
    @endcode

  - <onvifMedia:GetMetadataConfigurationOptions> @ref _onvifMedia__GetMetadataConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetMetadataConfigurationOptions(struct soap*, _onvifMedia__GetMetadataConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetMetadataConfigurationOptions(struct soap*, _onvifMedia__GetMetadataConfigurationOptions*);
    @endcode

  - <onvifMedia:GetMetadataConfigurationOptionsResponse> @ref _onvifMedia__GetMetadataConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetMetadataConfigurationOptionsResponse(struct soap*, _onvifMedia__GetMetadataConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetMetadataConfigurationOptionsResponse(struct soap*, _onvifMedia__GetMetadataConfigurationOptionsResponse*);
    @endcode

  - <onvifMedia:GetAudioOutputConfigurationOptions> @ref _onvifMedia__GetAudioOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioOutputConfigurationOptions(struct soap*, _onvifMedia__GetAudioOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioOutputConfigurationOptions(struct soap*, _onvifMedia__GetAudioOutputConfigurationOptions*);
    @endcode

  - <onvifMedia:GetAudioOutputConfigurationOptionsResponse> @ref _onvifMedia__GetAudioOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioOutputConfigurationOptionsResponse(struct soap*, _onvifMedia__GetAudioOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioOutputConfigurationOptionsResponse(struct soap*, _onvifMedia__GetAudioOutputConfigurationOptionsResponse*);
    @endcode

  - <onvifMedia:GetAudioDecoderConfigurationOptions> @ref _onvifMedia__GetAudioDecoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioDecoderConfigurationOptions(struct soap*, _onvifMedia__GetAudioDecoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioDecoderConfigurationOptions(struct soap*, _onvifMedia__GetAudioDecoderConfigurationOptions*);
    @endcode

  - <onvifMedia:GetAudioDecoderConfigurationOptionsResponse> @ref _onvifMedia__GetAudioDecoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _onvifMedia__GetAudioDecoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _onvifMedia__GetAudioDecoderConfigurationOptionsResponse*);
    @endcode

  - <onvifMedia:GetGuaranteedNumberOfVideoEncoderInstances> @ref _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances*);
    @endcode

  - <onvifMedia:GetGuaranteedNumberOfVideoEncoderInstancesResponse> @ref _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    @endcode

  - <onvifMedia:GetStreamUri> @ref _onvifMedia__GetStreamUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetStreamUri(struct soap*, _onvifMedia__GetStreamUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetStreamUri(struct soap*, _onvifMedia__GetStreamUri*);
    @endcode

  - <onvifMedia:GetStreamUriResponse> @ref _onvifMedia__GetStreamUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetStreamUriResponse(struct soap*, _onvifMedia__GetStreamUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetStreamUriResponse(struct soap*, _onvifMedia__GetStreamUriResponse*);
    @endcode

  - <onvifMedia:StartMulticastStreaming> @ref _onvifMedia__StartMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__StartMulticastStreaming(struct soap*, _onvifMedia__StartMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__StartMulticastStreaming(struct soap*, _onvifMedia__StartMulticastStreaming*);
    @endcode

  - <onvifMedia:StartMulticastStreamingResponse> @ref _onvifMedia__StartMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__StartMulticastStreamingResponse(struct soap*, _onvifMedia__StartMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__StartMulticastStreamingResponse(struct soap*, _onvifMedia__StartMulticastStreamingResponse*);
    @endcode

  - <onvifMedia:StopMulticastStreaming> @ref _onvifMedia__StopMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__StopMulticastStreaming(struct soap*, _onvifMedia__StopMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__StopMulticastStreaming(struct soap*, _onvifMedia__StopMulticastStreaming*);
    @endcode

  - <onvifMedia:StopMulticastStreamingResponse> @ref _onvifMedia__StopMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__StopMulticastStreamingResponse(struct soap*, _onvifMedia__StopMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__StopMulticastStreamingResponse(struct soap*, _onvifMedia__StopMulticastStreamingResponse*);
    @endcode

  - <onvifMedia:SetSynchronizationPoint> @ref _onvifMedia__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetSynchronizationPoint(struct soap*, _onvifMedia__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetSynchronizationPoint(struct soap*, _onvifMedia__SetSynchronizationPoint*);
    @endcode

  - <onvifMedia:SetSynchronizationPointResponse> @ref _onvifMedia__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__SetSynchronizationPointResponse(struct soap*, _onvifMedia__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__SetSynchronizationPointResponse(struct soap*, _onvifMedia__SetSynchronizationPointResponse*);
    @endcode

  - <onvifMedia:GetSnapshotUri> @ref _onvifMedia__GetSnapshotUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetSnapshotUri(struct soap*, _onvifMedia__GetSnapshotUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetSnapshotUri(struct soap*, _onvifMedia__GetSnapshotUri*);
    @endcode

  - <onvifMedia:GetSnapshotUriResponse> @ref _onvifMedia__GetSnapshotUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifMedia__GetSnapshotUriResponse(struct soap*, _onvifMedia__GetSnapshotUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifMedia__GetSnapshotUriResponse(struct soap*, _onvifMedia__GetSnapshotUriResponse*);
    @endcode

@section onvifPtz Top-level root elements of schema "http://www.onvif.org/ver20/ptz/wsdl"

  - <onvifPtz:GetServiceCapabilities> @ref _onvifPtz__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetServiceCapabilities(struct soap*, _onvifPtz__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetServiceCapabilities(struct soap*, _onvifPtz__GetServiceCapabilities*);
    @endcode

  - <onvifPtz:GetServiceCapabilitiesResponse> @ref _onvifPtz__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetServiceCapabilitiesResponse(struct soap*, _onvifPtz__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetServiceCapabilitiesResponse(struct soap*, _onvifPtz__GetServiceCapabilitiesResponse*);
    @endcode

  - <onvifPtz:Capabilities> (use wsdl2h option -g to auto-generate)

  - <onvifPtz:GetNodes> @ref _onvifPtz__GetNodes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetNodes(struct soap*, _onvifPtz__GetNodes*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetNodes(struct soap*, _onvifPtz__GetNodes*);
    @endcode

  - <onvifPtz:GetNodesResponse> @ref _onvifPtz__GetNodesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetNodesResponse(struct soap*, _onvifPtz__GetNodesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetNodesResponse(struct soap*, _onvifPtz__GetNodesResponse*);
    @endcode

  - <onvifPtz:GetNode> @ref _onvifPtz__GetNode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetNode(struct soap*, _onvifPtz__GetNode*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetNode(struct soap*, _onvifPtz__GetNode*);
    @endcode

  - <onvifPtz:GetNodeResponse> @ref _onvifPtz__GetNodeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetNodeResponse(struct soap*, _onvifPtz__GetNodeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetNodeResponse(struct soap*, _onvifPtz__GetNodeResponse*);
    @endcode

  - <onvifPtz:GetConfigurations> @ref _onvifPtz__GetConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetConfigurations(struct soap*, _onvifPtz__GetConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetConfigurations(struct soap*, _onvifPtz__GetConfigurations*);
    @endcode

  - <onvifPtz:GetConfigurationsResponse> @ref _onvifPtz__GetConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetConfigurationsResponse(struct soap*, _onvifPtz__GetConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetConfigurationsResponse(struct soap*, _onvifPtz__GetConfigurationsResponse*);
    @endcode

  - <onvifPtz:GetConfiguration> @ref _onvifPtz__GetConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetConfiguration(struct soap*, _onvifPtz__GetConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetConfiguration(struct soap*, _onvifPtz__GetConfiguration*);
    @endcode

  - <onvifPtz:GetConfigurationResponse> @ref _onvifPtz__GetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetConfigurationResponse(struct soap*, _onvifPtz__GetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetConfigurationResponse(struct soap*, _onvifPtz__GetConfigurationResponse*);
    @endcode

  - <onvifPtz:SetConfiguration> @ref _onvifPtz__SetConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__SetConfiguration(struct soap*, _onvifPtz__SetConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__SetConfiguration(struct soap*, _onvifPtz__SetConfiguration*);
    @endcode

  - <onvifPtz:SetConfigurationResponse> @ref _onvifPtz__SetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__SetConfigurationResponse(struct soap*, _onvifPtz__SetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__SetConfigurationResponse(struct soap*, _onvifPtz__SetConfigurationResponse*);
    @endcode

  - <onvifPtz:GetConfigurationOptions> @ref _onvifPtz__GetConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetConfigurationOptions(struct soap*, _onvifPtz__GetConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetConfigurationOptions(struct soap*, _onvifPtz__GetConfigurationOptions*);
    @endcode

  - <onvifPtz:GetConfigurationOptionsResponse> @ref _onvifPtz__GetConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetConfigurationOptionsResponse(struct soap*, _onvifPtz__GetConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetConfigurationOptionsResponse(struct soap*, _onvifPtz__GetConfigurationOptionsResponse*);
    @endcode

  - <onvifPtz:SendAuxiliaryCommand> @ref _onvifPtz__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__SendAuxiliaryCommand(struct soap*, _onvifPtz__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__SendAuxiliaryCommand(struct soap*, _onvifPtz__SendAuxiliaryCommand*);
    @endcode

  - <onvifPtz:SendAuxiliaryCommandResponse> @ref _onvifPtz__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__SendAuxiliaryCommandResponse(struct soap*, _onvifPtz__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__SendAuxiliaryCommandResponse(struct soap*, _onvifPtz__SendAuxiliaryCommandResponse*);
    @endcode

  - <onvifPtz:GetPresets> @ref _onvifPtz__GetPresets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetPresets(struct soap*, _onvifPtz__GetPresets*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetPresets(struct soap*, _onvifPtz__GetPresets*);
    @endcode

  - <onvifPtz:GetPresetsResponse> @ref _onvifPtz__GetPresetsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetPresetsResponse(struct soap*, _onvifPtz__GetPresetsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetPresetsResponse(struct soap*, _onvifPtz__GetPresetsResponse*);
    @endcode

  - <onvifPtz:SetPreset> @ref _onvifPtz__SetPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__SetPreset(struct soap*, _onvifPtz__SetPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__SetPreset(struct soap*, _onvifPtz__SetPreset*);
    @endcode

  - <onvifPtz:SetPresetResponse> @ref _onvifPtz__SetPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__SetPresetResponse(struct soap*, _onvifPtz__SetPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__SetPresetResponse(struct soap*, _onvifPtz__SetPresetResponse*);
    @endcode

  - <onvifPtz:RemovePreset> @ref _onvifPtz__RemovePreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__RemovePreset(struct soap*, _onvifPtz__RemovePreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__RemovePreset(struct soap*, _onvifPtz__RemovePreset*);
    @endcode

  - <onvifPtz:RemovePresetResponse> @ref _onvifPtz__RemovePresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__RemovePresetResponse(struct soap*, _onvifPtz__RemovePresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__RemovePresetResponse(struct soap*, _onvifPtz__RemovePresetResponse*);
    @endcode

  - <onvifPtz:GotoPreset> @ref _onvifPtz__GotoPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GotoPreset(struct soap*, _onvifPtz__GotoPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GotoPreset(struct soap*, _onvifPtz__GotoPreset*);
    @endcode

  - <onvifPtz:GotoPresetResponse> @ref _onvifPtz__GotoPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GotoPresetResponse(struct soap*, _onvifPtz__GotoPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GotoPresetResponse(struct soap*, _onvifPtz__GotoPresetResponse*);
    @endcode

  - <onvifPtz:GetStatus> @ref _onvifPtz__GetStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetStatus(struct soap*, _onvifPtz__GetStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetStatus(struct soap*, _onvifPtz__GetStatus*);
    @endcode

  - <onvifPtz:GetStatusResponse> @ref _onvifPtz__GetStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetStatusResponse(struct soap*, _onvifPtz__GetStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetStatusResponse(struct soap*, _onvifPtz__GetStatusResponse*);
    @endcode

  - <onvifPtz:GotoHomePosition> @ref _onvifPtz__GotoHomePosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GotoHomePosition(struct soap*, _onvifPtz__GotoHomePosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GotoHomePosition(struct soap*, _onvifPtz__GotoHomePosition*);
    @endcode

  - <onvifPtz:GotoHomePositionResponse> @ref _onvifPtz__GotoHomePositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GotoHomePositionResponse(struct soap*, _onvifPtz__GotoHomePositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GotoHomePositionResponse(struct soap*, _onvifPtz__GotoHomePositionResponse*);
    @endcode

  - <onvifPtz:SetHomePosition> @ref _onvifPtz__SetHomePosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__SetHomePosition(struct soap*, _onvifPtz__SetHomePosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__SetHomePosition(struct soap*, _onvifPtz__SetHomePosition*);
    @endcode

  - <onvifPtz:SetHomePositionResponse> @ref _onvifPtz__SetHomePositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__SetHomePositionResponse(struct soap*, _onvifPtz__SetHomePositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__SetHomePositionResponse(struct soap*, _onvifPtz__SetHomePositionResponse*);
    @endcode

  - <onvifPtz:ContinuousMove> @ref _onvifPtz__ContinuousMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__ContinuousMove(struct soap*, _onvifPtz__ContinuousMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__ContinuousMove(struct soap*, _onvifPtz__ContinuousMove*);
    @endcode

  - <onvifPtz:ContinuousMoveResponse> @ref _onvifPtz__ContinuousMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__ContinuousMoveResponse(struct soap*, _onvifPtz__ContinuousMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__ContinuousMoveResponse(struct soap*, _onvifPtz__ContinuousMoveResponse*);
    @endcode

  - <onvifPtz:RelativeMove> @ref _onvifPtz__RelativeMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__RelativeMove(struct soap*, _onvifPtz__RelativeMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__RelativeMove(struct soap*, _onvifPtz__RelativeMove*);
    @endcode

  - <onvifPtz:RelativeMoveResponse> @ref _onvifPtz__RelativeMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__RelativeMoveResponse(struct soap*, _onvifPtz__RelativeMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__RelativeMoveResponse(struct soap*, _onvifPtz__RelativeMoveResponse*);
    @endcode

  - <onvifPtz:AbsoluteMove> @ref _onvifPtz__AbsoluteMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__AbsoluteMove(struct soap*, _onvifPtz__AbsoluteMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__AbsoluteMove(struct soap*, _onvifPtz__AbsoluteMove*);
    @endcode

  - <onvifPtz:AbsoluteMoveResponse> @ref _onvifPtz__AbsoluteMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__AbsoluteMoveResponse(struct soap*, _onvifPtz__AbsoluteMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__AbsoluteMoveResponse(struct soap*, _onvifPtz__AbsoluteMoveResponse*);
    @endcode

  - <onvifPtz:Stop> @ref _onvifPtz__Stop
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__Stop(struct soap*, _onvifPtz__Stop*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__Stop(struct soap*, _onvifPtz__Stop*);
    @endcode

  - <onvifPtz:StopResponse> @ref _onvifPtz__StopResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__StopResponse(struct soap*, _onvifPtz__StopResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__StopResponse(struct soap*, _onvifPtz__StopResponse*);
    @endcode

  - <onvifPtz:GetPresetTours> @ref _onvifPtz__GetPresetTours
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetPresetTours(struct soap*, _onvifPtz__GetPresetTours*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetPresetTours(struct soap*, _onvifPtz__GetPresetTours*);
    @endcode

  - <onvifPtz:GetPresetToursResponse> @ref _onvifPtz__GetPresetToursResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetPresetToursResponse(struct soap*, _onvifPtz__GetPresetToursResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetPresetToursResponse(struct soap*, _onvifPtz__GetPresetToursResponse*);
    @endcode

  - <onvifPtz:GetPresetTour> @ref _onvifPtz__GetPresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetPresetTour(struct soap*, _onvifPtz__GetPresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetPresetTour(struct soap*, _onvifPtz__GetPresetTour*);
    @endcode

  - <onvifPtz:GetPresetTourResponse> @ref _onvifPtz__GetPresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetPresetTourResponse(struct soap*, _onvifPtz__GetPresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetPresetTourResponse(struct soap*, _onvifPtz__GetPresetTourResponse*);
    @endcode

  - <onvifPtz:GetPresetTourOptions> @ref _onvifPtz__GetPresetTourOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetPresetTourOptions(struct soap*, _onvifPtz__GetPresetTourOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetPresetTourOptions(struct soap*, _onvifPtz__GetPresetTourOptions*);
    @endcode

  - <onvifPtz:GetPresetTourOptionsResponse> @ref _onvifPtz__GetPresetTourOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__GetPresetTourOptionsResponse(struct soap*, _onvifPtz__GetPresetTourOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__GetPresetTourOptionsResponse(struct soap*, _onvifPtz__GetPresetTourOptionsResponse*);
    @endcode

  - <onvifPtz:CreatePresetTour> @ref _onvifPtz__CreatePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__CreatePresetTour(struct soap*, _onvifPtz__CreatePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__CreatePresetTour(struct soap*, _onvifPtz__CreatePresetTour*);
    @endcode

  - <onvifPtz:CreatePresetTourResponse> @ref _onvifPtz__CreatePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__CreatePresetTourResponse(struct soap*, _onvifPtz__CreatePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__CreatePresetTourResponse(struct soap*, _onvifPtz__CreatePresetTourResponse*);
    @endcode

  - <onvifPtz:ModifyPresetTour> @ref _onvifPtz__ModifyPresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__ModifyPresetTour(struct soap*, _onvifPtz__ModifyPresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__ModifyPresetTour(struct soap*, _onvifPtz__ModifyPresetTour*);
    @endcode

  - <onvifPtz:ModifyPresetTourResponse> @ref _onvifPtz__ModifyPresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__ModifyPresetTourResponse(struct soap*, _onvifPtz__ModifyPresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__ModifyPresetTourResponse(struct soap*, _onvifPtz__ModifyPresetTourResponse*);
    @endcode

  - <onvifPtz:OperatePresetTour> @ref _onvifPtz__OperatePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__OperatePresetTour(struct soap*, _onvifPtz__OperatePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__OperatePresetTour(struct soap*, _onvifPtz__OperatePresetTour*);
    @endcode

  - <onvifPtz:OperatePresetTourResponse> @ref _onvifPtz__OperatePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__OperatePresetTourResponse(struct soap*, _onvifPtz__OperatePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__OperatePresetTourResponse(struct soap*, _onvifPtz__OperatePresetTourResponse*);
    @endcode

  - <onvifPtz:RemovePresetTour> @ref _onvifPtz__RemovePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__RemovePresetTour(struct soap*, _onvifPtz__RemovePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__RemovePresetTour(struct soap*, _onvifPtz__RemovePresetTour*);
    @endcode

  - <onvifPtz:RemovePresetTourResponse> @ref _onvifPtz__RemovePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifPtz__RemovePresetTourResponse(struct soap*, _onvifPtz__RemovePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifPtz__RemovePresetTourResponse(struct soap*, _onvifPtz__RemovePresetTourResponse*);
    @endcode

@section onvifDeviceIO Top-level root elements of schema "http://www.onvif.org/ver10/deviceIO/wsdl"

  - <onvifDeviceIO:GetServiceCapabilities> @ref _onvifDeviceIO__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetServiceCapabilities(struct soap*, _onvifDeviceIO__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetServiceCapabilities(struct soap*, _onvifDeviceIO__GetServiceCapabilities*);
    @endcode

  - <onvifDeviceIO:GetServiceCapabilitiesResponse> @ref _onvifDeviceIO__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetServiceCapabilitiesResponse(struct soap*, _onvifDeviceIO__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetServiceCapabilitiesResponse(struct soap*, _onvifDeviceIO__GetServiceCapabilitiesResponse*);
    @endcode

  - <onvifDeviceIO:Capabilities> (use wsdl2h option -g to auto-generate)

  - <onvifDeviceIO:GetRelayOutputOptions> @ref _onvifDeviceIO__GetRelayOutputOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetRelayOutputOptions(struct soap*, _onvifDeviceIO__GetRelayOutputOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetRelayOutputOptions(struct soap*, _onvifDeviceIO__GetRelayOutputOptions*);
    @endcode

  - <onvifDeviceIO:GetRelayOutputOptionsResponse> @ref _onvifDeviceIO__GetRelayOutputOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetRelayOutputOptionsResponse(struct soap*, _onvifDeviceIO__GetRelayOutputOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetRelayOutputOptionsResponse(struct soap*, _onvifDeviceIO__GetRelayOutputOptionsResponse*);
    @endcode

  - <onvifDeviceIO:GetVideoOutputs> @ref _onvifDeviceIO__GetVideoOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetVideoOutputs(struct soap*, _onvifDeviceIO__GetVideoOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetVideoOutputs(struct soap*, _onvifDeviceIO__GetVideoOutputs*);
    @endcode

  - <onvifDeviceIO:GetVideoOutputsResponse> @ref _onvifDeviceIO__GetVideoOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetVideoOutputsResponse(struct soap*, _onvifDeviceIO__GetVideoOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetVideoOutputsResponse(struct soap*, _onvifDeviceIO__GetVideoOutputsResponse*);
    @endcode

  - <onvifDeviceIO:GetAudioSourceConfiguration> @ref _onvifDeviceIO__GetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetAudioSourceConfiguration(struct soap*, _onvifDeviceIO__GetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetAudioSourceConfiguration(struct soap*, _onvifDeviceIO__GetAudioSourceConfiguration*);
    @endcode

  - <onvifDeviceIO:GetAudioSourceConfigurationResponse> @ref _onvifDeviceIO__GetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetAudioSourceConfigurationResponse(struct soap*, _onvifDeviceIO__GetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetAudioSourceConfigurationResponse(struct soap*, _onvifDeviceIO__GetAudioSourceConfigurationResponse*);
    @endcode

  - <onvifDeviceIO:GetAudioOutputConfiguration> @ref _onvifDeviceIO__GetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetAudioOutputConfiguration(struct soap*, _onvifDeviceIO__GetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetAudioOutputConfiguration(struct soap*, _onvifDeviceIO__GetAudioOutputConfiguration*);
    @endcode

  - <onvifDeviceIO:GetAudioOutputConfigurationResponse> @ref _onvifDeviceIO__GetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetAudioOutputConfigurationResponse(struct soap*, _onvifDeviceIO__GetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetAudioOutputConfigurationResponse(struct soap*, _onvifDeviceIO__GetAudioOutputConfigurationResponse*);
    @endcode

  - <onvifDeviceIO:GetVideoSourceConfiguration> @ref _onvifDeviceIO__GetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetVideoSourceConfiguration(struct soap*, _onvifDeviceIO__GetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetVideoSourceConfiguration(struct soap*, _onvifDeviceIO__GetVideoSourceConfiguration*);
    @endcode

  - <onvifDeviceIO:GetVideoSourceConfigurationResponse> @ref _onvifDeviceIO__GetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetVideoSourceConfigurationResponse(struct soap*, _onvifDeviceIO__GetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetVideoSourceConfigurationResponse(struct soap*, _onvifDeviceIO__GetVideoSourceConfigurationResponse*);
    @endcode

  - <onvifDeviceIO:GetVideoOutputConfiguration> @ref _onvifDeviceIO__GetVideoOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetVideoOutputConfiguration(struct soap*, _onvifDeviceIO__GetVideoOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetVideoOutputConfiguration(struct soap*, _onvifDeviceIO__GetVideoOutputConfiguration*);
    @endcode

  - <onvifDeviceIO:GetVideoOutputConfigurationResponse> @ref _onvifDeviceIO__GetVideoOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetVideoOutputConfigurationResponse(struct soap*, _onvifDeviceIO__GetVideoOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetVideoOutputConfigurationResponse(struct soap*, _onvifDeviceIO__GetVideoOutputConfigurationResponse*);
    @endcode

  - <onvifDeviceIO:SetAudioSourceConfiguration> @ref _onvifDeviceIO__SetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__SetAudioSourceConfiguration(struct soap*, _onvifDeviceIO__SetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__SetAudioSourceConfiguration(struct soap*, _onvifDeviceIO__SetAudioSourceConfiguration*);
    @endcode

  - <onvifDeviceIO:SetAudioSourceConfigurationResponse> @ref _onvifDeviceIO__SetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__SetAudioSourceConfigurationResponse(struct soap*, _onvifDeviceIO__SetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__SetAudioSourceConfigurationResponse(struct soap*, _onvifDeviceIO__SetAudioSourceConfigurationResponse*);
    @endcode

  - <onvifDeviceIO:SetAudioOutputConfiguration> @ref _onvifDeviceIO__SetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__SetAudioOutputConfiguration(struct soap*, _onvifDeviceIO__SetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__SetAudioOutputConfiguration(struct soap*, _onvifDeviceIO__SetAudioOutputConfiguration*);
    @endcode

  - <onvifDeviceIO:SetAudioOutputConfigurationResponse> @ref _onvifDeviceIO__SetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__SetAudioOutputConfigurationResponse(struct soap*, _onvifDeviceIO__SetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__SetAudioOutputConfigurationResponse(struct soap*, _onvifDeviceIO__SetAudioOutputConfigurationResponse*);
    @endcode

  - <onvifDeviceIO:SetVideoSourceConfiguration> @ref _onvifDeviceIO__SetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__SetVideoSourceConfiguration(struct soap*, _onvifDeviceIO__SetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__SetVideoSourceConfiguration(struct soap*, _onvifDeviceIO__SetVideoSourceConfiguration*);
    @endcode

  - <onvifDeviceIO:SetVideoSourceConfigurationResponse> @ref _onvifDeviceIO__SetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__SetVideoSourceConfigurationResponse(struct soap*, _onvifDeviceIO__SetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__SetVideoSourceConfigurationResponse(struct soap*, _onvifDeviceIO__SetVideoSourceConfigurationResponse*);
    @endcode

  - <onvifDeviceIO:SetVideoOutputConfiguration> @ref _onvifDeviceIO__SetVideoOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__SetVideoOutputConfiguration(struct soap*, _onvifDeviceIO__SetVideoOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__SetVideoOutputConfiguration(struct soap*, _onvifDeviceIO__SetVideoOutputConfiguration*);
    @endcode

  - <onvifDeviceIO:SetVideoOutputConfigurationResponse> @ref _onvifDeviceIO__SetVideoOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__SetVideoOutputConfigurationResponse(struct soap*, _onvifDeviceIO__SetVideoOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__SetVideoOutputConfigurationResponse(struct soap*, _onvifDeviceIO__SetVideoOutputConfigurationResponse*);
    @endcode

  - <onvifDeviceIO:GetVideoSourceConfigurationOptions> @ref _onvifDeviceIO__GetVideoSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetVideoSourceConfigurationOptions(struct soap*, _onvifDeviceIO__GetVideoSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetVideoSourceConfigurationOptions(struct soap*, _onvifDeviceIO__GetVideoSourceConfigurationOptions*);
    @endcode

  - <onvifDeviceIO:GetVideoSourceConfigurationOptionsResponse> @ref _onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse(struct soap*, _onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse(struct soap*, _onvifDeviceIO__GetVideoSourceConfigurationOptionsResponse*);
    @endcode

  - <onvifDeviceIO:GetVideoOutputConfigurationOptions> @ref _onvifDeviceIO__GetVideoOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetVideoOutputConfigurationOptions(struct soap*, _onvifDeviceIO__GetVideoOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetVideoOutputConfigurationOptions(struct soap*, _onvifDeviceIO__GetVideoOutputConfigurationOptions*);
    @endcode

  - <onvifDeviceIO:GetVideoOutputConfigurationOptionsResponse> @ref _onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse(struct soap*, _onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse(struct soap*, _onvifDeviceIO__GetVideoOutputConfigurationOptionsResponse*);
    @endcode

  - <onvifDeviceIO:GetAudioSourceConfigurationOptions> @ref _onvifDeviceIO__GetAudioSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetAudioSourceConfigurationOptions(struct soap*, _onvifDeviceIO__GetAudioSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetAudioSourceConfigurationOptions(struct soap*, _onvifDeviceIO__GetAudioSourceConfigurationOptions*);
    @endcode

  - <onvifDeviceIO:GetAudioSourceConfigurationOptionsResponse> @ref _onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse(struct soap*, _onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse(struct soap*, _onvifDeviceIO__GetAudioSourceConfigurationOptionsResponse*);
    @endcode

  - <onvifDeviceIO:GetAudioOutputConfigurationOptions> @ref _onvifDeviceIO__GetAudioOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetAudioOutputConfigurationOptions(struct soap*, _onvifDeviceIO__GetAudioOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetAudioOutputConfigurationOptions(struct soap*, _onvifDeviceIO__GetAudioOutputConfigurationOptions*);
    @endcode

  - <onvifDeviceIO:GetAudioOutputConfigurationOptionsResponse> @ref _onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse(struct soap*, _onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse(struct soap*, _onvifDeviceIO__GetAudioOutputConfigurationOptionsResponse*);
    @endcode

  - <onvifDeviceIO:SetRelayOutputSettings> @ref _onvifDeviceIO__SetRelayOutputSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__SetRelayOutputSettings(struct soap*, _onvifDeviceIO__SetRelayOutputSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__SetRelayOutputSettings(struct soap*, _onvifDeviceIO__SetRelayOutputSettings*);
    @endcode

  - <onvifDeviceIO:SetRelayOutputSettingsResponse> @ref _onvifDeviceIO__SetRelayOutputSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__SetRelayOutputSettingsResponse(struct soap*, _onvifDeviceIO__SetRelayOutputSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__SetRelayOutputSettingsResponse(struct soap*, _onvifDeviceIO__SetRelayOutputSettingsResponse*);
    @endcode

  - <onvifDeviceIO:GetDigitalInputs> @ref _onvifDeviceIO__GetDigitalInputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetDigitalInputs(struct soap*, _onvifDeviceIO__GetDigitalInputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetDigitalInputs(struct soap*, _onvifDeviceIO__GetDigitalInputs*);
    @endcode

  - <onvifDeviceIO:GetDigitalInputsResponse> @ref _onvifDeviceIO__GetDigitalInputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetDigitalInputsResponse(struct soap*, _onvifDeviceIO__GetDigitalInputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetDigitalInputsResponse(struct soap*, _onvifDeviceIO__GetDigitalInputsResponse*);
    @endcode

  - <onvifDeviceIO:GetSerialPorts> @ref _onvifDeviceIO__GetSerialPorts
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetSerialPorts(struct soap*, _onvifDeviceIO__GetSerialPorts*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetSerialPorts(struct soap*, _onvifDeviceIO__GetSerialPorts*);
    @endcode

  - <onvifDeviceIO:GetSerialPortsResponse> @ref _onvifDeviceIO__GetSerialPortsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetSerialPortsResponse(struct soap*, _onvifDeviceIO__GetSerialPortsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetSerialPortsResponse(struct soap*, _onvifDeviceIO__GetSerialPortsResponse*);
    @endcode

  - <onvifDeviceIO:GetSerialPortConfiguration> @ref _onvifDeviceIO__GetSerialPortConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetSerialPortConfiguration(struct soap*, _onvifDeviceIO__GetSerialPortConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetSerialPortConfiguration(struct soap*, _onvifDeviceIO__GetSerialPortConfiguration*);
    @endcode

  - <onvifDeviceIO:GetSerialPortConfigurationResponse> @ref _onvifDeviceIO__GetSerialPortConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetSerialPortConfigurationResponse(struct soap*, _onvifDeviceIO__GetSerialPortConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetSerialPortConfigurationResponse(struct soap*, _onvifDeviceIO__GetSerialPortConfigurationResponse*);
    @endcode

  - <onvifDeviceIO:SetSerialPortConfiguration> @ref _onvifDeviceIO__SetSerialPortConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__SetSerialPortConfiguration(struct soap*, _onvifDeviceIO__SetSerialPortConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__SetSerialPortConfiguration(struct soap*, _onvifDeviceIO__SetSerialPortConfiguration*);
    @endcode

  - <onvifDeviceIO:SetSerialPortConfigurationResponse> @ref _onvifDeviceIO__SetSerialPortConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__SetSerialPortConfigurationResponse(struct soap*, _onvifDeviceIO__SetSerialPortConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__SetSerialPortConfigurationResponse(struct soap*, _onvifDeviceIO__SetSerialPortConfigurationResponse*);
    @endcode

  - <onvifDeviceIO:GetSerialPortConfigurationOptions> @ref _onvifDeviceIO__GetSerialPortConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetSerialPortConfigurationOptions(struct soap*, _onvifDeviceIO__GetSerialPortConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetSerialPortConfigurationOptions(struct soap*, _onvifDeviceIO__GetSerialPortConfigurationOptions*);
    @endcode

  - <onvifDeviceIO:GetSerialPortConfigurationOptionsResponse> @ref _onvifDeviceIO__GetSerialPortConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__GetSerialPortConfigurationOptionsResponse(struct soap*, _onvifDeviceIO__GetSerialPortConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__GetSerialPortConfigurationOptionsResponse(struct soap*, _onvifDeviceIO__GetSerialPortConfigurationOptionsResponse*);
    @endcode

  - <onvifDeviceIO:SendReceiveSerialCommand> @ref _onvifDeviceIO__SendReceiveSerialCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__SendReceiveSerialCommand(struct soap*, _onvifDeviceIO__SendReceiveSerialCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__SendReceiveSerialCommand(struct soap*, _onvifDeviceIO__SendReceiveSerialCommand*);
    @endcode

  - <onvifDeviceIO:SendReceiveSerialCommandResponse> @ref _onvifDeviceIO__SendReceiveSerialCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__onvifDeviceIO__SendReceiveSerialCommandResponse(struct soap*, _onvifDeviceIO__SendReceiveSerialCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__onvifDeviceIO__SendReceiveSerialCommandResponse(struct soap*, _onvifDeviceIO__SendReceiveSerialCommandResponse*);
    @endcode

*/

/* End of onvif.h */
