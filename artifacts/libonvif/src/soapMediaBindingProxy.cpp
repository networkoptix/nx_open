/* soapMediaBindingProxy.cpp
   Generated by gSOAP 2.8.8 from onvif.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapMediaBindingProxy.h"

MediaBindingProxy::MediaBindingProxy()
{	this->soap = soap_new();
	this->own = true;
	MediaBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

MediaBindingProxy::MediaBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->own = false;
	MediaBindingProxy_init(_soap->imode, _soap->omode);
}

MediaBindingProxy::MediaBindingProxy(const char *url)
{	this->soap = soap_new();
	this->own = true;
	MediaBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

MediaBindingProxy::MediaBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	MediaBindingProxy_init(iomode, iomode);
}

MediaBindingProxy::MediaBindingProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->own = true;
	MediaBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

MediaBindingProxy::MediaBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->own = true;
	MediaBindingProxy_init(imode, omode);
}

MediaBindingProxy::~MediaBindingProxy()
{	if (this->own)
		soap_free(this->soap);
}

void MediaBindingProxy::MediaBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
	{"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
	{"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
	{"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
	{"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
	{"wsa", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL, NULL},
	{"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
	{"ns1", "http://www.w3.org/2005/08/addressing", NULL, NULL},
	{"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
	{"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
	{"ns5", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
	{"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
	{"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
	{"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
	{"ns2", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
	{"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
	{"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
	{"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
	{"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
	{"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
	{"tev-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
	{"tev-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
	{"tev-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
	{"tev-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
	{"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
	{"tev-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
	{"tev-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
	{"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
	{"tev-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void MediaBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void MediaBindingProxy::reset()
{	destroy();
	soap_done(this->soap);
	soap_init(this->soap);
	MediaBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void MediaBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void MediaBindingProxy::soap_header(struct _wsse__Security *wsse__Security, char *wsa__MessageID, struct wsa__Relationship *wsa__RelatesTo, struct wsa__EndpointReferenceType *wsa__From, struct wsa__EndpointReferenceType *wsa__ReplyTo, struct wsa__EndpointReferenceType *wsa__FaultTo, char *wsa__To, char *wsa__Action, struct wsdd__AppSequenceType *wsdd__AppSequence)
{	::soap_header(this->soap);
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->wsa__MessageID = wsa__MessageID;
	this->soap->header->wsa__RelatesTo = wsa__RelatesTo;
	this->soap->header->wsa__From = wsa__From;
	this->soap->header->wsa__ReplyTo = wsa__ReplyTo;
	this->soap->header->wsa__FaultTo = wsa__FaultTo;
	this->soap->header->wsa__To = wsa__To;
	this->soap->header->wsa__Action = wsa__Action;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
}

const SOAP_ENV__Header *MediaBindingProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *MediaBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *MediaBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *MediaBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int MediaBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int MediaBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void MediaBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void MediaBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *MediaBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int MediaBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _onvifMedia__GetServiceCapabilities *onvifMedia__GetServiceCapabilities, _onvifMedia__GetServiceCapabilitiesResponse *onvifMedia__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetServiceCapabilities soap_tmp___onvifMedia__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetServiceCapabilities.onvifMedia__GetServiceCapabilities = onvifMedia__GetServiceCapabilities;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetServiceCapabilities(soap, &soap_tmp___onvifMedia__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetServiceCapabilities(soap, &soap_tmp___onvifMedia__GetServiceCapabilities, "-onvifMedia:GetServiceCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetServiceCapabilities(soap, &soap_tmp___onvifMedia__GetServiceCapabilities, "-onvifMedia:GetServiceCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetServiceCapabilitiesResponse)
		return soap_closesock(soap);
	onvifMedia__GetServiceCapabilitiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetServiceCapabilitiesResponse->soap_get(soap, "onvifMedia:GetServiceCapabilitiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSources(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoSources *onvifMedia__GetVideoSources, _onvifMedia__GetVideoSourcesResponse *onvifMedia__GetVideoSourcesResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoSources soap_tmp___onvifMedia__GetVideoSources;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetVideoSources/";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoSources.onvifMedia__GetVideoSources = onvifMedia__GetVideoSources;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoSources(soap, &soap_tmp___onvifMedia__GetVideoSources);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoSources(soap, &soap_tmp___onvifMedia__GetVideoSources, "-onvifMedia:GetVideoSources", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoSources(soap, &soap_tmp___onvifMedia__GetVideoSources, "-onvifMedia:GetVideoSources", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoSourcesResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoSourcesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoSourcesResponse->soap_get(soap, "onvifMedia:GetVideoSourcesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSources(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioSources *onvifMedia__GetAudioSources, _onvifMedia__GetAudioSourcesResponse *onvifMedia__GetAudioSourcesResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioSources soap_tmp___onvifMedia__GetAudioSources;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSources";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioSources.onvifMedia__GetAudioSources = onvifMedia__GetAudioSources;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioSources(soap, &soap_tmp___onvifMedia__GetAudioSources);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioSources(soap, &soap_tmp___onvifMedia__GetAudioSources, "-onvifMedia:GetAudioSources", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioSources(soap, &soap_tmp___onvifMedia__GetAudioSources, "-onvifMedia:GetAudioSources", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioSourcesResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioSourcesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioSourcesResponse->soap_get(soap, "onvifMedia:GetAudioSourcesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputs(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioOutputs *onvifMedia__GetAudioOutputs, _onvifMedia__GetAudioOutputsResponse *onvifMedia__GetAudioOutputsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioOutputs soap_tmp___onvifMedia__GetAudioOutputs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioOutputs.onvifMedia__GetAudioOutputs = onvifMedia__GetAudioOutputs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioOutputs(soap, &soap_tmp___onvifMedia__GetAudioOutputs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioOutputs(soap, &soap_tmp___onvifMedia__GetAudioOutputs, "-onvifMedia:GetAudioOutputs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioOutputs(soap, &soap_tmp___onvifMedia__GetAudioOutputs, "-onvifMedia:GetAudioOutputs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioOutputsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputsResponse->soap_get(soap, "onvifMedia:GetAudioOutputsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::CreateProfile(const char *endpoint, const char *soap_action, _onvifMedia__CreateProfile *onvifMedia__CreateProfile, _onvifMedia__CreateProfileResponse *onvifMedia__CreateProfileResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__CreateProfile soap_tmp___onvifMedia__CreateProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/CreateProfile";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__CreateProfile.onvifMedia__CreateProfile = onvifMedia__CreateProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__CreateProfile(soap, &soap_tmp___onvifMedia__CreateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__CreateProfile(soap, &soap_tmp___onvifMedia__CreateProfile, "-onvifMedia:CreateProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__CreateProfile(soap, &soap_tmp___onvifMedia__CreateProfile, "-onvifMedia:CreateProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__CreateProfileResponse)
		return soap_closesock(soap);
	onvifMedia__CreateProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__CreateProfileResponse->soap_get(soap, "onvifMedia:CreateProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetProfile(const char *endpoint, const char *soap_action, _onvifMedia__GetProfile *onvifMedia__GetProfile, _onvifMedia__GetProfileResponse *onvifMedia__GetProfileResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetProfile soap_tmp___onvifMedia__GetProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetProfile/";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetProfile.onvifMedia__GetProfile = onvifMedia__GetProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetProfile(soap, &soap_tmp___onvifMedia__GetProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetProfile(soap, &soap_tmp___onvifMedia__GetProfile, "-onvifMedia:GetProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetProfile(soap, &soap_tmp___onvifMedia__GetProfile, "-onvifMedia:GetProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetProfileResponse)
		return soap_closesock(soap);
	onvifMedia__GetProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetProfileResponse->soap_get(soap, "onvifMedia:GetProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetProfiles(const char *endpoint, const char *soap_action, _onvifMedia__GetProfiles *onvifMedia__GetProfiles, _onvifMedia__GetProfilesResponse *onvifMedia__GetProfilesResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetProfiles soap_tmp___onvifMedia__GetProfiles;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetProfiles";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetProfiles.onvifMedia__GetProfiles = onvifMedia__GetProfiles;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetProfiles(soap, &soap_tmp___onvifMedia__GetProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetProfiles(soap, &soap_tmp___onvifMedia__GetProfiles, "-onvifMedia:GetProfiles", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetProfiles(soap, &soap_tmp___onvifMedia__GetProfiles, "-onvifMedia:GetProfiles", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetProfilesResponse)
		return soap_closesock(soap);
	onvifMedia__GetProfilesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetProfilesResponse->soap_get(soap, "onvifMedia:GetProfilesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddVideoEncoderConfiguration *onvifMedia__AddVideoEncoderConfiguration, _onvifMedia__AddVideoEncoderConfigurationResponse *onvifMedia__AddVideoEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddVideoEncoderConfiguration soap_tmp___onvifMedia__AddVideoEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddVideoEncoderConfiguration.onvifMedia__AddVideoEncoderConfiguration = onvifMedia__AddVideoEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddVideoEncoderConfiguration, "-onvifMedia:AddVideoEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddVideoEncoderConfiguration, "-onvifMedia:AddVideoEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddVideoEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddVideoEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddVideoEncoderConfigurationResponse->soap_get(soap, "onvifMedia:AddVideoEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddVideoSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddVideoSourceConfiguration *onvifMedia__AddVideoSourceConfiguration, _onvifMedia__AddVideoSourceConfigurationResponse *onvifMedia__AddVideoSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddVideoSourceConfiguration soap_tmp___onvifMedia__AddVideoSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddVideoSourceConfiguration.onvifMedia__AddVideoSourceConfiguration = onvifMedia__AddVideoSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__AddVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__AddVideoSourceConfiguration, "-onvifMedia:AddVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__AddVideoSourceConfiguration, "-onvifMedia:AddVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddVideoSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddVideoSourceConfigurationResponse->soap_get(soap, "onvifMedia:AddVideoSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddAudioEncoderConfiguration *onvifMedia__AddAudioEncoderConfiguration, _onvifMedia__AddAudioEncoderConfigurationResponse *onvifMedia__AddAudioEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddAudioEncoderConfiguration soap_tmp___onvifMedia__AddAudioEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddAudioEncoderConfiguration.onvifMedia__AddAudioEncoderConfiguration = onvifMedia__AddAudioEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioEncoderConfiguration, "-onvifMedia:AddAudioEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioEncoderConfiguration, "-onvifMedia:AddAudioEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddAudioEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddAudioEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddAudioEncoderConfigurationResponse->soap_get(soap, "onvifMedia:AddAudioEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddAudioSourceConfiguration *onvifMedia__AddAudioSourceConfiguration, _onvifMedia__AddAudioSourceConfigurationResponse *onvifMedia__AddAudioSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddAudioSourceConfiguration soap_tmp___onvifMedia__AddAudioSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddAudioSourceConfiguration.onvifMedia__AddAudioSourceConfiguration = onvifMedia__AddAudioSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__AddAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__AddAudioSourceConfiguration, "-onvifMedia:AddAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__AddAudioSourceConfiguration, "-onvifMedia:AddAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddAudioSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddAudioSourceConfigurationResponse->soap_get(soap, "onvifMedia:AddAudioSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddPTZConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddPTZConfiguration *onvifMedia__AddPTZConfiguration, _onvifMedia__AddPTZConfigurationResponse *onvifMedia__AddPTZConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddPTZConfiguration soap_tmp___onvifMedia__AddPTZConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddPTZConfiguration.onvifMedia__AddPTZConfiguration = onvifMedia__AddPTZConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddPTZConfiguration(soap, &soap_tmp___onvifMedia__AddPTZConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddPTZConfiguration(soap, &soap_tmp___onvifMedia__AddPTZConfiguration, "-onvifMedia:AddPTZConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddPTZConfiguration(soap, &soap_tmp___onvifMedia__AddPTZConfiguration, "-onvifMedia:AddPTZConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddPTZConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddPTZConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddPTZConfigurationResponse->soap_get(soap, "onvifMedia:AddPTZConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddVideoAnalyticsConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddVideoAnalyticsConfiguration *onvifMedia__AddVideoAnalyticsConfiguration, _onvifMedia__AddVideoAnalyticsConfigurationResponse *onvifMedia__AddVideoAnalyticsConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddVideoAnalyticsConfiguration soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration.onvifMedia__AddVideoAnalyticsConfiguration = onvifMedia__AddVideoAnalyticsConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration, "-onvifMedia:AddVideoAnalyticsConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration, "-onvifMedia:AddVideoAnalyticsConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddVideoAnalyticsConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddVideoAnalyticsConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddVideoAnalyticsConfigurationResponse->soap_get(soap, "onvifMedia:AddVideoAnalyticsConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddMetadataConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddMetadataConfiguration *onvifMedia__AddMetadataConfiguration, _onvifMedia__AddMetadataConfigurationResponse *onvifMedia__AddMetadataConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddMetadataConfiguration soap_tmp___onvifMedia__AddMetadataConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddMetadataConfiguration.onvifMedia__AddMetadataConfiguration = onvifMedia__AddMetadataConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddMetadataConfiguration(soap, &soap_tmp___onvifMedia__AddMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddMetadataConfiguration(soap, &soap_tmp___onvifMedia__AddMetadataConfiguration, "-onvifMedia:AddMetadataConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddMetadataConfiguration(soap, &soap_tmp___onvifMedia__AddMetadataConfiguration, "-onvifMedia:AddMetadataConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddMetadataConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddMetadataConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddMetadataConfigurationResponse->soap_get(soap, "onvifMedia:AddMetadataConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioOutputConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddAudioOutputConfiguration *onvifMedia__AddAudioOutputConfiguration, _onvifMedia__AddAudioOutputConfigurationResponse *onvifMedia__AddAudioOutputConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddAudioOutputConfiguration soap_tmp___onvifMedia__AddAudioOutputConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddAudioOutputConfiguration.onvifMedia__AddAudioOutputConfiguration = onvifMedia__AddAudioOutputConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__AddAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__AddAudioOutputConfiguration, "-onvifMedia:AddAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__AddAudioOutputConfiguration, "-onvifMedia:AddAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddAudioOutputConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddAudioOutputConfigurationResponse->soap_get(soap, "onvifMedia:AddAudioOutputConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddAudioDecoderConfiguration *onvifMedia__AddAudioDecoderConfiguration, _onvifMedia__AddAudioDecoderConfigurationResponse *onvifMedia__AddAudioDecoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddAudioDecoderConfiguration soap_tmp___onvifMedia__AddAudioDecoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddAudioDecoderConfiguration.onvifMedia__AddAudioDecoderConfiguration = onvifMedia__AddAudioDecoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioDecoderConfiguration, "-onvifMedia:AddAudioDecoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioDecoderConfiguration, "-onvifMedia:AddAudioDecoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddAudioDecoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddAudioDecoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddAudioDecoderConfigurationResponse->soap_get(soap, "onvifMedia:AddAudioDecoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveVideoEncoderConfiguration *onvifMedia__RemoveVideoEncoderConfiguration, _onvifMedia__RemoveVideoEncoderConfigurationResponse *onvifMedia__RemoveVideoEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveVideoEncoderConfiguration soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration.onvifMedia__RemoveVideoEncoderConfiguration = onvifMedia__RemoveVideoEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration, "-onvifMedia:RemoveVideoEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration, "-onvifMedia:RemoveVideoEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveVideoEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveVideoEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveVideoEncoderConfigurationResponse->soap_get(soap, "onvifMedia:RemoveVideoEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveVideoSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveVideoSourceConfiguration *onvifMedia__RemoveVideoSourceConfiguration, _onvifMedia__RemoveVideoSourceConfigurationResponse *onvifMedia__RemoveVideoSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveVideoSourceConfiguration soap_tmp___onvifMedia__RemoveVideoSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveVideoSourceConfiguration.onvifMedia__RemoveVideoSourceConfiguration = onvifMedia__RemoveVideoSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoSourceConfiguration, "-onvifMedia:RemoveVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoSourceConfiguration, "-onvifMedia:RemoveVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveVideoSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveVideoSourceConfigurationResponse->soap_get(soap, "onvifMedia:RemoveVideoSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveAudioEncoderConfiguration *onvifMedia__RemoveAudioEncoderConfiguration, _onvifMedia__RemoveAudioEncoderConfigurationResponse *onvifMedia__RemoveAudioEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveAudioEncoderConfiguration soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration.onvifMedia__RemoveAudioEncoderConfiguration = onvifMedia__RemoveAudioEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration, "-onvifMedia:RemoveAudioEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration, "-onvifMedia:RemoveAudioEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveAudioEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveAudioEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveAudioEncoderConfigurationResponse->soap_get(soap, "onvifMedia:RemoveAudioEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveAudioSourceConfiguration *onvifMedia__RemoveAudioSourceConfiguration, _onvifMedia__RemoveAudioSourceConfigurationResponse *onvifMedia__RemoveAudioSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveAudioSourceConfiguration soap_tmp___onvifMedia__RemoveAudioSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveAudioSourceConfiguration.onvifMedia__RemoveAudioSourceConfiguration = onvifMedia__RemoveAudioSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioSourceConfiguration, "-onvifMedia:RemoveAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioSourceConfiguration, "-onvifMedia:RemoveAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveAudioSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveAudioSourceConfigurationResponse->soap_get(soap, "onvifMedia:RemoveAudioSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemovePTZConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemovePTZConfiguration *onvifMedia__RemovePTZConfiguration, _onvifMedia__RemovePTZConfigurationResponse *onvifMedia__RemovePTZConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemovePTZConfiguration soap_tmp___onvifMedia__RemovePTZConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemovePTZConfiguration.onvifMedia__RemovePTZConfiguration = onvifMedia__RemovePTZConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemovePTZConfiguration(soap, &soap_tmp___onvifMedia__RemovePTZConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemovePTZConfiguration(soap, &soap_tmp___onvifMedia__RemovePTZConfiguration, "-onvifMedia:RemovePTZConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemovePTZConfiguration(soap, &soap_tmp___onvifMedia__RemovePTZConfiguration, "-onvifMedia:RemovePTZConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemovePTZConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemovePTZConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemovePTZConfigurationResponse->soap_get(soap, "onvifMedia:RemovePTZConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveVideoAnalyticsConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveVideoAnalyticsConfiguration *onvifMedia__RemoveVideoAnalyticsConfiguration, _onvifMedia__RemoveVideoAnalyticsConfigurationResponse *onvifMedia__RemoveVideoAnalyticsConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveVideoAnalyticsConfiguration soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration.onvifMedia__RemoveVideoAnalyticsConfiguration = onvifMedia__RemoveVideoAnalyticsConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration, "-onvifMedia:RemoveVideoAnalyticsConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration, "-onvifMedia:RemoveVideoAnalyticsConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveVideoAnalyticsConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveVideoAnalyticsConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveVideoAnalyticsConfigurationResponse->soap_get(soap, "onvifMedia:RemoveVideoAnalyticsConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveMetadataConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveMetadataConfiguration *onvifMedia__RemoveMetadataConfiguration, _onvifMedia__RemoveMetadataConfigurationResponse *onvifMedia__RemoveMetadataConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveMetadataConfiguration soap_tmp___onvifMedia__RemoveMetadataConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveMetadataConfiguration.onvifMedia__RemoveMetadataConfiguration = onvifMedia__RemoveMetadataConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveMetadataConfiguration(soap, &soap_tmp___onvifMedia__RemoveMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveMetadataConfiguration(soap, &soap_tmp___onvifMedia__RemoveMetadataConfiguration, "-onvifMedia:RemoveMetadataConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveMetadataConfiguration(soap, &soap_tmp___onvifMedia__RemoveMetadataConfiguration, "-onvifMedia:RemoveMetadataConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveMetadataConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveMetadataConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveMetadataConfigurationResponse->soap_get(soap, "onvifMedia:RemoveMetadataConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioOutputConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveAudioOutputConfiguration *onvifMedia__RemoveAudioOutputConfiguration, _onvifMedia__RemoveAudioOutputConfigurationResponse *onvifMedia__RemoveAudioOutputConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveAudioOutputConfiguration soap_tmp___onvifMedia__RemoveAudioOutputConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveAudioOutputConfiguration.onvifMedia__RemoveAudioOutputConfiguration = onvifMedia__RemoveAudioOutputConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioOutputConfiguration, "-onvifMedia:RemoveAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioOutputConfiguration, "-onvifMedia:RemoveAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveAudioOutputConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveAudioOutputConfigurationResponse->soap_get(soap, "onvifMedia:RemoveAudioOutputConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveAudioDecoderConfiguration *onvifMedia__RemoveAudioDecoderConfiguration, _onvifMedia__RemoveAudioDecoderConfigurationResponse *onvifMedia__RemoveAudioDecoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveAudioDecoderConfiguration soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration.onvifMedia__RemoveAudioDecoderConfiguration = onvifMedia__RemoveAudioDecoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration, "-onvifMedia:RemoveAudioDecoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration, "-onvifMedia:RemoveAudioDecoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveAudioDecoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveAudioDecoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveAudioDecoderConfigurationResponse->soap_get(soap, "onvifMedia:RemoveAudioDecoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::DeleteProfile(const char *endpoint, const char *soap_action, _onvifMedia__DeleteProfile *onvifMedia__DeleteProfile, _onvifMedia__DeleteProfileResponse *onvifMedia__DeleteProfileResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__DeleteProfile soap_tmp___onvifMedia__DeleteProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/DeleteProfile";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__DeleteProfile.onvifMedia__DeleteProfile = onvifMedia__DeleteProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__DeleteProfile(soap, &soap_tmp___onvifMedia__DeleteProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__DeleteProfile(soap, &soap_tmp___onvifMedia__DeleteProfile, "-onvifMedia:DeleteProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__DeleteProfile(soap, &soap_tmp___onvifMedia__DeleteProfile, "-onvifMedia:DeleteProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__DeleteProfileResponse)
		return soap_closesock(soap);
	onvifMedia__DeleteProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__DeleteProfileResponse->soap_get(soap, "onvifMedia:DeleteProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSourceConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoSourceConfigurations *onvifMedia__GetVideoSourceConfigurations, _onvifMedia__GetVideoSourceConfigurationsResponse *onvifMedia__GetVideoSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoSourceConfigurations soap_tmp___onvifMedia__GetVideoSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoSourceConfigurations.onvifMedia__GetVideoSourceConfigurations = onvifMedia__GetVideoSourceConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurations, "-onvifMedia:GetVideoSourceConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurations, "-onvifMedia:GetVideoSourceConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoSourceConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoSourceConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoSourceConfigurationsResponse->soap_get(soap, "onvifMedia:GetVideoSourceConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoEncoderConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoEncoderConfigurations *onvifMedia__GetVideoEncoderConfigurations, _onvifMedia__GetVideoEncoderConfigurationsResponse *onvifMedia__GetVideoEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoEncoderConfigurations soap_tmp___onvifMedia__GetVideoEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoEncoderConfigurations.onvifMedia__GetVideoEncoderConfigurations = onvifMedia__GetVideoEncoderConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurations, "-onvifMedia:GetVideoEncoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurations, "-onvifMedia:GetVideoEncoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoEncoderConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoEncoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoEncoderConfigurationsResponse->soap_get(soap, "onvifMedia:GetVideoEncoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSourceConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioSourceConfigurations *onvifMedia__GetAudioSourceConfigurations, _onvifMedia__GetAudioSourceConfigurationsResponse *onvifMedia__GetAudioSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioSourceConfigurations soap_tmp___onvifMedia__GetAudioSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioSourceConfigurations.onvifMedia__GetAudioSourceConfigurations = onvifMedia__GetAudioSourceConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurations, "-onvifMedia:GetAudioSourceConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurations, "-onvifMedia:GetAudioSourceConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioSourceConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioSourceConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioSourceConfigurationsResponse->soap_get(soap, "onvifMedia:GetAudioSourceConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioEncoderConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioEncoderConfigurations *onvifMedia__GetAudioEncoderConfigurations, _onvifMedia__GetAudioEncoderConfigurationsResponse *onvifMedia__GetAudioEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioEncoderConfigurations soap_tmp___onvifMedia__GetAudioEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioEncoderConfigurations.onvifMedia__GetAudioEncoderConfigurations = onvifMedia__GetAudioEncoderConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurations, "-onvifMedia:GetAudioEncoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurations, "-onvifMedia:GetAudioEncoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioEncoderConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioEncoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioEncoderConfigurationsResponse->soap_get(soap, "onvifMedia:GetAudioEncoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoAnalyticsConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoAnalyticsConfigurations *onvifMedia__GetVideoAnalyticsConfigurations, _onvifMedia__GetVideoAnalyticsConfigurationsResponse *onvifMedia__GetVideoAnalyticsConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoAnalyticsConfigurations soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations.onvifMedia__GetVideoAnalyticsConfigurations = onvifMedia__GetVideoAnalyticsConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations, "-onvifMedia:GetVideoAnalyticsConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations, "-onvifMedia:GetVideoAnalyticsConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoAnalyticsConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoAnalyticsConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoAnalyticsConfigurationsResponse->soap_get(soap, "onvifMedia:GetVideoAnalyticsConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetMetadataConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetMetadataConfigurations *onvifMedia__GetMetadataConfigurations, _onvifMedia__GetMetadataConfigurationsResponse *onvifMedia__GetMetadataConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetMetadataConfigurations soap_tmp___onvifMedia__GetMetadataConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetMetadataConfigurations.onvifMedia__GetMetadataConfigurations = onvifMedia__GetMetadataConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetMetadataConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetMetadataConfigurations, "-onvifMedia:GetMetadataConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetMetadataConfigurations, "-onvifMedia:GetMetadataConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetMetadataConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetMetadataConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetMetadataConfigurationsResponse->soap_get(soap, "onvifMedia:GetMetadataConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioOutputConfigurations *onvifMedia__GetAudioOutputConfigurations, _onvifMedia__GetAudioOutputConfigurationsResponse *onvifMedia__GetAudioOutputConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioOutputConfigurations soap_tmp___onvifMedia__GetAudioOutputConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioOutputConfigurations.onvifMedia__GetAudioOutputConfigurations = onvifMedia__GetAudioOutputConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurations, "-onvifMedia:GetAudioOutputConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurations, "-onvifMedia:GetAudioOutputConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioOutputConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputConfigurationsResponse->soap_get(soap, "onvifMedia:GetAudioOutputConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioDecoderConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioDecoderConfigurations *onvifMedia__GetAudioDecoderConfigurations, _onvifMedia__GetAudioDecoderConfigurationsResponse *onvifMedia__GetAudioDecoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioDecoderConfigurations soap_tmp___onvifMedia__GetAudioDecoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioDecoderConfigurations.onvifMedia__GetAudioDecoderConfigurations = onvifMedia__GetAudioDecoderConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurations, "-onvifMedia:GetAudioDecoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurations, "-onvifMedia:GetAudioDecoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioDecoderConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioDecoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioDecoderConfigurationsResponse->soap_get(soap, "onvifMedia:GetAudioDecoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoSourceConfiguration *onvifMedia__GetVideoSourceConfiguration, _onvifMedia__GetVideoSourceConfigurationResponse *onvifMedia__GetVideoSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoSourceConfiguration soap_tmp___onvifMedia__GetVideoSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoSourceConfiguration.onvifMedia__GetVideoSourceConfiguration = onvifMedia__GetVideoSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__GetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__GetVideoSourceConfiguration, "-onvifMedia:GetVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__GetVideoSourceConfiguration, "-onvifMedia:GetVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoSourceConfigurationResponse->soap_get(soap, "onvifMedia:GetVideoSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoEncoderConfiguration *onvifMedia__GetVideoEncoderConfiguration, _onvifMedia__GetVideoEncoderConfigurationResponse *onvifMedia__GetVideoEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoEncoderConfiguration soap_tmp___onvifMedia__GetVideoEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoEncoderConfiguration.onvifMedia__GetVideoEncoderConfiguration = onvifMedia__GetVideoEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfiguration, "-onvifMedia:GetVideoEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfiguration, "-onvifMedia:GetVideoEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoEncoderConfigurationResponse->soap_get(soap, "onvifMedia:GetVideoEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioSourceConfiguration *onvifMedia__GetAudioSourceConfiguration, _onvifMedia__GetAudioSourceConfigurationResponse *onvifMedia__GetAudioSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioSourceConfiguration soap_tmp___onvifMedia__GetAudioSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioSourceConfiguration.onvifMedia__GetAudioSourceConfiguration = onvifMedia__GetAudioSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__GetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__GetAudioSourceConfiguration, "-onvifMedia:GetAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__GetAudioSourceConfiguration, "-onvifMedia:GetAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioSourceConfigurationResponse->soap_get(soap, "onvifMedia:GetAudioSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioEncoderConfiguration *onvifMedia__GetAudioEncoderConfiguration, _onvifMedia__GetAudioEncoderConfigurationResponse *onvifMedia__GetAudioEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioEncoderConfiguration soap_tmp___onvifMedia__GetAudioEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioEncoderConfiguration.onvifMedia__GetAudioEncoderConfiguration = onvifMedia__GetAudioEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfiguration, "-onvifMedia:GetAudioEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfiguration, "-onvifMedia:GetAudioEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioEncoderConfigurationResponse->soap_get(soap, "onvifMedia:GetAudioEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoAnalyticsConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoAnalyticsConfiguration *onvifMedia__GetVideoAnalyticsConfiguration, _onvifMedia__GetVideoAnalyticsConfigurationResponse *onvifMedia__GetVideoAnalyticsConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoAnalyticsConfiguration soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration.onvifMedia__GetVideoAnalyticsConfiguration = onvifMedia__GetVideoAnalyticsConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration, "-onvifMedia:GetVideoAnalyticsConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration, "-onvifMedia:GetVideoAnalyticsConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoAnalyticsConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoAnalyticsConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoAnalyticsConfigurationResponse->soap_get(soap, "onvifMedia:GetVideoAnalyticsConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetMetadataConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetMetadataConfiguration *onvifMedia__GetMetadataConfiguration, _onvifMedia__GetMetadataConfigurationResponse *onvifMedia__GetMetadataConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetMetadataConfiguration soap_tmp___onvifMedia__GetMetadataConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetMetadataConfiguration.onvifMedia__GetMetadataConfiguration = onvifMedia__GetMetadataConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetMetadataConfiguration(soap, &soap_tmp___onvifMedia__GetMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetMetadataConfiguration(soap, &soap_tmp___onvifMedia__GetMetadataConfiguration, "-onvifMedia:GetMetadataConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetMetadataConfiguration(soap, &soap_tmp___onvifMedia__GetMetadataConfiguration, "-onvifMedia:GetMetadataConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetMetadataConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetMetadataConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetMetadataConfigurationResponse->soap_get(soap, "onvifMedia:GetMetadataConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioOutputConfiguration *onvifMedia__GetAudioOutputConfiguration, _onvifMedia__GetAudioOutputConfigurationResponse *onvifMedia__GetAudioOutputConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioOutputConfiguration soap_tmp___onvifMedia__GetAudioOutputConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioOutputConfiguration.onvifMedia__GetAudioOutputConfiguration = onvifMedia__GetAudioOutputConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__GetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__GetAudioOutputConfiguration, "-onvifMedia:GetAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__GetAudioOutputConfiguration, "-onvifMedia:GetAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputConfigurationResponse->soap_get(soap, "onvifMedia:GetAudioOutputConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioDecoderConfiguration *onvifMedia__GetAudioDecoderConfiguration, _onvifMedia__GetAudioDecoderConfigurationResponse *onvifMedia__GetAudioDecoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioDecoderConfiguration soap_tmp___onvifMedia__GetAudioDecoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioDecoderConfiguration.onvifMedia__GetAudioDecoderConfiguration = onvifMedia__GetAudioDecoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfiguration, "-onvifMedia:GetAudioDecoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfiguration, "-onvifMedia:GetAudioDecoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioDecoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioDecoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioDecoderConfigurationResponse->soap_get(soap, "onvifMedia:GetAudioDecoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleVideoEncoderConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleVideoEncoderConfigurations *onvifMedia__GetCompatibleVideoEncoderConfigurations, _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse *onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleVideoEncoderConfigurations soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations.onvifMedia__GetCompatibleVideoEncoderConfigurations = onvifMedia__GetCompatibleVideoEncoderConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations, "-onvifMedia:GetCompatibleVideoEncoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations, "-onvifMedia:GetCompatibleVideoEncoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleVideoEncoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleVideoSourceConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleVideoSourceConfigurations *onvifMedia__GetCompatibleVideoSourceConfigurations, _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse *onvifMedia__GetCompatibleVideoSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleVideoSourceConfigurations soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations.onvifMedia__GetCompatibleVideoSourceConfigurations = onvifMedia__GetCompatibleVideoSourceConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations, "-onvifMedia:GetCompatibleVideoSourceConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations, "-onvifMedia:GetCompatibleVideoSourceConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleVideoSourceConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleVideoSourceConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleVideoSourceConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleVideoSourceConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioEncoderConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleAudioEncoderConfigurations *onvifMedia__GetCompatibleAudioEncoderConfigurations, _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse *onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleAudioEncoderConfigurations soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations.onvifMedia__GetCompatibleAudioEncoderConfigurations = onvifMedia__GetCompatibleAudioEncoderConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations, "-onvifMedia:GetCompatibleAudioEncoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations, "-onvifMedia:GetCompatibleAudioEncoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleAudioEncoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioSourceConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleAudioSourceConfigurations *onvifMedia__GetCompatibleAudioSourceConfigurations, _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse *onvifMedia__GetCompatibleAudioSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleAudioSourceConfigurations soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations.onvifMedia__GetCompatibleAudioSourceConfigurations = onvifMedia__GetCompatibleAudioSourceConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations, "-onvifMedia:GetCompatibleAudioSourceConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations, "-onvifMedia:GetCompatibleAudioSourceConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleAudioSourceConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioSourceConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioSourceConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleAudioSourceConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleVideoAnalyticsConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleVideoAnalyticsConfigurations *onvifMedia__GetCompatibleVideoAnalyticsConfigurations, _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse *onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleVideoAnalyticsConfigurations soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations.onvifMedia__GetCompatibleVideoAnalyticsConfigurations = onvifMedia__GetCompatibleVideoAnalyticsConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations, "-onvifMedia:GetCompatibleVideoAnalyticsConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations, "-onvifMedia:GetCompatibleVideoAnalyticsConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleVideoAnalyticsConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleMetadataConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleMetadataConfigurations *onvifMedia__GetCompatibleMetadataConfigurations, _onvifMedia__GetCompatibleMetadataConfigurationsResponse *onvifMedia__GetCompatibleMetadataConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleMetadataConfigurations soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations.onvifMedia__GetCompatibleMetadataConfigurations = onvifMedia__GetCompatibleMetadataConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations, "-onvifMedia:GetCompatibleMetadataConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations, "-onvifMedia:GetCompatibleMetadataConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleMetadataConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleMetadataConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleMetadataConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleMetadataConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioOutputConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleAudioOutputConfigurations *onvifMedia__GetCompatibleAudioOutputConfigurations, _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse *onvifMedia__GetCompatibleAudioOutputConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleAudioOutputConfigurations soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations.onvifMedia__GetCompatibleAudioOutputConfigurations = onvifMedia__GetCompatibleAudioOutputConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations, "-onvifMedia:GetCompatibleAudioOutputConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations, "-onvifMedia:GetCompatibleAudioOutputConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleAudioOutputConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioOutputConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioOutputConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleAudioOutputConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioDecoderConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleAudioDecoderConfigurations *onvifMedia__GetCompatibleAudioDecoderConfigurations, _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse *onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleAudioDecoderConfigurations soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations.onvifMedia__GetCompatibleAudioDecoderConfigurations = onvifMedia__GetCompatibleAudioDecoderConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations, "-onvifMedia:GetCompatibleAudioDecoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations, "-onvifMedia:GetCompatibleAudioDecoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleAudioDecoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetVideoSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetVideoSourceConfiguration *onvifMedia__SetVideoSourceConfiguration, _onvifMedia__SetVideoSourceConfigurationResponse *onvifMedia__SetVideoSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetVideoSourceConfiguration soap_tmp___onvifMedia__SetVideoSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetVideoSourceConfiguration.onvifMedia__SetVideoSourceConfiguration = onvifMedia__SetVideoSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__SetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__SetVideoSourceConfiguration, "-onvifMedia:SetVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__SetVideoSourceConfiguration, "-onvifMedia:SetVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetVideoSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetVideoSourceConfigurationResponse->soap_get(soap, "onvifMedia:SetVideoSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetVideoEncoderConfiguration *onvifMedia__SetVideoEncoderConfiguration, _onvifMedia__SetVideoEncoderConfigurationResponse *onvifMedia__SetVideoEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetVideoEncoderConfiguration soap_tmp___onvifMedia__SetVideoEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetVideoEncoderConfiguration.onvifMedia__SetVideoEncoderConfiguration = onvifMedia__SetVideoEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetVideoEncoderConfiguration, "-onvifMedia:SetVideoEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetVideoEncoderConfiguration, "-onvifMedia:SetVideoEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetVideoEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetVideoEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetVideoEncoderConfigurationResponse->soap_get(soap, "onvifMedia:SetVideoEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetAudioSourceConfiguration *onvifMedia__SetAudioSourceConfiguration, _onvifMedia__SetAudioSourceConfigurationResponse *onvifMedia__SetAudioSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetAudioSourceConfiguration soap_tmp___onvifMedia__SetAudioSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetAudioSourceConfiguration.onvifMedia__SetAudioSourceConfiguration = onvifMedia__SetAudioSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__SetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__SetAudioSourceConfiguration, "-onvifMedia:SetAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__SetAudioSourceConfiguration, "-onvifMedia:SetAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetAudioSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetAudioSourceConfigurationResponse->soap_get(soap, "onvifMedia:SetAudioSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetAudioEncoderConfiguration *onvifMedia__SetAudioEncoderConfiguration, _onvifMedia__SetAudioEncoderConfigurationResponse *onvifMedia__SetAudioEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetAudioEncoderConfiguration soap_tmp___onvifMedia__SetAudioEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetAudioEncoderConfiguration.onvifMedia__SetAudioEncoderConfiguration = onvifMedia__SetAudioEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioEncoderConfiguration, "-onvifMedia:SetAudioEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioEncoderConfiguration, "-onvifMedia:SetAudioEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetAudioEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetAudioEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetAudioEncoderConfigurationResponse->soap_get(soap, "onvifMedia:SetAudioEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetVideoAnalyticsConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetVideoAnalyticsConfiguration *onvifMedia__SetVideoAnalyticsConfiguration, _onvifMedia__SetVideoAnalyticsConfigurationResponse *onvifMedia__SetVideoAnalyticsConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetVideoAnalyticsConfiguration soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration.onvifMedia__SetVideoAnalyticsConfiguration = onvifMedia__SetVideoAnalyticsConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration, "-onvifMedia:SetVideoAnalyticsConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration, "-onvifMedia:SetVideoAnalyticsConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetVideoAnalyticsConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetVideoAnalyticsConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetVideoAnalyticsConfigurationResponse->soap_get(soap, "onvifMedia:SetVideoAnalyticsConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetMetadataConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetMetadataConfiguration *onvifMedia__SetMetadataConfiguration, _onvifMedia__SetMetadataConfigurationResponse *onvifMedia__SetMetadataConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetMetadataConfiguration soap_tmp___onvifMedia__SetMetadataConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetMetadataConfiguration.onvifMedia__SetMetadataConfiguration = onvifMedia__SetMetadataConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetMetadataConfiguration(soap, &soap_tmp___onvifMedia__SetMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetMetadataConfiguration(soap, &soap_tmp___onvifMedia__SetMetadataConfiguration, "-onvifMedia:SetMetadataConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetMetadataConfiguration(soap, &soap_tmp___onvifMedia__SetMetadataConfiguration, "-onvifMedia:SetMetadataConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetMetadataConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetMetadataConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetMetadataConfigurationResponse->soap_get(soap, "onvifMedia:SetMetadataConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioOutputConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetAudioOutputConfiguration *onvifMedia__SetAudioOutputConfiguration, _onvifMedia__SetAudioOutputConfigurationResponse *onvifMedia__SetAudioOutputConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetAudioOutputConfiguration soap_tmp___onvifMedia__SetAudioOutputConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetAudioOutputConfiguration.onvifMedia__SetAudioOutputConfiguration = onvifMedia__SetAudioOutputConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__SetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__SetAudioOutputConfiguration, "-onvifMedia:SetAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__SetAudioOutputConfiguration, "-onvifMedia:SetAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetAudioOutputConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetAudioOutputConfigurationResponse->soap_get(soap, "onvifMedia:SetAudioOutputConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetAudioDecoderConfiguration *onvifMedia__SetAudioDecoderConfiguration, _onvifMedia__SetAudioDecoderConfigurationResponse *onvifMedia__SetAudioDecoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetAudioDecoderConfiguration soap_tmp___onvifMedia__SetAudioDecoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetAudioDecoderConfiguration.onvifMedia__SetAudioDecoderConfiguration = onvifMedia__SetAudioDecoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioDecoderConfiguration, "-onvifMedia:SetAudioDecoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioDecoderConfiguration, "-onvifMedia:SetAudioDecoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetAudioDecoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetAudioDecoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetAudioDecoderConfigurationResponse->soap_get(soap, "onvifMedia:SetAudioDecoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSourceConfigurationOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoSourceConfigurationOptions *onvifMedia__GetVideoSourceConfigurationOptions, _onvifMedia__GetVideoSourceConfigurationOptionsResponse *onvifMedia__GetVideoSourceConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoSourceConfigurationOptions soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions.onvifMedia__GetVideoSourceConfigurationOptions = onvifMedia__GetVideoSourceConfigurationOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions, "-onvifMedia:GetVideoSourceConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions, "-onvifMedia:GetVideoSourceConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoSourceConfigurationOptionsResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoSourceConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoSourceConfigurationOptionsResponse->soap_get(soap, "onvifMedia:GetVideoSourceConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoEncoderConfigurationOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoEncoderConfigurationOptions *onvifMedia__GetVideoEncoderConfigurationOptions, _onvifMedia__GetVideoEncoderConfigurationOptionsResponse *onvifMedia__GetVideoEncoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoEncoderConfigurationOptions soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions.onvifMedia__GetVideoEncoderConfigurationOptions = onvifMedia__GetVideoEncoderConfigurationOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions, "-onvifMedia:GetVideoEncoderConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions, "-onvifMedia:GetVideoEncoderConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoEncoderConfigurationOptionsResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoEncoderConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoEncoderConfigurationOptionsResponse->soap_get(soap, "onvifMedia:GetVideoEncoderConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSourceConfigurationOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioSourceConfigurationOptions *onvifMedia__GetAudioSourceConfigurationOptions, _onvifMedia__GetAudioSourceConfigurationOptionsResponse *onvifMedia__GetAudioSourceConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioSourceConfigurationOptions soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions.onvifMedia__GetAudioSourceConfigurationOptions = onvifMedia__GetAudioSourceConfigurationOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions, "-onvifMedia:GetAudioSourceConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions, "-onvifMedia:GetAudioSourceConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioSourceConfigurationOptionsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioSourceConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioSourceConfigurationOptionsResponse->soap_get(soap, "onvifMedia:GetAudioSourceConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioEncoderConfigurationOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioEncoderConfigurationOptions *onvifMedia__GetAudioEncoderConfigurationOptions, _onvifMedia__GetAudioEncoderConfigurationOptionsResponse *onvifMedia__GetAudioEncoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioEncoderConfigurationOptions soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions.onvifMedia__GetAudioEncoderConfigurationOptions = onvifMedia__GetAudioEncoderConfigurationOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions, "-onvifMedia:GetAudioEncoderConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions, "-onvifMedia:GetAudioEncoderConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioEncoderConfigurationOptionsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioEncoderConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioEncoderConfigurationOptionsResponse->soap_get(soap, "onvifMedia:GetAudioEncoderConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetMetadataConfigurationOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetMetadataConfigurationOptions *onvifMedia__GetMetadataConfigurationOptions, _onvifMedia__GetMetadataConfigurationOptionsResponse *onvifMedia__GetMetadataConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetMetadataConfigurationOptions soap_tmp___onvifMedia__GetMetadataConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetMetadataConfigurationOptions.onvifMedia__GetMetadataConfigurationOptions = onvifMedia__GetMetadataConfigurationOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetMetadataConfigurationOptions(soap, &soap_tmp___onvifMedia__GetMetadataConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetMetadataConfigurationOptions(soap, &soap_tmp___onvifMedia__GetMetadataConfigurationOptions, "-onvifMedia:GetMetadataConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetMetadataConfigurationOptions(soap, &soap_tmp___onvifMedia__GetMetadataConfigurationOptions, "-onvifMedia:GetMetadataConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetMetadataConfigurationOptionsResponse)
		return soap_closesock(soap);
	onvifMedia__GetMetadataConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetMetadataConfigurationOptionsResponse->soap_get(soap, "onvifMedia:GetMetadataConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputConfigurationOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioOutputConfigurationOptions *onvifMedia__GetAudioOutputConfigurationOptions, _onvifMedia__GetAudioOutputConfigurationOptionsResponse *onvifMedia__GetAudioOutputConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioOutputConfigurationOptions soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions.onvifMedia__GetAudioOutputConfigurationOptions = onvifMedia__GetAudioOutputConfigurationOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions, "-onvifMedia:GetAudioOutputConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions, "-onvifMedia:GetAudioOutputConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioOutputConfigurationOptionsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputConfigurationOptionsResponse->soap_get(soap, "onvifMedia:GetAudioOutputConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioDecoderConfigurationOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioDecoderConfigurationOptions *onvifMedia__GetAudioDecoderConfigurationOptions, _onvifMedia__GetAudioDecoderConfigurationOptionsResponse *onvifMedia__GetAudioDecoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioDecoderConfigurationOptions soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions.onvifMedia__GetAudioDecoderConfigurationOptions = onvifMedia__GetAudioDecoderConfigurationOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions, "-onvifMedia:GetAudioDecoderConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions, "-onvifMedia:GetAudioDecoderConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioDecoderConfigurationOptionsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioDecoderConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioDecoderConfigurationOptionsResponse->soap_get(soap, "onvifMedia:GetAudioDecoderConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetGuaranteedNumberOfVideoEncoderInstances(const char *endpoint, const char *soap_action, _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances *onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances, _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse *onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances.onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances = onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances, "-onvifMedia:GetGuaranteedNumberOfVideoEncoderInstances", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances, "-onvifMedia:GetGuaranteedNumberOfVideoEncoderInstances", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse)
		return soap_closesock(soap);
	onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse->soap_get(soap, "onvifMedia:GetGuaranteedNumberOfVideoEncoderInstancesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetStreamUri(const char *endpoint, const char *soap_action, _onvifMedia__GetStreamUri *onvifMedia__GetStreamUri, _onvifMedia__GetStreamUriResponse *onvifMedia__GetStreamUriResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetStreamUri soap_tmp___onvifMedia__GetStreamUri;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetStreamUri";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetStreamUri.onvifMedia__GetStreamUri = onvifMedia__GetStreamUri;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetStreamUri(soap, &soap_tmp___onvifMedia__GetStreamUri);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetStreamUri(soap, &soap_tmp___onvifMedia__GetStreamUri, "-onvifMedia:GetStreamUri", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetStreamUri(soap, &soap_tmp___onvifMedia__GetStreamUri, "-onvifMedia:GetStreamUri", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetStreamUriResponse)
		return soap_closesock(soap);
	onvifMedia__GetStreamUriResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetStreamUriResponse->soap_get(soap, "onvifMedia:GetStreamUriResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::StartMulticastStreaming(const char *endpoint, const char *soap_action, _onvifMedia__StartMulticastStreaming *onvifMedia__StartMulticastStreaming, _onvifMedia__StartMulticastStreamingResponse *onvifMedia__StartMulticastStreamingResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__StartMulticastStreaming soap_tmp___onvifMedia__StartMulticastStreaming;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__StartMulticastStreaming.onvifMedia__StartMulticastStreaming = onvifMedia__StartMulticastStreaming;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__StartMulticastStreaming(soap, &soap_tmp___onvifMedia__StartMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__StartMulticastStreaming(soap, &soap_tmp___onvifMedia__StartMulticastStreaming, "-onvifMedia:StartMulticastStreaming", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__StartMulticastStreaming(soap, &soap_tmp___onvifMedia__StartMulticastStreaming, "-onvifMedia:StartMulticastStreaming", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__StartMulticastStreamingResponse)
		return soap_closesock(soap);
	onvifMedia__StartMulticastStreamingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__StartMulticastStreamingResponse->soap_get(soap, "onvifMedia:StartMulticastStreamingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::StopMulticastStreaming(const char *endpoint, const char *soap_action, _onvifMedia__StopMulticastStreaming *onvifMedia__StopMulticastStreaming, _onvifMedia__StopMulticastStreamingResponse *onvifMedia__StopMulticastStreamingResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__StopMulticastStreaming soap_tmp___onvifMedia__StopMulticastStreaming;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__StopMulticastStreaming.onvifMedia__StopMulticastStreaming = onvifMedia__StopMulticastStreaming;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__StopMulticastStreaming(soap, &soap_tmp___onvifMedia__StopMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__StopMulticastStreaming(soap, &soap_tmp___onvifMedia__StopMulticastStreaming, "-onvifMedia:StopMulticastStreaming", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__StopMulticastStreaming(soap, &soap_tmp___onvifMedia__StopMulticastStreaming, "-onvifMedia:StopMulticastStreaming", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__StopMulticastStreamingResponse)
		return soap_closesock(soap);
	onvifMedia__StopMulticastStreamingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__StopMulticastStreamingResponse->soap_get(soap, "onvifMedia:StopMulticastStreamingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetSynchronizationPoint(const char *endpoint, const char *soap_action, _onvifMedia__SetSynchronizationPoint *onvifMedia__SetSynchronizationPoint, _onvifMedia__SetSynchronizationPointResponse *onvifMedia__SetSynchronizationPointResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetSynchronizationPoint soap_tmp___onvifMedia__SetSynchronizationPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetSynchronizationPoint.onvifMedia__SetSynchronizationPoint = onvifMedia__SetSynchronizationPoint;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetSynchronizationPoint(soap, &soap_tmp___onvifMedia__SetSynchronizationPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetSynchronizationPoint(soap, &soap_tmp___onvifMedia__SetSynchronizationPoint, "-onvifMedia:SetSynchronizationPoint", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetSynchronizationPoint(soap, &soap_tmp___onvifMedia__SetSynchronizationPoint, "-onvifMedia:SetSynchronizationPoint", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetSynchronizationPointResponse)
		return soap_closesock(soap);
	onvifMedia__SetSynchronizationPointResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetSynchronizationPointResponse->soap_get(soap, "onvifMedia:SetSynchronizationPointResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetSnapshotUri(const char *endpoint, const char *soap_action, _onvifMedia__GetSnapshotUri *onvifMedia__GetSnapshotUri, _onvifMedia__GetSnapshotUriResponse *onvifMedia__GetSnapshotUriResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetSnapshotUri soap_tmp___onvifMedia__GetSnapshotUri;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetSnapshotUri.onvifMedia__GetSnapshotUri = onvifMedia__GetSnapshotUri;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetSnapshotUri(soap, &soap_tmp___onvifMedia__GetSnapshotUri);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetSnapshotUri(soap, &soap_tmp___onvifMedia__GetSnapshotUri, "-onvifMedia:GetSnapshotUri", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetSnapshotUri(soap, &soap_tmp___onvifMedia__GetSnapshotUri, "-onvifMedia:GetSnapshotUri", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetSnapshotUriResponse)
		return soap_closesock(soap);
	onvifMedia__GetSnapshotUriResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetSnapshotUriResponse->soap_get(soap, "onvifMedia:GetSnapshotUriResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetServiceCapabilities_(const char *endpoint, const char *soap_action, _onvifMedia__GetServiceCapabilities *onvifMedia__GetServiceCapabilities, _onvifMedia__GetServiceCapabilitiesResponse *onvifMedia__GetServiceCapabilitiesResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetServiceCapabilities_ soap_tmp___onvifMedia__GetServiceCapabilities_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetServiceCapabilities_.onvifMedia__GetServiceCapabilities = onvifMedia__GetServiceCapabilities;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetServiceCapabilities_(soap, &soap_tmp___onvifMedia__GetServiceCapabilities_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetServiceCapabilities_(soap, &soap_tmp___onvifMedia__GetServiceCapabilities_, "-onvifMedia:GetServiceCapabilities", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetServiceCapabilities_(soap, &soap_tmp___onvifMedia__GetServiceCapabilities_, "-onvifMedia:GetServiceCapabilities", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetServiceCapabilitiesResponse)
		return soap_closesock(soap);
	onvifMedia__GetServiceCapabilitiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetServiceCapabilitiesResponse->soap_get(soap, "onvifMedia:GetServiceCapabilitiesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSources_(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoSources *onvifMedia__GetVideoSources, _onvifMedia__GetVideoSourcesResponse *onvifMedia__GetVideoSourcesResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoSources_ soap_tmp___onvifMedia__GetVideoSources_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetVideoSources/";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoSources_.onvifMedia__GetVideoSources = onvifMedia__GetVideoSources;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoSources_(soap, &soap_tmp___onvifMedia__GetVideoSources_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoSources_(soap, &soap_tmp___onvifMedia__GetVideoSources_, "-onvifMedia:GetVideoSources", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoSources_(soap, &soap_tmp___onvifMedia__GetVideoSources_, "-onvifMedia:GetVideoSources", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoSourcesResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoSourcesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoSourcesResponse->soap_get(soap, "onvifMedia:GetVideoSourcesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSources_(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioSources *onvifMedia__GetAudioSources, _onvifMedia__GetAudioSourcesResponse *onvifMedia__GetAudioSourcesResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioSources_ soap_tmp___onvifMedia__GetAudioSources_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSources";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioSources_.onvifMedia__GetAudioSources = onvifMedia__GetAudioSources;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioSources_(soap, &soap_tmp___onvifMedia__GetAudioSources_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioSources_(soap, &soap_tmp___onvifMedia__GetAudioSources_, "-onvifMedia:GetAudioSources", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioSources_(soap, &soap_tmp___onvifMedia__GetAudioSources_, "-onvifMedia:GetAudioSources", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioSourcesResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioSourcesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioSourcesResponse->soap_get(soap, "onvifMedia:GetAudioSourcesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputs_(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioOutputs *onvifMedia__GetAudioOutputs, _onvifMedia__GetAudioOutputsResponse *onvifMedia__GetAudioOutputsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioOutputs_ soap_tmp___onvifMedia__GetAudioOutputs_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioOutputs_.onvifMedia__GetAudioOutputs = onvifMedia__GetAudioOutputs;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioOutputs_(soap, &soap_tmp___onvifMedia__GetAudioOutputs_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioOutputs_(soap, &soap_tmp___onvifMedia__GetAudioOutputs_, "-onvifMedia:GetAudioOutputs", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioOutputs_(soap, &soap_tmp___onvifMedia__GetAudioOutputs_, "-onvifMedia:GetAudioOutputs", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioOutputsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputsResponse->soap_get(soap, "onvifMedia:GetAudioOutputsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::CreateProfile_(const char *endpoint, const char *soap_action, _onvifMedia__CreateProfile *onvifMedia__CreateProfile, _onvifMedia__CreateProfileResponse *onvifMedia__CreateProfileResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__CreateProfile_ soap_tmp___onvifMedia__CreateProfile_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/CreateProfile";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__CreateProfile_.onvifMedia__CreateProfile = onvifMedia__CreateProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__CreateProfile_(soap, &soap_tmp___onvifMedia__CreateProfile_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__CreateProfile_(soap, &soap_tmp___onvifMedia__CreateProfile_, "-onvifMedia:CreateProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__CreateProfile_(soap, &soap_tmp___onvifMedia__CreateProfile_, "-onvifMedia:CreateProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__CreateProfileResponse)
		return soap_closesock(soap);
	onvifMedia__CreateProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__CreateProfileResponse->soap_get(soap, "onvifMedia:CreateProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetProfile_(const char *endpoint, const char *soap_action, _onvifMedia__GetProfile *onvifMedia__GetProfile, _onvifMedia__GetProfileResponse *onvifMedia__GetProfileResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetProfile_ soap_tmp___onvifMedia__GetProfile_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetProfile/";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetProfile_.onvifMedia__GetProfile = onvifMedia__GetProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetProfile_(soap, &soap_tmp___onvifMedia__GetProfile_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetProfile_(soap, &soap_tmp___onvifMedia__GetProfile_, "-onvifMedia:GetProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetProfile_(soap, &soap_tmp___onvifMedia__GetProfile_, "-onvifMedia:GetProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetProfileResponse)
		return soap_closesock(soap);
	onvifMedia__GetProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetProfileResponse->soap_get(soap, "onvifMedia:GetProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetProfiles_(const char *endpoint, const char *soap_action, _onvifMedia__GetProfiles *onvifMedia__GetProfiles, _onvifMedia__GetProfilesResponse *onvifMedia__GetProfilesResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetProfiles_ soap_tmp___onvifMedia__GetProfiles_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetProfiles";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetProfiles_.onvifMedia__GetProfiles = onvifMedia__GetProfiles;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetProfiles_(soap, &soap_tmp___onvifMedia__GetProfiles_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetProfiles_(soap, &soap_tmp___onvifMedia__GetProfiles_, "-onvifMedia:GetProfiles", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetProfiles_(soap, &soap_tmp___onvifMedia__GetProfiles_, "-onvifMedia:GetProfiles", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetProfilesResponse)
		return soap_closesock(soap);
	onvifMedia__GetProfilesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetProfilesResponse->soap_get(soap, "onvifMedia:GetProfilesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddVideoEncoderConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__AddVideoEncoderConfiguration *onvifMedia__AddVideoEncoderConfiguration, _onvifMedia__AddVideoEncoderConfigurationResponse *onvifMedia__AddVideoEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddVideoEncoderConfiguration_ soap_tmp___onvifMedia__AddVideoEncoderConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddVideoEncoderConfiguration_.onvifMedia__AddVideoEncoderConfiguration = onvifMedia__AddVideoEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddVideoEncoderConfiguration_(soap, &soap_tmp___onvifMedia__AddVideoEncoderConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddVideoEncoderConfiguration_(soap, &soap_tmp___onvifMedia__AddVideoEncoderConfiguration_, "-onvifMedia:AddVideoEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddVideoEncoderConfiguration_(soap, &soap_tmp___onvifMedia__AddVideoEncoderConfiguration_, "-onvifMedia:AddVideoEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddVideoEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddVideoEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddVideoEncoderConfigurationResponse->soap_get(soap, "onvifMedia:AddVideoEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddVideoSourceConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__AddVideoSourceConfiguration *onvifMedia__AddVideoSourceConfiguration, _onvifMedia__AddVideoSourceConfigurationResponse *onvifMedia__AddVideoSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddVideoSourceConfiguration_ soap_tmp___onvifMedia__AddVideoSourceConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddVideoSourceConfiguration_.onvifMedia__AddVideoSourceConfiguration = onvifMedia__AddVideoSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddVideoSourceConfiguration_(soap, &soap_tmp___onvifMedia__AddVideoSourceConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddVideoSourceConfiguration_(soap, &soap_tmp___onvifMedia__AddVideoSourceConfiguration_, "-onvifMedia:AddVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddVideoSourceConfiguration_(soap, &soap_tmp___onvifMedia__AddVideoSourceConfiguration_, "-onvifMedia:AddVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddVideoSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddVideoSourceConfigurationResponse->soap_get(soap, "onvifMedia:AddVideoSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioEncoderConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__AddAudioEncoderConfiguration *onvifMedia__AddAudioEncoderConfiguration, _onvifMedia__AddAudioEncoderConfigurationResponse *onvifMedia__AddAudioEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddAudioEncoderConfiguration_ soap_tmp___onvifMedia__AddAudioEncoderConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddAudioEncoderConfiguration_.onvifMedia__AddAudioEncoderConfiguration = onvifMedia__AddAudioEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddAudioEncoderConfiguration_(soap, &soap_tmp___onvifMedia__AddAudioEncoderConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddAudioEncoderConfiguration_(soap, &soap_tmp___onvifMedia__AddAudioEncoderConfiguration_, "-onvifMedia:AddAudioEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddAudioEncoderConfiguration_(soap, &soap_tmp___onvifMedia__AddAudioEncoderConfiguration_, "-onvifMedia:AddAudioEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddAudioEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddAudioEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddAudioEncoderConfigurationResponse->soap_get(soap, "onvifMedia:AddAudioEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioSourceConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__AddAudioSourceConfiguration *onvifMedia__AddAudioSourceConfiguration, _onvifMedia__AddAudioSourceConfigurationResponse *onvifMedia__AddAudioSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddAudioSourceConfiguration_ soap_tmp___onvifMedia__AddAudioSourceConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddAudioSourceConfiguration_.onvifMedia__AddAudioSourceConfiguration = onvifMedia__AddAudioSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddAudioSourceConfiguration_(soap, &soap_tmp___onvifMedia__AddAudioSourceConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddAudioSourceConfiguration_(soap, &soap_tmp___onvifMedia__AddAudioSourceConfiguration_, "-onvifMedia:AddAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddAudioSourceConfiguration_(soap, &soap_tmp___onvifMedia__AddAudioSourceConfiguration_, "-onvifMedia:AddAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddAudioSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddAudioSourceConfigurationResponse->soap_get(soap, "onvifMedia:AddAudioSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddPTZConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__AddPTZConfiguration *onvifMedia__AddPTZConfiguration, _onvifMedia__AddPTZConfigurationResponse *onvifMedia__AddPTZConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddPTZConfiguration_ soap_tmp___onvifMedia__AddPTZConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddPTZConfiguration_.onvifMedia__AddPTZConfiguration = onvifMedia__AddPTZConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddPTZConfiguration_(soap, &soap_tmp___onvifMedia__AddPTZConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddPTZConfiguration_(soap, &soap_tmp___onvifMedia__AddPTZConfiguration_, "-onvifMedia:AddPTZConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddPTZConfiguration_(soap, &soap_tmp___onvifMedia__AddPTZConfiguration_, "-onvifMedia:AddPTZConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddPTZConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddPTZConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddPTZConfigurationResponse->soap_get(soap, "onvifMedia:AddPTZConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddVideoAnalyticsConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__AddVideoAnalyticsConfiguration *onvifMedia__AddVideoAnalyticsConfiguration, _onvifMedia__AddVideoAnalyticsConfigurationResponse *onvifMedia__AddVideoAnalyticsConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddVideoAnalyticsConfiguration_ soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration_.onvifMedia__AddVideoAnalyticsConfiguration = onvifMedia__AddVideoAnalyticsConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddVideoAnalyticsConfiguration_(soap, &soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddVideoAnalyticsConfiguration_(soap, &soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration_, "-onvifMedia:AddVideoAnalyticsConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddVideoAnalyticsConfiguration_(soap, &soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration_, "-onvifMedia:AddVideoAnalyticsConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddVideoAnalyticsConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddVideoAnalyticsConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddVideoAnalyticsConfigurationResponse->soap_get(soap, "onvifMedia:AddVideoAnalyticsConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddMetadataConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__AddMetadataConfiguration *onvifMedia__AddMetadataConfiguration, _onvifMedia__AddMetadataConfigurationResponse *onvifMedia__AddMetadataConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddMetadataConfiguration_ soap_tmp___onvifMedia__AddMetadataConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddMetadataConfiguration_.onvifMedia__AddMetadataConfiguration = onvifMedia__AddMetadataConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddMetadataConfiguration_(soap, &soap_tmp___onvifMedia__AddMetadataConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddMetadataConfiguration_(soap, &soap_tmp___onvifMedia__AddMetadataConfiguration_, "-onvifMedia:AddMetadataConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddMetadataConfiguration_(soap, &soap_tmp___onvifMedia__AddMetadataConfiguration_, "-onvifMedia:AddMetadataConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddMetadataConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddMetadataConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddMetadataConfigurationResponse->soap_get(soap, "onvifMedia:AddMetadataConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioOutputConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__AddAudioOutputConfiguration *onvifMedia__AddAudioOutputConfiguration, _onvifMedia__AddAudioOutputConfigurationResponse *onvifMedia__AddAudioOutputConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddAudioOutputConfiguration_ soap_tmp___onvifMedia__AddAudioOutputConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddAudioOutputConfiguration_.onvifMedia__AddAudioOutputConfiguration = onvifMedia__AddAudioOutputConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddAudioOutputConfiguration_(soap, &soap_tmp___onvifMedia__AddAudioOutputConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddAudioOutputConfiguration_(soap, &soap_tmp___onvifMedia__AddAudioOutputConfiguration_, "-onvifMedia:AddAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddAudioOutputConfiguration_(soap, &soap_tmp___onvifMedia__AddAudioOutputConfiguration_, "-onvifMedia:AddAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddAudioOutputConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddAudioOutputConfigurationResponse->soap_get(soap, "onvifMedia:AddAudioOutputConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioDecoderConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__AddAudioDecoderConfiguration *onvifMedia__AddAudioDecoderConfiguration, _onvifMedia__AddAudioDecoderConfigurationResponse *onvifMedia__AddAudioDecoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__AddAudioDecoderConfiguration_ soap_tmp___onvifMedia__AddAudioDecoderConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__AddAudioDecoderConfiguration_.onvifMedia__AddAudioDecoderConfiguration = onvifMedia__AddAudioDecoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__AddAudioDecoderConfiguration_(soap, &soap_tmp___onvifMedia__AddAudioDecoderConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__AddAudioDecoderConfiguration_(soap, &soap_tmp___onvifMedia__AddAudioDecoderConfiguration_, "-onvifMedia:AddAudioDecoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__AddAudioDecoderConfiguration_(soap, &soap_tmp___onvifMedia__AddAudioDecoderConfiguration_, "-onvifMedia:AddAudioDecoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__AddAudioDecoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__AddAudioDecoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__AddAudioDecoderConfigurationResponse->soap_get(soap, "onvifMedia:AddAudioDecoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveVideoEncoderConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__RemoveVideoEncoderConfiguration *onvifMedia__RemoveVideoEncoderConfiguration, _onvifMedia__RemoveVideoEncoderConfigurationResponse *onvifMedia__RemoveVideoEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveVideoEncoderConfiguration_ soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration_.onvifMedia__RemoveVideoEncoderConfiguration = onvifMedia__RemoveVideoEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveVideoEncoderConfiguration_(soap, &soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveVideoEncoderConfiguration_(soap, &soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration_, "-onvifMedia:RemoveVideoEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveVideoEncoderConfiguration_(soap, &soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration_, "-onvifMedia:RemoveVideoEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveVideoEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveVideoEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveVideoEncoderConfigurationResponse->soap_get(soap, "onvifMedia:RemoveVideoEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveVideoSourceConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__RemoveVideoSourceConfiguration *onvifMedia__RemoveVideoSourceConfiguration, _onvifMedia__RemoveVideoSourceConfigurationResponse *onvifMedia__RemoveVideoSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveVideoSourceConfiguration_ soap_tmp___onvifMedia__RemoveVideoSourceConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveVideoSourceConfiguration_.onvifMedia__RemoveVideoSourceConfiguration = onvifMedia__RemoveVideoSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveVideoSourceConfiguration_(soap, &soap_tmp___onvifMedia__RemoveVideoSourceConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveVideoSourceConfiguration_(soap, &soap_tmp___onvifMedia__RemoveVideoSourceConfiguration_, "-onvifMedia:RemoveVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveVideoSourceConfiguration_(soap, &soap_tmp___onvifMedia__RemoveVideoSourceConfiguration_, "-onvifMedia:RemoveVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveVideoSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveVideoSourceConfigurationResponse->soap_get(soap, "onvifMedia:RemoveVideoSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioEncoderConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__RemoveAudioEncoderConfiguration *onvifMedia__RemoveAudioEncoderConfiguration, _onvifMedia__RemoveAudioEncoderConfigurationResponse *onvifMedia__RemoveAudioEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveAudioEncoderConfiguration_ soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration_.onvifMedia__RemoveAudioEncoderConfiguration = onvifMedia__RemoveAudioEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveAudioEncoderConfiguration_(soap, &soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveAudioEncoderConfiguration_(soap, &soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration_, "-onvifMedia:RemoveAudioEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveAudioEncoderConfiguration_(soap, &soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration_, "-onvifMedia:RemoveAudioEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveAudioEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveAudioEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveAudioEncoderConfigurationResponse->soap_get(soap, "onvifMedia:RemoveAudioEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioSourceConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__RemoveAudioSourceConfiguration *onvifMedia__RemoveAudioSourceConfiguration, _onvifMedia__RemoveAudioSourceConfigurationResponse *onvifMedia__RemoveAudioSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveAudioSourceConfiguration_ soap_tmp___onvifMedia__RemoveAudioSourceConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveAudioSourceConfiguration_.onvifMedia__RemoveAudioSourceConfiguration = onvifMedia__RemoveAudioSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveAudioSourceConfiguration_(soap, &soap_tmp___onvifMedia__RemoveAudioSourceConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveAudioSourceConfiguration_(soap, &soap_tmp___onvifMedia__RemoveAudioSourceConfiguration_, "-onvifMedia:RemoveAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveAudioSourceConfiguration_(soap, &soap_tmp___onvifMedia__RemoveAudioSourceConfiguration_, "-onvifMedia:RemoveAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveAudioSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveAudioSourceConfigurationResponse->soap_get(soap, "onvifMedia:RemoveAudioSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemovePTZConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__RemovePTZConfiguration *onvifMedia__RemovePTZConfiguration, _onvifMedia__RemovePTZConfigurationResponse *onvifMedia__RemovePTZConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemovePTZConfiguration_ soap_tmp___onvifMedia__RemovePTZConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemovePTZConfiguration_.onvifMedia__RemovePTZConfiguration = onvifMedia__RemovePTZConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemovePTZConfiguration_(soap, &soap_tmp___onvifMedia__RemovePTZConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemovePTZConfiguration_(soap, &soap_tmp___onvifMedia__RemovePTZConfiguration_, "-onvifMedia:RemovePTZConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemovePTZConfiguration_(soap, &soap_tmp___onvifMedia__RemovePTZConfiguration_, "-onvifMedia:RemovePTZConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemovePTZConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemovePTZConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemovePTZConfigurationResponse->soap_get(soap, "onvifMedia:RemovePTZConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveVideoAnalyticsConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__RemoveVideoAnalyticsConfiguration *onvifMedia__RemoveVideoAnalyticsConfiguration, _onvifMedia__RemoveVideoAnalyticsConfigurationResponse *onvifMedia__RemoveVideoAnalyticsConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveVideoAnalyticsConfiguration_ soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration_.onvifMedia__RemoveVideoAnalyticsConfiguration = onvifMedia__RemoveVideoAnalyticsConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveVideoAnalyticsConfiguration_(soap, &soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveVideoAnalyticsConfiguration_(soap, &soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration_, "-onvifMedia:RemoveVideoAnalyticsConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveVideoAnalyticsConfiguration_(soap, &soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration_, "-onvifMedia:RemoveVideoAnalyticsConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveVideoAnalyticsConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveVideoAnalyticsConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveVideoAnalyticsConfigurationResponse->soap_get(soap, "onvifMedia:RemoveVideoAnalyticsConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveMetadataConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__RemoveMetadataConfiguration *onvifMedia__RemoveMetadataConfiguration, _onvifMedia__RemoveMetadataConfigurationResponse *onvifMedia__RemoveMetadataConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveMetadataConfiguration_ soap_tmp___onvifMedia__RemoveMetadataConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveMetadataConfiguration_.onvifMedia__RemoveMetadataConfiguration = onvifMedia__RemoveMetadataConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveMetadataConfiguration_(soap, &soap_tmp___onvifMedia__RemoveMetadataConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveMetadataConfiguration_(soap, &soap_tmp___onvifMedia__RemoveMetadataConfiguration_, "-onvifMedia:RemoveMetadataConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveMetadataConfiguration_(soap, &soap_tmp___onvifMedia__RemoveMetadataConfiguration_, "-onvifMedia:RemoveMetadataConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveMetadataConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveMetadataConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveMetadataConfigurationResponse->soap_get(soap, "onvifMedia:RemoveMetadataConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioOutputConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__RemoveAudioOutputConfiguration *onvifMedia__RemoveAudioOutputConfiguration, _onvifMedia__RemoveAudioOutputConfigurationResponse *onvifMedia__RemoveAudioOutputConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveAudioOutputConfiguration_ soap_tmp___onvifMedia__RemoveAudioOutputConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveAudioOutputConfiguration_.onvifMedia__RemoveAudioOutputConfiguration = onvifMedia__RemoveAudioOutputConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveAudioOutputConfiguration_(soap, &soap_tmp___onvifMedia__RemoveAudioOutputConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveAudioOutputConfiguration_(soap, &soap_tmp___onvifMedia__RemoveAudioOutputConfiguration_, "-onvifMedia:RemoveAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveAudioOutputConfiguration_(soap, &soap_tmp___onvifMedia__RemoveAudioOutputConfiguration_, "-onvifMedia:RemoveAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveAudioOutputConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveAudioOutputConfigurationResponse->soap_get(soap, "onvifMedia:RemoveAudioOutputConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioDecoderConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__RemoveAudioDecoderConfiguration *onvifMedia__RemoveAudioDecoderConfiguration, _onvifMedia__RemoveAudioDecoderConfigurationResponse *onvifMedia__RemoveAudioDecoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__RemoveAudioDecoderConfiguration_ soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration_.onvifMedia__RemoveAudioDecoderConfiguration = onvifMedia__RemoveAudioDecoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__RemoveAudioDecoderConfiguration_(soap, &soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__RemoveAudioDecoderConfiguration_(soap, &soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration_, "-onvifMedia:RemoveAudioDecoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__RemoveAudioDecoderConfiguration_(soap, &soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration_, "-onvifMedia:RemoveAudioDecoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__RemoveAudioDecoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__RemoveAudioDecoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__RemoveAudioDecoderConfigurationResponse->soap_get(soap, "onvifMedia:RemoveAudioDecoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::DeleteProfile_(const char *endpoint, const char *soap_action, _onvifMedia__DeleteProfile *onvifMedia__DeleteProfile, _onvifMedia__DeleteProfileResponse *onvifMedia__DeleteProfileResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__DeleteProfile_ soap_tmp___onvifMedia__DeleteProfile_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/DeleteProfile";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__DeleteProfile_.onvifMedia__DeleteProfile = onvifMedia__DeleteProfile;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__DeleteProfile_(soap, &soap_tmp___onvifMedia__DeleteProfile_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__DeleteProfile_(soap, &soap_tmp___onvifMedia__DeleteProfile_, "-onvifMedia:DeleteProfile", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__DeleteProfile_(soap, &soap_tmp___onvifMedia__DeleteProfile_, "-onvifMedia:DeleteProfile", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__DeleteProfileResponse)
		return soap_closesock(soap);
	onvifMedia__DeleteProfileResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__DeleteProfileResponse->soap_get(soap, "onvifMedia:DeleteProfileResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSourceConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoSourceConfigurations *onvifMedia__GetVideoSourceConfigurations, _onvifMedia__GetVideoSourceConfigurationsResponse *onvifMedia__GetVideoSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoSourceConfigurations_ soap_tmp___onvifMedia__GetVideoSourceConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoSourceConfigurations_.onvifMedia__GetVideoSourceConfigurations = onvifMedia__GetVideoSourceConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoSourceConfigurations_(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoSourceConfigurations_(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurations_, "-onvifMedia:GetVideoSourceConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoSourceConfigurations_(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurations_, "-onvifMedia:GetVideoSourceConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoSourceConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoSourceConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoSourceConfigurationsResponse->soap_get(soap, "onvifMedia:GetVideoSourceConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoEncoderConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoEncoderConfigurations *onvifMedia__GetVideoEncoderConfigurations, _onvifMedia__GetVideoEncoderConfigurationsResponse *onvifMedia__GetVideoEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoEncoderConfigurations_ soap_tmp___onvifMedia__GetVideoEncoderConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoEncoderConfigurations_.onvifMedia__GetVideoEncoderConfigurations = onvifMedia__GetVideoEncoderConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoEncoderConfigurations_(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoEncoderConfigurations_(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurations_, "-onvifMedia:GetVideoEncoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoEncoderConfigurations_(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurations_, "-onvifMedia:GetVideoEncoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoEncoderConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoEncoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoEncoderConfigurationsResponse->soap_get(soap, "onvifMedia:GetVideoEncoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSourceConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioSourceConfigurations *onvifMedia__GetAudioSourceConfigurations, _onvifMedia__GetAudioSourceConfigurationsResponse *onvifMedia__GetAudioSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioSourceConfigurations_ soap_tmp___onvifMedia__GetAudioSourceConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioSourceConfigurations_.onvifMedia__GetAudioSourceConfigurations = onvifMedia__GetAudioSourceConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioSourceConfigurations_(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioSourceConfigurations_(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurations_, "-onvifMedia:GetAudioSourceConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioSourceConfigurations_(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurations_, "-onvifMedia:GetAudioSourceConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioSourceConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioSourceConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioSourceConfigurationsResponse->soap_get(soap, "onvifMedia:GetAudioSourceConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioEncoderConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioEncoderConfigurations *onvifMedia__GetAudioEncoderConfigurations, _onvifMedia__GetAudioEncoderConfigurationsResponse *onvifMedia__GetAudioEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioEncoderConfigurations_ soap_tmp___onvifMedia__GetAudioEncoderConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioEncoderConfigurations_.onvifMedia__GetAudioEncoderConfigurations = onvifMedia__GetAudioEncoderConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioEncoderConfigurations_(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioEncoderConfigurations_(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurations_, "-onvifMedia:GetAudioEncoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioEncoderConfigurations_(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurations_, "-onvifMedia:GetAudioEncoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioEncoderConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioEncoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioEncoderConfigurationsResponse->soap_get(soap, "onvifMedia:GetAudioEncoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoAnalyticsConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoAnalyticsConfigurations *onvifMedia__GetVideoAnalyticsConfigurations, _onvifMedia__GetVideoAnalyticsConfigurationsResponse *onvifMedia__GetVideoAnalyticsConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoAnalyticsConfigurations_ soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations_.onvifMedia__GetVideoAnalyticsConfigurations = onvifMedia__GetVideoAnalyticsConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoAnalyticsConfigurations_(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoAnalyticsConfigurations_(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations_, "-onvifMedia:GetVideoAnalyticsConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoAnalyticsConfigurations_(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations_, "-onvifMedia:GetVideoAnalyticsConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoAnalyticsConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoAnalyticsConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoAnalyticsConfigurationsResponse->soap_get(soap, "onvifMedia:GetVideoAnalyticsConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetMetadataConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetMetadataConfigurations *onvifMedia__GetMetadataConfigurations, _onvifMedia__GetMetadataConfigurationsResponse *onvifMedia__GetMetadataConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetMetadataConfigurations_ soap_tmp___onvifMedia__GetMetadataConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetMetadataConfigurations_.onvifMedia__GetMetadataConfigurations = onvifMedia__GetMetadataConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetMetadataConfigurations_(soap, &soap_tmp___onvifMedia__GetMetadataConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetMetadataConfigurations_(soap, &soap_tmp___onvifMedia__GetMetadataConfigurations_, "-onvifMedia:GetMetadataConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetMetadataConfigurations_(soap, &soap_tmp___onvifMedia__GetMetadataConfigurations_, "-onvifMedia:GetMetadataConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetMetadataConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetMetadataConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetMetadataConfigurationsResponse->soap_get(soap, "onvifMedia:GetMetadataConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioOutputConfigurations *onvifMedia__GetAudioOutputConfigurations, _onvifMedia__GetAudioOutputConfigurationsResponse *onvifMedia__GetAudioOutputConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioOutputConfigurations_ soap_tmp___onvifMedia__GetAudioOutputConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioOutputConfigurations_.onvifMedia__GetAudioOutputConfigurations = onvifMedia__GetAudioOutputConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioOutputConfigurations_(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioOutputConfigurations_(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurations_, "-onvifMedia:GetAudioOutputConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioOutputConfigurations_(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurations_, "-onvifMedia:GetAudioOutputConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioOutputConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputConfigurationsResponse->soap_get(soap, "onvifMedia:GetAudioOutputConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioDecoderConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioDecoderConfigurations *onvifMedia__GetAudioDecoderConfigurations, _onvifMedia__GetAudioDecoderConfigurationsResponse *onvifMedia__GetAudioDecoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioDecoderConfigurations_ soap_tmp___onvifMedia__GetAudioDecoderConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioDecoderConfigurations_.onvifMedia__GetAudioDecoderConfigurations = onvifMedia__GetAudioDecoderConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioDecoderConfigurations_(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioDecoderConfigurations_(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurations_, "-onvifMedia:GetAudioDecoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioDecoderConfigurations_(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurations_, "-onvifMedia:GetAudioDecoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioDecoderConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioDecoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioDecoderConfigurationsResponse->soap_get(soap, "onvifMedia:GetAudioDecoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSourceConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoSourceConfiguration *onvifMedia__GetVideoSourceConfiguration, _onvifMedia__GetVideoSourceConfigurationResponse *onvifMedia__GetVideoSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoSourceConfiguration_ soap_tmp___onvifMedia__GetVideoSourceConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoSourceConfiguration_.onvifMedia__GetVideoSourceConfiguration = onvifMedia__GetVideoSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoSourceConfiguration_(soap, &soap_tmp___onvifMedia__GetVideoSourceConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoSourceConfiguration_(soap, &soap_tmp___onvifMedia__GetVideoSourceConfiguration_, "-onvifMedia:GetVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoSourceConfiguration_(soap, &soap_tmp___onvifMedia__GetVideoSourceConfiguration_, "-onvifMedia:GetVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoSourceConfigurationResponse->soap_get(soap, "onvifMedia:GetVideoSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoEncoderConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoEncoderConfiguration *onvifMedia__GetVideoEncoderConfiguration, _onvifMedia__GetVideoEncoderConfigurationResponse *onvifMedia__GetVideoEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoEncoderConfiguration_ soap_tmp___onvifMedia__GetVideoEncoderConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoEncoderConfiguration_.onvifMedia__GetVideoEncoderConfiguration = onvifMedia__GetVideoEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoEncoderConfiguration_(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoEncoderConfiguration_(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfiguration_, "-onvifMedia:GetVideoEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoEncoderConfiguration_(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfiguration_, "-onvifMedia:GetVideoEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoEncoderConfigurationResponse->soap_get(soap, "onvifMedia:GetVideoEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSourceConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioSourceConfiguration *onvifMedia__GetAudioSourceConfiguration, _onvifMedia__GetAudioSourceConfigurationResponse *onvifMedia__GetAudioSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioSourceConfiguration_ soap_tmp___onvifMedia__GetAudioSourceConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioSourceConfiguration_.onvifMedia__GetAudioSourceConfiguration = onvifMedia__GetAudioSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioSourceConfiguration_(soap, &soap_tmp___onvifMedia__GetAudioSourceConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioSourceConfiguration_(soap, &soap_tmp___onvifMedia__GetAudioSourceConfiguration_, "-onvifMedia:GetAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioSourceConfiguration_(soap, &soap_tmp___onvifMedia__GetAudioSourceConfiguration_, "-onvifMedia:GetAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioSourceConfigurationResponse->soap_get(soap, "onvifMedia:GetAudioSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioEncoderConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioEncoderConfiguration *onvifMedia__GetAudioEncoderConfiguration, _onvifMedia__GetAudioEncoderConfigurationResponse *onvifMedia__GetAudioEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioEncoderConfiguration_ soap_tmp___onvifMedia__GetAudioEncoderConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioEncoderConfiguration_.onvifMedia__GetAudioEncoderConfiguration = onvifMedia__GetAudioEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioEncoderConfiguration_(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioEncoderConfiguration_(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfiguration_, "-onvifMedia:GetAudioEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioEncoderConfiguration_(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfiguration_, "-onvifMedia:GetAudioEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioEncoderConfigurationResponse->soap_get(soap, "onvifMedia:GetAudioEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoAnalyticsConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoAnalyticsConfiguration *onvifMedia__GetVideoAnalyticsConfiguration, _onvifMedia__GetVideoAnalyticsConfigurationResponse *onvifMedia__GetVideoAnalyticsConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoAnalyticsConfiguration_ soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration_.onvifMedia__GetVideoAnalyticsConfiguration = onvifMedia__GetVideoAnalyticsConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoAnalyticsConfiguration_(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoAnalyticsConfiguration_(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration_, "-onvifMedia:GetVideoAnalyticsConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoAnalyticsConfiguration_(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration_, "-onvifMedia:GetVideoAnalyticsConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoAnalyticsConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoAnalyticsConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoAnalyticsConfigurationResponse->soap_get(soap, "onvifMedia:GetVideoAnalyticsConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetMetadataConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__GetMetadataConfiguration *onvifMedia__GetMetadataConfiguration, _onvifMedia__GetMetadataConfigurationResponse *onvifMedia__GetMetadataConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetMetadataConfiguration_ soap_tmp___onvifMedia__GetMetadataConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetMetadataConfiguration_.onvifMedia__GetMetadataConfiguration = onvifMedia__GetMetadataConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetMetadataConfiguration_(soap, &soap_tmp___onvifMedia__GetMetadataConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetMetadataConfiguration_(soap, &soap_tmp___onvifMedia__GetMetadataConfiguration_, "-onvifMedia:GetMetadataConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetMetadataConfiguration_(soap, &soap_tmp___onvifMedia__GetMetadataConfiguration_, "-onvifMedia:GetMetadataConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetMetadataConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetMetadataConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetMetadataConfigurationResponse->soap_get(soap, "onvifMedia:GetMetadataConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioOutputConfiguration *onvifMedia__GetAudioOutputConfiguration, _onvifMedia__GetAudioOutputConfigurationResponse *onvifMedia__GetAudioOutputConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioOutputConfiguration_ soap_tmp___onvifMedia__GetAudioOutputConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioOutputConfiguration_.onvifMedia__GetAudioOutputConfiguration = onvifMedia__GetAudioOutputConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioOutputConfiguration_(soap, &soap_tmp___onvifMedia__GetAudioOutputConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioOutputConfiguration_(soap, &soap_tmp___onvifMedia__GetAudioOutputConfiguration_, "-onvifMedia:GetAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioOutputConfiguration_(soap, &soap_tmp___onvifMedia__GetAudioOutputConfiguration_, "-onvifMedia:GetAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputConfigurationResponse->soap_get(soap, "onvifMedia:GetAudioOutputConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioDecoderConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioDecoderConfiguration *onvifMedia__GetAudioDecoderConfiguration, _onvifMedia__GetAudioDecoderConfigurationResponse *onvifMedia__GetAudioDecoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioDecoderConfiguration_ soap_tmp___onvifMedia__GetAudioDecoderConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioDecoderConfiguration_.onvifMedia__GetAudioDecoderConfiguration = onvifMedia__GetAudioDecoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioDecoderConfiguration_(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioDecoderConfiguration_(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfiguration_, "-onvifMedia:GetAudioDecoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioDecoderConfiguration_(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfiguration_, "-onvifMedia:GetAudioDecoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioDecoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioDecoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioDecoderConfigurationResponse->soap_get(soap, "onvifMedia:GetAudioDecoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleVideoEncoderConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleVideoEncoderConfigurations *onvifMedia__GetCompatibleVideoEncoderConfigurations, _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse *onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleVideoEncoderConfigurations_ soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations_.onvifMedia__GetCompatibleVideoEncoderConfigurations = onvifMedia__GetCompatibleVideoEncoderConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleVideoEncoderConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleVideoEncoderConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations_, "-onvifMedia:GetCompatibleVideoEncoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleVideoEncoderConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations_, "-onvifMedia:GetCompatibleVideoEncoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleVideoEncoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleVideoSourceConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleVideoSourceConfigurations *onvifMedia__GetCompatibleVideoSourceConfigurations, _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse *onvifMedia__GetCompatibleVideoSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleVideoSourceConfigurations_ soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations_.onvifMedia__GetCompatibleVideoSourceConfigurations = onvifMedia__GetCompatibleVideoSourceConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleVideoSourceConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleVideoSourceConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations_, "-onvifMedia:GetCompatibleVideoSourceConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleVideoSourceConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations_, "-onvifMedia:GetCompatibleVideoSourceConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleVideoSourceConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleVideoSourceConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleVideoSourceConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleVideoSourceConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioEncoderConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleAudioEncoderConfigurations *onvifMedia__GetCompatibleAudioEncoderConfigurations, _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse *onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleAudioEncoderConfigurations_ soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations_.onvifMedia__GetCompatibleAudioEncoderConfigurations = onvifMedia__GetCompatibleAudioEncoderConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleAudioEncoderConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleAudioEncoderConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations_, "-onvifMedia:GetCompatibleAudioEncoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleAudioEncoderConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations_, "-onvifMedia:GetCompatibleAudioEncoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleAudioEncoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioSourceConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleAudioSourceConfigurations *onvifMedia__GetCompatibleAudioSourceConfigurations, _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse *onvifMedia__GetCompatibleAudioSourceConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleAudioSourceConfigurations_ soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations_.onvifMedia__GetCompatibleAudioSourceConfigurations = onvifMedia__GetCompatibleAudioSourceConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleAudioSourceConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleAudioSourceConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations_, "-onvifMedia:GetCompatibleAudioSourceConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleAudioSourceConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations_, "-onvifMedia:GetCompatibleAudioSourceConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleAudioSourceConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioSourceConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioSourceConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleAudioSourceConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleVideoAnalyticsConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleVideoAnalyticsConfigurations *onvifMedia__GetCompatibleVideoAnalyticsConfigurations, _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse *onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleVideoAnalyticsConfigurations_ soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations_.onvifMedia__GetCompatibleVideoAnalyticsConfigurations = onvifMedia__GetCompatibleVideoAnalyticsConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleVideoAnalyticsConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleVideoAnalyticsConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations_, "-onvifMedia:GetCompatibleVideoAnalyticsConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleVideoAnalyticsConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations_, "-onvifMedia:GetCompatibleVideoAnalyticsConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleVideoAnalyticsConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleMetadataConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleMetadataConfigurations *onvifMedia__GetCompatibleMetadataConfigurations, _onvifMedia__GetCompatibleMetadataConfigurationsResponse *onvifMedia__GetCompatibleMetadataConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleMetadataConfigurations_ soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations_.onvifMedia__GetCompatibleMetadataConfigurations = onvifMedia__GetCompatibleMetadataConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleMetadataConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleMetadataConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations_, "-onvifMedia:GetCompatibleMetadataConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleMetadataConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations_, "-onvifMedia:GetCompatibleMetadataConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleMetadataConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleMetadataConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleMetadataConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleMetadataConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioOutputConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleAudioOutputConfigurations *onvifMedia__GetCompatibleAudioOutputConfigurations, _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse *onvifMedia__GetCompatibleAudioOutputConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleAudioOutputConfigurations_ soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations_.onvifMedia__GetCompatibleAudioOutputConfigurations = onvifMedia__GetCompatibleAudioOutputConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleAudioOutputConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleAudioOutputConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations_, "-onvifMedia:GetCompatibleAudioOutputConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleAudioOutputConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations_, "-onvifMedia:GetCompatibleAudioOutputConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleAudioOutputConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioOutputConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioOutputConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleAudioOutputConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioDecoderConfigurations_(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleAudioDecoderConfigurations *onvifMedia__GetCompatibleAudioDecoderConfigurations, _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse *onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetCompatibleAudioDecoderConfigurations_ soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations_.onvifMedia__GetCompatibleAudioDecoderConfigurations = onvifMedia__GetCompatibleAudioDecoderConfigurations;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetCompatibleAudioDecoderConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetCompatibleAudioDecoderConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations_, "-onvifMedia:GetCompatibleAudioDecoderConfigurations", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetCompatibleAudioDecoderConfigurations_(soap, &soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations_, "-onvifMedia:GetCompatibleAudioDecoderConfigurations", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse)
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse->soap_get(soap, "onvifMedia:GetCompatibleAudioDecoderConfigurationsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetVideoSourceConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__SetVideoSourceConfiguration *onvifMedia__SetVideoSourceConfiguration, _onvifMedia__SetVideoSourceConfigurationResponse *onvifMedia__SetVideoSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetVideoSourceConfiguration_ soap_tmp___onvifMedia__SetVideoSourceConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetVideoSourceConfiguration_.onvifMedia__SetVideoSourceConfiguration = onvifMedia__SetVideoSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetVideoSourceConfiguration_(soap, &soap_tmp___onvifMedia__SetVideoSourceConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetVideoSourceConfiguration_(soap, &soap_tmp___onvifMedia__SetVideoSourceConfiguration_, "-onvifMedia:SetVideoSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetVideoSourceConfiguration_(soap, &soap_tmp___onvifMedia__SetVideoSourceConfiguration_, "-onvifMedia:SetVideoSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetVideoSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetVideoSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetVideoSourceConfigurationResponse->soap_get(soap, "onvifMedia:SetVideoSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetVideoEncoderConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__SetVideoEncoderConfiguration *onvifMedia__SetVideoEncoderConfiguration, _onvifMedia__SetVideoEncoderConfigurationResponse *onvifMedia__SetVideoEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetVideoEncoderConfiguration_ soap_tmp___onvifMedia__SetVideoEncoderConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetVideoEncoderConfiguration_.onvifMedia__SetVideoEncoderConfiguration = onvifMedia__SetVideoEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetVideoEncoderConfiguration_(soap, &soap_tmp___onvifMedia__SetVideoEncoderConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetVideoEncoderConfiguration_(soap, &soap_tmp___onvifMedia__SetVideoEncoderConfiguration_, "-onvifMedia:SetVideoEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetVideoEncoderConfiguration_(soap, &soap_tmp___onvifMedia__SetVideoEncoderConfiguration_, "-onvifMedia:SetVideoEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetVideoEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetVideoEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetVideoEncoderConfigurationResponse->soap_get(soap, "onvifMedia:SetVideoEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioSourceConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__SetAudioSourceConfiguration *onvifMedia__SetAudioSourceConfiguration, _onvifMedia__SetAudioSourceConfigurationResponse *onvifMedia__SetAudioSourceConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetAudioSourceConfiguration_ soap_tmp___onvifMedia__SetAudioSourceConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetAudioSourceConfiguration_.onvifMedia__SetAudioSourceConfiguration = onvifMedia__SetAudioSourceConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetAudioSourceConfiguration_(soap, &soap_tmp___onvifMedia__SetAudioSourceConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetAudioSourceConfiguration_(soap, &soap_tmp___onvifMedia__SetAudioSourceConfiguration_, "-onvifMedia:SetAudioSourceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetAudioSourceConfiguration_(soap, &soap_tmp___onvifMedia__SetAudioSourceConfiguration_, "-onvifMedia:SetAudioSourceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetAudioSourceConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetAudioSourceConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetAudioSourceConfigurationResponse->soap_get(soap, "onvifMedia:SetAudioSourceConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioEncoderConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__SetAudioEncoderConfiguration *onvifMedia__SetAudioEncoderConfiguration, _onvifMedia__SetAudioEncoderConfigurationResponse *onvifMedia__SetAudioEncoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetAudioEncoderConfiguration_ soap_tmp___onvifMedia__SetAudioEncoderConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetAudioEncoderConfiguration_.onvifMedia__SetAudioEncoderConfiguration = onvifMedia__SetAudioEncoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetAudioEncoderConfiguration_(soap, &soap_tmp___onvifMedia__SetAudioEncoderConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetAudioEncoderConfiguration_(soap, &soap_tmp___onvifMedia__SetAudioEncoderConfiguration_, "-onvifMedia:SetAudioEncoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetAudioEncoderConfiguration_(soap, &soap_tmp___onvifMedia__SetAudioEncoderConfiguration_, "-onvifMedia:SetAudioEncoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetAudioEncoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetAudioEncoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetAudioEncoderConfigurationResponse->soap_get(soap, "onvifMedia:SetAudioEncoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetVideoAnalyticsConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__SetVideoAnalyticsConfiguration *onvifMedia__SetVideoAnalyticsConfiguration, _onvifMedia__SetVideoAnalyticsConfigurationResponse *onvifMedia__SetVideoAnalyticsConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetVideoAnalyticsConfiguration_ soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration_.onvifMedia__SetVideoAnalyticsConfiguration = onvifMedia__SetVideoAnalyticsConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetVideoAnalyticsConfiguration_(soap, &soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetVideoAnalyticsConfiguration_(soap, &soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration_, "-onvifMedia:SetVideoAnalyticsConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetVideoAnalyticsConfiguration_(soap, &soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration_, "-onvifMedia:SetVideoAnalyticsConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetVideoAnalyticsConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetVideoAnalyticsConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetVideoAnalyticsConfigurationResponse->soap_get(soap, "onvifMedia:SetVideoAnalyticsConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetMetadataConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__SetMetadataConfiguration *onvifMedia__SetMetadataConfiguration, _onvifMedia__SetMetadataConfigurationResponse *onvifMedia__SetMetadataConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetMetadataConfiguration_ soap_tmp___onvifMedia__SetMetadataConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetMetadataConfiguration_.onvifMedia__SetMetadataConfiguration = onvifMedia__SetMetadataConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetMetadataConfiguration_(soap, &soap_tmp___onvifMedia__SetMetadataConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetMetadataConfiguration_(soap, &soap_tmp___onvifMedia__SetMetadataConfiguration_, "-onvifMedia:SetMetadataConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetMetadataConfiguration_(soap, &soap_tmp___onvifMedia__SetMetadataConfiguration_, "-onvifMedia:SetMetadataConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetMetadataConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetMetadataConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetMetadataConfigurationResponse->soap_get(soap, "onvifMedia:SetMetadataConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioOutputConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__SetAudioOutputConfiguration *onvifMedia__SetAudioOutputConfiguration, _onvifMedia__SetAudioOutputConfigurationResponse *onvifMedia__SetAudioOutputConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetAudioOutputConfiguration_ soap_tmp___onvifMedia__SetAudioOutputConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetAudioOutputConfiguration_.onvifMedia__SetAudioOutputConfiguration = onvifMedia__SetAudioOutputConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetAudioOutputConfiguration_(soap, &soap_tmp___onvifMedia__SetAudioOutputConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetAudioOutputConfiguration_(soap, &soap_tmp___onvifMedia__SetAudioOutputConfiguration_, "-onvifMedia:SetAudioOutputConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetAudioOutputConfiguration_(soap, &soap_tmp___onvifMedia__SetAudioOutputConfiguration_, "-onvifMedia:SetAudioOutputConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetAudioOutputConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetAudioOutputConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetAudioOutputConfigurationResponse->soap_get(soap, "onvifMedia:SetAudioOutputConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioDecoderConfiguration_(const char *endpoint, const char *soap_action, _onvifMedia__SetAudioDecoderConfiguration *onvifMedia__SetAudioDecoderConfiguration, _onvifMedia__SetAudioDecoderConfigurationResponse *onvifMedia__SetAudioDecoderConfigurationResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetAudioDecoderConfiguration_ soap_tmp___onvifMedia__SetAudioDecoderConfiguration_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetAudioDecoderConfiguration_.onvifMedia__SetAudioDecoderConfiguration = onvifMedia__SetAudioDecoderConfiguration;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetAudioDecoderConfiguration_(soap, &soap_tmp___onvifMedia__SetAudioDecoderConfiguration_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetAudioDecoderConfiguration_(soap, &soap_tmp___onvifMedia__SetAudioDecoderConfiguration_, "-onvifMedia:SetAudioDecoderConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetAudioDecoderConfiguration_(soap, &soap_tmp___onvifMedia__SetAudioDecoderConfiguration_, "-onvifMedia:SetAudioDecoderConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetAudioDecoderConfigurationResponse)
		return soap_closesock(soap);
	onvifMedia__SetAudioDecoderConfigurationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetAudioDecoderConfigurationResponse->soap_get(soap, "onvifMedia:SetAudioDecoderConfigurationResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSourceConfigurationOptions_(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoSourceConfigurationOptions *onvifMedia__GetVideoSourceConfigurationOptions, _onvifMedia__GetVideoSourceConfigurationOptionsResponse *onvifMedia__GetVideoSourceConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoSourceConfigurationOptions_ soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions_.onvifMedia__GetVideoSourceConfigurationOptions = onvifMedia__GetVideoSourceConfigurationOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoSourceConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoSourceConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions_, "-onvifMedia:GetVideoSourceConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoSourceConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions_, "-onvifMedia:GetVideoSourceConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoSourceConfigurationOptionsResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoSourceConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoSourceConfigurationOptionsResponse->soap_get(soap, "onvifMedia:GetVideoSourceConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoEncoderConfigurationOptions_(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoEncoderConfigurationOptions *onvifMedia__GetVideoEncoderConfigurationOptions, _onvifMedia__GetVideoEncoderConfigurationOptionsResponse *onvifMedia__GetVideoEncoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetVideoEncoderConfigurationOptions_ soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions_.onvifMedia__GetVideoEncoderConfigurationOptions = onvifMedia__GetVideoEncoderConfigurationOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetVideoEncoderConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetVideoEncoderConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions_, "-onvifMedia:GetVideoEncoderConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetVideoEncoderConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions_, "-onvifMedia:GetVideoEncoderConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetVideoEncoderConfigurationOptionsResponse)
		return soap_closesock(soap);
	onvifMedia__GetVideoEncoderConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetVideoEncoderConfigurationOptionsResponse->soap_get(soap, "onvifMedia:GetVideoEncoderConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSourceConfigurationOptions_(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioSourceConfigurationOptions *onvifMedia__GetAudioSourceConfigurationOptions, _onvifMedia__GetAudioSourceConfigurationOptionsResponse *onvifMedia__GetAudioSourceConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioSourceConfigurationOptions_ soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions_.onvifMedia__GetAudioSourceConfigurationOptions = onvifMedia__GetAudioSourceConfigurationOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioSourceConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioSourceConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions_, "-onvifMedia:GetAudioSourceConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioSourceConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions_, "-onvifMedia:GetAudioSourceConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioSourceConfigurationOptionsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioSourceConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioSourceConfigurationOptionsResponse->soap_get(soap, "onvifMedia:GetAudioSourceConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioEncoderConfigurationOptions_(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioEncoderConfigurationOptions *onvifMedia__GetAudioEncoderConfigurationOptions, _onvifMedia__GetAudioEncoderConfigurationOptionsResponse *onvifMedia__GetAudioEncoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioEncoderConfigurationOptions_ soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions_.onvifMedia__GetAudioEncoderConfigurationOptions = onvifMedia__GetAudioEncoderConfigurationOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioEncoderConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioEncoderConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions_, "-onvifMedia:GetAudioEncoderConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioEncoderConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions_, "-onvifMedia:GetAudioEncoderConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioEncoderConfigurationOptionsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioEncoderConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioEncoderConfigurationOptionsResponse->soap_get(soap, "onvifMedia:GetAudioEncoderConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetMetadataConfigurationOptions_(const char *endpoint, const char *soap_action, _onvifMedia__GetMetadataConfigurationOptions *onvifMedia__GetMetadataConfigurationOptions, _onvifMedia__GetMetadataConfigurationOptionsResponse *onvifMedia__GetMetadataConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetMetadataConfigurationOptions_ soap_tmp___onvifMedia__GetMetadataConfigurationOptions_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetMetadataConfigurationOptions_.onvifMedia__GetMetadataConfigurationOptions = onvifMedia__GetMetadataConfigurationOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetMetadataConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetMetadataConfigurationOptions_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetMetadataConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetMetadataConfigurationOptions_, "-onvifMedia:GetMetadataConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetMetadataConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetMetadataConfigurationOptions_, "-onvifMedia:GetMetadataConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetMetadataConfigurationOptionsResponse)
		return soap_closesock(soap);
	onvifMedia__GetMetadataConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetMetadataConfigurationOptionsResponse->soap_get(soap, "onvifMedia:GetMetadataConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputConfigurationOptions_(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioOutputConfigurationOptions *onvifMedia__GetAudioOutputConfigurationOptions, _onvifMedia__GetAudioOutputConfigurationOptionsResponse *onvifMedia__GetAudioOutputConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioOutputConfigurationOptions_ soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions_.onvifMedia__GetAudioOutputConfigurationOptions = onvifMedia__GetAudioOutputConfigurationOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioOutputConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioOutputConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions_, "-onvifMedia:GetAudioOutputConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioOutputConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions_, "-onvifMedia:GetAudioOutputConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioOutputConfigurationOptionsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioOutputConfigurationOptionsResponse->soap_get(soap, "onvifMedia:GetAudioOutputConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioDecoderConfigurationOptions_(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioDecoderConfigurationOptions *onvifMedia__GetAudioDecoderConfigurationOptions, _onvifMedia__GetAudioDecoderConfigurationOptionsResponse *onvifMedia__GetAudioDecoderConfigurationOptionsResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetAudioDecoderConfigurationOptions_ soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions_.onvifMedia__GetAudioDecoderConfigurationOptions = onvifMedia__GetAudioDecoderConfigurationOptions;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetAudioDecoderConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetAudioDecoderConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions_, "-onvifMedia:GetAudioDecoderConfigurationOptions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetAudioDecoderConfigurationOptions_(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions_, "-onvifMedia:GetAudioDecoderConfigurationOptions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetAudioDecoderConfigurationOptionsResponse)
		return soap_closesock(soap);
	onvifMedia__GetAudioDecoderConfigurationOptionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetAudioDecoderConfigurationOptionsResponse->soap_get(soap, "onvifMedia:GetAudioDecoderConfigurationOptionsResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetGuaranteedNumberOfVideoEncoderInstances_(const char *endpoint, const char *soap_action, _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances *onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances, _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse *onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_ soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_.onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances = onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_(soap, &soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_(soap, &soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_, "-onvifMedia:GetGuaranteedNumberOfVideoEncoderInstances", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_(soap, &soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances_, "-onvifMedia:GetGuaranteedNumberOfVideoEncoderInstances", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse)
		return soap_closesock(soap);
	onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse->soap_get(soap, "onvifMedia:GetGuaranteedNumberOfVideoEncoderInstancesResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetStreamUri_(const char *endpoint, const char *soap_action, _onvifMedia__GetStreamUri *onvifMedia__GetStreamUri, _onvifMedia__GetStreamUriResponse *onvifMedia__GetStreamUriResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetStreamUri_ soap_tmp___onvifMedia__GetStreamUri_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetStreamUri";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetStreamUri_.onvifMedia__GetStreamUri = onvifMedia__GetStreamUri;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetStreamUri_(soap, &soap_tmp___onvifMedia__GetStreamUri_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetStreamUri_(soap, &soap_tmp___onvifMedia__GetStreamUri_, "-onvifMedia:GetStreamUri", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetStreamUri_(soap, &soap_tmp___onvifMedia__GetStreamUri_, "-onvifMedia:GetStreamUri", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetStreamUriResponse)
		return soap_closesock(soap);
	onvifMedia__GetStreamUriResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetStreamUriResponse->soap_get(soap, "onvifMedia:GetStreamUriResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::StartMulticastStreaming_(const char *endpoint, const char *soap_action, _onvifMedia__StartMulticastStreaming *onvifMedia__StartMulticastStreaming, _onvifMedia__StartMulticastStreamingResponse *onvifMedia__StartMulticastStreamingResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__StartMulticastStreaming_ soap_tmp___onvifMedia__StartMulticastStreaming_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__StartMulticastStreaming_.onvifMedia__StartMulticastStreaming = onvifMedia__StartMulticastStreaming;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__StartMulticastStreaming_(soap, &soap_tmp___onvifMedia__StartMulticastStreaming_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__StartMulticastStreaming_(soap, &soap_tmp___onvifMedia__StartMulticastStreaming_, "-onvifMedia:StartMulticastStreaming", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__StartMulticastStreaming_(soap, &soap_tmp___onvifMedia__StartMulticastStreaming_, "-onvifMedia:StartMulticastStreaming", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__StartMulticastStreamingResponse)
		return soap_closesock(soap);
	onvifMedia__StartMulticastStreamingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__StartMulticastStreamingResponse->soap_get(soap, "onvifMedia:StartMulticastStreamingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::StopMulticastStreaming_(const char *endpoint, const char *soap_action, _onvifMedia__StopMulticastStreaming *onvifMedia__StopMulticastStreaming, _onvifMedia__StopMulticastStreamingResponse *onvifMedia__StopMulticastStreamingResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__StopMulticastStreaming_ soap_tmp___onvifMedia__StopMulticastStreaming_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__StopMulticastStreaming_.onvifMedia__StopMulticastStreaming = onvifMedia__StopMulticastStreaming;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__StopMulticastStreaming_(soap, &soap_tmp___onvifMedia__StopMulticastStreaming_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__StopMulticastStreaming_(soap, &soap_tmp___onvifMedia__StopMulticastStreaming_, "-onvifMedia:StopMulticastStreaming", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__StopMulticastStreaming_(soap, &soap_tmp___onvifMedia__StopMulticastStreaming_, "-onvifMedia:StopMulticastStreaming", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__StopMulticastStreamingResponse)
		return soap_closesock(soap);
	onvifMedia__StopMulticastStreamingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__StopMulticastStreamingResponse->soap_get(soap, "onvifMedia:StopMulticastStreamingResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::SetSynchronizationPoint_(const char *endpoint, const char *soap_action, _onvifMedia__SetSynchronizationPoint *onvifMedia__SetSynchronizationPoint, _onvifMedia__SetSynchronizationPointResponse *onvifMedia__SetSynchronizationPointResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__SetSynchronizationPoint_ soap_tmp___onvifMedia__SetSynchronizationPoint_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__SetSynchronizationPoint_.onvifMedia__SetSynchronizationPoint = onvifMedia__SetSynchronizationPoint;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__SetSynchronizationPoint_(soap, &soap_tmp___onvifMedia__SetSynchronizationPoint_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__SetSynchronizationPoint_(soap, &soap_tmp___onvifMedia__SetSynchronizationPoint_, "-onvifMedia:SetSynchronizationPoint", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__SetSynchronizationPoint_(soap, &soap_tmp___onvifMedia__SetSynchronizationPoint_, "-onvifMedia:SetSynchronizationPoint", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__SetSynchronizationPointResponse)
		return soap_closesock(soap);
	onvifMedia__SetSynchronizationPointResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__SetSynchronizationPointResponse->soap_get(soap, "onvifMedia:SetSynchronizationPointResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int MediaBindingProxy::GetSnapshotUri_(const char *endpoint, const char *soap_action, _onvifMedia__GetSnapshotUri *onvifMedia__GetSnapshotUri, _onvifMedia__GetSnapshotUriResponse *onvifMedia__GetSnapshotUriResponse)
{	struct soap *soap = this->soap;
	struct __onvifMedia__GetSnapshotUri_ soap_tmp___onvifMedia__GetSnapshotUri_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (!soap_action)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri";
	soap->encodingStyle = NULL;
	soap_tmp___onvifMedia__GetSnapshotUri_.onvifMedia__GetSnapshotUri = onvifMedia__GetSnapshotUri;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___onvifMedia__GetSnapshotUri_(soap, &soap_tmp___onvifMedia__GetSnapshotUri_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia__GetSnapshotUri_(soap, &soap_tmp___onvifMedia__GetSnapshotUri_, "-onvifMedia:GetSnapshotUri", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia__GetSnapshotUri_(soap, &soap_tmp___onvifMedia__GetSnapshotUri_, "-onvifMedia:GetSnapshotUri", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!onvifMedia__GetSnapshotUriResponse)
		return soap_closesock(soap);
	onvifMedia__GetSnapshotUriResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia__GetSnapshotUriResponse->soap_get(soap, "onvifMedia:GetSnapshotUriResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
