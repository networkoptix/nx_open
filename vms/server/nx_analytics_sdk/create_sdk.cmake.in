# Create analytics_sdk.zip at Generation phase.
# Build included sample(s) via included build_sample.sh/.bat at Build phase.

# Receive variable values from the calling CMakeList.txt.
set(CMAKE_CURRENT_BINARY_DIR @CMAKE_CURRENT_BINARY_DIR@)
set(CMAKE_SOURCE_DIR @CMAKE_SOURCE_DIR@)
set(PYTHON_EXECUTABLE @PYTHON_EXECUTABLE@)
set(copied_static_origin @copied_static_origin@)
set(copied_static_files @copied_static_files@)
set(copied_nx_kit_origin @copied_nx_kit_origin@)
set(copied_nx_kit_files @copied_nx_kit_files@)
set(copied_nx_sdk_files @copied_nx_sdk_files@)

set(copied_nx_sdk_src_nx_origin @copied_nx_sdk_src_nx_origin@)
set(copied_nx_sdk_src_nx_files @copied_nx_sdk_src_nx_files@)
set(copied_nx_sdk_old_header_origin @copied_nx_sdk_old_header_origin@)
set(copied_nx_sdk_old_header_files @copied_nx_sdk_old_header_files@)

set(copied_sample_origin @copied_sample_origin@)
set(copied_sample_files @copied_sample_files@)
set(copied_sample_ut_origin @copied_sample_ut_origin@)
set(copied_sample_ut_files @copied_sample_ut_files@)

set(sdk_name @sdk_name@)

include(${CMAKE_SOURCE_DIR}/cmake/utils.cmake)

set(target_dir ${CMAKE_CURRENT_BINARY_DIR}/${sdk_name})

nx_copy_always(${copied_static_origin} "${copied_static_files}" ${target_dir})
nx_copy_always(${copied_nx_kit_origin} "${copied_nx_kit_files}" ${target_dir}/nx_kit)

# Replace copyright notice in nx_kit: remove LGPL reference.
file(GLOB_RECURSE nx_kit_files ${target_dir}/nx_kit/*)
foreach(file ${nx_kit_files})
    execute_process(COMMAND ${PYTHON_EXECUTABLE}
        ${CMAKE_SOURCE_DIR}/build_utils/replace_in_file.py
            --source-string " Licensed under GNU Lesser General Public License version 3."
            --replacement-string ""
            ${file}
    )
endforeach()

nx_copy_always(${copied_nx_sdk_src_nx_origin} "${copied_nx_sdk_src_nx_files}" ${target_dir}/src/nx)
nx_copy_always(${copied_nx_sdk_old_header_origin} "${copied_nx_sdk_old_header_files}"
    ${target_dir}/src/plugins)
nx_copy_always(${copied_sample_origin} "${copied_sample_files}"
    ${target_dir}/samples/stub_analytics_plugin/src)
nx_copy_always(${copied_sample_ut_origin} "${copied_sample_ut_files}"
    ${target_dir}/samples/stub_analytics_plugin/unit_tests/src)
