/* soapMediaBindingService.cpp
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapMediaBindingService.h"

MediaBindingService::MediaBindingService()
{	this->soap = soap_new();
	this->soap_own = true;
	MediaBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

MediaBindingService::MediaBindingService(const MediaBindingService& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
}

MediaBindingService::MediaBindingService(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	MediaBindingService_init(_soap->imode, _soap->omode);
}

MediaBindingService::MediaBindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	MediaBindingService_init(iomode, iomode);
}

MediaBindingService::MediaBindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	MediaBindingService_init(imode, omode);
}

MediaBindingService::~MediaBindingService()
{	if (this->soap_own)
		soap_free(this->soap);
}

void MediaBindingService::MediaBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"onvifPacs", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"onvifAccessControl", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"onvifAccessRules", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"onvifActionEngine", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"onvifAdvancedSecurity-assb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
        {"onvifAdvancedSecurity-db", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
        {"onvifAdvancedSecurity-kb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
        {"onvifAdvancedSecurity-tsb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
        {"onvifAdvancedSecurity", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"onvifAnalytics-aeb", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
        {"onvifAnalytics-reb", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
        {"onvifAnalytics", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"onvifAnalyticsDevice", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"onvifCredential", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"onvifDisplay", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"onvifDoorControl", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"onvifEvents-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
        {"onvifEvents-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
        {"onvifEvents-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
        {"onvifEvents-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
        {"onvifEvents-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
        {"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"onvifEvents-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
        {"onvifEvents-psmb", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
        {"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"onvifEvents-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
        {"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"onvifMedia2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"onvifNetwork-dlb", "http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding", NULL, NULL},
        {"onvifNetwork-rdb", "http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding", NULL, NULL},
        {"onvifNetwork", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"onvifProvisioning", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"onvifReceiver", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"onvifRecording", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"onvifReplay", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"onvifScedule", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"onvifSearch", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {"onvifThermal", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

void MediaBindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void MediaBindingService::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	MediaBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
MediaBindingService *MediaBindingService::copy()
{	MediaBindingService *dup = SOAP_NEW_UNMANAGED(MediaBindingService);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}
#endif

MediaBindingService& MediaBindingService::operator=(const MediaBindingService& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
	}
	return *this;
}

int MediaBindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int MediaBindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int MediaBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int MediaBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int MediaBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int MediaBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void MediaBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void MediaBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *MediaBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void MediaBindingService::soap_noheader()
{	this->soap->header = NULL;
}

void MediaBindingService::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *subscriptionID)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->subscriptionID = subscriptionID;
}

::SOAP_ENV__Header *MediaBindingService::soap_header()
{	return this->soap->header;
}

#ifndef WITH_NOIO
int MediaBindingService::run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int MediaBindingService::ssl_run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}
#endif

SOAP_SOCKET MediaBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET MediaBindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int MediaBindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif
#endif

int MediaBindingService::serve()
{
#ifndef WITH_FASTCGI
	this->soap->keep_alive = this->soap->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (this->soap->keep_alive > 0 && this->soap->max_keep_alive > 0)
			this->soap->keep_alive--;
#endif
		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if ((dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap))) && this->soap->error && this->soap->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___onvifMedia__GetServiceCapabilities(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetVideoSources(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetAudioSources(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetAudioOutputs(struct soap*, MediaBindingService*);
static int serve___onvifMedia__CreateProfile(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetProfile(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetProfiles(struct soap*, MediaBindingService*);
static int serve___onvifMedia__AddVideoEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__AddVideoSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__AddAudioEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__AddAudioSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__AddPTZConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__AddVideoAnalyticsConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__AddMetadataConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__AddAudioOutputConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__AddAudioDecoderConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__RemoveVideoEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__RemoveVideoSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__RemoveAudioEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__RemoveAudioSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__RemovePTZConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__RemoveVideoAnalyticsConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__RemoveMetadataConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__RemoveAudioOutputConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__RemoveAudioDecoderConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__DeleteProfile(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetVideoSourceConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetVideoEncoderConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetAudioSourceConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetAudioEncoderConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetVideoAnalyticsConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetMetadataConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetAudioOutputConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetAudioDecoderConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetVideoSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetVideoEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetAudioSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetAudioEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetVideoAnalyticsConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetMetadataConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetAudioOutputConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetAudioDecoderConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetCompatibleVideoEncoderConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetCompatibleVideoSourceConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetCompatibleAudioEncoderConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetCompatibleAudioSourceConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetCompatibleVideoAnalyticsConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetCompatibleMetadataConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetCompatibleAudioOutputConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetCompatibleAudioDecoderConfigurations(struct soap*, MediaBindingService*);
static int serve___onvifMedia__SetVideoSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__SetVideoEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__SetAudioSourceConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__SetAudioEncoderConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__SetVideoAnalyticsConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__SetMetadataConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__SetAudioOutputConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__SetAudioDecoderConfiguration(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetVideoSourceConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetVideoEncoderConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetAudioSourceConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetAudioEncoderConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetMetadataConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetAudioOutputConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetAudioDecoderConfigurationOptions(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetStreamUri(struct soap*, MediaBindingService*);
static int serve___onvifMedia__StartMulticastStreaming(struct soap*, MediaBindingService*);
static int serve___onvifMedia__StopMulticastStreaming(struct soap*, MediaBindingService*);
static int serve___onvifMedia__SetSynchronizationPoint(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetSnapshotUri(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetVideoSourceModes(struct soap*, MediaBindingService*);
static int serve___onvifMedia__SetVideoSourceMode(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetOSDs(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetOSD(struct soap*, MediaBindingService*);
static int serve___onvifMedia__GetOSDOptions(struct soap*, MediaBindingService*);
static int serve___onvifMedia__SetOSD(struct soap*, MediaBindingService*);
static int serve___onvifMedia__CreateOSD(struct soap*, MediaBindingService*);
static int serve___onvifMedia__DeleteOSD(struct soap*, MediaBindingService*);

int MediaBindingService::dispatch()
{	return dispatch(this->soap);
}

int MediaBindingService::dispatch(struct soap* soap)
{
	MediaBindingService_init(soap->imode, soap->omode);

	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetServiceCapabilities"))
		return serve___onvifMedia__GetServiceCapabilities(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetVideoSources"))
		return serve___onvifMedia__GetVideoSources(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetAudioSources"))
		return serve___onvifMedia__GetAudioSources(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetAudioOutputs"))
		return serve___onvifMedia__GetAudioOutputs(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:CreateProfile"))
		return serve___onvifMedia__CreateProfile(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetProfile"))
		return serve___onvifMedia__GetProfile(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetProfiles"))
		return serve___onvifMedia__GetProfiles(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:AddVideoEncoderConfiguration"))
		return serve___onvifMedia__AddVideoEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:AddVideoSourceConfiguration"))
		return serve___onvifMedia__AddVideoSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:AddAudioEncoderConfiguration"))
		return serve___onvifMedia__AddAudioEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:AddAudioSourceConfiguration"))
		return serve___onvifMedia__AddAudioSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:AddPTZConfiguration"))
		return serve___onvifMedia__AddPTZConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:AddVideoAnalyticsConfiguration"))
		return serve___onvifMedia__AddVideoAnalyticsConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:AddMetadataConfiguration"))
		return serve___onvifMedia__AddMetadataConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:AddAudioOutputConfiguration"))
		return serve___onvifMedia__AddAudioOutputConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:AddAudioDecoderConfiguration"))
		return serve___onvifMedia__AddAudioDecoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:RemoveVideoEncoderConfiguration"))
		return serve___onvifMedia__RemoveVideoEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:RemoveVideoSourceConfiguration"))
		return serve___onvifMedia__RemoveVideoSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:RemoveAudioEncoderConfiguration"))
		return serve___onvifMedia__RemoveAudioEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:RemoveAudioSourceConfiguration"))
		return serve___onvifMedia__RemoveAudioSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:RemovePTZConfiguration"))
		return serve___onvifMedia__RemovePTZConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:RemoveVideoAnalyticsConfiguration"))
		return serve___onvifMedia__RemoveVideoAnalyticsConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:RemoveMetadataConfiguration"))
		return serve___onvifMedia__RemoveMetadataConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:RemoveAudioOutputConfiguration"))
		return serve___onvifMedia__RemoveAudioOutputConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:RemoveAudioDecoderConfiguration"))
		return serve___onvifMedia__RemoveAudioDecoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:DeleteProfile"))
		return serve___onvifMedia__DeleteProfile(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetVideoSourceConfigurations"))
		return serve___onvifMedia__GetVideoSourceConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetVideoEncoderConfigurations"))
		return serve___onvifMedia__GetVideoEncoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetAudioSourceConfigurations"))
		return serve___onvifMedia__GetAudioSourceConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetAudioEncoderConfigurations"))
		return serve___onvifMedia__GetAudioEncoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetVideoAnalyticsConfigurations"))
		return serve___onvifMedia__GetVideoAnalyticsConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetMetadataConfigurations"))
		return serve___onvifMedia__GetMetadataConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetAudioOutputConfigurations"))
		return serve___onvifMedia__GetAudioOutputConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetAudioDecoderConfigurations"))
		return serve___onvifMedia__GetAudioDecoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetVideoSourceConfiguration"))
		return serve___onvifMedia__GetVideoSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetVideoEncoderConfiguration"))
		return serve___onvifMedia__GetVideoEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetAudioSourceConfiguration"))
		return serve___onvifMedia__GetAudioSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetAudioEncoderConfiguration"))
		return serve___onvifMedia__GetAudioEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetVideoAnalyticsConfiguration"))
		return serve___onvifMedia__GetVideoAnalyticsConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetMetadataConfiguration"))
		return serve___onvifMedia__GetMetadataConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetAudioOutputConfiguration"))
		return serve___onvifMedia__GetAudioOutputConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetAudioDecoderConfiguration"))
		return serve___onvifMedia__GetAudioDecoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetCompatibleVideoEncoderConfigurations"))
		return serve___onvifMedia__GetCompatibleVideoEncoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetCompatibleVideoSourceConfigurations"))
		return serve___onvifMedia__GetCompatibleVideoSourceConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetCompatibleAudioEncoderConfigurations"))
		return serve___onvifMedia__GetCompatibleAudioEncoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetCompatibleAudioSourceConfigurations"))
		return serve___onvifMedia__GetCompatibleAudioSourceConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetCompatibleVideoAnalyticsConfigurations"))
		return serve___onvifMedia__GetCompatibleVideoAnalyticsConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetCompatibleMetadataConfigurations"))
		return serve___onvifMedia__GetCompatibleMetadataConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetCompatibleAudioOutputConfigurations"))
		return serve___onvifMedia__GetCompatibleAudioOutputConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetCompatibleAudioDecoderConfigurations"))
		return serve___onvifMedia__GetCompatibleAudioDecoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:SetVideoSourceConfiguration"))
		return serve___onvifMedia__SetVideoSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:SetVideoEncoderConfiguration"))
		return serve___onvifMedia__SetVideoEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:SetAudioSourceConfiguration"))
		return serve___onvifMedia__SetAudioSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:SetAudioEncoderConfiguration"))
		return serve___onvifMedia__SetAudioEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:SetVideoAnalyticsConfiguration"))
		return serve___onvifMedia__SetVideoAnalyticsConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:SetMetadataConfiguration"))
		return serve___onvifMedia__SetMetadataConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:SetAudioOutputConfiguration"))
		return serve___onvifMedia__SetAudioOutputConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:SetAudioDecoderConfiguration"))
		return serve___onvifMedia__SetAudioDecoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetVideoSourceConfigurationOptions"))
		return serve___onvifMedia__GetVideoSourceConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetVideoEncoderConfigurationOptions"))
		return serve___onvifMedia__GetVideoEncoderConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetAudioSourceConfigurationOptions"))
		return serve___onvifMedia__GetAudioSourceConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetAudioEncoderConfigurationOptions"))
		return serve___onvifMedia__GetAudioEncoderConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetMetadataConfigurationOptions"))
		return serve___onvifMedia__GetMetadataConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetAudioOutputConfigurationOptions"))
		return serve___onvifMedia__GetAudioOutputConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetAudioDecoderConfigurationOptions"))
		return serve___onvifMedia__GetAudioDecoderConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetGuaranteedNumberOfVideoEncoderInstances"))
		return serve___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetStreamUri"))
		return serve___onvifMedia__GetStreamUri(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:StartMulticastStreaming"))
		return serve___onvifMedia__StartMulticastStreaming(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:StopMulticastStreaming"))
		return serve___onvifMedia__StopMulticastStreaming(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:SetSynchronizationPoint"))
		return serve___onvifMedia__SetSynchronizationPoint(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetSnapshotUri"))
		return serve___onvifMedia__GetSnapshotUri(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetVideoSourceModes"))
		return serve___onvifMedia__GetVideoSourceModes(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:SetVideoSourceMode"))
		return serve___onvifMedia__SetVideoSourceMode(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetOSDs"))
		return serve___onvifMedia__GetOSDs(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetOSD"))
		return serve___onvifMedia__GetOSD(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:GetOSDOptions"))
		return serve___onvifMedia__GetOSDOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:SetOSD"))
		return serve___onvifMedia__SetOSD(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:CreateOSD"))
		return serve___onvifMedia__CreateOSD(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia:DeleteOSD"))
		return serve___onvifMedia__DeleteOSD(soap, this);
	return soap->error = SOAP_NO_METHOD;
}

static int serve___onvifMedia__GetServiceCapabilities(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetServiceCapabilities soap_tmp___onvifMedia__GetServiceCapabilities;
	_onvifMedia__GetServiceCapabilitiesResponse onvifMedia__GetServiceCapabilitiesResponse;
	onvifMedia__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___onvifMedia__GetServiceCapabilities(soap, &soap_tmp___onvifMedia__GetServiceCapabilities);
	if (!soap_get___onvifMedia__GetServiceCapabilities(soap, &soap_tmp___onvifMedia__GetServiceCapabilities, "-onvifMedia:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetServiceCapabilities(soap_tmp___onvifMedia__GetServiceCapabilities.onvifMedia__GetServiceCapabilities, onvifMedia__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetServiceCapabilitiesResponse.soap_put(soap, "onvifMedia:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetServiceCapabilitiesResponse.soap_put(soap, "onvifMedia:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetVideoSources(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetVideoSources soap_tmp___onvifMedia__GetVideoSources;
	_onvifMedia__GetVideoSourcesResponse onvifMedia__GetVideoSourcesResponse;
	onvifMedia__GetVideoSourcesResponse.soap_default(soap);
	soap_default___onvifMedia__GetVideoSources(soap, &soap_tmp___onvifMedia__GetVideoSources);
	if (!soap_get___onvifMedia__GetVideoSources(soap, &soap_tmp___onvifMedia__GetVideoSources, "-onvifMedia:GetVideoSources", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSources(soap_tmp___onvifMedia__GetVideoSources.onvifMedia__GetVideoSources, onvifMedia__GetVideoSourcesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetVideoSourcesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetVideoSourcesResponse.soap_put(soap, "onvifMedia:GetVideoSourcesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetVideoSourcesResponse.soap_put(soap, "onvifMedia:GetVideoSourcesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetAudioSources(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetAudioSources soap_tmp___onvifMedia__GetAudioSources;
	_onvifMedia__GetAudioSourcesResponse onvifMedia__GetAudioSourcesResponse;
	onvifMedia__GetAudioSourcesResponse.soap_default(soap);
	soap_default___onvifMedia__GetAudioSources(soap, &soap_tmp___onvifMedia__GetAudioSources);
	if (!soap_get___onvifMedia__GetAudioSources(soap, &soap_tmp___onvifMedia__GetAudioSources, "-onvifMedia:GetAudioSources", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSources(soap_tmp___onvifMedia__GetAudioSources.onvifMedia__GetAudioSources, onvifMedia__GetAudioSourcesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetAudioSourcesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioSourcesResponse.soap_put(soap, "onvifMedia:GetAudioSourcesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioSourcesResponse.soap_put(soap, "onvifMedia:GetAudioSourcesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetAudioOutputs(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetAudioOutputs soap_tmp___onvifMedia__GetAudioOutputs;
	_onvifMedia__GetAudioOutputsResponse onvifMedia__GetAudioOutputsResponse;
	onvifMedia__GetAudioOutputsResponse.soap_default(soap);
	soap_default___onvifMedia__GetAudioOutputs(soap, &soap_tmp___onvifMedia__GetAudioOutputs);
	if (!soap_get___onvifMedia__GetAudioOutputs(soap, &soap_tmp___onvifMedia__GetAudioOutputs, "-onvifMedia:GetAudioOutputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputs(soap_tmp___onvifMedia__GetAudioOutputs.onvifMedia__GetAudioOutputs, onvifMedia__GetAudioOutputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetAudioOutputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioOutputsResponse.soap_put(soap, "onvifMedia:GetAudioOutputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioOutputsResponse.soap_put(soap, "onvifMedia:GetAudioOutputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__CreateProfile(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__CreateProfile soap_tmp___onvifMedia__CreateProfile;
	_onvifMedia__CreateProfileResponse onvifMedia__CreateProfileResponse;
	onvifMedia__CreateProfileResponse.soap_default(soap);
	soap_default___onvifMedia__CreateProfile(soap, &soap_tmp___onvifMedia__CreateProfile);
	if (!soap_get___onvifMedia__CreateProfile(soap, &soap_tmp___onvifMedia__CreateProfile, "-onvifMedia:CreateProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateProfile(soap_tmp___onvifMedia__CreateProfile.onvifMedia__CreateProfile, onvifMedia__CreateProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__CreateProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__CreateProfileResponse.soap_put(soap, "onvifMedia:CreateProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__CreateProfileResponse.soap_put(soap, "onvifMedia:CreateProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetProfile(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetProfile soap_tmp___onvifMedia__GetProfile;
	_onvifMedia__GetProfileResponse onvifMedia__GetProfileResponse;
	onvifMedia__GetProfileResponse.soap_default(soap);
	soap_default___onvifMedia__GetProfile(soap, &soap_tmp___onvifMedia__GetProfile);
	if (!soap_get___onvifMedia__GetProfile(soap, &soap_tmp___onvifMedia__GetProfile, "-onvifMedia:GetProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetProfile(soap_tmp___onvifMedia__GetProfile.onvifMedia__GetProfile, onvifMedia__GetProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetProfileResponse.soap_put(soap, "onvifMedia:GetProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetProfileResponse.soap_put(soap, "onvifMedia:GetProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetProfiles(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetProfiles soap_tmp___onvifMedia__GetProfiles;
	_onvifMedia__GetProfilesResponse onvifMedia__GetProfilesResponse;
	onvifMedia__GetProfilesResponse.soap_default(soap);
	soap_default___onvifMedia__GetProfiles(soap, &soap_tmp___onvifMedia__GetProfiles);
	if (!soap_get___onvifMedia__GetProfiles(soap, &soap_tmp___onvifMedia__GetProfiles, "-onvifMedia:GetProfiles", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetProfiles(soap_tmp___onvifMedia__GetProfiles.onvifMedia__GetProfiles, onvifMedia__GetProfilesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetProfilesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetProfilesResponse.soap_put(soap, "onvifMedia:GetProfilesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetProfilesResponse.soap_put(soap, "onvifMedia:GetProfilesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__AddVideoEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__AddVideoEncoderConfiguration soap_tmp___onvifMedia__AddVideoEncoderConfiguration;
	_onvifMedia__AddVideoEncoderConfigurationResponse onvifMedia__AddVideoEncoderConfigurationResponse;
	onvifMedia__AddVideoEncoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__AddVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddVideoEncoderConfiguration);
	if (!soap_get___onvifMedia__AddVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddVideoEncoderConfiguration, "-onvifMedia:AddVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddVideoEncoderConfiguration(soap_tmp___onvifMedia__AddVideoEncoderConfiguration.onvifMedia__AddVideoEncoderConfiguration, onvifMedia__AddVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__AddVideoEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__AddVideoEncoderConfigurationResponse.soap_put(soap, "onvifMedia:AddVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__AddVideoEncoderConfigurationResponse.soap_put(soap, "onvifMedia:AddVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__AddVideoSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__AddVideoSourceConfiguration soap_tmp___onvifMedia__AddVideoSourceConfiguration;
	_onvifMedia__AddVideoSourceConfigurationResponse onvifMedia__AddVideoSourceConfigurationResponse;
	onvifMedia__AddVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__AddVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__AddVideoSourceConfiguration);
	if (!soap_get___onvifMedia__AddVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__AddVideoSourceConfiguration, "-onvifMedia:AddVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddVideoSourceConfiguration(soap_tmp___onvifMedia__AddVideoSourceConfiguration.onvifMedia__AddVideoSourceConfiguration, onvifMedia__AddVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__AddVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__AddVideoSourceConfigurationResponse.soap_put(soap, "onvifMedia:AddVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__AddVideoSourceConfigurationResponse.soap_put(soap, "onvifMedia:AddVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__AddAudioEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__AddAudioEncoderConfiguration soap_tmp___onvifMedia__AddAudioEncoderConfiguration;
	_onvifMedia__AddAudioEncoderConfigurationResponse onvifMedia__AddAudioEncoderConfigurationResponse;
	onvifMedia__AddAudioEncoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__AddAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioEncoderConfiguration);
	if (!soap_get___onvifMedia__AddAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioEncoderConfiguration, "-onvifMedia:AddAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddAudioEncoderConfiguration(soap_tmp___onvifMedia__AddAudioEncoderConfiguration.onvifMedia__AddAudioEncoderConfiguration, onvifMedia__AddAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__AddAudioEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__AddAudioEncoderConfigurationResponse.soap_put(soap, "onvifMedia:AddAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__AddAudioEncoderConfigurationResponse.soap_put(soap, "onvifMedia:AddAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__AddAudioSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__AddAudioSourceConfiguration soap_tmp___onvifMedia__AddAudioSourceConfiguration;
	_onvifMedia__AddAudioSourceConfigurationResponse onvifMedia__AddAudioSourceConfigurationResponse;
	onvifMedia__AddAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__AddAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__AddAudioSourceConfiguration);
	if (!soap_get___onvifMedia__AddAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__AddAudioSourceConfiguration, "-onvifMedia:AddAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddAudioSourceConfiguration(soap_tmp___onvifMedia__AddAudioSourceConfiguration.onvifMedia__AddAudioSourceConfiguration, onvifMedia__AddAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__AddAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__AddAudioSourceConfigurationResponse.soap_put(soap, "onvifMedia:AddAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__AddAudioSourceConfigurationResponse.soap_put(soap, "onvifMedia:AddAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__AddPTZConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__AddPTZConfiguration soap_tmp___onvifMedia__AddPTZConfiguration;
	_onvifMedia__AddPTZConfigurationResponse onvifMedia__AddPTZConfigurationResponse;
	onvifMedia__AddPTZConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__AddPTZConfiguration(soap, &soap_tmp___onvifMedia__AddPTZConfiguration);
	if (!soap_get___onvifMedia__AddPTZConfiguration(soap, &soap_tmp___onvifMedia__AddPTZConfiguration, "-onvifMedia:AddPTZConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddPTZConfiguration(soap_tmp___onvifMedia__AddPTZConfiguration.onvifMedia__AddPTZConfiguration, onvifMedia__AddPTZConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__AddPTZConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__AddPTZConfigurationResponse.soap_put(soap, "onvifMedia:AddPTZConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__AddPTZConfigurationResponse.soap_put(soap, "onvifMedia:AddPTZConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__AddVideoAnalyticsConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__AddVideoAnalyticsConfiguration soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration;
	_onvifMedia__AddVideoAnalyticsConfigurationResponse onvifMedia__AddVideoAnalyticsConfigurationResponse;
	onvifMedia__AddVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__AddVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration);
	if (!soap_get___onvifMedia__AddVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration, "-onvifMedia:AddVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddVideoAnalyticsConfiguration(soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration.onvifMedia__AddVideoAnalyticsConfiguration, onvifMedia__AddVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__AddVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__AddVideoAnalyticsConfigurationResponse.soap_put(soap, "onvifMedia:AddVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__AddVideoAnalyticsConfigurationResponse.soap_put(soap, "onvifMedia:AddVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__AddMetadataConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__AddMetadataConfiguration soap_tmp___onvifMedia__AddMetadataConfiguration;
	_onvifMedia__AddMetadataConfigurationResponse onvifMedia__AddMetadataConfigurationResponse;
	onvifMedia__AddMetadataConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__AddMetadataConfiguration(soap, &soap_tmp___onvifMedia__AddMetadataConfiguration);
	if (!soap_get___onvifMedia__AddMetadataConfiguration(soap, &soap_tmp___onvifMedia__AddMetadataConfiguration, "-onvifMedia:AddMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddMetadataConfiguration(soap_tmp___onvifMedia__AddMetadataConfiguration.onvifMedia__AddMetadataConfiguration, onvifMedia__AddMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__AddMetadataConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__AddMetadataConfigurationResponse.soap_put(soap, "onvifMedia:AddMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__AddMetadataConfigurationResponse.soap_put(soap, "onvifMedia:AddMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__AddAudioOutputConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__AddAudioOutputConfiguration soap_tmp___onvifMedia__AddAudioOutputConfiguration;
	_onvifMedia__AddAudioOutputConfigurationResponse onvifMedia__AddAudioOutputConfigurationResponse;
	onvifMedia__AddAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__AddAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__AddAudioOutputConfiguration);
	if (!soap_get___onvifMedia__AddAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__AddAudioOutputConfiguration, "-onvifMedia:AddAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddAudioOutputConfiguration(soap_tmp___onvifMedia__AddAudioOutputConfiguration.onvifMedia__AddAudioOutputConfiguration, onvifMedia__AddAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__AddAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__AddAudioOutputConfigurationResponse.soap_put(soap, "onvifMedia:AddAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__AddAudioOutputConfigurationResponse.soap_put(soap, "onvifMedia:AddAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__AddAudioDecoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__AddAudioDecoderConfiguration soap_tmp___onvifMedia__AddAudioDecoderConfiguration;
	_onvifMedia__AddAudioDecoderConfigurationResponse onvifMedia__AddAudioDecoderConfigurationResponse;
	onvifMedia__AddAudioDecoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__AddAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioDecoderConfiguration);
	if (!soap_get___onvifMedia__AddAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioDecoderConfiguration, "-onvifMedia:AddAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddAudioDecoderConfiguration(soap_tmp___onvifMedia__AddAudioDecoderConfiguration.onvifMedia__AddAudioDecoderConfiguration, onvifMedia__AddAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__AddAudioDecoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__AddAudioDecoderConfigurationResponse.soap_put(soap, "onvifMedia:AddAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__AddAudioDecoderConfigurationResponse.soap_put(soap, "onvifMedia:AddAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__RemoveVideoEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__RemoveVideoEncoderConfiguration soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration;
	_onvifMedia__RemoveVideoEncoderConfigurationResponse onvifMedia__RemoveVideoEncoderConfigurationResponse;
	onvifMedia__RemoveVideoEncoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__RemoveVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration);
	if (!soap_get___onvifMedia__RemoveVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration, "-onvifMedia:RemoveVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveVideoEncoderConfiguration(soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration.onvifMedia__RemoveVideoEncoderConfiguration, onvifMedia__RemoveVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__RemoveVideoEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__RemoveVideoEncoderConfigurationResponse.soap_put(soap, "onvifMedia:RemoveVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__RemoveVideoEncoderConfigurationResponse.soap_put(soap, "onvifMedia:RemoveVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__RemoveVideoSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__RemoveVideoSourceConfiguration soap_tmp___onvifMedia__RemoveVideoSourceConfiguration;
	_onvifMedia__RemoveVideoSourceConfigurationResponse onvifMedia__RemoveVideoSourceConfigurationResponse;
	onvifMedia__RemoveVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__RemoveVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoSourceConfiguration);
	if (!soap_get___onvifMedia__RemoveVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoSourceConfiguration, "-onvifMedia:RemoveVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveVideoSourceConfiguration(soap_tmp___onvifMedia__RemoveVideoSourceConfiguration.onvifMedia__RemoveVideoSourceConfiguration, onvifMedia__RemoveVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__RemoveVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__RemoveVideoSourceConfigurationResponse.soap_put(soap, "onvifMedia:RemoveVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__RemoveVideoSourceConfigurationResponse.soap_put(soap, "onvifMedia:RemoveVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__RemoveAudioEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__RemoveAudioEncoderConfiguration soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration;
	_onvifMedia__RemoveAudioEncoderConfigurationResponse onvifMedia__RemoveAudioEncoderConfigurationResponse;
	onvifMedia__RemoveAudioEncoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__RemoveAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration);
	if (!soap_get___onvifMedia__RemoveAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration, "-onvifMedia:RemoveAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveAudioEncoderConfiguration(soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration.onvifMedia__RemoveAudioEncoderConfiguration, onvifMedia__RemoveAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__RemoveAudioEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__RemoveAudioEncoderConfigurationResponse.soap_put(soap, "onvifMedia:RemoveAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__RemoveAudioEncoderConfigurationResponse.soap_put(soap, "onvifMedia:RemoveAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__RemoveAudioSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__RemoveAudioSourceConfiguration soap_tmp___onvifMedia__RemoveAudioSourceConfiguration;
	_onvifMedia__RemoveAudioSourceConfigurationResponse onvifMedia__RemoveAudioSourceConfigurationResponse;
	onvifMedia__RemoveAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__RemoveAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioSourceConfiguration);
	if (!soap_get___onvifMedia__RemoveAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioSourceConfiguration, "-onvifMedia:RemoveAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveAudioSourceConfiguration(soap_tmp___onvifMedia__RemoveAudioSourceConfiguration.onvifMedia__RemoveAudioSourceConfiguration, onvifMedia__RemoveAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__RemoveAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__RemoveAudioSourceConfigurationResponse.soap_put(soap, "onvifMedia:RemoveAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__RemoveAudioSourceConfigurationResponse.soap_put(soap, "onvifMedia:RemoveAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__RemovePTZConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__RemovePTZConfiguration soap_tmp___onvifMedia__RemovePTZConfiguration;
	_onvifMedia__RemovePTZConfigurationResponse onvifMedia__RemovePTZConfigurationResponse;
	onvifMedia__RemovePTZConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__RemovePTZConfiguration(soap, &soap_tmp___onvifMedia__RemovePTZConfiguration);
	if (!soap_get___onvifMedia__RemovePTZConfiguration(soap, &soap_tmp___onvifMedia__RemovePTZConfiguration, "-onvifMedia:RemovePTZConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemovePTZConfiguration(soap_tmp___onvifMedia__RemovePTZConfiguration.onvifMedia__RemovePTZConfiguration, onvifMedia__RemovePTZConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__RemovePTZConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__RemovePTZConfigurationResponse.soap_put(soap, "onvifMedia:RemovePTZConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__RemovePTZConfigurationResponse.soap_put(soap, "onvifMedia:RemovePTZConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__RemoveVideoAnalyticsConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__RemoveVideoAnalyticsConfiguration soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration;
	_onvifMedia__RemoveVideoAnalyticsConfigurationResponse onvifMedia__RemoveVideoAnalyticsConfigurationResponse;
	onvifMedia__RemoveVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration);
	if (!soap_get___onvifMedia__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration, "-onvifMedia:RemoveVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveVideoAnalyticsConfiguration(soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration.onvifMedia__RemoveVideoAnalyticsConfiguration, onvifMedia__RemoveVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__RemoveVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__RemoveVideoAnalyticsConfigurationResponse.soap_put(soap, "onvifMedia:RemoveVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__RemoveVideoAnalyticsConfigurationResponse.soap_put(soap, "onvifMedia:RemoveVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__RemoveMetadataConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__RemoveMetadataConfiguration soap_tmp___onvifMedia__RemoveMetadataConfiguration;
	_onvifMedia__RemoveMetadataConfigurationResponse onvifMedia__RemoveMetadataConfigurationResponse;
	onvifMedia__RemoveMetadataConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__RemoveMetadataConfiguration(soap, &soap_tmp___onvifMedia__RemoveMetadataConfiguration);
	if (!soap_get___onvifMedia__RemoveMetadataConfiguration(soap, &soap_tmp___onvifMedia__RemoveMetadataConfiguration, "-onvifMedia:RemoveMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveMetadataConfiguration(soap_tmp___onvifMedia__RemoveMetadataConfiguration.onvifMedia__RemoveMetadataConfiguration, onvifMedia__RemoveMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__RemoveMetadataConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__RemoveMetadataConfigurationResponse.soap_put(soap, "onvifMedia:RemoveMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__RemoveMetadataConfigurationResponse.soap_put(soap, "onvifMedia:RemoveMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__RemoveAudioOutputConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__RemoveAudioOutputConfiguration soap_tmp___onvifMedia__RemoveAudioOutputConfiguration;
	_onvifMedia__RemoveAudioOutputConfigurationResponse onvifMedia__RemoveAudioOutputConfigurationResponse;
	onvifMedia__RemoveAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__RemoveAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioOutputConfiguration);
	if (!soap_get___onvifMedia__RemoveAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioOutputConfiguration, "-onvifMedia:RemoveAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveAudioOutputConfiguration(soap_tmp___onvifMedia__RemoveAudioOutputConfiguration.onvifMedia__RemoveAudioOutputConfiguration, onvifMedia__RemoveAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__RemoveAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__RemoveAudioOutputConfigurationResponse.soap_put(soap, "onvifMedia:RemoveAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__RemoveAudioOutputConfigurationResponse.soap_put(soap, "onvifMedia:RemoveAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__RemoveAudioDecoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__RemoveAudioDecoderConfiguration soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration;
	_onvifMedia__RemoveAudioDecoderConfigurationResponse onvifMedia__RemoveAudioDecoderConfigurationResponse;
	onvifMedia__RemoveAudioDecoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__RemoveAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration);
	if (!soap_get___onvifMedia__RemoveAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration, "-onvifMedia:RemoveAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveAudioDecoderConfiguration(soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration.onvifMedia__RemoveAudioDecoderConfiguration, onvifMedia__RemoveAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__RemoveAudioDecoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__RemoveAudioDecoderConfigurationResponse.soap_put(soap, "onvifMedia:RemoveAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__RemoveAudioDecoderConfigurationResponse.soap_put(soap, "onvifMedia:RemoveAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__DeleteProfile(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__DeleteProfile soap_tmp___onvifMedia__DeleteProfile;
	_onvifMedia__DeleteProfileResponse onvifMedia__DeleteProfileResponse;
	onvifMedia__DeleteProfileResponse.soap_default(soap);
	soap_default___onvifMedia__DeleteProfile(soap, &soap_tmp___onvifMedia__DeleteProfile);
	if (!soap_get___onvifMedia__DeleteProfile(soap, &soap_tmp___onvifMedia__DeleteProfile, "-onvifMedia:DeleteProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteProfile(soap_tmp___onvifMedia__DeleteProfile.onvifMedia__DeleteProfile, onvifMedia__DeleteProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__DeleteProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__DeleteProfileResponse.soap_put(soap, "onvifMedia:DeleteProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__DeleteProfileResponse.soap_put(soap, "onvifMedia:DeleteProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetVideoSourceConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetVideoSourceConfigurations soap_tmp___onvifMedia__GetVideoSourceConfigurations;
	_onvifMedia__GetVideoSourceConfigurationsResponse onvifMedia__GetVideoSourceConfigurationsResponse;
	onvifMedia__GetVideoSourceConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurations);
	if (!soap_get___onvifMedia__GetVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurations, "-onvifMedia:GetVideoSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfigurations(soap_tmp___onvifMedia__GetVideoSourceConfigurations.onvifMedia__GetVideoSourceConfigurations, onvifMedia__GetVideoSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetVideoSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetVideoSourceConfigurationsResponse.soap_put(soap, "onvifMedia:GetVideoSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetVideoSourceConfigurationsResponse.soap_put(soap, "onvifMedia:GetVideoSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetVideoEncoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetVideoEncoderConfigurations soap_tmp___onvifMedia__GetVideoEncoderConfigurations;
	_onvifMedia__GetVideoEncoderConfigurationsResponse onvifMedia__GetVideoEncoderConfigurationsResponse;
	onvifMedia__GetVideoEncoderConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurations);
	if (!soap_get___onvifMedia__GetVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurations, "-onvifMedia:GetVideoEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderConfigurations(soap_tmp___onvifMedia__GetVideoEncoderConfigurations.onvifMedia__GetVideoEncoderConfigurations, onvifMedia__GetVideoEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetVideoEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetVideoEncoderConfigurationsResponse.soap_put(soap, "onvifMedia:GetVideoEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetVideoEncoderConfigurationsResponse.soap_put(soap, "onvifMedia:GetVideoEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetAudioSourceConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetAudioSourceConfigurations soap_tmp___onvifMedia__GetAudioSourceConfigurations;
	_onvifMedia__GetAudioSourceConfigurationsResponse onvifMedia__GetAudioSourceConfigurationsResponse;
	onvifMedia__GetAudioSourceConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurations);
	if (!soap_get___onvifMedia__GetAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurations, "-onvifMedia:GetAudioSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfigurations(soap_tmp___onvifMedia__GetAudioSourceConfigurations.onvifMedia__GetAudioSourceConfigurations, onvifMedia__GetAudioSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetAudioSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioSourceConfigurationsResponse.soap_put(soap, "onvifMedia:GetAudioSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioSourceConfigurationsResponse.soap_put(soap, "onvifMedia:GetAudioSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetAudioEncoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetAudioEncoderConfigurations soap_tmp___onvifMedia__GetAudioEncoderConfigurations;
	_onvifMedia__GetAudioEncoderConfigurationsResponse onvifMedia__GetAudioEncoderConfigurationsResponse;
	onvifMedia__GetAudioEncoderConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurations);
	if (!soap_get___onvifMedia__GetAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurations, "-onvifMedia:GetAudioEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioEncoderConfigurations(soap_tmp___onvifMedia__GetAudioEncoderConfigurations.onvifMedia__GetAudioEncoderConfigurations, onvifMedia__GetAudioEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetAudioEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioEncoderConfigurationsResponse.soap_put(soap, "onvifMedia:GetAudioEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioEncoderConfigurationsResponse.soap_put(soap, "onvifMedia:GetAudioEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetVideoAnalyticsConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetVideoAnalyticsConfigurations soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations;
	_onvifMedia__GetVideoAnalyticsConfigurationsResponse onvifMedia__GetVideoAnalyticsConfigurationsResponse;
	onvifMedia__GetVideoAnalyticsConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations);
	if (!soap_get___onvifMedia__GetVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations, "-onvifMedia:GetVideoAnalyticsConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoAnalyticsConfigurations(soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations.onvifMedia__GetVideoAnalyticsConfigurations, onvifMedia__GetVideoAnalyticsConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetVideoAnalyticsConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetVideoAnalyticsConfigurationsResponse.soap_put(soap, "onvifMedia:GetVideoAnalyticsConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetVideoAnalyticsConfigurationsResponse.soap_put(soap, "onvifMedia:GetVideoAnalyticsConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetMetadataConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetMetadataConfigurations soap_tmp___onvifMedia__GetMetadataConfigurations;
	_onvifMedia__GetMetadataConfigurationsResponse onvifMedia__GetMetadataConfigurationsResponse;
	onvifMedia__GetMetadataConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetMetadataConfigurations);
	if (!soap_get___onvifMedia__GetMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetMetadataConfigurations, "-onvifMedia:GetMetadataConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMetadataConfigurations(soap_tmp___onvifMedia__GetMetadataConfigurations.onvifMedia__GetMetadataConfigurations, onvifMedia__GetMetadataConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetMetadataConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetMetadataConfigurationsResponse.soap_put(soap, "onvifMedia:GetMetadataConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetMetadataConfigurationsResponse.soap_put(soap, "onvifMedia:GetMetadataConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetAudioOutputConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetAudioOutputConfigurations soap_tmp___onvifMedia__GetAudioOutputConfigurations;
	_onvifMedia__GetAudioOutputConfigurationsResponse onvifMedia__GetAudioOutputConfigurationsResponse;
	onvifMedia__GetAudioOutputConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurations);
	if (!soap_get___onvifMedia__GetAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurations, "-onvifMedia:GetAudioOutputConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfigurations(soap_tmp___onvifMedia__GetAudioOutputConfigurations.onvifMedia__GetAudioOutputConfigurations, onvifMedia__GetAudioOutputConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetAudioOutputConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioOutputConfigurationsResponse.soap_put(soap, "onvifMedia:GetAudioOutputConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioOutputConfigurationsResponse.soap_put(soap, "onvifMedia:GetAudioOutputConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetAudioDecoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetAudioDecoderConfigurations soap_tmp___onvifMedia__GetAudioDecoderConfigurations;
	_onvifMedia__GetAudioDecoderConfigurationsResponse onvifMedia__GetAudioDecoderConfigurationsResponse;
	onvifMedia__GetAudioDecoderConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurations);
	if (!soap_get___onvifMedia__GetAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurations, "-onvifMedia:GetAudioDecoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioDecoderConfigurations(soap_tmp___onvifMedia__GetAudioDecoderConfigurations.onvifMedia__GetAudioDecoderConfigurations, onvifMedia__GetAudioDecoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetAudioDecoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioDecoderConfigurationsResponse.soap_put(soap, "onvifMedia:GetAudioDecoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioDecoderConfigurationsResponse.soap_put(soap, "onvifMedia:GetAudioDecoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetVideoSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetVideoSourceConfiguration soap_tmp___onvifMedia__GetVideoSourceConfiguration;
	_onvifMedia__GetVideoSourceConfigurationResponse onvifMedia__GetVideoSourceConfigurationResponse;
	onvifMedia__GetVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__GetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__GetVideoSourceConfiguration);
	if (!soap_get___onvifMedia__GetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__GetVideoSourceConfiguration, "-onvifMedia:GetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfiguration(soap_tmp___onvifMedia__GetVideoSourceConfiguration.onvifMedia__GetVideoSourceConfiguration, onvifMedia__GetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetVideoSourceConfigurationResponse.soap_put(soap, "onvifMedia:GetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetVideoSourceConfigurationResponse.soap_put(soap, "onvifMedia:GetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetVideoEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetVideoEncoderConfiguration soap_tmp___onvifMedia__GetVideoEncoderConfiguration;
	_onvifMedia__GetVideoEncoderConfigurationResponse onvifMedia__GetVideoEncoderConfigurationResponse;
	onvifMedia__GetVideoEncoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__GetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfiguration);
	if (!soap_get___onvifMedia__GetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfiguration, "-onvifMedia:GetVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderConfiguration(soap_tmp___onvifMedia__GetVideoEncoderConfiguration.onvifMedia__GetVideoEncoderConfiguration, onvifMedia__GetVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetVideoEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetVideoEncoderConfigurationResponse.soap_put(soap, "onvifMedia:GetVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetVideoEncoderConfigurationResponse.soap_put(soap, "onvifMedia:GetVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetAudioSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetAudioSourceConfiguration soap_tmp___onvifMedia__GetAudioSourceConfiguration;
	_onvifMedia__GetAudioSourceConfigurationResponse onvifMedia__GetAudioSourceConfigurationResponse;
	onvifMedia__GetAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__GetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__GetAudioSourceConfiguration);
	if (!soap_get___onvifMedia__GetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__GetAudioSourceConfiguration, "-onvifMedia:GetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfiguration(soap_tmp___onvifMedia__GetAudioSourceConfiguration.onvifMedia__GetAudioSourceConfiguration, onvifMedia__GetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioSourceConfigurationResponse.soap_put(soap, "onvifMedia:GetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioSourceConfigurationResponse.soap_put(soap, "onvifMedia:GetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetAudioEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetAudioEncoderConfiguration soap_tmp___onvifMedia__GetAudioEncoderConfiguration;
	_onvifMedia__GetAudioEncoderConfigurationResponse onvifMedia__GetAudioEncoderConfigurationResponse;
	onvifMedia__GetAudioEncoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__GetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfiguration);
	if (!soap_get___onvifMedia__GetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfiguration, "-onvifMedia:GetAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioEncoderConfiguration(soap_tmp___onvifMedia__GetAudioEncoderConfiguration.onvifMedia__GetAudioEncoderConfiguration, onvifMedia__GetAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetAudioEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioEncoderConfigurationResponse.soap_put(soap, "onvifMedia:GetAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioEncoderConfigurationResponse.soap_put(soap, "onvifMedia:GetAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetVideoAnalyticsConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetVideoAnalyticsConfiguration soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration;
	_onvifMedia__GetVideoAnalyticsConfigurationResponse onvifMedia__GetVideoAnalyticsConfigurationResponse;
	onvifMedia__GetVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__GetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration);
	if (!soap_get___onvifMedia__GetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration, "-onvifMedia:GetVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoAnalyticsConfiguration(soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration.onvifMedia__GetVideoAnalyticsConfiguration, onvifMedia__GetVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetVideoAnalyticsConfigurationResponse.soap_put(soap, "onvifMedia:GetVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetVideoAnalyticsConfigurationResponse.soap_put(soap, "onvifMedia:GetVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetMetadataConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetMetadataConfiguration soap_tmp___onvifMedia__GetMetadataConfiguration;
	_onvifMedia__GetMetadataConfigurationResponse onvifMedia__GetMetadataConfigurationResponse;
	onvifMedia__GetMetadataConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__GetMetadataConfiguration(soap, &soap_tmp___onvifMedia__GetMetadataConfiguration);
	if (!soap_get___onvifMedia__GetMetadataConfiguration(soap, &soap_tmp___onvifMedia__GetMetadataConfiguration, "-onvifMedia:GetMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMetadataConfiguration(soap_tmp___onvifMedia__GetMetadataConfiguration.onvifMedia__GetMetadataConfiguration, onvifMedia__GetMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetMetadataConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetMetadataConfigurationResponse.soap_put(soap, "onvifMedia:GetMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetMetadataConfigurationResponse.soap_put(soap, "onvifMedia:GetMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetAudioOutputConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetAudioOutputConfiguration soap_tmp___onvifMedia__GetAudioOutputConfiguration;
	_onvifMedia__GetAudioOutputConfigurationResponse onvifMedia__GetAudioOutputConfigurationResponse;
	onvifMedia__GetAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__GetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__GetAudioOutputConfiguration);
	if (!soap_get___onvifMedia__GetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__GetAudioOutputConfiguration, "-onvifMedia:GetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfiguration(soap_tmp___onvifMedia__GetAudioOutputConfiguration.onvifMedia__GetAudioOutputConfiguration, onvifMedia__GetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioOutputConfigurationResponse.soap_put(soap, "onvifMedia:GetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioOutputConfigurationResponse.soap_put(soap, "onvifMedia:GetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetAudioDecoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetAudioDecoderConfiguration soap_tmp___onvifMedia__GetAudioDecoderConfiguration;
	_onvifMedia__GetAudioDecoderConfigurationResponse onvifMedia__GetAudioDecoderConfigurationResponse;
	onvifMedia__GetAudioDecoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__GetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfiguration);
	if (!soap_get___onvifMedia__GetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfiguration, "-onvifMedia:GetAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioDecoderConfiguration(soap_tmp___onvifMedia__GetAudioDecoderConfiguration.onvifMedia__GetAudioDecoderConfiguration, onvifMedia__GetAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetAudioDecoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioDecoderConfigurationResponse.soap_put(soap, "onvifMedia:GetAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioDecoderConfigurationResponse.soap_put(soap, "onvifMedia:GetAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetCompatibleVideoEncoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetCompatibleVideoEncoderConfigurations soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations;
	_onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse;
	onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations);
	if (!soap_get___onvifMedia__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations, "-onvifMedia:GetCompatibleVideoEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleVideoEncoderConfigurations(soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations.onvifMedia__GetCompatibleVideoEncoderConfigurations, onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleVideoEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleVideoEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetCompatibleVideoSourceConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetCompatibleVideoSourceConfigurations soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations;
	_onvifMedia__GetCompatibleVideoSourceConfigurationsResponse onvifMedia__GetCompatibleVideoSourceConfigurationsResponse;
	onvifMedia__GetCompatibleVideoSourceConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations);
	if (!soap_get___onvifMedia__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations, "-onvifMedia:GetCompatibleVideoSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleVideoSourceConfigurations(soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations.onvifMedia__GetCompatibleVideoSourceConfigurations, onvifMedia__GetCompatibleVideoSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetCompatibleVideoSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetCompatibleVideoSourceConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleVideoSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetCompatibleVideoSourceConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleVideoSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetCompatibleAudioEncoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetCompatibleAudioEncoderConfigurations soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations;
	_onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse;
	onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations);
	if (!soap_get___onvifMedia__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations, "-onvifMedia:GetCompatibleAudioEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleAudioEncoderConfigurations(soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations.onvifMedia__GetCompatibleAudioEncoderConfigurations, onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleAudioEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleAudioEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetCompatibleAudioSourceConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetCompatibleAudioSourceConfigurations soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations;
	_onvifMedia__GetCompatibleAudioSourceConfigurationsResponse onvifMedia__GetCompatibleAudioSourceConfigurationsResponse;
	onvifMedia__GetCompatibleAudioSourceConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations);
	if (!soap_get___onvifMedia__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations, "-onvifMedia:GetCompatibleAudioSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleAudioSourceConfigurations(soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations.onvifMedia__GetCompatibleAudioSourceConfigurations, onvifMedia__GetCompatibleAudioSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetCompatibleAudioSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetCompatibleAudioSourceConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleAudioSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetCompatibleAudioSourceConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleAudioSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetCompatibleVideoAnalyticsConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetCompatibleVideoAnalyticsConfigurations soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations;
	_onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse;
	onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations);
	if (!soap_get___onvifMedia__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations, "-onvifMedia:GetCompatibleVideoAnalyticsConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleVideoAnalyticsConfigurations(soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations.onvifMedia__GetCompatibleVideoAnalyticsConfigurations, onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleVideoAnalyticsConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleVideoAnalyticsConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetCompatibleMetadataConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetCompatibleMetadataConfigurations soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations;
	_onvifMedia__GetCompatibleMetadataConfigurationsResponse onvifMedia__GetCompatibleMetadataConfigurationsResponse;
	onvifMedia__GetCompatibleMetadataConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetCompatibleMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations);
	if (!soap_get___onvifMedia__GetCompatibleMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations, "-onvifMedia:GetCompatibleMetadataConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleMetadataConfigurations(soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations.onvifMedia__GetCompatibleMetadataConfigurations, onvifMedia__GetCompatibleMetadataConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetCompatibleMetadataConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetCompatibleMetadataConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleMetadataConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetCompatibleMetadataConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleMetadataConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetCompatibleAudioOutputConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetCompatibleAudioOutputConfigurations soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations;
	_onvifMedia__GetCompatibleAudioOutputConfigurationsResponse onvifMedia__GetCompatibleAudioOutputConfigurationsResponse;
	onvifMedia__GetCompatibleAudioOutputConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations);
	if (!soap_get___onvifMedia__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations, "-onvifMedia:GetCompatibleAudioOutputConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleAudioOutputConfigurations(soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations.onvifMedia__GetCompatibleAudioOutputConfigurations, onvifMedia__GetCompatibleAudioOutputConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetCompatibleAudioOutputConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetCompatibleAudioOutputConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleAudioOutputConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetCompatibleAudioOutputConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleAudioOutputConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetCompatibleAudioDecoderConfigurations(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetCompatibleAudioDecoderConfigurations soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations;
	_onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse;
	onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations);
	if (!soap_get___onvifMedia__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations, "-onvifMedia:GetCompatibleAudioDecoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleAudioDecoderConfigurations(soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations.onvifMedia__GetCompatibleAudioDecoderConfigurations, onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleAudioDecoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse.soap_put(soap, "onvifMedia:GetCompatibleAudioDecoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__SetVideoSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__SetVideoSourceConfiguration soap_tmp___onvifMedia__SetVideoSourceConfiguration;
	_onvifMedia__SetVideoSourceConfigurationResponse onvifMedia__SetVideoSourceConfigurationResponse;
	onvifMedia__SetVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__SetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__SetVideoSourceConfiguration);
	if (!soap_get___onvifMedia__SetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__SetVideoSourceConfiguration, "-onvifMedia:SetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoSourceConfiguration(soap_tmp___onvifMedia__SetVideoSourceConfiguration.onvifMedia__SetVideoSourceConfiguration, onvifMedia__SetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__SetVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__SetVideoSourceConfigurationResponse.soap_put(soap, "onvifMedia:SetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__SetVideoSourceConfigurationResponse.soap_put(soap, "onvifMedia:SetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__SetVideoEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__SetVideoEncoderConfiguration soap_tmp___onvifMedia__SetVideoEncoderConfiguration;
	_onvifMedia__SetVideoEncoderConfigurationResponse onvifMedia__SetVideoEncoderConfigurationResponse;
	onvifMedia__SetVideoEncoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__SetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetVideoEncoderConfiguration);
	if (!soap_get___onvifMedia__SetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetVideoEncoderConfiguration, "-onvifMedia:SetVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoEncoderConfiguration(soap_tmp___onvifMedia__SetVideoEncoderConfiguration.onvifMedia__SetVideoEncoderConfiguration, onvifMedia__SetVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__SetVideoEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__SetVideoEncoderConfigurationResponse.soap_put(soap, "onvifMedia:SetVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__SetVideoEncoderConfigurationResponse.soap_put(soap, "onvifMedia:SetVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__SetAudioSourceConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__SetAudioSourceConfiguration soap_tmp___onvifMedia__SetAudioSourceConfiguration;
	_onvifMedia__SetAudioSourceConfigurationResponse onvifMedia__SetAudioSourceConfigurationResponse;
	onvifMedia__SetAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__SetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__SetAudioSourceConfiguration);
	if (!soap_get___onvifMedia__SetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__SetAudioSourceConfiguration, "-onvifMedia:SetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioSourceConfiguration(soap_tmp___onvifMedia__SetAudioSourceConfiguration.onvifMedia__SetAudioSourceConfiguration, onvifMedia__SetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__SetAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__SetAudioSourceConfigurationResponse.soap_put(soap, "onvifMedia:SetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__SetAudioSourceConfigurationResponse.soap_put(soap, "onvifMedia:SetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__SetAudioEncoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__SetAudioEncoderConfiguration soap_tmp___onvifMedia__SetAudioEncoderConfiguration;
	_onvifMedia__SetAudioEncoderConfigurationResponse onvifMedia__SetAudioEncoderConfigurationResponse;
	onvifMedia__SetAudioEncoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__SetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioEncoderConfiguration);
	if (!soap_get___onvifMedia__SetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioEncoderConfiguration, "-onvifMedia:SetAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioEncoderConfiguration(soap_tmp___onvifMedia__SetAudioEncoderConfiguration.onvifMedia__SetAudioEncoderConfiguration, onvifMedia__SetAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__SetAudioEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__SetAudioEncoderConfigurationResponse.soap_put(soap, "onvifMedia:SetAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__SetAudioEncoderConfigurationResponse.soap_put(soap, "onvifMedia:SetAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__SetVideoAnalyticsConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__SetVideoAnalyticsConfiguration soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration;
	_onvifMedia__SetVideoAnalyticsConfigurationResponse onvifMedia__SetVideoAnalyticsConfigurationResponse;
	onvifMedia__SetVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__SetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration);
	if (!soap_get___onvifMedia__SetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration, "-onvifMedia:SetVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoAnalyticsConfiguration(soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration.onvifMedia__SetVideoAnalyticsConfiguration, onvifMedia__SetVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__SetVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__SetVideoAnalyticsConfigurationResponse.soap_put(soap, "onvifMedia:SetVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__SetVideoAnalyticsConfigurationResponse.soap_put(soap, "onvifMedia:SetVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__SetMetadataConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__SetMetadataConfiguration soap_tmp___onvifMedia__SetMetadataConfiguration;
	_onvifMedia__SetMetadataConfigurationResponse onvifMedia__SetMetadataConfigurationResponse;
	onvifMedia__SetMetadataConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__SetMetadataConfiguration(soap, &soap_tmp___onvifMedia__SetMetadataConfiguration);
	if (!soap_get___onvifMedia__SetMetadataConfiguration(soap, &soap_tmp___onvifMedia__SetMetadataConfiguration, "-onvifMedia:SetMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetMetadataConfiguration(soap_tmp___onvifMedia__SetMetadataConfiguration.onvifMedia__SetMetadataConfiguration, onvifMedia__SetMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__SetMetadataConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__SetMetadataConfigurationResponse.soap_put(soap, "onvifMedia:SetMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__SetMetadataConfigurationResponse.soap_put(soap, "onvifMedia:SetMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__SetAudioOutputConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__SetAudioOutputConfiguration soap_tmp___onvifMedia__SetAudioOutputConfiguration;
	_onvifMedia__SetAudioOutputConfigurationResponse onvifMedia__SetAudioOutputConfigurationResponse;
	onvifMedia__SetAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__SetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__SetAudioOutputConfiguration);
	if (!soap_get___onvifMedia__SetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__SetAudioOutputConfiguration, "-onvifMedia:SetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioOutputConfiguration(soap_tmp___onvifMedia__SetAudioOutputConfiguration.onvifMedia__SetAudioOutputConfiguration, onvifMedia__SetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__SetAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__SetAudioOutputConfigurationResponse.soap_put(soap, "onvifMedia:SetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__SetAudioOutputConfigurationResponse.soap_put(soap, "onvifMedia:SetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__SetAudioDecoderConfiguration(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__SetAudioDecoderConfiguration soap_tmp___onvifMedia__SetAudioDecoderConfiguration;
	_onvifMedia__SetAudioDecoderConfigurationResponse onvifMedia__SetAudioDecoderConfigurationResponse;
	onvifMedia__SetAudioDecoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia__SetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioDecoderConfiguration);
	if (!soap_get___onvifMedia__SetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioDecoderConfiguration, "-onvifMedia:SetAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioDecoderConfiguration(soap_tmp___onvifMedia__SetAudioDecoderConfiguration.onvifMedia__SetAudioDecoderConfiguration, onvifMedia__SetAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__SetAudioDecoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__SetAudioDecoderConfigurationResponse.soap_put(soap, "onvifMedia:SetAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__SetAudioDecoderConfigurationResponse.soap_put(soap, "onvifMedia:SetAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetVideoSourceConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetVideoSourceConfigurationOptions soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions;
	_onvifMedia__GetVideoSourceConfigurationOptionsResponse onvifMedia__GetVideoSourceConfigurationOptionsResponse;
	onvifMedia__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifMedia__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions);
	if (!soap_get___onvifMedia__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions, "-onvifMedia:GetVideoSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfigurationOptions(soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions.onvifMedia__GetVideoSourceConfigurationOptions, onvifMedia__GetVideoSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetVideoSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "onvifMedia:GetVideoSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "onvifMedia:GetVideoSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetVideoEncoderConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetVideoEncoderConfigurationOptions soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions;
	_onvifMedia__GetVideoEncoderConfigurationOptionsResponse onvifMedia__GetVideoEncoderConfigurationOptionsResponse;
	onvifMedia__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifMedia__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions);
	if (!soap_get___onvifMedia__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions, "-onvifMedia:GetVideoEncoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderConfigurationOptions(soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions.onvifMedia__GetVideoEncoderConfigurationOptions, onvifMedia__GetVideoEncoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetVideoEncoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetVideoEncoderConfigurationOptionsResponse.soap_put(soap, "onvifMedia:GetVideoEncoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetVideoEncoderConfigurationOptionsResponse.soap_put(soap, "onvifMedia:GetVideoEncoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetAudioSourceConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetAudioSourceConfigurationOptions soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions;
	_onvifMedia__GetAudioSourceConfigurationOptionsResponse onvifMedia__GetAudioSourceConfigurationOptionsResponse;
	onvifMedia__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifMedia__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions);
	if (!soap_get___onvifMedia__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions, "-onvifMedia:GetAudioSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfigurationOptions(soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions.onvifMedia__GetAudioSourceConfigurationOptions, onvifMedia__GetAudioSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetAudioSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "onvifMedia:GetAudioSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "onvifMedia:GetAudioSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetAudioEncoderConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetAudioEncoderConfigurationOptions soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions;
	_onvifMedia__GetAudioEncoderConfigurationOptionsResponse onvifMedia__GetAudioEncoderConfigurationOptionsResponse;
	onvifMedia__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifMedia__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions);
	if (!soap_get___onvifMedia__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions, "-onvifMedia:GetAudioEncoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioEncoderConfigurationOptions(soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions.onvifMedia__GetAudioEncoderConfigurationOptions, onvifMedia__GetAudioEncoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetAudioEncoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioEncoderConfigurationOptionsResponse.soap_put(soap, "onvifMedia:GetAudioEncoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioEncoderConfigurationOptionsResponse.soap_put(soap, "onvifMedia:GetAudioEncoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetMetadataConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetMetadataConfigurationOptions soap_tmp___onvifMedia__GetMetadataConfigurationOptions;
	_onvifMedia__GetMetadataConfigurationOptionsResponse onvifMedia__GetMetadataConfigurationOptionsResponse;
	onvifMedia__GetMetadataConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifMedia__GetMetadataConfigurationOptions(soap, &soap_tmp___onvifMedia__GetMetadataConfigurationOptions);
	if (!soap_get___onvifMedia__GetMetadataConfigurationOptions(soap, &soap_tmp___onvifMedia__GetMetadataConfigurationOptions, "-onvifMedia:GetMetadataConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMetadataConfigurationOptions(soap_tmp___onvifMedia__GetMetadataConfigurationOptions.onvifMedia__GetMetadataConfigurationOptions, onvifMedia__GetMetadataConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetMetadataConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetMetadataConfigurationOptionsResponse.soap_put(soap, "onvifMedia:GetMetadataConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetMetadataConfigurationOptionsResponse.soap_put(soap, "onvifMedia:GetMetadataConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetAudioOutputConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetAudioOutputConfigurationOptions soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions;
	_onvifMedia__GetAudioOutputConfigurationOptionsResponse onvifMedia__GetAudioOutputConfigurationOptionsResponse;
	onvifMedia__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifMedia__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions);
	if (!soap_get___onvifMedia__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions, "-onvifMedia:GetAudioOutputConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfigurationOptions(soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions.onvifMedia__GetAudioOutputConfigurationOptions, onvifMedia__GetAudioOutputConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetAudioOutputConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "onvifMedia:GetAudioOutputConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "onvifMedia:GetAudioOutputConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetAudioDecoderConfigurationOptions(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetAudioDecoderConfigurationOptions soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions;
	_onvifMedia__GetAudioDecoderConfigurationOptionsResponse onvifMedia__GetAudioDecoderConfigurationOptionsResponse;
	onvifMedia__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifMedia__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions);
	if (!soap_get___onvifMedia__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions, "-onvifMedia:GetAudioDecoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioDecoderConfigurationOptions(soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions.onvifMedia__GetAudioDecoderConfigurationOptions, onvifMedia__GetAudioDecoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetAudioDecoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetAudioDecoderConfigurationOptionsResponse.soap_put(soap, "onvifMedia:GetAudioDecoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetAudioDecoderConfigurationOptionsResponse.soap_put(soap, "onvifMedia:GetAudioDecoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances;
	_onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse;
	onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_default(soap);
	soap_default___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances);
	if (!soap_get___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances, "-onvifMedia:GetGuaranteedNumberOfVideoEncoderInstances", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetGuaranteedNumberOfVideoEncoderInstances(soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances.onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances, onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_put(soap, "onvifMedia:GetGuaranteedNumberOfVideoEncoderInstancesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_put(soap, "onvifMedia:GetGuaranteedNumberOfVideoEncoderInstancesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetStreamUri(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetStreamUri soap_tmp___onvifMedia__GetStreamUri;
	_onvifMedia__GetStreamUriResponse onvifMedia__GetStreamUriResponse;
	onvifMedia__GetStreamUriResponse.soap_default(soap);
	soap_default___onvifMedia__GetStreamUri(soap, &soap_tmp___onvifMedia__GetStreamUri);
	if (!soap_get___onvifMedia__GetStreamUri(soap, &soap_tmp___onvifMedia__GetStreamUri, "-onvifMedia:GetStreamUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetStreamUri(soap_tmp___onvifMedia__GetStreamUri.onvifMedia__GetStreamUri, onvifMedia__GetStreamUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetStreamUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetStreamUriResponse.soap_put(soap, "onvifMedia:GetStreamUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetStreamUriResponse.soap_put(soap, "onvifMedia:GetStreamUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__StartMulticastStreaming(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__StartMulticastStreaming soap_tmp___onvifMedia__StartMulticastStreaming;
	_onvifMedia__StartMulticastStreamingResponse onvifMedia__StartMulticastStreamingResponse;
	onvifMedia__StartMulticastStreamingResponse.soap_default(soap);
	soap_default___onvifMedia__StartMulticastStreaming(soap, &soap_tmp___onvifMedia__StartMulticastStreaming);
	if (!soap_get___onvifMedia__StartMulticastStreaming(soap, &soap_tmp___onvifMedia__StartMulticastStreaming, "-onvifMedia:StartMulticastStreaming", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->StartMulticastStreaming(soap_tmp___onvifMedia__StartMulticastStreaming.onvifMedia__StartMulticastStreaming, onvifMedia__StartMulticastStreamingResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__StartMulticastStreamingResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__StartMulticastStreamingResponse.soap_put(soap, "onvifMedia:StartMulticastStreamingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__StartMulticastStreamingResponse.soap_put(soap, "onvifMedia:StartMulticastStreamingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__StopMulticastStreaming(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__StopMulticastStreaming soap_tmp___onvifMedia__StopMulticastStreaming;
	_onvifMedia__StopMulticastStreamingResponse onvifMedia__StopMulticastStreamingResponse;
	onvifMedia__StopMulticastStreamingResponse.soap_default(soap);
	soap_default___onvifMedia__StopMulticastStreaming(soap, &soap_tmp___onvifMedia__StopMulticastStreaming);
	if (!soap_get___onvifMedia__StopMulticastStreaming(soap, &soap_tmp___onvifMedia__StopMulticastStreaming, "-onvifMedia:StopMulticastStreaming", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->StopMulticastStreaming(soap_tmp___onvifMedia__StopMulticastStreaming.onvifMedia__StopMulticastStreaming, onvifMedia__StopMulticastStreamingResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__StopMulticastStreamingResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__StopMulticastStreamingResponse.soap_put(soap, "onvifMedia:StopMulticastStreamingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__StopMulticastStreamingResponse.soap_put(soap, "onvifMedia:StopMulticastStreamingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__SetSynchronizationPoint(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__SetSynchronizationPoint soap_tmp___onvifMedia__SetSynchronizationPoint;
	_onvifMedia__SetSynchronizationPointResponse onvifMedia__SetSynchronizationPointResponse;
	onvifMedia__SetSynchronizationPointResponse.soap_default(soap);
	soap_default___onvifMedia__SetSynchronizationPoint(soap, &soap_tmp___onvifMedia__SetSynchronizationPoint);
	if (!soap_get___onvifMedia__SetSynchronizationPoint(soap, &soap_tmp___onvifMedia__SetSynchronizationPoint, "-onvifMedia:SetSynchronizationPoint", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetSynchronizationPoint(soap_tmp___onvifMedia__SetSynchronizationPoint.onvifMedia__SetSynchronizationPoint, onvifMedia__SetSynchronizationPointResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__SetSynchronizationPointResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__SetSynchronizationPointResponse.soap_put(soap, "onvifMedia:SetSynchronizationPointResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__SetSynchronizationPointResponse.soap_put(soap, "onvifMedia:SetSynchronizationPointResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetSnapshotUri(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetSnapshotUri soap_tmp___onvifMedia__GetSnapshotUri;
	_onvifMedia__GetSnapshotUriResponse onvifMedia__GetSnapshotUriResponse;
	onvifMedia__GetSnapshotUriResponse.soap_default(soap);
	soap_default___onvifMedia__GetSnapshotUri(soap, &soap_tmp___onvifMedia__GetSnapshotUri);
	if (!soap_get___onvifMedia__GetSnapshotUri(soap, &soap_tmp___onvifMedia__GetSnapshotUri, "-onvifMedia:GetSnapshotUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetSnapshotUri(soap_tmp___onvifMedia__GetSnapshotUri.onvifMedia__GetSnapshotUri, onvifMedia__GetSnapshotUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetSnapshotUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetSnapshotUriResponse.soap_put(soap, "onvifMedia:GetSnapshotUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetSnapshotUriResponse.soap_put(soap, "onvifMedia:GetSnapshotUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetVideoSourceModes(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetVideoSourceModes soap_tmp___onvifMedia__GetVideoSourceModes;
	_onvifMedia__GetVideoSourceModesResponse onvifMedia__GetVideoSourceModesResponse;
	onvifMedia__GetVideoSourceModesResponse.soap_default(soap);
	soap_default___onvifMedia__GetVideoSourceModes(soap, &soap_tmp___onvifMedia__GetVideoSourceModes);
	if (!soap_get___onvifMedia__GetVideoSourceModes(soap, &soap_tmp___onvifMedia__GetVideoSourceModes, "-onvifMedia:GetVideoSourceModes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceModes(soap_tmp___onvifMedia__GetVideoSourceModes.onvifMedia__GetVideoSourceModes, onvifMedia__GetVideoSourceModesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetVideoSourceModesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetVideoSourceModesResponse.soap_put(soap, "onvifMedia:GetVideoSourceModesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetVideoSourceModesResponse.soap_put(soap, "onvifMedia:GetVideoSourceModesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__SetVideoSourceMode(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__SetVideoSourceMode soap_tmp___onvifMedia__SetVideoSourceMode;
	_onvifMedia__SetVideoSourceModeResponse onvifMedia__SetVideoSourceModeResponse;
	onvifMedia__SetVideoSourceModeResponse.soap_default(soap);
	soap_default___onvifMedia__SetVideoSourceMode(soap, &soap_tmp___onvifMedia__SetVideoSourceMode);
	if (!soap_get___onvifMedia__SetVideoSourceMode(soap, &soap_tmp___onvifMedia__SetVideoSourceMode, "-onvifMedia:SetVideoSourceMode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoSourceMode(soap_tmp___onvifMedia__SetVideoSourceMode.onvifMedia__SetVideoSourceMode, onvifMedia__SetVideoSourceModeResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__SetVideoSourceModeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__SetVideoSourceModeResponse.soap_put(soap, "onvifMedia:SetVideoSourceModeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__SetVideoSourceModeResponse.soap_put(soap, "onvifMedia:SetVideoSourceModeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetOSDs(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetOSDs soap_tmp___onvifMedia__GetOSDs;
	_onvifMedia__GetOSDsResponse onvifMedia__GetOSDsResponse;
	onvifMedia__GetOSDsResponse.soap_default(soap);
	soap_default___onvifMedia__GetOSDs(soap, &soap_tmp___onvifMedia__GetOSDs);
	if (!soap_get___onvifMedia__GetOSDs(soap, &soap_tmp___onvifMedia__GetOSDs, "-onvifMedia:GetOSDs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetOSDs(soap_tmp___onvifMedia__GetOSDs.onvifMedia__GetOSDs, onvifMedia__GetOSDsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetOSDsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetOSDsResponse.soap_put(soap, "onvifMedia:GetOSDsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetOSDsResponse.soap_put(soap, "onvifMedia:GetOSDsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetOSD(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetOSD soap_tmp___onvifMedia__GetOSD;
	_onvifMedia__GetOSDResponse onvifMedia__GetOSDResponse;
	onvifMedia__GetOSDResponse.soap_default(soap);
	soap_default___onvifMedia__GetOSD(soap, &soap_tmp___onvifMedia__GetOSD);
	if (!soap_get___onvifMedia__GetOSD(soap, &soap_tmp___onvifMedia__GetOSD, "-onvifMedia:GetOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetOSD(soap_tmp___onvifMedia__GetOSD.onvifMedia__GetOSD, onvifMedia__GetOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetOSDResponse.soap_put(soap, "onvifMedia:GetOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetOSDResponse.soap_put(soap, "onvifMedia:GetOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__GetOSDOptions(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__GetOSDOptions soap_tmp___onvifMedia__GetOSDOptions;
	_onvifMedia__GetOSDOptionsResponse onvifMedia__GetOSDOptionsResponse;
	onvifMedia__GetOSDOptionsResponse.soap_default(soap);
	soap_default___onvifMedia__GetOSDOptions(soap, &soap_tmp___onvifMedia__GetOSDOptions);
	if (!soap_get___onvifMedia__GetOSDOptions(soap, &soap_tmp___onvifMedia__GetOSDOptions, "-onvifMedia:GetOSDOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetOSDOptions(soap_tmp___onvifMedia__GetOSDOptions.onvifMedia__GetOSDOptions, onvifMedia__GetOSDOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__GetOSDOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__GetOSDOptionsResponse.soap_put(soap, "onvifMedia:GetOSDOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__GetOSDOptionsResponse.soap_put(soap, "onvifMedia:GetOSDOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__SetOSD(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__SetOSD soap_tmp___onvifMedia__SetOSD;
	_onvifMedia__SetOSDResponse onvifMedia__SetOSDResponse;
	onvifMedia__SetOSDResponse.soap_default(soap);
	soap_default___onvifMedia__SetOSD(soap, &soap_tmp___onvifMedia__SetOSD);
	if (!soap_get___onvifMedia__SetOSD(soap, &soap_tmp___onvifMedia__SetOSD, "-onvifMedia:SetOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetOSD(soap_tmp___onvifMedia__SetOSD.onvifMedia__SetOSD, onvifMedia__SetOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__SetOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__SetOSDResponse.soap_put(soap, "onvifMedia:SetOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__SetOSDResponse.soap_put(soap, "onvifMedia:SetOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__CreateOSD(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__CreateOSD soap_tmp___onvifMedia__CreateOSD;
	_onvifMedia__CreateOSDResponse onvifMedia__CreateOSDResponse;
	onvifMedia__CreateOSDResponse.soap_default(soap);
	soap_default___onvifMedia__CreateOSD(soap, &soap_tmp___onvifMedia__CreateOSD);
	if (!soap_get___onvifMedia__CreateOSD(soap, &soap_tmp___onvifMedia__CreateOSD, "-onvifMedia:CreateOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateOSD(soap_tmp___onvifMedia__CreateOSD.onvifMedia__CreateOSD, onvifMedia__CreateOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__CreateOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__CreateOSDResponse.soap_put(soap, "onvifMedia:CreateOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__CreateOSDResponse.soap_put(soap, "onvifMedia:CreateOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia__DeleteOSD(struct soap *soap, MediaBindingService *service)
{	struct __onvifMedia__DeleteOSD soap_tmp___onvifMedia__DeleteOSD;
	_onvifMedia__DeleteOSDResponse onvifMedia__DeleteOSDResponse;
	onvifMedia__DeleteOSDResponse.soap_default(soap);
	soap_default___onvifMedia__DeleteOSD(soap, &soap_tmp___onvifMedia__DeleteOSD);
	if (!soap_get___onvifMedia__DeleteOSD(soap, &soap_tmp___onvifMedia__DeleteOSD, "-onvifMedia:DeleteOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteOSD(soap_tmp___onvifMedia__DeleteOSD.onvifMedia__DeleteOSD, onvifMedia__DeleteOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia__DeleteOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia__DeleteOSDResponse.soap_put(soap, "onvifMedia:DeleteOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia__DeleteOSDResponse.soap_put(soap, "onvifMedia:DeleteOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
