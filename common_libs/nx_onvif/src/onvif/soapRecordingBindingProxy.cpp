/* soapRecordingBindingProxy.cpp
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapRecordingBindingProxy.h"

RecordingBindingProxy::RecordingBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	RecordingBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

RecordingBindingProxy::RecordingBindingProxy(const RecordingBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

RecordingBindingProxy::RecordingBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	RecordingBindingProxy_init(_soap->imode, _soap->omode);
}

RecordingBindingProxy::RecordingBindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	RecordingBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

RecordingBindingProxy::RecordingBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	RecordingBindingProxy_init(iomode, iomode);
}

RecordingBindingProxy::RecordingBindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	RecordingBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

RecordingBindingProxy::RecordingBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	RecordingBindingProxy_init(imode, omode);
}

RecordingBindingProxy::~RecordingBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void RecordingBindingProxy::RecordingBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"onvifPacs", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"onvifAccessControl", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"onvifAccessRules", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"onvifActionEngine", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"onvifAdvancedSecurity-assb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
        {"onvifAdvancedSecurity-db", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
        {"onvifAdvancedSecurity-kb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
        {"onvifAdvancedSecurity-tsb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
        {"onvifAdvancedSecurity", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"onvifAnalytics-aeb", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
        {"onvifAnalytics-reb", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
        {"onvifAnalytics", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"onvifAnalyticsDevice", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"onvifCredential", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"onvifDisplay", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"onvifDoorControl", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"onvifEvents-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
        {"onvifEvents-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
        {"onvifEvents-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
        {"onvifEvents-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
        {"onvifEvents-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
        {"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"onvifEvents-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
        {"onvifEvents-psmb", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
        {"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"onvifEvents-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
        {"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"onvifMedia2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"onvifNetwork-dlb", "http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding", NULL, NULL},
        {"onvifNetwork-rdb", "http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding", NULL, NULL},
        {"onvifNetwork", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"onvifProvisioning", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"onvifReceiver", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"onvifRecording", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"onvifReplay", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"onvifScedule", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"onvifSearch", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {"onvifThermal", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

RecordingBindingProxy *RecordingBindingProxy::copy()
{	RecordingBindingProxy *dup = SOAP_NEW_UNMANAGED(RecordingBindingProxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

RecordingBindingProxy& RecordingBindingProxy::operator=(const RecordingBindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void RecordingBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void RecordingBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	RecordingBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void RecordingBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void RecordingBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *subscriptionID)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->subscriptionID = subscriptionID;
}

::SOAP_ENV__Header *RecordingBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *RecordingBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *RecordingBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *RecordingBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int RecordingBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int RecordingBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void RecordingBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void RecordingBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *RecordingBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int RecordingBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _onvifRecording__GetServiceCapabilities *onvifRecording__GetServiceCapabilities, _onvifRecording__GetServiceCapabilitiesResponse &onvifRecording__GetServiceCapabilitiesResponse)
{
	struct __onvifRecording__GetServiceCapabilities soap_tmp___onvifRecording__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetServiceCapabilities";
	soap_tmp___onvifRecording__GetServiceCapabilities.onvifRecording__GetServiceCapabilities = onvifRecording__GetServiceCapabilities;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__GetServiceCapabilities(soap, &soap_tmp___onvifRecording__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__GetServiceCapabilities(soap, &soap_tmp___onvifRecording__GetServiceCapabilities, "-onvifRecording:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__GetServiceCapabilities(soap, &soap_tmp___onvifRecording__GetServiceCapabilities, "-onvifRecording:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__GetServiceCapabilitiesResponse*>(&onvifRecording__GetServiceCapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__GetServiceCapabilitiesResponse.soap_get(soap, "onvifRecording:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::CreateRecording(const char *endpoint, const char *soap_action, _onvifRecording__CreateRecording *onvifRecording__CreateRecording, _onvifRecording__CreateRecordingResponse &onvifRecording__CreateRecordingResponse)
{
	struct __onvifRecording__CreateRecording soap_tmp___onvifRecording__CreateRecording;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/CreateRecording";
	soap_tmp___onvifRecording__CreateRecording.onvifRecording__CreateRecording = onvifRecording__CreateRecording;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__CreateRecording(soap, &soap_tmp___onvifRecording__CreateRecording);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__CreateRecording(soap, &soap_tmp___onvifRecording__CreateRecording, "-onvifRecording:CreateRecording", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__CreateRecording(soap, &soap_tmp___onvifRecording__CreateRecording, "-onvifRecording:CreateRecording", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__CreateRecordingResponse*>(&onvifRecording__CreateRecordingResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__CreateRecordingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__CreateRecordingResponse.soap_get(soap, "onvifRecording:CreateRecordingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::DeleteRecording(const char *endpoint, const char *soap_action, _onvifRecording__DeleteRecording *onvifRecording__DeleteRecording, _onvifRecording__DeleteRecordingResponse &onvifRecording__DeleteRecordingResponse)
{
	struct __onvifRecording__DeleteRecording soap_tmp___onvifRecording__DeleteRecording;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/DeleteRecording";
	soap_tmp___onvifRecording__DeleteRecording.onvifRecording__DeleteRecording = onvifRecording__DeleteRecording;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__DeleteRecording(soap, &soap_tmp___onvifRecording__DeleteRecording);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__DeleteRecording(soap, &soap_tmp___onvifRecording__DeleteRecording, "-onvifRecording:DeleteRecording", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__DeleteRecording(soap, &soap_tmp___onvifRecording__DeleteRecording, "-onvifRecording:DeleteRecording", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__DeleteRecordingResponse*>(&onvifRecording__DeleteRecordingResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__DeleteRecordingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__DeleteRecordingResponse.soap_get(soap, "onvifRecording:DeleteRecordingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::GetRecordings(const char *endpoint, const char *soap_action, _onvifRecording__GetRecordings *onvifRecording__GetRecordings, _onvifRecording__GetRecordingsResponse &onvifRecording__GetRecordingsResponse)
{
	struct __onvifRecording__GetRecordings soap_tmp___onvifRecording__GetRecordings;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetRecordings";
	soap_tmp___onvifRecording__GetRecordings.onvifRecording__GetRecordings = onvifRecording__GetRecordings;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__GetRecordings(soap, &soap_tmp___onvifRecording__GetRecordings);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__GetRecordings(soap, &soap_tmp___onvifRecording__GetRecordings, "-onvifRecording:GetRecordings", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__GetRecordings(soap, &soap_tmp___onvifRecording__GetRecordings, "-onvifRecording:GetRecordings", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__GetRecordingsResponse*>(&onvifRecording__GetRecordingsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__GetRecordingsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__GetRecordingsResponse.soap_get(soap, "onvifRecording:GetRecordingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::SetRecordingConfiguration(const char *endpoint, const char *soap_action, _onvifRecording__SetRecordingConfiguration *onvifRecording__SetRecordingConfiguration, _onvifRecording__SetRecordingConfigurationResponse &onvifRecording__SetRecordingConfigurationResponse)
{
	struct __onvifRecording__SetRecordingConfiguration soap_tmp___onvifRecording__SetRecordingConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/SetRecordingConfiguration";
	soap_tmp___onvifRecording__SetRecordingConfiguration.onvifRecording__SetRecordingConfiguration = onvifRecording__SetRecordingConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__SetRecordingConfiguration(soap, &soap_tmp___onvifRecording__SetRecordingConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__SetRecordingConfiguration(soap, &soap_tmp___onvifRecording__SetRecordingConfiguration, "-onvifRecording:SetRecordingConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__SetRecordingConfiguration(soap, &soap_tmp___onvifRecording__SetRecordingConfiguration, "-onvifRecording:SetRecordingConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__SetRecordingConfigurationResponse*>(&onvifRecording__SetRecordingConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__SetRecordingConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__SetRecordingConfigurationResponse.soap_get(soap, "onvifRecording:SetRecordingConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::GetRecordingConfiguration(const char *endpoint, const char *soap_action, _onvifRecording__GetRecordingConfiguration *onvifRecording__GetRecordingConfiguration, _onvifRecording__GetRecordingConfigurationResponse &onvifRecording__GetRecordingConfigurationResponse)
{
	struct __onvifRecording__GetRecordingConfiguration soap_tmp___onvifRecording__GetRecordingConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetRecordingConfiguration";
	soap_tmp___onvifRecording__GetRecordingConfiguration.onvifRecording__GetRecordingConfiguration = onvifRecording__GetRecordingConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__GetRecordingConfiguration(soap, &soap_tmp___onvifRecording__GetRecordingConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__GetRecordingConfiguration(soap, &soap_tmp___onvifRecording__GetRecordingConfiguration, "-onvifRecording:GetRecordingConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__GetRecordingConfiguration(soap, &soap_tmp___onvifRecording__GetRecordingConfiguration, "-onvifRecording:GetRecordingConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__GetRecordingConfigurationResponse*>(&onvifRecording__GetRecordingConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__GetRecordingConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__GetRecordingConfigurationResponse.soap_get(soap, "onvifRecording:GetRecordingConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::GetRecordingOptions(const char *endpoint, const char *soap_action, _onvifRecording__GetRecordingOptions *onvifRecording__GetRecordingOptions, _onvifRecording__GetRecordingOptionsResponse &onvifRecording__GetRecordingOptionsResponse)
{
	struct __onvifRecording__GetRecordingOptions soap_tmp___onvifRecording__GetRecordingOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetRecordingOptions";
	soap_tmp___onvifRecording__GetRecordingOptions.onvifRecording__GetRecordingOptions = onvifRecording__GetRecordingOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__GetRecordingOptions(soap, &soap_tmp___onvifRecording__GetRecordingOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__GetRecordingOptions(soap, &soap_tmp___onvifRecording__GetRecordingOptions, "-onvifRecording:GetRecordingOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__GetRecordingOptions(soap, &soap_tmp___onvifRecording__GetRecordingOptions, "-onvifRecording:GetRecordingOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__GetRecordingOptionsResponse*>(&onvifRecording__GetRecordingOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__GetRecordingOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__GetRecordingOptionsResponse.soap_get(soap, "onvifRecording:GetRecordingOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::CreateTrack(const char *endpoint, const char *soap_action, _onvifRecording__CreateTrack *onvifRecording__CreateTrack, _onvifRecording__CreateTrackResponse &onvifRecording__CreateTrackResponse)
{
	struct __onvifRecording__CreateTrack soap_tmp___onvifRecording__CreateTrack;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/CreateTrack";
	soap_tmp___onvifRecording__CreateTrack.onvifRecording__CreateTrack = onvifRecording__CreateTrack;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__CreateTrack(soap, &soap_tmp___onvifRecording__CreateTrack);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__CreateTrack(soap, &soap_tmp___onvifRecording__CreateTrack, "-onvifRecording:CreateTrack", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__CreateTrack(soap, &soap_tmp___onvifRecording__CreateTrack, "-onvifRecording:CreateTrack", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__CreateTrackResponse*>(&onvifRecording__CreateTrackResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__CreateTrackResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__CreateTrackResponse.soap_get(soap, "onvifRecording:CreateTrackResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::DeleteTrack(const char *endpoint, const char *soap_action, _onvifRecording__DeleteTrack *onvifRecording__DeleteTrack, _onvifRecording__DeleteTrackResponse &onvifRecording__DeleteTrackResponse)
{
	struct __onvifRecording__DeleteTrack soap_tmp___onvifRecording__DeleteTrack;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/DeleteTrack";
	soap_tmp___onvifRecording__DeleteTrack.onvifRecording__DeleteTrack = onvifRecording__DeleteTrack;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__DeleteTrack(soap, &soap_tmp___onvifRecording__DeleteTrack);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__DeleteTrack(soap, &soap_tmp___onvifRecording__DeleteTrack, "-onvifRecording:DeleteTrack", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__DeleteTrack(soap, &soap_tmp___onvifRecording__DeleteTrack, "-onvifRecording:DeleteTrack", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__DeleteTrackResponse*>(&onvifRecording__DeleteTrackResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__DeleteTrackResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__DeleteTrackResponse.soap_get(soap, "onvifRecording:DeleteTrackResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::GetTrackConfiguration(const char *endpoint, const char *soap_action, _onvifRecording__GetTrackConfiguration *onvifRecording__GetTrackConfiguration, _onvifRecording__GetTrackConfigurationResponse &onvifRecording__GetTrackConfigurationResponse)
{
	struct __onvifRecording__GetTrackConfiguration soap_tmp___onvifRecording__GetTrackConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetTrackConfiguration";
	soap_tmp___onvifRecording__GetTrackConfiguration.onvifRecording__GetTrackConfiguration = onvifRecording__GetTrackConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__GetTrackConfiguration(soap, &soap_tmp___onvifRecording__GetTrackConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__GetTrackConfiguration(soap, &soap_tmp___onvifRecording__GetTrackConfiguration, "-onvifRecording:GetTrackConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__GetTrackConfiguration(soap, &soap_tmp___onvifRecording__GetTrackConfiguration, "-onvifRecording:GetTrackConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__GetTrackConfigurationResponse*>(&onvifRecording__GetTrackConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__GetTrackConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__GetTrackConfigurationResponse.soap_get(soap, "onvifRecording:GetTrackConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::SetTrackConfiguration(const char *endpoint, const char *soap_action, _onvifRecording__SetTrackConfiguration *onvifRecording__SetTrackConfiguration, _onvifRecording__SetTrackConfigurationResponse &onvifRecording__SetTrackConfigurationResponse)
{
	struct __onvifRecording__SetTrackConfiguration soap_tmp___onvifRecording__SetTrackConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/SetTrackConfiguration";
	soap_tmp___onvifRecording__SetTrackConfiguration.onvifRecording__SetTrackConfiguration = onvifRecording__SetTrackConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__SetTrackConfiguration(soap, &soap_tmp___onvifRecording__SetTrackConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__SetTrackConfiguration(soap, &soap_tmp___onvifRecording__SetTrackConfiguration, "-onvifRecording:SetTrackConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__SetTrackConfiguration(soap, &soap_tmp___onvifRecording__SetTrackConfiguration, "-onvifRecording:SetTrackConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__SetTrackConfigurationResponse*>(&onvifRecording__SetTrackConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__SetTrackConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__SetTrackConfigurationResponse.soap_get(soap, "onvifRecording:SetTrackConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::CreateRecordingJob(const char *endpoint, const char *soap_action, _onvifRecording__CreateRecordingJob *onvifRecording__CreateRecordingJob, _onvifRecording__CreateRecordingJobResponse &onvifRecording__CreateRecordingJobResponse)
{
	struct __onvifRecording__CreateRecordingJob soap_tmp___onvifRecording__CreateRecordingJob;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/CreateRecordingJob";
	soap_tmp___onvifRecording__CreateRecordingJob.onvifRecording__CreateRecordingJob = onvifRecording__CreateRecordingJob;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__CreateRecordingJob(soap, &soap_tmp___onvifRecording__CreateRecordingJob);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__CreateRecordingJob(soap, &soap_tmp___onvifRecording__CreateRecordingJob, "-onvifRecording:CreateRecordingJob", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__CreateRecordingJob(soap, &soap_tmp___onvifRecording__CreateRecordingJob, "-onvifRecording:CreateRecordingJob", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__CreateRecordingJobResponse*>(&onvifRecording__CreateRecordingJobResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__CreateRecordingJobResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__CreateRecordingJobResponse.soap_get(soap, "onvifRecording:CreateRecordingJobResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::DeleteRecordingJob(const char *endpoint, const char *soap_action, _onvifRecording__DeleteRecordingJob *onvifRecording__DeleteRecordingJob, _onvifRecording__DeleteRecordingJobResponse &onvifRecording__DeleteRecordingJobResponse)
{
	struct __onvifRecording__DeleteRecordingJob soap_tmp___onvifRecording__DeleteRecordingJob;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingJob";
	soap_tmp___onvifRecording__DeleteRecordingJob.onvifRecording__DeleteRecordingJob = onvifRecording__DeleteRecordingJob;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__DeleteRecordingJob(soap, &soap_tmp___onvifRecording__DeleteRecordingJob);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__DeleteRecordingJob(soap, &soap_tmp___onvifRecording__DeleteRecordingJob, "-onvifRecording:DeleteRecordingJob", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__DeleteRecordingJob(soap, &soap_tmp___onvifRecording__DeleteRecordingJob, "-onvifRecording:DeleteRecordingJob", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__DeleteRecordingJobResponse*>(&onvifRecording__DeleteRecordingJobResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__DeleteRecordingJobResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__DeleteRecordingJobResponse.soap_get(soap, "onvifRecording:DeleteRecordingJobResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::GetRecordingJobs(const char *endpoint, const char *soap_action, _onvifRecording__GetRecordingJobs *onvifRecording__GetRecordingJobs, _onvifRecording__GetRecordingJobsResponse &onvifRecording__GetRecordingJobsResponse)
{
	struct __onvifRecording__GetRecordingJobs soap_tmp___onvifRecording__GetRecordingJobs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobs";
	soap_tmp___onvifRecording__GetRecordingJobs.onvifRecording__GetRecordingJobs = onvifRecording__GetRecordingJobs;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__GetRecordingJobs(soap, &soap_tmp___onvifRecording__GetRecordingJobs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__GetRecordingJobs(soap, &soap_tmp___onvifRecording__GetRecordingJobs, "-onvifRecording:GetRecordingJobs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__GetRecordingJobs(soap, &soap_tmp___onvifRecording__GetRecordingJobs, "-onvifRecording:GetRecordingJobs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__GetRecordingJobsResponse*>(&onvifRecording__GetRecordingJobsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__GetRecordingJobsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__GetRecordingJobsResponse.soap_get(soap, "onvifRecording:GetRecordingJobsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::SetRecordingJobConfiguration(const char *endpoint, const char *soap_action, _onvifRecording__SetRecordingJobConfiguration *onvifRecording__SetRecordingJobConfiguration, _onvifRecording__SetRecordingJobConfigurationResponse &onvifRecording__SetRecordingJobConfigurationResponse)
{
	struct __onvifRecording__SetRecordingJobConfiguration soap_tmp___onvifRecording__SetRecordingJobConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobConfiguration";
	soap_tmp___onvifRecording__SetRecordingJobConfiguration.onvifRecording__SetRecordingJobConfiguration = onvifRecording__SetRecordingJobConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__SetRecordingJobConfiguration(soap, &soap_tmp___onvifRecording__SetRecordingJobConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__SetRecordingJobConfiguration(soap, &soap_tmp___onvifRecording__SetRecordingJobConfiguration, "-onvifRecording:SetRecordingJobConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__SetRecordingJobConfiguration(soap, &soap_tmp___onvifRecording__SetRecordingJobConfiguration, "-onvifRecording:SetRecordingJobConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__SetRecordingJobConfigurationResponse*>(&onvifRecording__SetRecordingJobConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__SetRecordingJobConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__SetRecordingJobConfigurationResponse.soap_get(soap, "onvifRecording:SetRecordingJobConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::GetRecordingJobConfiguration(const char *endpoint, const char *soap_action, _onvifRecording__GetRecordingJobConfiguration *onvifRecording__GetRecordingJobConfiguration, _onvifRecording__GetRecordingJobConfigurationResponse &onvifRecording__GetRecordingJobConfigurationResponse)
{
	struct __onvifRecording__GetRecordingJobConfiguration soap_tmp___onvifRecording__GetRecordingJobConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobConfiguration";
	soap_tmp___onvifRecording__GetRecordingJobConfiguration.onvifRecording__GetRecordingJobConfiguration = onvifRecording__GetRecordingJobConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__GetRecordingJobConfiguration(soap, &soap_tmp___onvifRecording__GetRecordingJobConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__GetRecordingJobConfiguration(soap, &soap_tmp___onvifRecording__GetRecordingJobConfiguration, "-onvifRecording:GetRecordingJobConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__GetRecordingJobConfiguration(soap, &soap_tmp___onvifRecording__GetRecordingJobConfiguration, "-onvifRecording:GetRecordingJobConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__GetRecordingJobConfigurationResponse*>(&onvifRecording__GetRecordingJobConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__GetRecordingJobConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__GetRecordingJobConfigurationResponse.soap_get(soap, "onvifRecording:GetRecordingJobConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::SetRecordingJobMode(const char *endpoint, const char *soap_action, _onvifRecording__SetRecordingJobMode *onvifRecording__SetRecordingJobMode, _onvifRecording__SetRecordingJobModeResponse &onvifRecording__SetRecordingJobModeResponse)
{
	struct __onvifRecording__SetRecordingJobMode soap_tmp___onvifRecording__SetRecordingJobMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobMode";
	soap_tmp___onvifRecording__SetRecordingJobMode.onvifRecording__SetRecordingJobMode = onvifRecording__SetRecordingJobMode;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__SetRecordingJobMode(soap, &soap_tmp___onvifRecording__SetRecordingJobMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__SetRecordingJobMode(soap, &soap_tmp___onvifRecording__SetRecordingJobMode, "-onvifRecording:SetRecordingJobMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__SetRecordingJobMode(soap, &soap_tmp___onvifRecording__SetRecordingJobMode, "-onvifRecording:SetRecordingJobMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__SetRecordingJobModeResponse*>(&onvifRecording__SetRecordingJobModeResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__SetRecordingJobModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__SetRecordingJobModeResponse.soap_get(soap, "onvifRecording:SetRecordingJobModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::GetRecordingJobState(const char *endpoint, const char *soap_action, _onvifRecording__GetRecordingJobState *onvifRecording__GetRecordingJobState, _onvifRecording__GetRecordingJobStateResponse &onvifRecording__GetRecordingJobStateResponse)
{
	struct __onvifRecording__GetRecordingJobState soap_tmp___onvifRecording__GetRecordingJobState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobState";
	soap_tmp___onvifRecording__GetRecordingJobState.onvifRecording__GetRecordingJobState = onvifRecording__GetRecordingJobState;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__GetRecordingJobState(soap, &soap_tmp___onvifRecording__GetRecordingJobState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__GetRecordingJobState(soap, &soap_tmp___onvifRecording__GetRecordingJobState, "-onvifRecording:GetRecordingJobState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__GetRecordingJobState(soap, &soap_tmp___onvifRecording__GetRecordingJobState, "-onvifRecording:GetRecordingJobState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__GetRecordingJobStateResponse*>(&onvifRecording__GetRecordingJobStateResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__GetRecordingJobStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__GetRecordingJobStateResponse.soap_get(soap, "onvifRecording:GetRecordingJobStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::ExportRecordedData(const char *endpoint, const char *soap_action, _onvifRecording__ExportRecordedData *onvifRecording__ExportRecordedData, _onvifRecording__ExportRecordedDataResponse &onvifRecording__ExportRecordedDataResponse)
{
	struct __onvifRecording__ExportRecordedData soap_tmp___onvifRecording__ExportRecordedData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/ExportRecordedData";
	soap_tmp___onvifRecording__ExportRecordedData.onvifRecording__ExportRecordedData = onvifRecording__ExportRecordedData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__ExportRecordedData(soap, &soap_tmp___onvifRecording__ExportRecordedData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__ExportRecordedData(soap, &soap_tmp___onvifRecording__ExportRecordedData, "-onvifRecording:ExportRecordedData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__ExportRecordedData(soap, &soap_tmp___onvifRecording__ExportRecordedData, "-onvifRecording:ExportRecordedData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__ExportRecordedDataResponse*>(&onvifRecording__ExportRecordedDataResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__ExportRecordedDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__ExportRecordedDataResponse.soap_get(soap, "onvifRecording:ExportRecordedDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::StopExportRecordedData(const char *endpoint, const char *soap_action, _onvifRecording__StopExportRecordedData *onvifRecording__StopExportRecordedData, _onvifRecording__StopExportRecordedDataResponse &onvifRecording__StopExportRecordedDataResponse)
{
	struct __onvifRecording__StopExportRecordedData soap_tmp___onvifRecording__StopExportRecordedData;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/StopExportRecordedData";
	soap_tmp___onvifRecording__StopExportRecordedData.onvifRecording__StopExportRecordedData = onvifRecording__StopExportRecordedData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__StopExportRecordedData(soap, &soap_tmp___onvifRecording__StopExportRecordedData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__StopExportRecordedData(soap, &soap_tmp___onvifRecording__StopExportRecordedData, "-onvifRecording:StopExportRecordedData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__StopExportRecordedData(soap, &soap_tmp___onvifRecording__StopExportRecordedData, "-onvifRecording:StopExportRecordedData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__StopExportRecordedDataResponse*>(&onvifRecording__StopExportRecordedDataResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__StopExportRecordedDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__StopExportRecordedDataResponse.soap_get(soap, "onvifRecording:StopExportRecordedDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int RecordingBindingProxy::GetExportRecordedDataState(const char *endpoint, const char *soap_action, _onvifRecording__GetExportRecordedDataState *onvifRecording__GetExportRecordedDataState, _onvifRecording__GetExportRecordedDataStateResponse &onvifRecording__GetExportRecordedDataStateResponse)
{
	struct __onvifRecording__GetExportRecordedDataState soap_tmp___onvifRecording__GetExportRecordedDataState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetExportRecordedDataState";
	soap_tmp___onvifRecording__GetExportRecordedDataState.onvifRecording__GetExportRecordedDataState = onvifRecording__GetExportRecordedDataState;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifRecording__GetExportRecordedDataState(soap, &soap_tmp___onvifRecording__GetExportRecordedDataState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifRecording__GetExportRecordedDataState(soap, &soap_tmp___onvifRecording__GetExportRecordedDataState, "-onvifRecording:GetExportRecordedDataState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifRecording__GetExportRecordedDataState(soap, &soap_tmp___onvifRecording__GetExportRecordedDataState, "-onvifRecording:GetExportRecordedDataState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifRecording__GetExportRecordedDataStateResponse*>(&onvifRecording__GetExportRecordedDataStateResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifRecording__GetExportRecordedDataStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifRecording__GetExportRecordedDataStateResponse.soap_get(soap, "onvifRecording:GetExportRecordedDataStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
