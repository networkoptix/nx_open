/* soapImagingBindingProxy.h
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapImagingBindingProxy_H
#define soapImagingBindingProxy_H
#include "soapH.h"

    class SOAP_CMAC ImagingBindingProxy {
      public:
        /// Context to manage proxy IO and data
        struct soap *soap;
        bool soap_own; ///< flag indicating that this context is owned by this proxy when context is shared
        /// Endpoint URL of service 'ImagingBindingProxy' (change as needed)
        const char *soap_endpoint;
        /// Variables globally declared in ../result/interim/onvif.h_, if any
        /// Construct a proxy with new managing context
        ImagingBindingProxy();
        /// Copy constructor
        ImagingBindingProxy(const ImagingBindingProxy& rhs);
        /// Construct proxy given a shared managing context
        ImagingBindingProxy(struct soap*);
        /// Constructor taking an endpoint URL
        ImagingBindingProxy(const char *endpoint);
        /// Constructor taking input and output mode flags for the new managing context
        ImagingBindingProxy(soap_mode iomode);
        /// Constructor taking endpoint URL and input and output mode flags for the new managing context
        ImagingBindingProxy(const char *endpoint, soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        ImagingBindingProxy(soap_mode imode, soap_mode omode);
        /// Destructor deletes non-shared managing context only (use destroy() to delete deserialized data)
        virtual ~ImagingBindingProxy();
        /// Initializer used by constructors
        virtual void ImagingBindingProxy_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual ImagingBindingProxy *copy();
        /// Copy assignment
        ImagingBindingProxy& operator=(const ImagingBindingProxy&);
        /// Delete all deserialized data (uses soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to default
        virtual void reset();
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Add SOAP Header to message
        virtual void soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *subscriptionID);
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
        /// Get SOAP Fault structure (i.e. soap->fault, which is NULL when absent)
        virtual ::SOAP_ENV__Fault *soap_fault();
        /// Get SOAP Fault string (NULL when absent)
        virtual const char *soap_fault_string();
        /// Get SOAP Fault detail as string (NULL when absent)
        virtual const char *soap_fault_detail();
        /// Close connection (normally automatic, except for send_X ops)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        /// Web service operation 'GetServiceCapabilities' (returns SOAP_OK or error code)
        virtual int GetServiceCapabilities(_onvifImg__GetServiceCapabilities *onvifImg__GetServiceCapabilities, _onvifImg__GetServiceCapabilitiesResponse &onvifImg__GetServiceCapabilitiesResponse)
        { return this->GetServiceCapabilities(NULL, NULL, onvifImg__GetServiceCapabilities, onvifImg__GetServiceCapabilitiesResponse); }
        virtual int GetServiceCapabilities(const char *soap_endpoint, const char *soap_action, _onvifImg__GetServiceCapabilities *onvifImg__GetServiceCapabilities, _onvifImg__GetServiceCapabilitiesResponse &onvifImg__GetServiceCapabilitiesResponse);
        /// Web service operation 'GetImagingSettings' (returns SOAP_OK or error code)
        virtual int GetImagingSettings(_onvifImg__GetImagingSettings *onvifImg__GetImagingSettings, _onvifImg__GetImagingSettingsResponse &onvifImg__GetImagingSettingsResponse)
        { return this->GetImagingSettings(NULL, NULL, onvifImg__GetImagingSettings, onvifImg__GetImagingSettingsResponse); }
        virtual int GetImagingSettings(const char *soap_endpoint, const char *soap_action, _onvifImg__GetImagingSettings *onvifImg__GetImagingSettings, _onvifImg__GetImagingSettingsResponse &onvifImg__GetImagingSettingsResponse);
        /// Web service operation 'SetImagingSettings' (returns SOAP_OK or error code)
        virtual int SetImagingSettings(_onvifImg__SetImagingSettings *onvifImg__SetImagingSettings, _onvifImg__SetImagingSettingsResponse &onvifImg__SetImagingSettingsResponse)
        { return this->SetImagingSettings(NULL, NULL, onvifImg__SetImagingSettings, onvifImg__SetImagingSettingsResponse); }
        virtual int SetImagingSettings(const char *soap_endpoint, const char *soap_action, _onvifImg__SetImagingSettings *onvifImg__SetImagingSettings, _onvifImg__SetImagingSettingsResponse &onvifImg__SetImagingSettingsResponse);
        /// Web service operation 'GetOptions' (returns SOAP_OK or error code)
        virtual int GetOptions(_onvifImg__GetOptions *onvifImg__GetOptions, _onvifImg__GetOptionsResponse &onvifImg__GetOptionsResponse)
        { return this->GetOptions(NULL, NULL, onvifImg__GetOptions, onvifImg__GetOptionsResponse); }
        virtual int GetOptions(const char *soap_endpoint, const char *soap_action, _onvifImg__GetOptions *onvifImg__GetOptions, _onvifImg__GetOptionsResponse &onvifImg__GetOptionsResponse);
        /// Web service operation 'Move' (returns SOAP_OK or error code)
        virtual int Move(_onvifImg__Move *onvifImg__Move, _onvifImg__MoveResponse &onvifImg__MoveResponse)
        { return this->Move(NULL, NULL, onvifImg__Move, onvifImg__MoveResponse); }
        virtual int Move(const char *soap_endpoint, const char *soap_action, _onvifImg__Move *onvifImg__Move, _onvifImg__MoveResponse &onvifImg__MoveResponse);
        /// Web service operation 'Stop' (returns SOAP_OK or error code)
        virtual int Stop(_onvifImg__Stop *onvifImg__Stop, _onvifImg__StopResponse &onvifImg__StopResponse)
        { return this->Stop(NULL, NULL, onvifImg__Stop, onvifImg__StopResponse); }
        virtual int Stop(const char *soap_endpoint, const char *soap_action, _onvifImg__Stop *onvifImg__Stop, _onvifImg__StopResponse &onvifImg__StopResponse);
        /// Web service operation 'GetStatus' (returns SOAP_OK or error code)
        virtual int GetStatus(_onvifImg__GetStatus *onvifImg__GetStatus, _onvifImg__GetStatusResponse &onvifImg__GetStatusResponse)
        { return this->GetStatus(NULL, NULL, onvifImg__GetStatus, onvifImg__GetStatusResponse); }
        virtual int GetStatus(const char *soap_endpoint, const char *soap_action, _onvifImg__GetStatus *onvifImg__GetStatus, _onvifImg__GetStatusResponse &onvifImg__GetStatusResponse);
        /// Web service operation 'GetMoveOptions' (returns SOAP_OK or error code)
        virtual int GetMoveOptions(_onvifImg__GetMoveOptions *onvifImg__GetMoveOptions, _onvifImg__GetMoveOptionsResponse &onvifImg__GetMoveOptionsResponse)
        { return this->GetMoveOptions(NULL, NULL, onvifImg__GetMoveOptions, onvifImg__GetMoveOptionsResponse); }
        virtual int GetMoveOptions(const char *soap_endpoint, const char *soap_action, _onvifImg__GetMoveOptions *onvifImg__GetMoveOptions, _onvifImg__GetMoveOptionsResponse &onvifImg__GetMoveOptionsResponse);
        /// Web service operation 'GetPresets' (returns SOAP_OK or error code)
        virtual int GetPresets(_onvifImg__GetPresets *onvifImg__GetPresets, _onvifImg__GetPresetsResponse &onvifImg__GetPresetsResponse)
        { return this->GetPresets(NULL, NULL, onvifImg__GetPresets, onvifImg__GetPresetsResponse); }
        virtual int GetPresets(const char *soap_endpoint, const char *soap_action, _onvifImg__GetPresets *onvifImg__GetPresets, _onvifImg__GetPresetsResponse &onvifImg__GetPresetsResponse);
        /// Web service operation 'GetCurrentPreset' (returns SOAP_OK or error code)
        virtual int GetCurrentPreset(_onvifImg__GetCurrentPreset *onvifImg__GetCurrentPreset, _onvifImg__GetCurrentPresetResponse &onvifImg__GetCurrentPresetResponse)
        { return this->GetCurrentPreset(NULL, NULL, onvifImg__GetCurrentPreset, onvifImg__GetCurrentPresetResponse); }
        virtual int GetCurrentPreset(const char *soap_endpoint, const char *soap_action, _onvifImg__GetCurrentPreset *onvifImg__GetCurrentPreset, _onvifImg__GetCurrentPresetResponse &onvifImg__GetCurrentPresetResponse);
        /// Web service operation 'SetCurrentPreset' (returns SOAP_OK or error code)
        virtual int SetCurrentPreset(_onvifImg__SetCurrentPreset *onvifImg__SetCurrentPreset, _onvifImg__SetCurrentPresetResponse &onvifImg__SetCurrentPresetResponse)
        { return this->SetCurrentPreset(NULL, NULL, onvifImg__SetCurrentPreset, onvifImg__SetCurrentPresetResponse); }
        virtual int SetCurrentPreset(const char *soap_endpoint, const char *soap_action, _onvifImg__SetCurrentPreset *onvifImg__SetCurrentPreset, _onvifImg__SetCurrentPresetResponse &onvifImg__SetCurrentPresetResponse);
    };
#endif
