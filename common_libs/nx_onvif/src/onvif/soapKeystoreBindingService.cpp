/* soapKeystoreBindingService.cpp
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapKeystoreBindingService.h"

KeystoreBindingService::KeystoreBindingService()
{	this->soap = soap_new();
	this->soap_own = true;
	KeystoreBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

KeystoreBindingService::KeystoreBindingService(const KeystoreBindingService& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
}

KeystoreBindingService::KeystoreBindingService(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	KeystoreBindingService_init(_soap->imode, _soap->omode);
}

KeystoreBindingService::KeystoreBindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	KeystoreBindingService_init(iomode, iomode);
}

KeystoreBindingService::KeystoreBindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	KeystoreBindingService_init(imode, omode);
}

KeystoreBindingService::~KeystoreBindingService()
{	if (this->soap_own)
		soap_free(this->soap);
}

void KeystoreBindingService::KeystoreBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"onvifPacs", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"onvifAccessControl", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"onvifAccessRules", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"onvifActionEngine", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"onvifAdvancedSecurity-assb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
        {"onvifAdvancedSecurity-db", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
        {"onvifAdvancedSecurity-kb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
        {"onvifAdvancedSecurity-tsb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
        {"onvifAdvancedSecurity", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"onvifAnalytics-aeb", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
        {"onvifAnalytics-reb", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
        {"onvifAnalytics", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"onvifAnalyticsDevice", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"onvifCredential", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"onvifDisplay", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"onvifDoorControl", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"onvifEvents-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
        {"onvifEvents-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
        {"onvifEvents-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
        {"onvifEvents-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
        {"onvifEvents-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
        {"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"onvifEvents-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
        {"onvifEvents-psmb", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
        {"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"onvifEvents-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
        {"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"onvifMedia2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"onvifNetwork-dlb", "http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding", NULL, NULL},
        {"onvifNetwork-rdb", "http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding", NULL, NULL},
        {"onvifNetwork", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"onvifProvisioning", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"onvifReceiver", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"onvifRecording", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"onvifReplay", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"onvifScedule", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"onvifSearch", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {"onvifThermal", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

void KeystoreBindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void KeystoreBindingService::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	KeystoreBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
KeystoreBindingService *KeystoreBindingService::copy()
{	KeystoreBindingService *dup = SOAP_NEW_UNMANAGED(KeystoreBindingService);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}
#endif

KeystoreBindingService& KeystoreBindingService::operator=(const KeystoreBindingService& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
	}
	return *this;
}

int KeystoreBindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int KeystoreBindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int KeystoreBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int KeystoreBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int KeystoreBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int KeystoreBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void KeystoreBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void KeystoreBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *KeystoreBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void KeystoreBindingService::soap_noheader()
{	this->soap->header = NULL;
}

void KeystoreBindingService::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *subscriptionID)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->subscriptionID = subscriptionID;
}

::SOAP_ENV__Header *KeystoreBindingService::soap_header()
{	return this->soap->header;
}

#ifndef WITH_NOIO
int KeystoreBindingService::run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int KeystoreBindingService::ssl_run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}
#endif

SOAP_SOCKET KeystoreBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET KeystoreBindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int KeystoreBindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif
#endif

int KeystoreBindingService::serve()
{
#ifndef WITH_FASTCGI
	this->soap->keep_alive = this->soap->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (this->soap->keep_alive > 0 && this->soap->max_keep_alive > 0)
			this->soap->keep_alive--;
#endif
		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if ((dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap))) && this->soap->error && this->soap->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___onvifAdvancedSecurity_kb__CreateRSAKeyPair(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__UploadKeyPairInPKCS8(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__UploadCertificateWithPrivateKeyInPKCS12(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__GetKeyStatus(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__GetPrivateKeyStatus(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__GetAllKeys(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__DeleteKey(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__CreatePKCS10CSR(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__CreateSelfSignedCertificate(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__UploadCertificate(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__GetCertificate(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__GetAllCertificates(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__DeleteCertificate(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__CreateCertificationPath(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__GetCertificationPath(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__GetAllCertificationPaths(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__DeleteCertificationPath(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__UploadPassphrase(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__GetAllPassphrases(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__DeletePassphrase(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__UploadCRL(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__GetCRL(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__GetAllCRLs(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__DeleteCRL(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__CreateCertPathValidationPolicy(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__GetCertPathValidationPolicy(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__GetAllCertPathValidationPolicies(struct soap*, KeystoreBindingService*);
static int serve___onvifAdvancedSecurity_kb__DeleteCertPathValidationPolicy(struct soap*, KeystoreBindingService*);

int KeystoreBindingService::dispatch()
{	return dispatch(this->soap);
}

int KeystoreBindingService::dispatch(struct soap* soap)
{
	KeystoreBindingService_init(soap->imode, soap->omode);

	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:CreateRSAKeyPair"))
		return serve___onvifAdvancedSecurity_kb__CreateRSAKeyPair(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:UploadKeyPairInPKCS8"))
		return serve___onvifAdvancedSecurity_kb__UploadKeyPairInPKCS8(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:UploadCertificateWithPrivateKeyInPKCS12"))
		return serve___onvifAdvancedSecurity_kb__UploadCertificateWithPrivateKeyInPKCS12(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:GetKeyStatus"))
		return serve___onvifAdvancedSecurity_kb__GetKeyStatus(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:GetPrivateKeyStatus"))
		return serve___onvifAdvancedSecurity_kb__GetPrivateKeyStatus(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:GetAllKeys"))
		return serve___onvifAdvancedSecurity_kb__GetAllKeys(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:DeleteKey"))
		return serve___onvifAdvancedSecurity_kb__DeleteKey(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:CreatePKCS10CSR"))
		return serve___onvifAdvancedSecurity_kb__CreatePKCS10CSR(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:CreateSelfSignedCertificate"))
		return serve___onvifAdvancedSecurity_kb__CreateSelfSignedCertificate(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:UploadCertificate"))
		return serve___onvifAdvancedSecurity_kb__UploadCertificate(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:GetCertificate"))
		return serve___onvifAdvancedSecurity_kb__GetCertificate(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:GetAllCertificates"))
		return serve___onvifAdvancedSecurity_kb__GetAllCertificates(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:DeleteCertificate"))
		return serve___onvifAdvancedSecurity_kb__DeleteCertificate(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:CreateCertificationPath"))
		return serve___onvifAdvancedSecurity_kb__CreateCertificationPath(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:GetCertificationPath"))
		return serve___onvifAdvancedSecurity_kb__GetCertificationPath(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:GetAllCertificationPaths"))
		return serve___onvifAdvancedSecurity_kb__GetAllCertificationPaths(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:DeleteCertificationPath"))
		return serve___onvifAdvancedSecurity_kb__DeleteCertificationPath(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:UploadPassphrase"))
		return serve___onvifAdvancedSecurity_kb__UploadPassphrase(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:GetAllPassphrases"))
		return serve___onvifAdvancedSecurity_kb__GetAllPassphrases(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:DeletePassphrase"))
		return serve___onvifAdvancedSecurity_kb__DeletePassphrase(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:UploadCRL"))
		return serve___onvifAdvancedSecurity_kb__UploadCRL(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:GetCRL"))
		return serve___onvifAdvancedSecurity_kb__GetCRL(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:GetAllCRLs"))
		return serve___onvifAdvancedSecurity_kb__GetAllCRLs(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:DeleteCRL"))
		return serve___onvifAdvancedSecurity_kb__DeleteCRL(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:CreateCertPathValidationPolicy"))
		return serve___onvifAdvancedSecurity_kb__CreateCertPathValidationPolicy(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:GetCertPathValidationPolicy"))
		return serve___onvifAdvancedSecurity_kb__GetCertPathValidationPolicy(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:GetAllCertPathValidationPolicies"))
		return serve___onvifAdvancedSecurity_kb__GetAllCertPathValidationPolicies(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAdvancedSecurity:DeleteCertPathValidationPolicy"))
		return serve___onvifAdvancedSecurity_kb__DeleteCertPathValidationPolicy(soap, this);
	return soap->error = SOAP_NO_METHOD;
}

static int serve___onvifAdvancedSecurity_kb__CreateRSAKeyPair(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__CreateRSAKeyPair soap_tmp___onvifAdvancedSecurity_kb__CreateRSAKeyPair;
	_onvifAdvancedSecurity__CreateRSAKeyPairResponse onvifAdvancedSecurity__CreateRSAKeyPairResponse;
	onvifAdvancedSecurity__CreateRSAKeyPairResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__CreateRSAKeyPair(soap, &soap_tmp___onvifAdvancedSecurity_kb__CreateRSAKeyPair);
	if (!soap_get___onvifAdvancedSecurity_kb__CreateRSAKeyPair(soap, &soap_tmp___onvifAdvancedSecurity_kb__CreateRSAKeyPair, "-onvifAdvancedSecurity-kb:CreateRSAKeyPair", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateRSAKeyPair(soap_tmp___onvifAdvancedSecurity_kb__CreateRSAKeyPair.onvifAdvancedSecurity__CreateRSAKeyPair, onvifAdvancedSecurity__CreateRSAKeyPairResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__CreateRSAKeyPairResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__CreateRSAKeyPairResponse.soap_put(soap, "onvifAdvancedSecurity:CreateRSAKeyPairResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__CreateRSAKeyPairResponse.soap_put(soap, "onvifAdvancedSecurity:CreateRSAKeyPairResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__UploadKeyPairInPKCS8(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__UploadKeyPairInPKCS8 soap_tmp___onvifAdvancedSecurity_kb__UploadKeyPairInPKCS8;
	_onvifAdvancedSecurity__UploadKeyPairInPKCS8Response onvifAdvancedSecurity__UploadKeyPairInPKCS8Response;
	onvifAdvancedSecurity__UploadKeyPairInPKCS8Response.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__UploadKeyPairInPKCS8(soap, &soap_tmp___onvifAdvancedSecurity_kb__UploadKeyPairInPKCS8);
	if (!soap_get___onvifAdvancedSecurity_kb__UploadKeyPairInPKCS8(soap, &soap_tmp___onvifAdvancedSecurity_kb__UploadKeyPairInPKCS8, "-onvifAdvancedSecurity-kb:UploadKeyPairInPKCS8", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->UploadKeyPairInPKCS8(soap_tmp___onvifAdvancedSecurity_kb__UploadKeyPairInPKCS8.onvifAdvancedSecurity__UploadKeyPairInPKCS8, onvifAdvancedSecurity__UploadKeyPairInPKCS8Response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__UploadKeyPairInPKCS8Response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__UploadKeyPairInPKCS8Response.soap_put(soap, "onvifAdvancedSecurity:UploadKeyPairInPKCS8Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__UploadKeyPairInPKCS8Response.soap_put(soap, "onvifAdvancedSecurity:UploadKeyPairInPKCS8Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__UploadCertificateWithPrivateKeyInPKCS12(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__UploadCertificateWithPrivateKeyInPKCS12 soap_tmp___onvifAdvancedSecurity_kb__UploadCertificateWithPrivateKeyInPKCS12;
	_onvifAdvancedSecurity__UploadCertificateWithPrivateKeyInPKCS12Response onvifAdvancedSecurity__UploadCertificateWithPrivateKeyInPKCS12Response;
	onvifAdvancedSecurity__UploadCertificateWithPrivateKeyInPKCS12Response.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___onvifAdvancedSecurity_kb__UploadCertificateWithPrivateKeyInPKCS12);
	if (!soap_get___onvifAdvancedSecurity_kb__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___onvifAdvancedSecurity_kb__UploadCertificateWithPrivateKeyInPKCS12, "-onvifAdvancedSecurity-kb:UploadCertificateWithPrivateKeyInPKCS12", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->UploadCertificateWithPrivateKeyInPKCS12(soap_tmp___onvifAdvancedSecurity_kb__UploadCertificateWithPrivateKeyInPKCS12.onvifAdvancedSecurity__UploadCertificateWithPrivateKeyInPKCS12, onvifAdvancedSecurity__UploadCertificateWithPrivateKeyInPKCS12Response);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__UploadCertificateWithPrivateKeyInPKCS12Response.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__UploadCertificateWithPrivateKeyInPKCS12Response.soap_put(soap, "onvifAdvancedSecurity:UploadCertificateWithPrivateKeyInPKCS12Response", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__UploadCertificateWithPrivateKeyInPKCS12Response.soap_put(soap, "onvifAdvancedSecurity:UploadCertificateWithPrivateKeyInPKCS12Response", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__GetKeyStatus(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__GetKeyStatus soap_tmp___onvifAdvancedSecurity_kb__GetKeyStatus;
	_onvifAdvancedSecurity__GetKeyStatusResponse onvifAdvancedSecurity__GetKeyStatusResponse;
	onvifAdvancedSecurity__GetKeyStatusResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__GetKeyStatus(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetKeyStatus);
	if (!soap_get___onvifAdvancedSecurity_kb__GetKeyStatus(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetKeyStatus, "-onvifAdvancedSecurity-kb:GetKeyStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetKeyStatus(soap_tmp___onvifAdvancedSecurity_kb__GetKeyStatus.onvifAdvancedSecurity__GetKeyStatus, onvifAdvancedSecurity__GetKeyStatusResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__GetKeyStatusResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__GetKeyStatusResponse.soap_put(soap, "onvifAdvancedSecurity:GetKeyStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__GetKeyStatusResponse.soap_put(soap, "onvifAdvancedSecurity:GetKeyStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__GetPrivateKeyStatus(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__GetPrivateKeyStatus soap_tmp___onvifAdvancedSecurity_kb__GetPrivateKeyStatus;
	_onvifAdvancedSecurity__GetPrivateKeyStatusResponse onvifAdvancedSecurity__GetPrivateKeyStatusResponse;
	onvifAdvancedSecurity__GetPrivateKeyStatusResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__GetPrivateKeyStatus(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetPrivateKeyStatus);
	if (!soap_get___onvifAdvancedSecurity_kb__GetPrivateKeyStatus(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetPrivateKeyStatus, "-onvifAdvancedSecurity-kb:GetPrivateKeyStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetPrivateKeyStatus(soap_tmp___onvifAdvancedSecurity_kb__GetPrivateKeyStatus.onvifAdvancedSecurity__GetPrivateKeyStatus, onvifAdvancedSecurity__GetPrivateKeyStatusResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__GetPrivateKeyStatusResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__GetPrivateKeyStatusResponse.soap_put(soap, "onvifAdvancedSecurity:GetPrivateKeyStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__GetPrivateKeyStatusResponse.soap_put(soap, "onvifAdvancedSecurity:GetPrivateKeyStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__GetAllKeys(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__GetAllKeys soap_tmp___onvifAdvancedSecurity_kb__GetAllKeys;
	_onvifAdvancedSecurity__GetAllKeysResponse onvifAdvancedSecurity__GetAllKeysResponse;
	onvifAdvancedSecurity__GetAllKeysResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__GetAllKeys(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetAllKeys);
	if (!soap_get___onvifAdvancedSecurity_kb__GetAllKeys(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetAllKeys, "-onvifAdvancedSecurity-kb:GetAllKeys", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAllKeys(soap_tmp___onvifAdvancedSecurity_kb__GetAllKeys.onvifAdvancedSecurity__GetAllKeys, onvifAdvancedSecurity__GetAllKeysResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__GetAllKeysResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__GetAllKeysResponse.soap_put(soap, "onvifAdvancedSecurity:GetAllKeysResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__GetAllKeysResponse.soap_put(soap, "onvifAdvancedSecurity:GetAllKeysResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__DeleteKey(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__DeleteKey soap_tmp___onvifAdvancedSecurity_kb__DeleteKey;
	_onvifAdvancedSecurity__DeleteKeyResponse onvifAdvancedSecurity__DeleteKeyResponse;
	onvifAdvancedSecurity__DeleteKeyResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__DeleteKey(soap, &soap_tmp___onvifAdvancedSecurity_kb__DeleteKey);
	if (!soap_get___onvifAdvancedSecurity_kb__DeleteKey(soap, &soap_tmp___onvifAdvancedSecurity_kb__DeleteKey, "-onvifAdvancedSecurity-kb:DeleteKey", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteKey(soap_tmp___onvifAdvancedSecurity_kb__DeleteKey.onvifAdvancedSecurity__DeleteKey, onvifAdvancedSecurity__DeleteKeyResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__DeleteKeyResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__DeleteKeyResponse.soap_put(soap, "onvifAdvancedSecurity:DeleteKeyResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__DeleteKeyResponse.soap_put(soap, "onvifAdvancedSecurity:DeleteKeyResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__CreatePKCS10CSR(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__CreatePKCS10CSR soap_tmp___onvifAdvancedSecurity_kb__CreatePKCS10CSR;
	_onvifAdvancedSecurity__CreatePKCS10CSRResponse onvifAdvancedSecurity__CreatePKCS10CSRResponse;
	onvifAdvancedSecurity__CreatePKCS10CSRResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__CreatePKCS10CSR(soap, &soap_tmp___onvifAdvancedSecurity_kb__CreatePKCS10CSR);
	if (!soap_get___onvifAdvancedSecurity_kb__CreatePKCS10CSR(soap, &soap_tmp___onvifAdvancedSecurity_kb__CreatePKCS10CSR, "-onvifAdvancedSecurity-kb:CreatePKCS10CSR", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreatePKCS10CSR(soap_tmp___onvifAdvancedSecurity_kb__CreatePKCS10CSR.onvifAdvancedSecurity__CreatePKCS10CSR, onvifAdvancedSecurity__CreatePKCS10CSRResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__CreatePKCS10CSRResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__CreatePKCS10CSRResponse.soap_put(soap, "onvifAdvancedSecurity:CreatePKCS10CSRResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__CreatePKCS10CSRResponse.soap_put(soap, "onvifAdvancedSecurity:CreatePKCS10CSRResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__CreateSelfSignedCertificate(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__CreateSelfSignedCertificate soap_tmp___onvifAdvancedSecurity_kb__CreateSelfSignedCertificate;
	_onvifAdvancedSecurity__CreateSelfSignedCertificateResponse onvifAdvancedSecurity__CreateSelfSignedCertificateResponse;
	onvifAdvancedSecurity__CreateSelfSignedCertificateResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__CreateSelfSignedCertificate(soap, &soap_tmp___onvifAdvancedSecurity_kb__CreateSelfSignedCertificate);
	if (!soap_get___onvifAdvancedSecurity_kb__CreateSelfSignedCertificate(soap, &soap_tmp___onvifAdvancedSecurity_kb__CreateSelfSignedCertificate, "-onvifAdvancedSecurity-kb:CreateSelfSignedCertificate", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateSelfSignedCertificate(soap_tmp___onvifAdvancedSecurity_kb__CreateSelfSignedCertificate.onvifAdvancedSecurity__CreateSelfSignedCertificate, onvifAdvancedSecurity__CreateSelfSignedCertificateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__CreateSelfSignedCertificateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__CreateSelfSignedCertificateResponse.soap_put(soap, "onvifAdvancedSecurity:CreateSelfSignedCertificateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__CreateSelfSignedCertificateResponse.soap_put(soap, "onvifAdvancedSecurity:CreateSelfSignedCertificateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__UploadCertificate(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__UploadCertificate soap_tmp___onvifAdvancedSecurity_kb__UploadCertificate;
	_onvifAdvancedSecurity__UploadCertificateResponse onvifAdvancedSecurity__UploadCertificateResponse;
	onvifAdvancedSecurity__UploadCertificateResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__UploadCertificate(soap, &soap_tmp___onvifAdvancedSecurity_kb__UploadCertificate);
	if (!soap_get___onvifAdvancedSecurity_kb__UploadCertificate(soap, &soap_tmp___onvifAdvancedSecurity_kb__UploadCertificate, "-onvifAdvancedSecurity-kb:UploadCertificate", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->UploadCertificate(soap_tmp___onvifAdvancedSecurity_kb__UploadCertificate.onvifAdvancedSecurity__UploadCertificate, onvifAdvancedSecurity__UploadCertificateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__UploadCertificateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__UploadCertificateResponse.soap_put(soap, "onvifAdvancedSecurity:UploadCertificateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__UploadCertificateResponse.soap_put(soap, "onvifAdvancedSecurity:UploadCertificateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__GetCertificate(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__GetCertificate soap_tmp___onvifAdvancedSecurity_kb__GetCertificate;
	_onvifAdvancedSecurity__GetCertificateResponse onvifAdvancedSecurity__GetCertificateResponse;
	onvifAdvancedSecurity__GetCertificateResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__GetCertificate(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetCertificate);
	if (!soap_get___onvifAdvancedSecurity_kb__GetCertificate(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetCertificate, "-onvifAdvancedSecurity-kb:GetCertificate", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCertificate(soap_tmp___onvifAdvancedSecurity_kb__GetCertificate.onvifAdvancedSecurity__GetCertificate, onvifAdvancedSecurity__GetCertificateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__GetCertificateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__GetCertificateResponse.soap_put(soap, "onvifAdvancedSecurity:GetCertificateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__GetCertificateResponse.soap_put(soap, "onvifAdvancedSecurity:GetCertificateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__GetAllCertificates(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__GetAllCertificates soap_tmp___onvifAdvancedSecurity_kb__GetAllCertificates;
	_onvifAdvancedSecurity__GetAllCertificatesResponse onvifAdvancedSecurity__GetAllCertificatesResponse;
	onvifAdvancedSecurity__GetAllCertificatesResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__GetAllCertificates(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetAllCertificates);
	if (!soap_get___onvifAdvancedSecurity_kb__GetAllCertificates(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetAllCertificates, "-onvifAdvancedSecurity-kb:GetAllCertificates", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAllCertificates(soap_tmp___onvifAdvancedSecurity_kb__GetAllCertificates.onvifAdvancedSecurity__GetAllCertificates, onvifAdvancedSecurity__GetAllCertificatesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__GetAllCertificatesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__GetAllCertificatesResponse.soap_put(soap, "onvifAdvancedSecurity:GetAllCertificatesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__GetAllCertificatesResponse.soap_put(soap, "onvifAdvancedSecurity:GetAllCertificatesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__DeleteCertificate(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__DeleteCertificate soap_tmp___onvifAdvancedSecurity_kb__DeleteCertificate;
	_onvifAdvancedSecurity__DeleteCertificateResponse onvifAdvancedSecurity__DeleteCertificateResponse;
	onvifAdvancedSecurity__DeleteCertificateResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__DeleteCertificate(soap, &soap_tmp___onvifAdvancedSecurity_kb__DeleteCertificate);
	if (!soap_get___onvifAdvancedSecurity_kb__DeleteCertificate(soap, &soap_tmp___onvifAdvancedSecurity_kb__DeleteCertificate, "-onvifAdvancedSecurity-kb:DeleteCertificate", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteCertificate(soap_tmp___onvifAdvancedSecurity_kb__DeleteCertificate.onvifAdvancedSecurity__DeleteCertificate, onvifAdvancedSecurity__DeleteCertificateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__DeleteCertificateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__DeleteCertificateResponse.soap_put(soap, "onvifAdvancedSecurity:DeleteCertificateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__DeleteCertificateResponse.soap_put(soap, "onvifAdvancedSecurity:DeleteCertificateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__CreateCertificationPath(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__CreateCertificationPath soap_tmp___onvifAdvancedSecurity_kb__CreateCertificationPath;
	_onvifAdvancedSecurity__CreateCertificationPathResponse onvifAdvancedSecurity__CreateCertificationPathResponse;
	onvifAdvancedSecurity__CreateCertificationPathResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__CreateCertificationPath(soap, &soap_tmp___onvifAdvancedSecurity_kb__CreateCertificationPath);
	if (!soap_get___onvifAdvancedSecurity_kb__CreateCertificationPath(soap, &soap_tmp___onvifAdvancedSecurity_kb__CreateCertificationPath, "-onvifAdvancedSecurity-kb:CreateCertificationPath", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateCertificationPath(soap_tmp___onvifAdvancedSecurity_kb__CreateCertificationPath.onvifAdvancedSecurity__CreateCertificationPath, onvifAdvancedSecurity__CreateCertificationPathResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__CreateCertificationPathResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__CreateCertificationPathResponse.soap_put(soap, "onvifAdvancedSecurity:CreateCertificationPathResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__CreateCertificationPathResponse.soap_put(soap, "onvifAdvancedSecurity:CreateCertificationPathResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__GetCertificationPath(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__GetCertificationPath soap_tmp___onvifAdvancedSecurity_kb__GetCertificationPath;
	_onvifAdvancedSecurity__GetCertificationPathResponse onvifAdvancedSecurity__GetCertificationPathResponse;
	onvifAdvancedSecurity__GetCertificationPathResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__GetCertificationPath(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetCertificationPath);
	if (!soap_get___onvifAdvancedSecurity_kb__GetCertificationPath(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetCertificationPath, "-onvifAdvancedSecurity-kb:GetCertificationPath", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCertificationPath(soap_tmp___onvifAdvancedSecurity_kb__GetCertificationPath.onvifAdvancedSecurity__GetCertificationPath, onvifAdvancedSecurity__GetCertificationPathResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__GetCertificationPathResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__GetCertificationPathResponse.soap_put(soap, "onvifAdvancedSecurity:GetCertificationPathResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__GetCertificationPathResponse.soap_put(soap, "onvifAdvancedSecurity:GetCertificationPathResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__GetAllCertificationPaths(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__GetAllCertificationPaths soap_tmp___onvifAdvancedSecurity_kb__GetAllCertificationPaths;
	_onvifAdvancedSecurity__GetAllCertificationPathsResponse onvifAdvancedSecurity__GetAllCertificationPathsResponse;
	onvifAdvancedSecurity__GetAllCertificationPathsResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__GetAllCertificationPaths(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetAllCertificationPaths);
	if (!soap_get___onvifAdvancedSecurity_kb__GetAllCertificationPaths(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetAllCertificationPaths, "-onvifAdvancedSecurity-kb:GetAllCertificationPaths", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAllCertificationPaths(soap_tmp___onvifAdvancedSecurity_kb__GetAllCertificationPaths.onvifAdvancedSecurity__GetAllCertificationPaths, onvifAdvancedSecurity__GetAllCertificationPathsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__GetAllCertificationPathsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__GetAllCertificationPathsResponse.soap_put(soap, "onvifAdvancedSecurity:GetAllCertificationPathsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__GetAllCertificationPathsResponse.soap_put(soap, "onvifAdvancedSecurity:GetAllCertificationPathsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__DeleteCertificationPath(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__DeleteCertificationPath soap_tmp___onvifAdvancedSecurity_kb__DeleteCertificationPath;
	_onvifAdvancedSecurity__DeleteCertificationPathResponse onvifAdvancedSecurity__DeleteCertificationPathResponse;
	onvifAdvancedSecurity__DeleteCertificationPathResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__DeleteCertificationPath(soap, &soap_tmp___onvifAdvancedSecurity_kb__DeleteCertificationPath);
	if (!soap_get___onvifAdvancedSecurity_kb__DeleteCertificationPath(soap, &soap_tmp___onvifAdvancedSecurity_kb__DeleteCertificationPath, "-onvifAdvancedSecurity-kb:DeleteCertificationPath", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteCertificationPath(soap_tmp___onvifAdvancedSecurity_kb__DeleteCertificationPath.onvifAdvancedSecurity__DeleteCertificationPath, onvifAdvancedSecurity__DeleteCertificationPathResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__DeleteCertificationPathResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__DeleteCertificationPathResponse.soap_put(soap, "onvifAdvancedSecurity:DeleteCertificationPathResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__DeleteCertificationPathResponse.soap_put(soap, "onvifAdvancedSecurity:DeleteCertificationPathResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__UploadPassphrase(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__UploadPassphrase soap_tmp___onvifAdvancedSecurity_kb__UploadPassphrase;
	_onvifAdvancedSecurity__UploadPassphraseResponse onvifAdvancedSecurity__UploadPassphraseResponse;
	onvifAdvancedSecurity__UploadPassphraseResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__UploadPassphrase(soap, &soap_tmp___onvifAdvancedSecurity_kb__UploadPassphrase);
	if (!soap_get___onvifAdvancedSecurity_kb__UploadPassphrase(soap, &soap_tmp___onvifAdvancedSecurity_kb__UploadPassphrase, "-onvifAdvancedSecurity-kb:UploadPassphrase", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->UploadPassphrase(soap_tmp___onvifAdvancedSecurity_kb__UploadPassphrase.onvifAdvancedSecurity__UploadPassphrase, onvifAdvancedSecurity__UploadPassphraseResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__UploadPassphraseResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__UploadPassphraseResponse.soap_put(soap, "onvifAdvancedSecurity:UploadPassphraseResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__UploadPassphraseResponse.soap_put(soap, "onvifAdvancedSecurity:UploadPassphraseResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__GetAllPassphrases(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__GetAllPassphrases soap_tmp___onvifAdvancedSecurity_kb__GetAllPassphrases;
	_onvifAdvancedSecurity__GetAllPassphrasesResponse onvifAdvancedSecurity__GetAllPassphrasesResponse;
	onvifAdvancedSecurity__GetAllPassphrasesResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__GetAllPassphrases(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetAllPassphrases);
	if (!soap_get___onvifAdvancedSecurity_kb__GetAllPassphrases(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetAllPassphrases, "-onvifAdvancedSecurity-kb:GetAllPassphrases", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAllPassphrases(soap_tmp___onvifAdvancedSecurity_kb__GetAllPassphrases.onvifAdvancedSecurity__GetAllPassphrases, onvifAdvancedSecurity__GetAllPassphrasesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__GetAllPassphrasesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__GetAllPassphrasesResponse.soap_put(soap, "onvifAdvancedSecurity:GetAllPassphrasesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__GetAllPassphrasesResponse.soap_put(soap, "onvifAdvancedSecurity:GetAllPassphrasesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__DeletePassphrase(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__DeletePassphrase soap_tmp___onvifAdvancedSecurity_kb__DeletePassphrase;
	_onvifAdvancedSecurity__DeletePassphraseResponse onvifAdvancedSecurity__DeletePassphraseResponse;
	onvifAdvancedSecurity__DeletePassphraseResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__DeletePassphrase(soap, &soap_tmp___onvifAdvancedSecurity_kb__DeletePassphrase);
	if (!soap_get___onvifAdvancedSecurity_kb__DeletePassphrase(soap, &soap_tmp___onvifAdvancedSecurity_kb__DeletePassphrase, "-onvifAdvancedSecurity-kb:DeletePassphrase", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeletePassphrase(soap_tmp___onvifAdvancedSecurity_kb__DeletePassphrase.onvifAdvancedSecurity__DeletePassphrase, onvifAdvancedSecurity__DeletePassphraseResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__DeletePassphraseResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__DeletePassphraseResponse.soap_put(soap, "onvifAdvancedSecurity:DeletePassphraseResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__DeletePassphraseResponse.soap_put(soap, "onvifAdvancedSecurity:DeletePassphraseResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__UploadCRL(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__UploadCRL soap_tmp___onvifAdvancedSecurity_kb__UploadCRL;
	_onvifAdvancedSecurity__UploadCRLResponse onvifAdvancedSecurity__UploadCRLResponse;
	onvifAdvancedSecurity__UploadCRLResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__UploadCRL(soap, &soap_tmp___onvifAdvancedSecurity_kb__UploadCRL);
	if (!soap_get___onvifAdvancedSecurity_kb__UploadCRL(soap, &soap_tmp___onvifAdvancedSecurity_kb__UploadCRL, "-onvifAdvancedSecurity-kb:UploadCRL", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->UploadCRL(soap_tmp___onvifAdvancedSecurity_kb__UploadCRL.onvifAdvancedSecurity__UploadCRL, onvifAdvancedSecurity__UploadCRLResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__UploadCRLResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__UploadCRLResponse.soap_put(soap, "onvifAdvancedSecurity:UploadCRLResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__UploadCRLResponse.soap_put(soap, "onvifAdvancedSecurity:UploadCRLResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__GetCRL(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__GetCRL soap_tmp___onvifAdvancedSecurity_kb__GetCRL;
	_onvifAdvancedSecurity__GetCRLResponse onvifAdvancedSecurity__GetCRLResponse;
	onvifAdvancedSecurity__GetCRLResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__GetCRL(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetCRL);
	if (!soap_get___onvifAdvancedSecurity_kb__GetCRL(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetCRL, "-onvifAdvancedSecurity-kb:GetCRL", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCRL(soap_tmp___onvifAdvancedSecurity_kb__GetCRL.onvifAdvancedSecurity__GetCRL, onvifAdvancedSecurity__GetCRLResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__GetCRLResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__GetCRLResponse.soap_put(soap, "onvifAdvancedSecurity:GetCRLResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__GetCRLResponse.soap_put(soap, "onvifAdvancedSecurity:GetCRLResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__GetAllCRLs(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__GetAllCRLs soap_tmp___onvifAdvancedSecurity_kb__GetAllCRLs;
	_onvifAdvancedSecurity__GetAllCRLsResponse onvifAdvancedSecurity__GetAllCRLsResponse;
	onvifAdvancedSecurity__GetAllCRLsResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__GetAllCRLs(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetAllCRLs);
	if (!soap_get___onvifAdvancedSecurity_kb__GetAllCRLs(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetAllCRLs, "-onvifAdvancedSecurity-kb:GetAllCRLs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAllCRLs(soap_tmp___onvifAdvancedSecurity_kb__GetAllCRLs.onvifAdvancedSecurity__GetAllCRLs, onvifAdvancedSecurity__GetAllCRLsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__GetAllCRLsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__GetAllCRLsResponse.soap_put(soap, "onvifAdvancedSecurity:GetAllCRLsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__GetAllCRLsResponse.soap_put(soap, "onvifAdvancedSecurity:GetAllCRLsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__DeleteCRL(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__DeleteCRL soap_tmp___onvifAdvancedSecurity_kb__DeleteCRL;
	_onvifAdvancedSecurity__DeleteCRLResponse onvifAdvancedSecurity__DeleteCRLResponse;
	onvifAdvancedSecurity__DeleteCRLResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__DeleteCRL(soap, &soap_tmp___onvifAdvancedSecurity_kb__DeleteCRL);
	if (!soap_get___onvifAdvancedSecurity_kb__DeleteCRL(soap, &soap_tmp___onvifAdvancedSecurity_kb__DeleteCRL, "-onvifAdvancedSecurity-kb:DeleteCRL", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteCRL(soap_tmp___onvifAdvancedSecurity_kb__DeleteCRL.onvifAdvancedSecurity__DeleteCRL, onvifAdvancedSecurity__DeleteCRLResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__DeleteCRLResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__DeleteCRLResponse.soap_put(soap, "onvifAdvancedSecurity:DeleteCRLResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__DeleteCRLResponse.soap_put(soap, "onvifAdvancedSecurity:DeleteCRLResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__CreateCertPathValidationPolicy(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__CreateCertPathValidationPolicy soap_tmp___onvifAdvancedSecurity_kb__CreateCertPathValidationPolicy;
	_onvifAdvancedSecurity__CreateCertPathValidationPolicyResponse onvifAdvancedSecurity__CreateCertPathValidationPolicyResponse;
	onvifAdvancedSecurity__CreateCertPathValidationPolicyResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__CreateCertPathValidationPolicy(soap, &soap_tmp___onvifAdvancedSecurity_kb__CreateCertPathValidationPolicy);
	if (!soap_get___onvifAdvancedSecurity_kb__CreateCertPathValidationPolicy(soap, &soap_tmp___onvifAdvancedSecurity_kb__CreateCertPathValidationPolicy, "-onvifAdvancedSecurity-kb:CreateCertPathValidationPolicy", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateCertPathValidationPolicy(soap_tmp___onvifAdvancedSecurity_kb__CreateCertPathValidationPolicy.onvifAdvancedSecurity__CreateCertPathValidationPolicy, onvifAdvancedSecurity__CreateCertPathValidationPolicyResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__CreateCertPathValidationPolicyResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__CreateCertPathValidationPolicyResponse.soap_put(soap, "onvifAdvancedSecurity:CreateCertPathValidationPolicyResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__CreateCertPathValidationPolicyResponse.soap_put(soap, "onvifAdvancedSecurity:CreateCertPathValidationPolicyResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__GetCertPathValidationPolicy(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__GetCertPathValidationPolicy soap_tmp___onvifAdvancedSecurity_kb__GetCertPathValidationPolicy;
	_onvifAdvancedSecurity__GetCertPathValidationPolicyResponse onvifAdvancedSecurity__GetCertPathValidationPolicyResponse;
	onvifAdvancedSecurity__GetCertPathValidationPolicyResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__GetCertPathValidationPolicy(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetCertPathValidationPolicy);
	if (!soap_get___onvifAdvancedSecurity_kb__GetCertPathValidationPolicy(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetCertPathValidationPolicy, "-onvifAdvancedSecurity-kb:GetCertPathValidationPolicy", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCertPathValidationPolicy(soap_tmp___onvifAdvancedSecurity_kb__GetCertPathValidationPolicy.onvifAdvancedSecurity__GetCertPathValidationPolicy, onvifAdvancedSecurity__GetCertPathValidationPolicyResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__GetCertPathValidationPolicyResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__GetCertPathValidationPolicyResponse.soap_put(soap, "onvifAdvancedSecurity:GetCertPathValidationPolicyResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__GetCertPathValidationPolicyResponse.soap_put(soap, "onvifAdvancedSecurity:GetCertPathValidationPolicyResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__GetAllCertPathValidationPolicies(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__GetAllCertPathValidationPolicies soap_tmp___onvifAdvancedSecurity_kb__GetAllCertPathValidationPolicies;
	_onvifAdvancedSecurity__GetAllCertPathValidationPoliciesResponse onvifAdvancedSecurity__GetAllCertPathValidationPoliciesResponse;
	onvifAdvancedSecurity__GetAllCertPathValidationPoliciesResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__GetAllCertPathValidationPolicies(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetAllCertPathValidationPolicies);
	if (!soap_get___onvifAdvancedSecurity_kb__GetAllCertPathValidationPolicies(soap, &soap_tmp___onvifAdvancedSecurity_kb__GetAllCertPathValidationPolicies, "-onvifAdvancedSecurity-kb:GetAllCertPathValidationPolicies", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAllCertPathValidationPolicies(soap_tmp___onvifAdvancedSecurity_kb__GetAllCertPathValidationPolicies.onvifAdvancedSecurity__GetAllCertPathValidationPolicies, onvifAdvancedSecurity__GetAllCertPathValidationPoliciesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__GetAllCertPathValidationPoliciesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__GetAllCertPathValidationPoliciesResponse.soap_put(soap, "onvifAdvancedSecurity:GetAllCertPathValidationPoliciesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__GetAllCertPathValidationPoliciesResponse.soap_put(soap, "onvifAdvancedSecurity:GetAllCertPathValidationPoliciesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAdvancedSecurity_kb__DeleteCertPathValidationPolicy(struct soap *soap, KeystoreBindingService *service)
{	struct __onvifAdvancedSecurity_kb__DeleteCertPathValidationPolicy soap_tmp___onvifAdvancedSecurity_kb__DeleteCertPathValidationPolicy;
	_onvifAdvancedSecurity__DeleteCertPathValidationPolicyResponse onvifAdvancedSecurity__DeleteCertPathValidationPolicyResponse;
	onvifAdvancedSecurity__DeleteCertPathValidationPolicyResponse.soap_default(soap);
	soap_default___onvifAdvancedSecurity_kb__DeleteCertPathValidationPolicy(soap, &soap_tmp___onvifAdvancedSecurity_kb__DeleteCertPathValidationPolicy);
	if (!soap_get___onvifAdvancedSecurity_kb__DeleteCertPathValidationPolicy(soap, &soap_tmp___onvifAdvancedSecurity_kb__DeleteCertPathValidationPolicy, "-onvifAdvancedSecurity-kb:DeleteCertPathValidationPolicy", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteCertPathValidationPolicy(soap_tmp___onvifAdvancedSecurity_kb__DeleteCertPathValidationPolicy.onvifAdvancedSecurity__DeleteCertPathValidationPolicy, onvifAdvancedSecurity__DeleteCertPathValidationPolicyResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAdvancedSecurity__DeleteCertPathValidationPolicyResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAdvancedSecurity__DeleteCertPathValidationPolicyResponse.soap_put(soap, "onvifAdvancedSecurity:DeleteCertPathValidationPolicyResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAdvancedSecurity__DeleteCertPathValidationPolicyResponse.soap_put(soap, "onvifAdvancedSecurity:DeleteCertPathValidationPolicyResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
