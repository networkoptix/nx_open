/* soapAnalyticsDeviceBindingService.cpp
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapAnalyticsDeviceBindingService.h"

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService()
{	this->soap = soap_new();
	this->soap_own = true;
	AnalyticsDeviceBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService(const AnalyticsDeviceBindingService& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
}

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	AnalyticsDeviceBindingService_init(_soap->imode, _soap->omode);
}

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	AnalyticsDeviceBindingService_init(iomode, iomode);
}

AnalyticsDeviceBindingService::AnalyticsDeviceBindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	AnalyticsDeviceBindingService_init(imode, omode);
}

AnalyticsDeviceBindingService::~AnalyticsDeviceBindingService()
{	if (this->soap_own)
		soap_free(this->soap);
}

void AnalyticsDeviceBindingService::AnalyticsDeviceBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"onvifPacs", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"onvifAccessControl", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"onvifAccessRules", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"onvifActionEngine", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"onvifAdvancedSecurity-assb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
        {"onvifAdvancedSecurity-db", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
        {"onvifAdvancedSecurity-kb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
        {"onvifAdvancedSecurity-tsb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
        {"onvifAdvancedSecurity", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"onvifAnalytics-aeb", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
        {"onvifAnalytics-reb", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
        {"onvifAnalytics", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"onvifAnalyticsDevice", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"onvifCredential", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"onvifDisplay", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"onvifDoorControl", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"onvifEvents-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
        {"onvifEvents-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
        {"onvifEvents-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
        {"onvifEvents-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
        {"onvifEvents-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
        {"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"onvifEvents-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
        {"onvifEvents-psmb", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
        {"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"onvifEvents-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
        {"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"onvifMedia2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"onvifNetwork-dlb", "http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding", NULL, NULL},
        {"onvifNetwork-rdb", "http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding", NULL, NULL},
        {"onvifNetwork", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"onvifProvisioning", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"onvifReceiver", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"onvifRecording", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"onvifReplay", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"onvifScedule", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"onvifSearch", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {"onvifThermal", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

void AnalyticsDeviceBindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void AnalyticsDeviceBindingService::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	AnalyticsDeviceBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
AnalyticsDeviceBindingService *AnalyticsDeviceBindingService::copy()
{	AnalyticsDeviceBindingService *dup = SOAP_NEW_UNMANAGED(AnalyticsDeviceBindingService);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}
#endif

AnalyticsDeviceBindingService& AnalyticsDeviceBindingService::operator=(const AnalyticsDeviceBindingService& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
	}
	return *this;
}

int AnalyticsDeviceBindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int AnalyticsDeviceBindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int AnalyticsDeviceBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int AnalyticsDeviceBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int AnalyticsDeviceBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int AnalyticsDeviceBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void AnalyticsDeviceBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void AnalyticsDeviceBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *AnalyticsDeviceBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void AnalyticsDeviceBindingService::soap_noheader()
{	this->soap->header = NULL;
}

void AnalyticsDeviceBindingService::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *subscriptionID)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->subscriptionID = subscriptionID;
}

::SOAP_ENV__Header *AnalyticsDeviceBindingService::soap_header()
{	return this->soap->header;
}

#ifndef WITH_NOIO
int AnalyticsDeviceBindingService::run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int AnalyticsDeviceBindingService::ssl_run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}
#endif

SOAP_SOCKET AnalyticsDeviceBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET AnalyticsDeviceBindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int AnalyticsDeviceBindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif
#endif

int AnalyticsDeviceBindingService::serve()
{
#ifndef WITH_FASTCGI
	this->soap->keep_alive = this->soap->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (this->soap->keep_alive > 0 && this->soap->max_keep_alive > 0)
			this->soap->keep_alive--;
#endif
		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if ((dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap))) && this->soap->error && this->soap->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___onvifAnalyticsDevice__GetServiceCapabilities(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__DeleteAnalyticsEngineControl(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__CreateAnalyticsEngineControl(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__SetAnalyticsEngineControl(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__GetAnalyticsEngineControl(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__GetAnalyticsEngineControls(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__GetAnalyticsEngine(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__GetAnalyticsEngines(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__SetVideoAnalyticsConfiguration(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__SetAnalyticsEngineInput(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__GetAnalyticsEngineInput(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__GetAnalyticsEngineInputs(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__GetAnalyticsDeviceStreamUri(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__GetVideoAnalyticsConfiguration(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__CreateAnalyticsEngineInputs(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__DeleteAnalyticsEngineInputs(struct soap*, AnalyticsDeviceBindingService*);
static int serve___onvifAnalyticsDevice__GetAnalyticsState(struct soap*, AnalyticsDeviceBindingService*);

int AnalyticsDeviceBindingService::dispatch()
{	return dispatch(this->soap);
}

int AnalyticsDeviceBindingService::dispatch(struct soap* soap)
{
	AnalyticsDeviceBindingService_init(soap->imode, soap->omode);

	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:GetServiceCapabilities"))
		return serve___onvifAnalyticsDevice__GetServiceCapabilities(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:DeleteAnalyticsEngineControl"))
		return serve___onvifAnalyticsDevice__DeleteAnalyticsEngineControl(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:CreateAnalyticsEngineControl"))
		return serve___onvifAnalyticsDevice__CreateAnalyticsEngineControl(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:SetAnalyticsEngineControl"))
		return serve___onvifAnalyticsDevice__SetAnalyticsEngineControl(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:GetAnalyticsEngineControl"))
		return serve___onvifAnalyticsDevice__GetAnalyticsEngineControl(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:GetAnalyticsEngineControls"))
		return serve___onvifAnalyticsDevice__GetAnalyticsEngineControls(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:GetAnalyticsEngine"))
		return serve___onvifAnalyticsDevice__GetAnalyticsEngine(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:GetAnalyticsEngines"))
		return serve___onvifAnalyticsDevice__GetAnalyticsEngines(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:SetVideoAnalyticsConfiguration"))
		return serve___onvifAnalyticsDevice__SetVideoAnalyticsConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:SetAnalyticsEngineInput"))
		return serve___onvifAnalyticsDevice__SetAnalyticsEngineInput(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:GetAnalyticsEngineInput"))
		return serve___onvifAnalyticsDevice__GetAnalyticsEngineInput(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:GetAnalyticsEngineInputs"))
		return serve___onvifAnalyticsDevice__GetAnalyticsEngineInputs(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:GetAnalyticsDeviceStreamUri"))
		return serve___onvifAnalyticsDevice__GetAnalyticsDeviceStreamUri(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:GetVideoAnalyticsConfiguration"))
		return serve___onvifAnalyticsDevice__GetVideoAnalyticsConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:CreateAnalyticsEngineInputs"))
		return serve___onvifAnalyticsDevice__CreateAnalyticsEngineInputs(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:DeleteAnalyticsEngineInputs"))
		return serve___onvifAnalyticsDevice__DeleteAnalyticsEngineInputs(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifAnalyticsDevice:GetAnalyticsState"))
		return serve___onvifAnalyticsDevice__GetAnalyticsState(soap, this);
	return soap->error = SOAP_NO_METHOD;
}

static int serve___onvifAnalyticsDevice__GetServiceCapabilities(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__GetServiceCapabilities soap_tmp___onvifAnalyticsDevice__GetServiceCapabilities;
	_onvifAnalyticsDevice__GetServiceCapabilitiesResponse onvifAnalyticsDevice__GetServiceCapabilitiesResponse;
	onvifAnalyticsDevice__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__GetServiceCapabilities(soap, &soap_tmp___onvifAnalyticsDevice__GetServiceCapabilities);
	if (!soap_get___onvifAnalyticsDevice__GetServiceCapabilities(soap, &soap_tmp___onvifAnalyticsDevice__GetServiceCapabilities, "-onvifAnalyticsDevice:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetServiceCapabilities(soap_tmp___onvifAnalyticsDevice__GetServiceCapabilities.onvifAnalyticsDevice__GetServiceCapabilities, onvifAnalyticsDevice__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__GetServiceCapabilitiesResponse.soap_put(soap, "onvifAnalyticsDevice:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__GetServiceCapabilitiesResponse.soap_put(soap, "onvifAnalyticsDevice:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__DeleteAnalyticsEngineControl(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__DeleteAnalyticsEngineControl soap_tmp___onvifAnalyticsDevice__DeleteAnalyticsEngineControl;
	_onvifAnalyticsDevice__DeleteAnalyticsEngineControlResponse onvifAnalyticsDevice__DeleteAnalyticsEngineControlResponse;
	onvifAnalyticsDevice__DeleteAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__DeleteAnalyticsEngineControl(soap, &soap_tmp___onvifAnalyticsDevice__DeleteAnalyticsEngineControl);
	if (!soap_get___onvifAnalyticsDevice__DeleteAnalyticsEngineControl(soap, &soap_tmp___onvifAnalyticsDevice__DeleteAnalyticsEngineControl, "-onvifAnalyticsDevice:DeleteAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteAnalyticsEngineControl(soap_tmp___onvifAnalyticsDevice__DeleteAnalyticsEngineControl.onvifAnalyticsDevice__DeleteAnalyticsEngineControl, onvifAnalyticsDevice__DeleteAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__DeleteAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__DeleteAnalyticsEngineControlResponse.soap_put(soap, "onvifAnalyticsDevice:DeleteAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__DeleteAnalyticsEngineControlResponse.soap_put(soap, "onvifAnalyticsDevice:DeleteAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__CreateAnalyticsEngineControl(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__CreateAnalyticsEngineControl soap_tmp___onvifAnalyticsDevice__CreateAnalyticsEngineControl;
	_onvifAnalyticsDevice__CreateAnalyticsEngineControlResponse onvifAnalyticsDevice__CreateAnalyticsEngineControlResponse;
	onvifAnalyticsDevice__CreateAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__CreateAnalyticsEngineControl(soap, &soap_tmp___onvifAnalyticsDevice__CreateAnalyticsEngineControl);
	if (!soap_get___onvifAnalyticsDevice__CreateAnalyticsEngineControl(soap, &soap_tmp___onvifAnalyticsDevice__CreateAnalyticsEngineControl, "-onvifAnalyticsDevice:CreateAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateAnalyticsEngineControl(soap_tmp___onvifAnalyticsDevice__CreateAnalyticsEngineControl.onvifAnalyticsDevice__CreateAnalyticsEngineControl, onvifAnalyticsDevice__CreateAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__CreateAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__CreateAnalyticsEngineControlResponse.soap_put(soap, "onvifAnalyticsDevice:CreateAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__CreateAnalyticsEngineControlResponse.soap_put(soap, "onvifAnalyticsDevice:CreateAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__SetAnalyticsEngineControl(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__SetAnalyticsEngineControl soap_tmp___onvifAnalyticsDevice__SetAnalyticsEngineControl;
	_onvifAnalyticsDevice__SetAnalyticsEngineControlResponse onvifAnalyticsDevice__SetAnalyticsEngineControlResponse;
	onvifAnalyticsDevice__SetAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__SetAnalyticsEngineControl(soap, &soap_tmp___onvifAnalyticsDevice__SetAnalyticsEngineControl);
	if (!soap_get___onvifAnalyticsDevice__SetAnalyticsEngineControl(soap, &soap_tmp___onvifAnalyticsDevice__SetAnalyticsEngineControl, "-onvifAnalyticsDevice:SetAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAnalyticsEngineControl(soap_tmp___onvifAnalyticsDevice__SetAnalyticsEngineControl.onvifAnalyticsDevice__SetAnalyticsEngineControl, onvifAnalyticsDevice__SetAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__SetAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__SetAnalyticsEngineControlResponse.soap_put(soap, "onvifAnalyticsDevice:SetAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__SetAnalyticsEngineControlResponse.soap_put(soap, "onvifAnalyticsDevice:SetAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__GetAnalyticsEngineControl(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__GetAnalyticsEngineControl soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineControl;
	_onvifAnalyticsDevice__GetAnalyticsEngineControlResponse onvifAnalyticsDevice__GetAnalyticsEngineControlResponse;
	onvifAnalyticsDevice__GetAnalyticsEngineControlResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__GetAnalyticsEngineControl(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineControl);
	if (!soap_get___onvifAnalyticsDevice__GetAnalyticsEngineControl(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineControl, "-onvifAnalyticsDevice:GetAnalyticsEngineControl", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngineControl(soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineControl.onvifAnalyticsDevice__GetAnalyticsEngineControl, onvifAnalyticsDevice__GetAnalyticsEngineControlResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__GetAnalyticsEngineControlResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__GetAnalyticsEngineControlResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsEngineControlResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__GetAnalyticsEngineControlResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsEngineControlResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__GetAnalyticsEngineControls(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__GetAnalyticsEngineControls soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineControls;
	_onvifAnalyticsDevice__GetAnalyticsEngineControlsResponse onvifAnalyticsDevice__GetAnalyticsEngineControlsResponse;
	onvifAnalyticsDevice__GetAnalyticsEngineControlsResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__GetAnalyticsEngineControls(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineControls);
	if (!soap_get___onvifAnalyticsDevice__GetAnalyticsEngineControls(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineControls, "-onvifAnalyticsDevice:GetAnalyticsEngineControls", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngineControls(soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineControls.onvifAnalyticsDevice__GetAnalyticsEngineControls, onvifAnalyticsDevice__GetAnalyticsEngineControlsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__GetAnalyticsEngineControlsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__GetAnalyticsEngineControlsResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsEngineControlsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__GetAnalyticsEngineControlsResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsEngineControlsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__GetAnalyticsEngine(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__GetAnalyticsEngine soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngine;
	_onvifAnalyticsDevice__GetAnalyticsEngineResponse onvifAnalyticsDevice__GetAnalyticsEngineResponse;
	onvifAnalyticsDevice__GetAnalyticsEngineResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__GetAnalyticsEngine(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngine);
	if (!soap_get___onvifAnalyticsDevice__GetAnalyticsEngine(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngine, "-onvifAnalyticsDevice:GetAnalyticsEngine", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngine(soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngine.onvifAnalyticsDevice__GetAnalyticsEngine, onvifAnalyticsDevice__GetAnalyticsEngineResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__GetAnalyticsEngineResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__GetAnalyticsEngineResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsEngineResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__GetAnalyticsEngineResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsEngineResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__GetAnalyticsEngines(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__GetAnalyticsEngines soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngines;
	_onvifAnalyticsDevice__GetAnalyticsEnginesResponse onvifAnalyticsDevice__GetAnalyticsEnginesResponse;
	onvifAnalyticsDevice__GetAnalyticsEnginesResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__GetAnalyticsEngines(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngines);
	if (!soap_get___onvifAnalyticsDevice__GetAnalyticsEngines(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngines, "-onvifAnalyticsDevice:GetAnalyticsEngines", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngines(soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngines.onvifAnalyticsDevice__GetAnalyticsEngines, onvifAnalyticsDevice__GetAnalyticsEnginesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__GetAnalyticsEnginesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__GetAnalyticsEnginesResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsEnginesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__GetAnalyticsEnginesResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsEnginesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__SetVideoAnalyticsConfiguration(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__SetVideoAnalyticsConfiguration soap_tmp___onvifAnalyticsDevice__SetVideoAnalyticsConfiguration;
	_onvifAnalyticsDevice__SetVideoAnalyticsConfigurationResponse onvifAnalyticsDevice__SetVideoAnalyticsConfigurationResponse;
	onvifAnalyticsDevice__SetVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__SetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifAnalyticsDevice__SetVideoAnalyticsConfiguration);
	if (!soap_get___onvifAnalyticsDevice__SetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifAnalyticsDevice__SetVideoAnalyticsConfiguration, "-onvifAnalyticsDevice:SetVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoAnalyticsConfiguration(soap_tmp___onvifAnalyticsDevice__SetVideoAnalyticsConfiguration.onvifAnalyticsDevice__SetVideoAnalyticsConfiguration, onvifAnalyticsDevice__SetVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__SetVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__SetVideoAnalyticsConfigurationResponse.soap_put(soap, "onvifAnalyticsDevice:SetVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__SetVideoAnalyticsConfigurationResponse.soap_put(soap, "onvifAnalyticsDevice:SetVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__SetAnalyticsEngineInput(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__SetAnalyticsEngineInput soap_tmp___onvifAnalyticsDevice__SetAnalyticsEngineInput;
	_onvifAnalyticsDevice__SetAnalyticsEngineInputResponse onvifAnalyticsDevice__SetAnalyticsEngineInputResponse;
	onvifAnalyticsDevice__SetAnalyticsEngineInputResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__SetAnalyticsEngineInput(soap, &soap_tmp___onvifAnalyticsDevice__SetAnalyticsEngineInput);
	if (!soap_get___onvifAnalyticsDevice__SetAnalyticsEngineInput(soap, &soap_tmp___onvifAnalyticsDevice__SetAnalyticsEngineInput, "-onvifAnalyticsDevice:SetAnalyticsEngineInput", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAnalyticsEngineInput(soap_tmp___onvifAnalyticsDevice__SetAnalyticsEngineInput.onvifAnalyticsDevice__SetAnalyticsEngineInput, onvifAnalyticsDevice__SetAnalyticsEngineInputResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__SetAnalyticsEngineInputResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__SetAnalyticsEngineInputResponse.soap_put(soap, "onvifAnalyticsDevice:SetAnalyticsEngineInputResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__SetAnalyticsEngineInputResponse.soap_put(soap, "onvifAnalyticsDevice:SetAnalyticsEngineInputResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__GetAnalyticsEngineInput(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__GetAnalyticsEngineInput soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineInput;
	_onvifAnalyticsDevice__GetAnalyticsEngineInputResponse onvifAnalyticsDevice__GetAnalyticsEngineInputResponse;
	onvifAnalyticsDevice__GetAnalyticsEngineInputResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__GetAnalyticsEngineInput(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineInput);
	if (!soap_get___onvifAnalyticsDevice__GetAnalyticsEngineInput(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineInput, "-onvifAnalyticsDevice:GetAnalyticsEngineInput", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngineInput(soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineInput.onvifAnalyticsDevice__GetAnalyticsEngineInput, onvifAnalyticsDevice__GetAnalyticsEngineInputResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__GetAnalyticsEngineInputResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__GetAnalyticsEngineInputResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsEngineInputResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__GetAnalyticsEngineInputResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsEngineInputResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__GetAnalyticsEngineInputs(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__GetAnalyticsEngineInputs soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineInputs;
	_onvifAnalyticsDevice__GetAnalyticsEngineInputsResponse onvifAnalyticsDevice__GetAnalyticsEngineInputsResponse;
	onvifAnalyticsDevice__GetAnalyticsEngineInputsResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__GetAnalyticsEngineInputs(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineInputs);
	if (!soap_get___onvifAnalyticsDevice__GetAnalyticsEngineInputs(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineInputs, "-onvifAnalyticsDevice:GetAnalyticsEngineInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsEngineInputs(soap_tmp___onvifAnalyticsDevice__GetAnalyticsEngineInputs.onvifAnalyticsDevice__GetAnalyticsEngineInputs, onvifAnalyticsDevice__GetAnalyticsEngineInputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__GetAnalyticsEngineInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__GetAnalyticsEngineInputsResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsEngineInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__GetAnalyticsEngineInputsResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsEngineInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__GetAnalyticsDeviceStreamUri(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__GetAnalyticsDeviceStreamUri soap_tmp___onvifAnalyticsDevice__GetAnalyticsDeviceStreamUri;
	_onvifAnalyticsDevice__GetAnalyticsDeviceStreamUriResponse onvifAnalyticsDevice__GetAnalyticsDeviceStreamUriResponse;
	onvifAnalyticsDevice__GetAnalyticsDeviceStreamUriResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__GetAnalyticsDeviceStreamUri(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsDeviceStreamUri);
	if (!soap_get___onvifAnalyticsDevice__GetAnalyticsDeviceStreamUri(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsDeviceStreamUri, "-onvifAnalyticsDevice:GetAnalyticsDeviceStreamUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsDeviceStreamUri(soap_tmp___onvifAnalyticsDevice__GetAnalyticsDeviceStreamUri.onvifAnalyticsDevice__GetAnalyticsDeviceStreamUri, onvifAnalyticsDevice__GetAnalyticsDeviceStreamUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__GetAnalyticsDeviceStreamUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__GetAnalyticsDeviceStreamUriResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsDeviceStreamUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__GetAnalyticsDeviceStreamUriResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsDeviceStreamUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__GetVideoAnalyticsConfiguration(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__GetVideoAnalyticsConfiguration soap_tmp___onvifAnalyticsDevice__GetVideoAnalyticsConfiguration;
	_onvifAnalyticsDevice__GetVideoAnalyticsConfigurationResponse onvifAnalyticsDevice__GetVideoAnalyticsConfigurationResponse;
	onvifAnalyticsDevice__GetVideoAnalyticsConfigurationResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__GetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifAnalyticsDevice__GetVideoAnalyticsConfiguration);
	if (!soap_get___onvifAnalyticsDevice__GetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifAnalyticsDevice__GetVideoAnalyticsConfiguration, "-onvifAnalyticsDevice:GetVideoAnalyticsConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoAnalyticsConfiguration(soap_tmp___onvifAnalyticsDevice__GetVideoAnalyticsConfiguration.onvifAnalyticsDevice__GetVideoAnalyticsConfiguration, onvifAnalyticsDevice__GetVideoAnalyticsConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__GetVideoAnalyticsConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__GetVideoAnalyticsConfigurationResponse.soap_put(soap, "onvifAnalyticsDevice:GetVideoAnalyticsConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__GetVideoAnalyticsConfigurationResponse.soap_put(soap, "onvifAnalyticsDevice:GetVideoAnalyticsConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__CreateAnalyticsEngineInputs(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__CreateAnalyticsEngineInputs soap_tmp___onvifAnalyticsDevice__CreateAnalyticsEngineInputs;
	_onvifAnalyticsDevice__CreateAnalyticsEngineInputsResponse onvifAnalyticsDevice__CreateAnalyticsEngineInputsResponse;
	onvifAnalyticsDevice__CreateAnalyticsEngineInputsResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__CreateAnalyticsEngineInputs(soap, &soap_tmp___onvifAnalyticsDevice__CreateAnalyticsEngineInputs);
	if (!soap_get___onvifAnalyticsDevice__CreateAnalyticsEngineInputs(soap, &soap_tmp___onvifAnalyticsDevice__CreateAnalyticsEngineInputs, "-onvifAnalyticsDevice:CreateAnalyticsEngineInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateAnalyticsEngineInputs(soap_tmp___onvifAnalyticsDevice__CreateAnalyticsEngineInputs.onvifAnalyticsDevice__CreateAnalyticsEngineInputs, onvifAnalyticsDevice__CreateAnalyticsEngineInputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__CreateAnalyticsEngineInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__CreateAnalyticsEngineInputsResponse.soap_put(soap, "onvifAnalyticsDevice:CreateAnalyticsEngineInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__CreateAnalyticsEngineInputsResponse.soap_put(soap, "onvifAnalyticsDevice:CreateAnalyticsEngineInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__DeleteAnalyticsEngineInputs(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__DeleteAnalyticsEngineInputs soap_tmp___onvifAnalyticsDevice__DeleteAnalyticsEngineInputs;
	_onvifAnalyticsDevice__DeleteAnalyticsEngineInputsResponse onvifAnalyticsDevice__DeleteAnalyticsEngineInputsResponse;
	onvifAnalyticsDevice__DeleteAnalyticsEngineInputsResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__DeleteAnalyticsEngineInputs(soap, &soap_tmp___onvifAnalyticsDevice__DeleteAnalyticsEngineInputs);
	if (!soap_get___onvifAnalyticsDevice__DeleteAnalyticsEngineInputs(soap, &soap_tmp___onvifAnalyticsDevice__DeleteAnalyticsEngineInputs, "-onvifAnalyticsDevice:DeleteAnalyticsEngineInputs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteAnalyticsEngineInputs(soap_tmp___onvifAnalyticsDevice__DeleteAnalyticsEngineInputs.onvifAnalyticsDevice__DeleteAnalyticsEngineInputs, onvifAnalyticsDevice__DeleteAnalyticsEngineInputsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__DeleteAnalyticsEngineInputsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__DeleteAnalyticsEngineInputsResponse.soap_put(soap, "onvifAnalyticsDevice:DeleteAnalyticsEngineInputsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__DeleteAnalyticsEngineInputsResponse.soap_put(soap, "onvifAnalyticsDevice:DeleteAnalyticsEngineInputsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifAnalyticsDevice__GetAnalyticsState(struct soap *soap, AnalyticsDeviceBindingService *service)
{	struct __onvifAnalyticsDevice__GetAnalyticsState soap_tmp___onvifAnalyticsDevice__GetAnalyticsState;
	_onvifAnalyticsDevice__GetAnalyticsStateResponse onvifAnalyticsDevice__GetAnalyticsStateResponse;
	onvifAnalyticsDevice__GetAnalyticsStateResponse.soap_default(soap);
	soap_default___onvifAnalyticsDevice__GetAnalyticsState(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsState);
	if (!soap_get___onvifAnalyticsDevice__GetAnalyticsState(soap, &soap_tmp___onvifAnalyticsDevice__GetAnalyticsState, "-onvifAnalyticsDevice:GetAnalyticsState", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsState(soap_tmp___onvifAnalyticsDevice__GetAnalyticsState.onvifAnalyticsDevice__GetAnalyticsState, onvifAnalyticsDevice__GetAnalyticsStateResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifAnalyticsDevice__GetAnalyticsStateResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifAnalyticsDevice__GetAnalyticsStateResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsStateResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifAnalyticsDevice__GetAnalyticsStateResponse.soap_put(soap, "onvifAnalyticsDevice:GetAnalyticsStateResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
