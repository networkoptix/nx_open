/* soapImagingBindingProxy.cpp
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapImagingBindingProxy.h"

ImagingBindingProxy::ImagingBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	ImagingBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ImagingBindingProxy::ImagingBindingProxy(const ImagingBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

ImagingBindingProxy::ImagingBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	ImagingBindingProxy_init(_soap->imode, _soap->omode);
}

ImagingBindingProxy::ImagingBindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	ImagingBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

ImagingBindingProxy::ImagingBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	ImagingBindingProxy_init(iomode, iomode);
}

ImagingBindingProxy::ImagingBindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	ImagingBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

ImagingBindingProxy::ImagingBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	ImagingBindingProxy_init(imode, omode);
}

ImagingBindingProxy::~ImagingBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void ImagingBindingProxy::ImagingBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"onvifPacs", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"onvifAccessControl", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"onvifAccessRules", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"onvifActionEngine", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"onvifAdvancedSecurity-assb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
        {"onvifAdvancedSecurity-db", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
        {"onvifAdvancedSecurity-kb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
        {"onvifAdvancedSecurity-tsb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
        {"onvifAdvancedSecurity", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"onvifAnalytics-aeb", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
        {"onvifAnalytics-reb", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
        {"onvifAnalytics", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"onvifAnalyticsDevice", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"onvifCredential", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"onvifDisplay", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"onvifDoorControl", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"onvifEvents-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
        {"onvifEvents-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
        {"onvifEvents-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
        {"onvifEvents-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
        {"onvifEvents-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
        {"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"onvifEvents-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
        {"onvifEvents-psmb", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
        {"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"onvifEvents-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
        {"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"onvifMedia2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"onvifNetwork-dlb", "http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding", NULL, NULL},
        {"onvifNetwork-rdb", "http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding", NULL, NULL},
        {"onvifNetwork", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"onvifProvisioning", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"onvifReceiver", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"onvifRecording", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"onvifReplay", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"onvifScedule", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"onvifSearch", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {"onvifThermal", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

ImagingBindingProxy *ImagingBindingProxy::copy()
{	ImagingBindingProxy *dup = SOAP_NEW_UNMANAGED(ImagingBindingProxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

ImagingBindingProxy& ImagingBindingProxy::operator=(const ImagingBindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void ImagingBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void ImagingBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	ImagingBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void ImagingBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void ImagingBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *subscriptionID)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->subscriptionID = subscriptionID;
}

::SOAP_ENV__Header *ImagingBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *ImagingBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *ImagingBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *ImagingBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int ImagingBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int ImagingBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void ImagingBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ImagingBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *ImagingBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int ImagingBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _onvifImg__GetServiceCapabilities *onvifImg__GetServiceCapabilities, _onvifImg__GetServiceCapabilitiesResponse &onvifImg__GetServiceCapabilitiesResponse)
{
	struct __onvifImg__GetServiceCapabilities soap_tmp___onvifImg__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities";
	soap_tmp___onvifImg__GetServiceCapabilities.onvifImg__GetServiceCapabilities = onvifImg__GetServiceCapabilities;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifImg__GetServiceCapabilities(soap, &soap_tmp___onvifImg__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifImg__GetServiceCapabilities(soap, &soap_tmp___onvifImg__GetServiceCapabilities, "-onvifImg:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifImg__GetServiceCapabilities(soap, &soap_tmp___onvifImg__GetServiceCapabilities, "-onvifImg:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifImg__GetServiceCapabilitiesResponse*>(&onvifImg__GetServiceCapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifImg__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifImg__GetServiceCapabilitiesResponse.soap_get(soap, "onvifImg:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::GetImagingSettings(const char *endpoint, const char *soap_action, _onvifImg__GetImagingSettings *onvifImg__GetImagingSettings, _onvifImg__GetImagingSettingsResponse &onvifImg__GetImagingSettingsResponse)
{
	struct __onvifImg__GetImagingSettings soap_tmp___onvifImg__GetImagingSettings;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings";
	soap_tmp___onvifImg__GetImagingSettings.onvifImg__GetImagingSettings = onvifImg__GetImagingSettings;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifImg__GetImagingSettings(soap, &soap_tmp___onvifImg__GetImagingSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifImg__GetImagingSettings(soap, &soap_tmp___onvifImg__GetImagingSettings, "-onvifImg:GetImagingSettings", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifImg__GetImagingSettings(soap, &soap_tmp___onvifImg__GetImagingSettings, "-onvifImg:GetImagingSettings", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifImg__GetImagingSettingsResponse*>(&onvifImg__GetImagingSettingsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifImg__GetImagingSettingsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifImg__GetImagingSettingsResponse.soap_get(soap, "onvifImg:GetImagingSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::SetImagingSettings(const char *endpoint, const char *soap_action, _onvifImg__SetImagingSettings *onvifImg__SetImagingSettings, _onvifImg__SetImagingSettingsResponse &onvifImg__SetImagingSettingsResponse)
{
	struct __onvifImg__SetImagingSettings soap_tmp___onvifImg__SetImagingSettings;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings";
	soap_tmp___onvifImg__SetImagingSettings.onvifImg__SetImagingSettings = onvifImg__SetImagingSettings;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifImg__SetImagingSettings(soap, &soap_tmp___onvifImg__SetImagingSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifImg__SetImagingSettings(soap, &soap_tmp___onvifImg__SetImagingSettings, "-onvifImg:SetImagingSettings", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifImg__SetImagingSettings(soap, &soap_tmp___onvifImg__SetImagingSettings, "-onvifImg:SetImagingSettings", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifImg__SetImagingSettingsResponse*>(&onvifImg__SetImagingSettingsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifImg__SetImagingSettingsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifImg__SetImagingSettingsResponse.soap_get(soap, "onvifImg:SetImagingSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::GetOptions(const char *endpoint, const char *soap_action, _onvifImg__GetOptions *onvifImg__GetOptions, _onvifImg__GetOptionsResponse &onvifImg__GetOptionsResponse)
{
	struct __onvifImg__GetOptions soap_tmp___onvifImg__GetOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetOptions";
	soap_tmp___onvifImg__GetOptions.onvifImg__GetOptions = onvifImg__GetOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifImg__GetOptions(soap, &soap_tmp___onvifImg__GetOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifImg__GetOptions(soap, &soap_tmp___onvifImg__GetOptions, "-onvifImg:GetOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifImg__GetOptions(soap, &soap_tmp___onvifImg__GetOptions, "-onvifImg:GetOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifImg__GetOptionsResponse*>(&onvifImg__GetOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifImg__GetOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifImg__GetOptionsResponse.soap_get(soap, "onvifImg:GetOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::Move(const char *endpoint, const char *soap_action, _onvifImg__Move *onvifImg__Move, _onvifImg__MoveResponse &onvifImg__MoveResponse)
{
	struct __onvifImg__Move soap_tmp___onvifImg__Move;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/Move";
	soap_tmp___onvifImg__Move.onvifImg__Move = onvifImg__Move;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifImg__Move(soap, &soap_tmp___onvifImg__Move);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifImg__Move(soap, &soap_tmp___onvifImg__Move, "-onvifImg:Move", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifImg__Move(soap, &soap_tmp___onvifImg__Move, "-onvifImg:Move", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifImg__MoveResponse*>(&onvifImg__MoveResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifImg__MoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifImg__MoveResponse.soap_get(soap, "onvifImg:MoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::Stop(const char *endpoint, const char *soap_action, _onvifImg__Stop *onvifImg__Stop, _onvifImg__StopResponse &onvifImg__StopResponse)
{
	struct __onvifImg__Stop soap_tmp___onvifImg__Stop;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/FocusStop";
	soap_tmp___onvifImg__Stop.onvifImg__Stop = onvifImg__Stop;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifImg__Stop(soap, &soap_tmp___onvifImg__Stop);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifImg__Stop(soap, &soap_tmp___onvifImg__Stop, "-onvifImg:Stop", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifImg__Stop(soap, &soap_tmp___onvifImg__Stop, "-onvifImg:Stop", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifImg__StopResponse*>(&onvifImg__StopResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifImg__StopResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifImg__StopResponse.soap_get(soap, "onvifImg:StopResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::GetStatus(const char *endpoint, const char *soap_action, _onvifImg__GetStatus *onvifImg__GetStatus, _onvifImg__GetStatusResponse &onvifImg__GetStatusResponse)
{
	struct __onvifImg__GetStatus soap_tmp___onvifImg__GetStatus;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetStatus";
	soap_tmp___onvifImg__GetStatus.onvifImg__GetStatus = onvifImg__GetStatus;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifImg__GetStatus(soap, &soap_tmp___onvifImg__GetStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifImg__GetStatus(soap, &soap_tmp___onvifImg__GetStatus, "-onvifImg:GetStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifImg__GetStatus(soap, &soap_tmp___onvifImg__GetStatus, "-onvifImg:GetStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifImg__GetStatusResponse*>(&onvifImg__GetStatusResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifImg__GetStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifImg__GetStatusResponse.soap_get(soap, "onvifImg:GetStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::GetMoveOptions(const char *endpoint, const char *soap_action, _onvifImg__GetMoveOptions *onvifImg__GetMoveOptions, _onvifImg__GetMoveOptionsResponse &onvifImg__GetMoveOptionsResponse)
{
	struct __onvifImg__GetMoveOptions soap_tmp___onvifImg__GetMoveOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions";
	soap_tmp___onvifImg__GetMoveOptions.onvifImg__GetMoveOptions = onvifImg__GetMoveOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifImg__GetMoveOptions(soap, &soap_tmp___onvifImg__GetMoveOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifImg__GetMoveOptions(soap, &soap_tmp___onvifImg__GetMoveOptions, "-onvifImg:GetMoveOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifImg__GetMoveOptions(soap, &soap_tmp___onvifImg__GetMoveOptions, "-onvifImg:GetMoveOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifImg__GetMoveOptionsResponse*>(&onvifImg__GetMoveOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifImg__GetMoveOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifImg__GetMoveOptionsResponse.soap_get(soap, "onvifImg:GetMoveOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::GetPresets(const char *endpoint, const char *soap_action, _onvifImg__GetPresets *onvifImg__GetPresets, _onvifImg__GetPresetsResponse &onvifImg__GetPresetsResponse)
{
	struct __onvifImg__GetPresets soap_tmp___onvifImg__GetPresets;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetPresets";
	soap_tmp___onvifImg__GetPresets.onvifImg__GetPresets = onvifImg__GetPresets;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifImg__GetPresets(soap, &soap_tmp___onvifImg__GetPresets);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifImg__GetPresets(soap, &soap_tmp___onvifImg__GetPresets, "-onvifImg:GetPresets", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifImg__GetPresets(soap, &soap_tmp___onvifImg__GetPresets, "-onvifImg:GetPresets", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifImg__GetPresetsResponse*>(&onvifImg__GetPresetsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifImg__GetPresetsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifImg__GetPresetsResponse.soap_get(soap, "onvifImg:GetPresetsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::GetCurrentPreset(const char *endpoint, const char *soap_action, _onvifImg__GetCurrentPreset *onvifImg__GetCurrentPreset, _onvifImg__GetCurrentPresetResponse &onvifImg__GetCurrentPresetResponse)
{
	struct __onvifImg__GetCurrentPreset soap_tmp___onvifImg__GetCurrentPreset;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPreset";
	soap_tmp___onvifImg__GetCurrentPreset.onvifImg__GetCurrentPreset = onvifImg__GetCurrentPreset;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifImg__GetCurrentPreset(soap, &soap_tmp___onvifImg__GetCurrentPreset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifImg__GetCurrentPreset(soap, &soap_tmp___onvifImg__GetCurrentPreset, "-onvifImg:GetCurrentPreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifImg__GetCurrentPreset(soap, &soap_tmp___onvifImg__GetCurrentPreset, "-onvifImg:GetCurrentPreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifImg__GetCurrentPresetResponse*>(&onvifImg__GetCurrentPresetResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifImg__GetCurrentPresetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifImg__GetCurrentPresetResponse.soap_get(soap, "onvifImg:GetCurrentPresetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ImagingBindingProxy::SetCurrentPreset(const char *endpoint, const char *soap_action, _onvifImg__SetCurrentPreset *onvifImg__SetCurrentPreset, _onvifImg__SetCurrentPresetResponse &onvifImg__SetCurrentPresetResponse)
{
	struct __onvifImg__SetCurrentPreset soap_tmp___onvifImg__SetCurrentPreset;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPreset";
	soap_tmp___onvifImg__SetCurrentPreset.onvifImg__SetCurrentPreset = onvifImg__SetCurrentPreset;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifImg__SetCurrentPreset(soap, &soap_tmp___onvifImg__SetCurrentPreset);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifImg__SetCurrentPreset(soap, &soap_tmp___onvifImg__SetCurrentPreset, "-onvifImg:SetCurrentPreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifImg__SetCurrentPreset(soap, &soap_tmp___onvifImg__SetCurrentPreset, "-onvifImg:SetCurrentPreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifImg__SetCurrentPresetResponse*>(&onvifImg__SetCurrentPresetResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifImg__SetCurrentPresetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifImg__SetCurrentPresetResponse.soap_get(soap, "onvifImg:SetCurrentPresetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
