/* soapMedia2BindingProxy.cpp
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapMedia2BindingProxy.h"

Media2BindingProxy::Media2BindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

Media2BindingProxy::Media2BindingProxy(const Media2BindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

Media2BindingProxy::Media2BindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	Media2BindingProxy_init(_soap->imode, _soap->omode);
}

Media2BindingProxy::Media2BindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

Media2BindingProxy::Media2BindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(iomode, iomode);
}

Media2BindingProxy::Media2BindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

Media2BindingProxy::Media2BindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingProxy_init(imode, omode);
}

Media2BindingProxy::~Media2BindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void Media2BindingProxy::Media2BindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"onvifPacs", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"onvifAccessControl", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"onvifAccessRules", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"onvifActionEngine", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"onvifAdvancedSecurity-assb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
        {"onvifAdvancedSecurity-db", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
        {"onvifAdvancedSecurity-kb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
        {"onvifAdvancedSecurity-tsb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
        {"onvifAdvancedSecurity", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"onvifAnalytics-aeb", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
        {"onvifAnalytics-reb", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
        {"onvifAnalytics", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"onvifAnalyticsDevice", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"onvifCredential", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"onvifDisplay", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"onvifDoorControl", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"onvifEvents-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
        {"onvifEvents-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
        {"onvifEvents-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
        {"onvifEvents-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
        {"onvifEvents-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
        {"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"onvifEvents-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
        {"onvifEvents-psmb", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
        {"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"onvifEvents-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
        {"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"onvifMedia2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"onvifNetwork-dlb", "http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding", NULL, NULL},
        {"onvifNetwork-rdb", "http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding", NULL, NULL},
        {"onvifNetwork", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"onvifProvisioning", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"onvifReceiver", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"onvifRecording", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"onvifReplay", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"onvifScedule", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"onvifSearch", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {"onvifThermal", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

Media2BindingProxy *Media2BindingProxy::copy()
{	Media2BindingProxy *dup = SOAP_NEW_UNMANAGED(Media2BindingProxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

Media2BindingProxy& Media2BindingProxy::operator=(const Media2BindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void Media2BindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void Media2BindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	Media2BindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void Media2BindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void Media2BindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *subscriptionID)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->subscriptionID = subscriptionID;
}

::SOAP_ENV__Header *Media2BindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *Media2BindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *Media2BindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *Media2BindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int Media2BindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int Media2BindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void Media2BindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void Media2BindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *Media2BindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int Media2BindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _onvifMedia2__GetServiceCapabilities *onvifMedia2__GetServiceCapabilities, _onvifMedia2__GetServiceCapabilitiesResponse &onvifMedia2__GetServiceCapabilitiesResponse)
{
	struct __onvifMedia2__GetServiceCapabilities soap_tmp___onvifMedia2__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilities";
	soap_tmp___onvifMedia2__GetServiceCapabilities.onvifMedia2__GetServiceCapabilities = onvifMedia2__GetServiceCapabilities;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetServiceCapabilities(soap, &soap_tmp___onvifMedia2__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetServiceCapabilities(soap, &soap_tmp___onvifMedia2__GetServiceCapabilities, "-onvifMedia2:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetServiceCapabilities(soap, &soap_tmp___onvifMedia2__GetServiceCapabilities, "-onvifMedia2:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetServiceCapabilitiesResponse*>(&onvifMedia2__GetServiceCapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetServiceCapabilitiesResponse.soap_get(soap, "onvifMedia2:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::CreateProfile(const char *endpoint, const char *soap_action, _onvifMedia2__CreateProfile *onvifMedia2__CreateProfile, _onvifMedia2__CreateProfileResponse &onvifMedia2__CreateProfileResponse)
{
	struct __onvifMedia2__CreateProfile soap_tmp___onvifMedia2__CreateProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateProfile";
	soap_tmp___onvifMedia2__CreateProfile.onvifMedia2__CreateProfile = onvifMedia2__CreateProfile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__CreateProfile(soap, &soap_tmp___onvifMedia2__CreateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__CreateProfile(soap, &soap_tmp___onvifMedia2__CreateProfile, "-onvifMedia2:CreateProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__CreateProfile(soap, &soap_tmp___onvifMedia2__CreateProfile, "-onvifMedia2:CreateProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__CreateProfileResponse*>(&onvifMedia2__CreateProfileResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__CreateProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__CreateProfileResponse.soap_get(soap, "onvifMedia2:CreateProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetProfiles(const char *endpoint, const char *soap_action, _onvifMedia2__GetProfiles *onvifMedia2__GetProfiles, _onvifMedia2__GetProfilesResponse &onvifMedia2__GetProfilesResponse)
{
	struct __onvifMedia2__GetProfiles soap_tmp___onvifMedia2__GetProfiles;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetProfiles";
	soap_tmp___onvifMedia2__GetProfiles.onvifMedia2__GetProfiles = onvifMedia2__GetProfiles;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetProfiles(soap, &soap_tmp___onvifMedia2__GetProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetProfiles(soap, &soap_tmp___onvifMedia2__GetProfiles, "-onvifMedia2:GetProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetProfiles(soap, &soap_tmp___onvifMedia2__GetProfiles, "-onvifMedia2:GetProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetProfilesResponse*>(&onvifMedia2__GetProfilesResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetProfilesResponse.soap_get(soap, "onvifMedia2:GetProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::AddConfiguration(const char *endpoint, const char *soap_action, _onvifMedia2__AddConfiguration *onvifMedia2__AddConfiguration, _onvifMedia2__AddConfigurationResponse &onvifMedia2__AddConfigurationResponse)
{
	struct __onvifMedia2__AddConfiguration soap_tmp___onvifMedia2__AddConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/AddConfiguration";
	soap_tmp___onvifMedia2__AddConfiguration.onvifMedia2__AddConfiguration = onvifMedia2__AddConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__AddConfiguration(soap, &soap_tmp___onvifMedia2__AddConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__AddConfiguration(soap, &soap_tmp___onvifMedia2__AddConfiguration, "-onvifMedia2:AddConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__AddConfiguration(soap, &soap_tmp___onvifMedia2__AddConfiguration, "-onvifMedia2:AddConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__AddConfigurationResponse*>(&onvifMedia2__AddConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__AddConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__AddConfigurationResponse.soap_get(soap, "onvifMedia2:AddConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::RemoveConfiguration(const char *endpoint, const char *soap_action, _onvifMedia2__RemoveConfiguration *onvifMedia2__RemoveConfiguration, _onvifMedia2__RemoveConfigurationResponse &onvifMedia2__RemoveConfigurationResponse)
{
	struct __onvifMedia2__RemoveConfiguration soap_tmp___onvifMedia2__RemoveConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/RemoveConfiguration";
	soap_tmp___onvifMedia2__RemoveConfiguration.onvifMedia2__RemoveConfiguration = onvifMedia2__RemoveConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__RemoveConfiguration(soap, &soap_tmp___onvifMedia2__RemoveConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__RemoveConfiguration(soap, &soap_tmp___onvifMedia2__RemoveConfiguration, "-onvifMedia2:RemoveConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__RemoveConfiguration(soap, &soap_tmp___onvifMedia2__RemoveConfiguration, "-onvifMedia2:RemoveConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__RemoveConfigurationResponse*>(&onvifMedia2__RemoveConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__RemoveConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__RemoveConfigurationResponse.soap_get(soap, "onvifMedia2:RemoveConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::DeleteProfile(const char *endpoint, const char *soap_action, _onvifMedia2__DeleteProfile *onvifMedia2__DeleteProfile, _onvifMedia2__DeleteProfileResponse &onvifMedia2__DeleteProfileResponse)
{
	struct __onvifMedia2__DeleteProfile soap_tmp___onvifMedia2__DeleteProfile;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteProfile";
	soap_tmp___onvifMedia2__DeleteProfile.onvifMedia2__DeleteProfile = onvifMedia2__DeleteProfile;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__DeleteProfile(soap, &soap_tmp___onvifMedia2__DeleteProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__DeleteProfile(soap, &soap_tmp___onvifMedia2__DeleteProfile, "-onvifMedia2:DeleteProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__DeleteProfile(soap, &soap_tmp___onvifMedia2__DeleteProfile, "-onvifMedia2:DeleteProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__DeleteProfileResponse*>(&onvifMedia2__DeleteProfileResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__DeleteProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__DeleteProfileResponse.soap_get(soap, "onvifMedia2:DeleteProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoSourceConfigurations(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetVideoSourceConfigurations, _onvifMedia2__GetVideoSourceConfigurationsResponse &onvifMedia2__GetVideoSourceConfigurationsResponse)
{
	struct __onvifMedia2__GetVideoSourceConfigurations soap_tmp___onvifMedia2__GetVideoSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurations";
	soap_tmp___onvifMedia2__GetVideoSourceConfigurations.onvifMedia2__GetVideoSourceConfigurations = onvifMedia2__GetVideoSourceConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetVideoSourceConfigurations(soap, &soap_tmp___onvifMedia2__GetVideoSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetVideoSourceConfigurations(soap, &soap_tmp___onvifMedia2__GetVideoSourceConfigurations, "-onvifMedia2:GetVideoSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetVideoSourceConfigurations(soap, &soap_tmp___onvifMedia2__GetVideoSourceConfigurations, "-onvifMedia2:GetVideoSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetVideoSourceConfigurationsResponse*>(&onvifMedia2__GetVideoSourceConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetVideoSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetVideoSourceConfigurationsResponse.soap_get(soap, "onvifMedia2:GetVideoSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoEncoderConfigurations(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetVideoEncoderConfigurations, _onvifMedia2__GetVideoEncoderConfigurationsResponse &onvifMedia2__GetVideoEncoderConfigurationsResponse)
{
	struct __onvifMedia2__GetVideoEncoderConfigurations soap_tmp___onvifMedia2__GetVideoEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurations";
	soap_tmp___onvifMedia2__GetVideoEncoderConfigurations.onvifMedia2__GetVideoEncoderConfigurations = onvifMedia2__GetVideoEncoderConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia2__GetVideoEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia2__GetVideoEncoderConfigurations, "-onvifMedia2:GetVideoEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia2__GetVideoEncoderConfigurations, "-onvifMedia2:GetVideoEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetVideoEncoderConfigurationsResponse*>(&onvifMedia2__GetVideoEncoderConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetVideoEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetVideoEncoderConfigurationsResponse.soap_get(soap, "onvifMedia2:GetVideoEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioSourceConfigurations(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetAudioSourceConfigurations, _onvifMedia2__GetAudioSourceConfigurationsResponse &onvifMedia2__GetAudioSourceConfigurationsResponse)
{
	struct __onvifMedia2__GetAudioSourceConfigurations soap_tmp___onvifMedia2__GetAudioSourceConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurations/";
	soap_tmp___onvifMedia2__GetAudioSourceConfigurations.onvifMedia2__GetAudioSourceConfigurations = onvifMedia2__GetAudioSourceConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetAudioSourceConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetAudioSourceConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioSourceConfigurations, "-onvifMedia2:GetAudioSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetAudioSourceConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioSourceConfigurations, "-onvifMedia2:GetAudioSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetAudioSourceConfigurationsResponse*>(&onvifMedia2__GetAudioSourceConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetAudioSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetAudioSourceConfigurationsResponse.soap_get(soap, "onvifMedia2:GetAudioSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioEncoderConfigurations(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetAudioEncoderConfigurations, _onvifMedia2__GetAudioEncoderConfigurationsResponse &onvifMedia2__GetAudioEncoderConfigurationsResponse)
{
	struct __onvifMedia2__GetAudioEncoderConfigurations soap_tmp___onvifMedia2__GetAudioEncoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurations";
	soap_tmp___onvifMedia2__GetAudioEncoderConfigurations.onvifMedia2__GetAudioEncoderConfigurations = onvifMedia2__GetAudioEncoderConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioEncoderConfigurations, "-onvifMedia2:GetAudioEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioEncoderConfigurations, "-onvifMedia2:GetAudioEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetAudioEncoderConfigurationsResponse*>(&onvifMedia2__GetAudioEncoderConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetAudioEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetAudioEncoderConfigurationsResponse.soap_get(soap, "onvifMedia2:GetAudioEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAnalyticsConfigurations(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetAnalyticsConfigurations, _onvifMedia2__GetAnalyticsConfigurationsResponse &onvifMedia2__GetAnalyticsConfigurationsResponse)
{
	struct __onvifMedia2__GetAnalyticsConfigurations soap_tmp___onvifMedia2__GetAnalyticsConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurations";
	soap_tmp___onvifMedia2__GetAnalyticsConfigurations.onvifMedia2__GetAnalyticsConfigurations = onvifMedia2__GetAnalyticsConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetAnalyticsConfigurations(soap, &soap_tmp___onvifMedia2__GetAnalyticsConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetAnalyticsConfigurations(soap, &soap_tmp___onvifMedia2__GetAnalyticsConfigurations, "-onvifMedia2:GetAnalyticsConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetAnalyticsConfigurations(soap, &soap_tmp___onvifMedia2__GetAnalyticsConfigurations, "-onvifMedia2:GetAnalyticsConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetAnalyticsConfigurationsResponse*>(&onvifMedia2__GetAnalyticsConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetAnalyticsConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetAnalyticsConfigurationsResponse.soap_get(soap, "onvifMedia2:GetAnalyticsConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetMetadataConfigurations(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetMetadataConfigurations, _onvifMedia2__GetMetadataConfigurationsResponse &onvifMedia2__GetMetadataConfigurationsResponse)
{
	struct __onvifMedia2__GetMetadataConfigurations soap_tmp___onvifMedia2__GetMetadataConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurations";
	soap_tmp___onvifMedia2__GetMetadataConfigurations.onvifMedia2__GetMetadataConfigurations = onvifMedia2__GetMetadataConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetMetadataConfigurations(soap, &soap_tmp___onvifMedia2__GetMetadataConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetMetadataConfigurations(soap, &soap_tmp___onvifMedia2__GetMetadataConfigurations, "-onvifMedia2:GetMetadataConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetMetadataConfigurations(soap, &soap_tmp___onvifMedia2__GetMetadataConfigurations, "-onvifMedia2:GetMetadataConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetMetadataConfigurationsResponse*>(&onvifMedia2__GetMetadataConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetMetadataConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetMetadataConfigurationsResponse.soap_get(soap, "onvifMedia2:GetMetadataConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioOutputConfigurations(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetAudioOutputConfigurations, _onvifMedia2__GetAudioOutputConfigurationsResponse &onvifMedia2__GetAudioOutputConfigurationsResponse)
{
	struct __onvifMedia2__GetAudioOutputConfigurations soap_tmp___onvifMedia2__GetAudioOutputConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurations";
	soap_tmp___onvifMedia2__GetAudioOutputConfigurations.onvifMedia2__GetAudioOutputConfigurations = onvifMedia2__GetAudioOutputConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetAudioOutputConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioOutputConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetAudioOutputConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioOutputConfigurations, "-onvifMedia2:GetAudioOutputConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetAudioOutputConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioOutputConfigurations, "-onvifMedia2:GetAudioOutputConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetAudioOutputConfigurationsResponse*>(&onvifMedia2__GetAudioOutputConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetAudioOutputConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetAudioOutputConfigurationsResponse.soap_get(soap, "onvifMedia2:GetAudioOutputConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioDecoderConfigurations(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetAudioDecoderConfigurations, _onvifMedia2__GetAudioDecoderConfigurationsResponse &onvifMedia2__GetAudioDecoderConfigurationsResponse)
{
	struct __onvifMedia2__GetAudioDecoderConfigurations soap_tmp___onvifMedia2__GetAudioDecoderConfigurations;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurations";
	soap_tmp___onvifMedia2__GetAudioDecoderConfigurations.onvifMedia2__GetAudioDecoderConfigurations = onvifMedia2__GetAudioDecoderConfigurations;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioDecoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioDecoderConfigurations, "-onvifMedia2:GetAudioDecoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioDecoderConfigurations, "-onvifMedia2:GetAudioDecoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetAudioDecoderConfigurationsResponse*>(&onvifMedia2__GetAudioDecoderConfigurationsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetAudioDecoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetAudioDecoderConfigurationsResponse.soap_get(soap, "onvifMedia2:GetAudioDecoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetVideoSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia2__SetVideoSourceConfiguration *onvifMedia2__SetVideoSourceConfiguration, onvifMedia2__SetConfigurationResponse &onvifMedia2__SetVideoSourceConfigurationResponse)
{
	struct __onvifMedia2__SetVideoSourceConfiguration soap_tmp___onvifMedia2__SetVideoSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfiguration";
	soap_tmp___onvifMedia2__SetVideoSourceConfiguration.onvifMedia2__SetVideoSourceConfiguration = onvifMedia2__SetVideoSourceConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__SetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia2__SetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__SetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia2__SetVideoSourceConfiguration, "-onvifMedia2:SetVideoSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__SetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia2__SetVideoSourceConfiguration, "-onvifMedia2:SetVideoSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<onvifMedia2__SetConfigurationResponse*>(&onvifMedia2__SetVideoSourceConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__SetVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__SetVideoSourceConfigurationResponse.soap_get(soap, "onvifMedia2:SetVideoSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia2__SetVideoEncoderConfiguration *onvifMedia2__SetVideoEncoderConfiguration, onvifMedia2__SetConfigurationResponse &onvifMedia2__SetVideoEncoderConfigurationResponse)
{
	struct __onvifMedia2__SetVideoEncoderConfiguration soap_tmp___onvifMedia2__SetVideoEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfiguration";
	soap_tmp___onvifMedia2__SetVideoEncoderConfiguration.onvifMedia2__SetVideoEncoderConfiguration = onvifMedia2__SetVideoEncoderConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__SetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia2__SetVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__SetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia2__SetVideoEncoderConfiguration, "-onvifMedia2:SetVideoEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__SetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia2__SetVideoEncoderConfiguration, "-onvifMedia2:SetVideoEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<onvifMedia2__SetConfigurationResponse*>(&onvifMedia2__SetVideoEncoderConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__SetVideoEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__SetVideoEncoderConfigurationResponse.soap_get(soap, "onvifMedia2:SetVideoEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia2__SetAudioSourceConfiguration *onvifMedia2__SetAudioSourceConfiguration, onvifMedia2__SetConfigurationResponse &onvifMedia2__SetAudioSourceConfigurationResponse)
{
	struct __onvifMedia2__SetAudioSourceConfiguration soap_tmp___onvifMedia2__SetAudioSourceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfiguration";
	soap_tmp___onvifMedia2__SetAudioSourceConfiguration.onvifMedia2__SetAudioSourceConfiguration = onvifMedia2__SetAudioSourceConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__SetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__SetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioSourceConfiguration, "-onvifMedia2:SetAudioSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__SetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioSourceConfiguration, "-onvifMedia2:SetAudioSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<onvifMedia2__SetConfigurationResponse*>(&onvifMedia2__SetAudioSourceConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__SetAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__SetAudioSourceConfigurationResponse.soap_get(soap, "onvifMedia2:SetAudioSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia2__SetAudioEncoderConfiguration *onvifMedia2__SetAudioEncoderConfiguration, onvifMedia2__SetConfigurationResponse &onvifMedia2__SetAudioEncoderConfigurationResponse)
{
	struct __onvifMedia2__SetAudioEncoderConfiguration soap_tmp___onvifMedia2__SetAudioEncoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfiguration";
	soap_tmp___onvifMedia2__SetAudioEncoderConfiguration.onvifMedia2__SetAudioEncoderConfiguration = onvifMedia2__SetAudioEncoderConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__SetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__SetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioEncoderConfiguration, "-onvifMedia2:SetAudioEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__SetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioEncoderConfiguration, "-onvifMedia2:SetAudioEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<onvifMedia2__SetConfigurationResponse*>(&onvifMedia2__SetAudioEncoderConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__SetAudioEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__SetAudioEncoderConfigurationResponse.soap_get(soap, "onvifMedia2:SetAudioEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetMetadataConfiguration(const char *endpoint, const char *soap_action, _onvifMedia2__SetMetadataConfiguration *onvifMedia2__SetMetadataConfiguration, onvifMedia2__SetConfigurationResponse &onvifMedia2__SetMetadataConfigurationResponse)
{
	struct __onvifMedia2__SetMetadataConfiguration soap_tmp___onvifMedia2__SetMetadataConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetMetadataConfiguration";
	soap_tmp___onvifMedia2__SetMetadataConfiguration.onvifMedia2__SetMetadataConfiguration = onvifMedia2__SetMetadataConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__SetMetadataConfiguration(soap, &soap_tmp___onvifMedia2__SetMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__SetMetadataConfiguration(soap, &soap_tmp___onvifMedia2__SetMetadataConfiguration, "-onvifMedia2:SetMetadataConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__SetMetadataConfiguration(soap, &soap_tmp___onvifMedia2__SetMetadataConfiguration, "-onvifMedia2:SetMetadataConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<onvifMedia2__SetConfigurationResponse*>(&onvifMedia2__SetMetadataConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__SetMetadataConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__SetMetadataConfigurationResponse.soap_get(soap, "onvifMedia2:SetMetadataConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioOutputConfiguration(const char *endpoint, const char *soap_action, _onvifMedia2__SetAudioOutputConfiguration *onvifMedia2__SetAudioOutputConfiguration, onvifMedia2__SetConfigurationResponse &onvifMedia2__SetAudioOutputConfigurationResponse)
{
	struct __onvifMedia2__SetAudioOutputConfiguration soap_tmp___onvifMedia2__SetAudioOutputConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfiguration";
	soap_tmp___onvifMedia2__SetAudioOutputConfiguration.onvifMedia2__SetAudioOutputConfiguration = onvifMedia2__SetAudioOutputConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__SetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__SetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioOutputConfiguration, "-onvifMedia2:SetAudioOutputConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__SetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioOutputConfiguration, "-onvifMedia2:SetAudioOutputConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<onvifMedia2__SetConfigurationResponse*>(&onvifMedia2__SetAudioOutputConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__SetAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__SetAudioOutputConfigurationResponse.soap_get(soap, "onvifMedia2:SetAudioOutputConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia2__SetAudioDecoderConfiguration *onvifMedia2__SetAudioDecoderConfiguration, onvifMedia2__SetConfigurationResponse &onvifMedia2__SetAudioDecoderConfigurationResponse)
{
	struct __onvifMedia2__SetAudioDecoderConfiguration soap_tmp___onvifMedia2__SetAudioDecoderConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfiguration";
	soap_tmp___onvifMedia2__SetAudioDecoderConfiguration.onvifMedia2__SetAudioDecoderConfiguration = onvifMedia2__SetAudioDecoderConfiguration;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__SetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__SetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioDecoderConfiguration, "-onvifMedia2:SetAudioDecoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__SetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioDecoderConfiguration, "-onvifMedia2:SetAudioDecoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<onvifMedia2__SetConfigurationResponse*>(&onvifMedia2__SetAudioDecoderConfigurationResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__SetAudioDecoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__SetAudioDecoderConfigurationResponse.soap_get(soap, "onvifMedia2:SetAudioDecoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoSourceConfigurationOptions(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetVideoSourceConfigurationOptions, _onvifMedia2__GetVideoSourceConfigurationOptionsResponse &onvifMedia2__GetVideoSourceConfigurationOptionsResponse)
{
	struct __onvifMedia2__GetVideoSourceConfigurationOptions soap_tmp___onvifMedia2__GetVideoSourceConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationOptions/";
	soap_tmp___onvifMedia2__GetVideoSourceConfigurationOptions.onvifMedia2__GetVideoSourceConfigurationOptions = onvifMedia2__GetVideoSourceConfigurationOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetVideoSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetVideoSourceConfigurationOptions, "-onvifMedia2:GetVideoSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetVideoSourceConfigurationOptions, "-onvifMedia2:GetVideoSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetVideoSourceConfigurationOptionsResponse*>(&onvifMedia2__GetVideoSourceConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetVideoSourceConfigurationOptionsResponse.soap_get(soap, "onvifMedia2:GetVideoSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoEncoderConfigurationOptions(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetVideoEncoderConfigurationOptions, _onvifMedia2__GetVideoEncoderConfigurationOptionsResponse &onvifMedia2__GetVideoEncoderConfigurationOptionsResponse)
{
	struct __onvifMedia2__GetVideoEncoderConfigurationOptions soap_tmp___onvifMedia2__GetVideoEncoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptions";
	soap_tmp___onvifMedia2__GetVideoEncoderConfigurationOptions.onvifMedia2__GetVideoEncoderConfigurationOptions = onvifMedia2__GetVideoEncoderConfigurationOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetVideoEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetVideoEncoderConfigurationOptions, "-onvifMedia2:GetVideoEncoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetVideoEncoderConfigurationOptions, "-onvifMedia2:GetVideoEncoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetVideoEncoderConfigurationOptionsResponse*>(&onvifMedia2__GetVideoEncoderConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetVideoEncoderConfigurationOptionsResponse.soap_get(soap, "onvifMedia2:GetVideoEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioSourceConfigurationOptions(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetAudioSourceConfigurationOptions, _onvifMedia2__GetAudioSourceConfigurationOptionsResponse &onvifMedia2__GetAudioSourceConfigurationOptionsResponse)
{
	struct __onvifMedia2__GetAudioSourceConfigurationOptions soap_tmp___onvifMedia2__GetAudioSourceConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptions";
	soap_tmp___onvifMedia2__GetAudioSourceConfigurationOptions.onvifMedia2__GetAudioSourceConfigurationOptions = onvifMedia2__GetAudioSourceConfigurationOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioSourceConfigurationOptions, "-onvifMedia2:GetAudioSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioSourceConfigurationOptions, "-onvifMedia2:GetAudioSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetAudioSourceConfigurationOptionsResponse*>(&onvifMedia2__GetAudioSourceConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetAudioSourceConfigurationOptionsResponse.soap_get(soap, "onvifMedia2:GetAudioSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioEncoderConfigurationOptions(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetAudioEncoderConfigurationOptions, _onvifMedia2__GetAudioEncoderConfigurationOptionsResponse &onvifMedia2__GetAudioEncoderConfigurationOptionsResponse)
{
	struct __onvifMedia2__GetAudioEncoderConfigurationOptions soap_tmp___onvifMedia2__GetAudioEncoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptions";
	soap_tmp___onvifMedia2__GetAudioEncoderConfigurationOptions.onvifMedia2__GetAudioEncoderConfigurationOptions = onvifMedia2__GetAudioEncoderConfigurationOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioEncoderConfigurationOptions, "-onvifMedia2:GetAudioEncoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioEncoderConfigurationOptions, "-onvifMedia2:GetAudioEncoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetAudioEncoderConfigurationOptionsResponse*>(&onvifMedia2__GetAudioEncoderConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetAudioEncoderConfigurationOptionsResponse.soap_get(soap, "onvifMedia2:GetAudioEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetMetadataConfigurationOptions(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetMetadataConfigurationOptions, _onvifMedia2__GetMetadataConfigurationOptionsResponse &onvifMedia2__GetMetadataConfigurationOptionsResponse)
{
	struct __onvifMedia2__GetMetadataConfigurationOptions soap_tmp___onvifMedia2__GetMetadataConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptions";
	soap_tmp___onvifMedia2__GetMetadataConfigurationOptions.onvifMedia2__GetMetadataConfigurationOptions = onvifMedia2__GetMetadataConfigurationOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetMetadataConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetMetadataConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetMetadataConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetMetadataConfigurationOptions, "-onvifMedia2:GetMetadataConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetMetadataConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetMetadataConfigurationOptions, "-onvifMedia2:GetMetadataConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetMetadataConfigurationOptionsResponse*>(&onvifMedia2__GetMetadataConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetMetadataConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetMetadataConfigurationOptionsResponse.soap_get(soap, "onvifMedia2:GetMetadataConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioOutputConfigurationOptions(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetAudioOutputConfigurationOptions, _onvifMedia2__GetAudioOutputConfigurationOptionsResponse &onvifMedia2__GetAudioOutputConfigurationOptionsResponse)
{
	struct __onvifMedia2__GetAudioOutputConfigurationOptions soap_tmp___onvifMedia2__GetAudioOutputConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptions";
	soap_tmp___onvifMedia2__GetAudioOutputConfigurationOptions.onvifMedia2__GetAudioOutputConfigurationOptions = onvifMedia2__GetAudioOutputConfigurationOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioOutputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioOutputConfigurationOptions, "-onvifMedia2:GetAudioOutputConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioOutputConfigurationOptions, "-onvifMedia2:GetAudioOutputConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetAudioOutputConfigurationOptionsResponse*>(&onvifMedia2__GetAudioOutputConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetAudioOutputConfigurationOptionsResponse.soap_get(soap, "onvifMedia2:GetAudioOutputConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetAudioDecoderConfigurationOptions(const char *endpoint, const char *soap_action, onvifMedia2__GetConfiguration *onvifMedia2__GetAudioDecoderConfigurationOptions, _onvifMedia2__GetAudioDecoderConfigurationOptionsResponse &onvifMedia2__GetAudioDecoderConfigurationOptionsResponse)
{
	struct __onvifMedia2__GetAudioDecoderConfigurationOptions soap_tmp___onvifMedia2__GetAudioDecoderConfigurationOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptions";
	soap_tmp___onvifMedia2__GetAudioDecoderConfigurationOptions.onvifMedia2__GetAudioDecoderConfigurationOptions = onvifMedia2__GetAudioDecoderConfigurationOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioDecoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioDecoderConfigurationOptions, "-onvifMedia2:GetAudioDecoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioDecoderConfigurationOptions, "-onvifMedia2:GetAudioDecoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetAudioDecoderConfigurationOptionsResponse*>(&onvifMedia2__GetAudioDecoderConfigurationOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetAudioDecoderConfigurationOptionsResponse.soap_get(soap, "onvifMedia2:GetAudioDecoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoEncoderInstances(const char *endpoint, const char *soap_action, _onvifMedia2__GetVideoEncoderInstances *onvifMedia2__GetVideoEncoderInstances, _onvifMedia2__GetVideoEncoderInstancesResponse &onvifMedia2__GetVideoEncoderInstancesResponse)
{
	struct __onvifMedia2__GetVideoEncoderInstances soap_tmp___onvifMedia2__GetVideoEncoderInstances;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderInstances";
	soap_tmp___onvifMedia2__GetVideoEncoderInstances.onvifMedia2__GetVideoEncoderInstances = onvifMedia2__GetVideoEncoderInstances;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetVideoEncoderInstances(soap, &soap_tmp___onvifMedia2__GetVideoEncoderInstances);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetVideoEncoderInstances(soap, &soap_tmp___onvifMedia2__GetVideoEncoderInstances, "-onvifMedia2:GetVideoEncoderInstances", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetVideoEncoderInstances(soap, &soap_tmp___onvifMedia2__GetVideoEncoderInstances, "-onvifMedia2:GetVideoEncoderInstances", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetVideoEncoderInstancesResponse*>(&onvifMedia2__GetVideoEncoderInstancesResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetVideoEncoderInstancesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetVideoEncoderInstancesResponse.soap_get(soap, "onvifMedia2:GetVideoEncoderInstancesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetStreamUri(const char *endpoint, const char *soap_action, _onvifMedia2__GetStreamUri *onvifMedia2__GetStreamUri, _onvifMedia2__GetStreamUriResponse &onvifMedia2__GetStreamUriResponse)
{
	struct __onvifMedia2__GetStreamUri soap_tmp___onvifMedia2__GetStreamUri;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetStreamUri";
	soap_tmp___onvifMedia2__GetStreamUri.onvifMedia2__GetStreamUri = onvifMedia2__GetStreamUri;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetStreamUri(soap, &soap_tmp___onvifMedia2__GetStreamUri);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetStreamUri(soap, &soap_tmp___onvifMedia2__GetStreamUri, "-onvifMedia2:GetStreamUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetStreamUri(soap, &soap_tmp___onvifMedia2__GetStreamUri, "-onvifMedia2:GetStreamUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetStreamUriResponse*>(&onvifMedia2__GetStreamUriResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetStreamUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetStreamUriResponse.soap_get(soap, "onvifMedia2:GetStreamUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::StartMulticastStreaming(const char *endpoint, const char *soap_action, onvifMedia2__StartStopMulticastStreaming *onvifMedia2__StartMulticastStreaming, onvifMedia2__SetConfigurationResponse &onvifMedia2__StartMulticastStreamingResponse)
{
	struct __onvifMedia2__StartMulticastStreaming soap_tmp___onvifMedia2__StartMulticastStreaming;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/StartMulticastStreaming";
	soap_tmp___onvifMedia2__StartMulticastStreaming.onvifMedia2__StartMulticastStreaming = onvifMedia2__StartMulticastStreaming;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__StartMulticastStreaming(soap, &soap_tmp___onvifMedia2__StartMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__StartMulticastStreaming(soap, &soap_tmp___onvifMedia2__StartMulticastStreaming, "-onvifMedia2:StartMulticastStreaming", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__StartMulticastStreaming(soap, &soap_tmp___onvifMedia2__StartMulticastStreaming, "-onvifMedia2:StartMulticastStreaming", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<onvifMedia2__SetConfigurationResponse*>(&onvifMedia2__StartMulticastStreamingResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__StartMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__StartMulticastStreamingResponse.soap_get(soap, "onvifMedia2:StartMulticastStreamingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::StopMulticastStreaming(const char *endpoint, const char *soap_action, onvifMedia2__StartStopMulticastStreaming *onvifMedia2__StopMulticastStreaming, onvifMedia2__SetConfigurationResponse &onvifMedia2__StopMulticastStreamingResponse)
{
	struct __onvifMedia2__StopMulticastStreaming soap_tmp___onvifMedia2__StopMulticastStreaming;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/StopMulticastStreaming";
	soap_tmp___onvifMedia2__StopMulticastStreaming.onvifMedia2__StopMulticastStreaming = onvifMedia2__StopMulticastStreaming;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__StopMulticastStreaming(soap, &soap_tmp___onvifMedia2__StopMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__StopMulticastStreaming(soap, &soap_tmp___onvifMedia2__StopMulticastStreaming, "-onvifMedia2:StopMulticastStreaming", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__StopMulticastStreaming(soap, &soap_tmp___onvifMedia2__StopMulticastStreaming, "-onvifMedia2:StopMulticastStreaming", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<onvifMedia2__SetConfigurationResponse*>(&onvifMedia2__StopMulticastStreamingResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__StopMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__StopMulticastStreamingResponse.soap_get(soap, "onvifMedia2:StopMulticastStreamingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetSynchronizationPoint(const char *endpoint, const char *soap_action, _onvifMedia2__SetSynchronizationPoint *onvifMedia2__SetSynchronizationPoint, _onvifMedia2__SetSynchronizationPointResponse &onvifMedia2__SetSynchronizationPointResponse)
{
	struct __onvifMedia2__SetSynchronizationPoint soap_tmp___onvifMedia2__SetSynchronizationPoint;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPoint";
	soap_tmp___onvifMedia2__SetSynchronizationPoint.onvifMedia2__SetSynchronizationPoint = onvifMedia2__SetSynchronizationPoint;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__SetSynchronizationPoint(soap, &soap_tmp___onvifMedia2__SetSynchronizationPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__SetSynchronizationPoint(soap, &soap_tmp___onvifMedia2__SetSynchronizationPoint, "-onvifMedia2:SetSynchronizationPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__SetSynchronizationPoint(soap, &soap_tmp___onvifMedia2__SetSynchronizationPoint, "-onvifMedia2:SetSynchronizationPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__SetSynchronizationPointResponse*>(&onvifMedia2__SetSynchronizationPointResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__SetSynchronizationPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__SetSynchronizationPointResponse.soap_get(soap, "onvifMedia2:SetSynchronizationPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetSnapshotUri(const char *endpoint, const char *soap_action, _onvifMedia2__GetSnapshotUri *onvifMedia2__GetSnapshotUri, _onvifMedia2__GetSnapshotUriResponse &onvifMedia2__GetSnapshotUriResponse)
{
	struct __onvifMedia2__GetSnapshotUri soap_tmp___onvifMedia2__GetSnapshotUri;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetSnapshotUri";
	soap_tmp___onvifMedia2__GetSnapshotUri.onvifMedia2__GetSnapshotUri = onvifMedia2__GetSnapshotUri;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetSnapshotUri(soap, &soap_tmp___onvifMedia2__GetSnapshotUri);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetSnapshotUri(soap, &soap_tmp___onvifMedia2__GetSnapshotUri, "-onvifMedia2:GetSnapshotUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetSnapshotUri(soap, &soap_tmp___onvifMedia2__GetSnapshotUri, "-onvifMedia2:GetSnapshotUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetSnapshotUriResponse*>(&onvifMedia2__GetSnapshotUriResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetSnapshotUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetSnapshotUriResponse.soap_get(soap, "onvifMedia2:GetSnapshotUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetVideoSourceModes(const char *endpoint, const char *soap_action, _onvifMedia2__GetVideoSourceModes *onvifMedia2__GetVideoSourceModes, _onvifMedia2__GetVideoSourceModesResponse &onvifMedia2__GetVideoSourceModesResponse)
{
	struct __onvifMedia2__GetVideoSourceModes soap_tmp___onvifMedia2__GetVideoSourceModes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModes";
	soap_tmp___onvifMedia2__GetVideoSourceModes.onvifMedia2__GetVideoSourceModes = onvifMedia2__GetVideoSourceModes;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetVideoSourceModes(soap, &soap_tmp___onvifMedia2__GetVideoSourceModes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetVideoSourceModes(soap, &soap_tmp___onvifMedia2__GetVideoSourceModes, "-onvifMedia2:GetVideoSourceModes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetVideoSourceModes(soap, &soap_tmp___onvifMedia2__GetVideoSourceModes, "-onvifMedia2:GetVideoSourceModes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetVideoSourceModesResponse*>(&onvifMedia2__GetVideoSourceModesResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetVideoSourceModesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetVideoSourceModesResponse.soap_get(soap, "onvifMedia2:GetVideoSourceModesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetVideoSourceMode(const char *endpoint, const char *soap_action, _onvifMedia2__SetVideoSourceMode *onvifMedia2__SetVideoSourceMode, _onvifMedia2__SetVideoSourceModeResponse &onvifMedia2__SetVideoSourceModeResponse)
{
	struct __onvifMedia2__SetVideoSourceMode soap_tmp___onvifMedia2__SetVideoSourceMode;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceMode";
	soap_tmp___onvifMedia2__SetVideoSourceMode.onvifMedia2__SetVideoSourceMode = onvifMedia2__SetVideoSourceMode;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__SetVideoSourceMode(soap, &soap_tmp___onvifMedia2__SetVideoSourceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__SetVideoSourceMode(soap, &soap_tmp___onvifMedia2__SetVideoSourceMode, "-onvifMedia2:SetVideoSourceMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__SetVideoSourceMode(soap, &soap_tmp___onvifMedia2__SetVideoSourceMode, "-onvifMedia2:SetVideoSourceMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__SetVideoSourceModeResponse*>(&onvifMedia2__SetVideoSourceModeResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__SetVideoSourceModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__SetVideoSourceModeResponse.soap_get(soap, "onvifMedia2:SetVideoSourceModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetOSDs(const char *endpoint, const char *soap_action, _onvifMedia2__GetOSDs *onvifMedia2__GetOSDs, _onvifMedia2__GetOSDsResponse &onvifMedia2__GetOSDsResponse)
{
	struct __onvifMedia2__GetOSDs soap_tmp___onvifMedia2__GetOSDs;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetOSDs";
	soap_tmp___onvifMedia2__GetOSDs.onvifMedia2__GetOSDs = onvifMedia2__GetOSDs;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetOSDs(soap, &soap_tmp___onvifMedia2__GetOSDs);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetOSDs(soap, &soap_tmp___onvifMedia2__GetOSDs, "-onvifMedia2:GetOSDs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetOSDs(soap, &soap_tmp___onvifMedia2__GetOSDs, "-onvifMedia2:GetOSDs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetOSDsResponse*>(&onvifMedia2__GetOSDsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetOSDsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetOSDsResponse.soap_get(soap, "onvifMedia2:GetOSDsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetOSDOptions(const char *endpoint, const char *soap_action, _onvifMedia2__GetOSDOptions *onvifMedia2__GetOSDOptions, _onvifMedia2__GetOSDOptionsResponse &onvifMedia2__GetOSDOptionsResponse)
{
	struct __onvifMedia2__GetOSDOptions soap_tmp___onvifMedia2__GetOSDOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetOSDOptions";
	soap_tmp___onvifMedia2__GetOSDOptions.onvifMedia2__GetOSDOptions = onvifMedia2__GetOSDOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetOSDOptions(soap, &soap_tmp___onvifMedia2__GetOSDOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetOSDOptions(soap, &soap_tmp___onvifMedia2__GetOSDOptions, "-onvifMedia2:GetOSDOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetOSDOptions(soap, &soap_tmp___onvifMedia2__GetOSDOptions, "-onvifMedia2:GetOSDOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetOSDOptionsResponse*>(&onvifMedia2__GetOSDOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetOSDOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetOSDOptionsResponse.soap_get(soap, "onvifMedia2:GetOSDOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetOSD(const char *endpoint, const char *soap_action, _onvifMedia2__SetOSD *onvifMedia2__SetOSD, onvifMedia2__SetConfigurationResponse &onvifMedia2__SetOSDResponse)
{
	struct __onvifMedia2__SetOSD soap_tmp___onvifMedia2__SetOSD;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetOSD";
	soap_tmp___onvifMedia2__SetOSD.onvifMedia2__SetOSD = onvifMedia2__SetOSD;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__SetOSD(soap, &soap_tmp___onvifMedia2__SetOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__SetOSD(soap, &soap_tmp___onvifMedia2__SetOSD, "-onvifMedia2:SetOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__SetOSD(soap, &soap_tmp___onvifMedia2__SetOSD, "-onvifMedia2:SetOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<onvifMedia2__SetConfigurationResponse*>(&onvifMedia2__SetOSDResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__SetOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__SetOSDResponse.soap_get(soap, "onvifMedia2:SetOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::CreateOSD(const char *endpoint, const char *soap_action, _onvifMedia2__CreateOSD *onvifMedia2__CreateOSD, _onvifMedia2__CreateOSDResponse &onvifMedia2__CreateOSDResponse)
{
	struct __onvifMedia2__CreateOSD soap_tmp___onvifMedia2__CreateOSD;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateOSD";
	soap_tmp___onvifMedia2__CreateOSD.onvifMedia2__CreateOSD = onvifMedia2__CreateOSD;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__CreateOSD(soap, &soap_tmp___onvifMedia2__CreateOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__CreateOSD(soap, &soap_tmp___onvifMedia2__CreateOSD, "-onvifMedia2:CreateOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__CreateOSD(soap, &soap_tmp___onvifMedia2__CreateOSD, "-onvifMedia2:CreateOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__CreateOSDResponse*>(&onvifMedia2__CreateOSDResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__CreateOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__CreateOSDResponse.soap_get(soap, "onvifMedia2:CreateOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::DeleteOSD(const char *endpoint, const char *soap_action, _onvifMedia2__DeleteOSD *onvifMedia2__DeleteOSD, onvifMedia2__SetConfigurationResponse &onvifMedia2__DeleteOSDResponse)
{
	struct __onvifMedia2__DeleteOSD soap_tmp___onvifMedia2__DeleteOSD;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteOSD";
	soap_tmp___onvifMedia2__DeleteOSD.onvifMedia2__DeleteOSD = onvifMedia2__DeleteOSD;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__DeleteOSD(soap, &soap_tmp___onvifMedia2__DeleteOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__DeleteOSD(soap, &soap_tmp___onvifMedia2__DeleteOSD, "-onvifMedia2:DeleteOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__DeleteOSD(soap, &soap_tmp___onvifMedia2__DeleteOSD, "-onvifMedia2:DeleteOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<onvifMedia2__SetConfigurationResponse*>(&onvifMedia2__DeleteOSDResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__DeleteOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__DeleteOSDResponse.soap_get(soap, "onvifMedia2:DeleteOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetMasks(const char *endpoint, const char *soap_action, _onvifMedia2__GetMasks *onvifMedia2__GetMasks, _onvifMedia2__GetMasksResponse &onvifMedia2__GetMasksResponse)
{
	struct __onvifMedia2__GetMasks soap_tmp___onvifMedia2__GetMasks;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMasks";
	soap_tmp___onvifMedia2__GetMasks.onvifMedia2__GetMasks = onvifMedia2__GetMasks;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetMasks(soap, &soap_tmp___onvifMedia2__GetMasks);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetMasks(soap, &soap_tmp___onvifMedia2__GetMasks, "-onvifMedia2:GetMasks", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetMasks(soap, &soap_tmp___onvifMedia2__GetMasks, "-onvifMedia2:GetMasks", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetMasksResponse*>(&onvifMedia2__GetMasksResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetMasksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetMasksResponse.soap_get(soap, "onvifMedia2:GetMasksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::GetMaskOptions(const char *endpoint, const char *soap_action, _onvifMedia2__GetMaskOptions *onvifMedia2__GetMaskOptions, _onvifMedia2__GetMaskOptionsResponse &onvifMedia2__GetMaskOptionsResponse)
{
	struct __onvifMedia2__GetMaskOptions soap_tmp___onvifMedia2__GetMaskOptions;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMaskOptions";
	soap_tmp___onvifMedia2__GetMaskOptions.onvifMedia2__GetMaskOptions = onvifMedia2__GetMaskOptions;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__GetMaskOptions(soap, &soap_tmp___onvifMedia2__GetMaskOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__GetMaskOptions(soap, &soap_tmp___onvifMedia2__GetMaskOptions, "-onvifMedia2:GetMaskOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__GetMaskOptions(soap, &soap_tmp___onvifMedia2__GetMaskOptions, "-onvifMedia2:GetMaskOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__GetMaskOptionsResponse*>(&onvifMedia2__GetMaskOptionsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__GetMaskOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__GetMaskOptionsResponse.soap_get(soap, "onvifMedia2:GetMaskOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::SetMask(const char *endpoint, const char *soap_action, _onvifMedia2__SetMask *onvifMedia2__SetMask, onvifMedia2__SetConfigurationResponse &onvifMedia2__SetMaskResponse)
{
	struct __onvifMedia2__SetMask soap_tmp___onvifMedia2__SetMask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetMask";
	soap_tmp___onvifMedia2__SetMask.onvifMedia2__SetMask = onvifMedia2__SetMask;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__SetMask(soap, &soap_tmp___onvifMedia2__SetMask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__SetMask(soap, &soap_tmp___onvifMedia2__SetMask, "-onvifMedia2:SetMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__SetMask(soap, &soap_tmp___onvifMedia2__SetMask, "-onvifMedia2:SetMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<onvifMedia2__SetConfigurationResponse*>(&onvifMedia2__SetMaskResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__SetMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__SetMaskResponse.soap_get(soap, "onvifMedia2:SetMaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::CreateMask(const char *endpoint, const char *soap_action, _onvifMedia2__CreateMask *onvifMedia2__CreateMask, _onvifMedia2__CreateMaskResponse &onvifMedia2__CreateMaskResponse)
{
	struct __onvifMedia2__CreateMask soap_tmp___onvifMedia2__CreateMask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateMask";
	soap_tmp___onvifMedia2__CreateMask.onvifMedia2__CreateMask = onvifMedia2__CreateMask;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__CreateMask(soap, &soap_tmp___onvifMedia2__CreateMask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__CreateMask(soap, &soap_tmp___onvifMedia2__CreateMask, "-onvifMedia2:CreateMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__CreateMask(soap, &soap_tmp___onvifMedia2__CreateMask, "-onvifMedia2:CreateMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifMedia2__CreateMaskResponse*>(&onvifMedia2__CreateMaskResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__CreateMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__CreateMaskResponse.soap_get(soap, "onvifMedia2:CreateMaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int Media2BindingProxy::DeleteMask(const char *endpoint, const char *soap_action, _onvifMedia2__DeleteMask *onvifMedia2__DeleteMask, onvifMedia2__SetConfigurationResponse &onvifMedia2__DeleteMaskResponse)
{
	struct __onvifMedia2__DeleteMask soap_tmp___onvifMedia2__DeleteMask;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteMask";
	soap_tmp___onvifMedia2__DeleteMask.onvifMedia2__DeleteMask = onvifMedia2__DeleteMask;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifMedia2__DeleteMask(soap, &soap_tmp___onvifMedia2__DeleteMask);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifMedia2__DeleteMask(soap, &soap_tmp___onvifMedia2__DeleteMask, "-onvifMedia2:DeleteMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifMedia2__DeleteMask(soap, &soap_tmp___onvifMedia2__DeleteMask, "-onvifMedia2:DeleteMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<onvifMedia2__SetConfigurationResponse*>(&onvifMedia2__DeleteMaskResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifMedia2__DeleteMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifMedia2__DeleteMaskResponse.soap_get(soap, "onvifMedia2:DeleteMaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
