/* soapScheduleBindingProxy.cpp
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapScheduleBindingProxy.h"

ScheduleBindingProxy::ScheduleBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	ScheduleBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ScheduleBindingProxy::ScheduleBindingProxy(const ScheduleBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

ScheduleBindingProxy::ScheduleBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	ScheduleBindingProxy_init(_soap->imode, _soap->omode);
}

ScheduleBindingProxy::ScheduleBindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	ScheduleBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

ScheduleBindingProxy::ScheduleBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	ScheduleBindingProxy_init(iomode, iomode);
}

ScheduleBindingProxy::ScheduleBindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	ScheduleBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

ScheduleBindingProxy::ScheduleBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	ScheduleBindingProxy_init(imode, omode);
}

ScheduleBindingProxy::~ScheduleBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void ScheduleBindingProxy::ScheduleBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"onvifPacs", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"onvifAccessControl", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"onvifAccessRules", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"onvifActionEngine", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"onvifAdvancedSecurity-assb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
        {"onvifAdvancedSecurity-db", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
        {"onvifAdvancedSecurity-kb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
        {"onvifAdvancedSecurity-tsb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
        {"onvifAdvancedSecurity", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"onvifAnalytics-aeb", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
        {"onvifAnalytics-reb", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
        {"onvifAnalytics", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"onvifAnalyticsDevice", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"onvifCredential", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"onvifDisplay", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"onvifDoorControl", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"onvifEvents-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
        {"onvifEvents-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
        {"onvifEvents-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
        {"onvifEvents-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
        {"onvifEvents-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
        {"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"onvifEvents-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
        {"onvifEvents-psmb", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
        {"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"onvifEvents-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
        {"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"onvifMedia2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"onvifNetwork-dlb", "http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding", NULL, NULL},
        {"onvifNetwork-rdb", "http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding", NULL, NULL},
        {"onvifNetwork", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"onvifProvisioning", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"onvifReceiver", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"onvifRecording", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"onvifReplay", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"onvifScedule", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"onvifSearch", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {"onvifThermal", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

ScheduleBindingProxy *ScheduleBindingProxy::copy()
{	ScheduleBindingProxy *dup = SOAP_NEW_UNMANAGED(ScheduleBindingProxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

ScheduleBindingProxy& ScheduleBindingProxy::operator=(const ScheduleBindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void ScheduleBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void ScheduleBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	ScheduleBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void ScheduleBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void ScheduleBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *subscriptionID)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->subscriptionID = subscriptionID;
}

::SOAP_ENV__Header *ScheduleBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *ScheduleBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *ScheduleBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *ScheduleBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int ScheduleBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int ScheduleBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void ScheduleBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ScheduleBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *ScheduleBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int ScheduleBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _onvifScedule__GetServiceCapabilities *onvifScedule__GetServiceCapabilities, _onvifScedule__GetServiceCapabilitiesResponse &onvifScedule__GetServiceCapabilitiesResponse)
{
	struct __onvifScedule__GetServiceCapabilities soap_tmp___onvifScedule__GetServiceCapabilities;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetServiceCapabilities";
	soap_tmp___onvifScedule__GetServiceCapabilities.onvifScedule__GetServiceCapabilities = onvifScedule__GetServiceCapabilities;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__GetServiceCapabilities(soap, &soap_tmp___onvifScedule__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__GetServiceCapabilities(soap, &soap_tmp___onvifScedule__GetServiceCapabilities, "-onvifScedule:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__GetServiceCapabilities(soap, &soap_tmp___onvifScedule__GetServiceCapabilities, "-onvifScedule:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__GetServiceCapabilitiesResponse*>(&onvifScedule__GetServiceCapabilitiesResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__GetServiceCapabilitiesResponse.soap_get(soap, "onvifScedule:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleState(const char *endpoint, const char *soap_action, _onvifScedule__GetScheduleState *onvifScedule__GetScheduleState, _onvifScedule__GetScheduleStateResponse &onvifScedule__GetScheduleStateResponse)
{
	struct __onvifScedule__GetScheduleState soap_tmp___onvifScedule__GetScheduleState;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleState";
	soap_tmp___onvifScedule__GetScheduleState.onvifScedule__GetScheduleState = onvifScedule__GetScheduleState;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__GetScheduleState(soap, &soap_tmp___onvifScedule__GetScheduleState);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__GetScheduleState(soap, &soap_tmp___onvifScedule__GetScheduleState, "-onvifScedule:GetScheduleState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__GetScheduleState(soap, &soap_tmp___onvifScedule__GetScheduleState, "-onvifScedule:GetScheduleState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__GetScheduleStateResponse*>(&onvifScedule__GetScheduleStateResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__GetScheduleStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__GetScheduleStateResponse.soap_get(soap, "onvifScedule:GetScheduleStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleInfo(const char *endpoint, const char *soap_action, _onvifScedule__GetScheduleInfo *onvifScedule__GetScheduleInfo, _onvifScedule__GetScheduleInfoResponse &onvifScedule__GetScheduleInfoResponse)
{
	struct __onvifScedule__GetScheduleInfo soap_tmp___onvifScedule__GetScheduleInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfo";
	soap_tmp___onvifScedule__GetScheduleInfo.onvifScedule__GetScheduleInfo = onvifScedule__GetScheduleInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__GetScheduleInfo(soap, &soap_tmp___onvifScedule__GetScheduleInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__GetScheduleInfo(soap, &soap_tmp___onvifScedule__GetScheduleInfo, "-onvifScedule:GetScheduleInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__GetScheduleInfo(soap, &soap_tmp___onvifScedule__GetScheduleInfo, "-onvifScedule:GetScheduleInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__GetScheduleInfoResponse*>(&onvifScedule__GetScheduleInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__GetScheduleInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__GetScheduleInfoResponse.soap_get(soap, "onvifScedule:GetScheduleInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleInfoList(const char *endpoint, const char *soap_action, _onvifScedule__GetScheduleInfoList *onvifScedule__GetScheduleInfoList, _onvifScedule__GetScheduleInfoListResponse &onvifScedule__GetScheduleInfoListResponse)
{
	struct __onvifScedule__GetScheduleInfoList soap_tmp___onvifScedule__GetScheduleInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfoList";
	soap_tmp___onvifScedule__GetScheduleInfoList.onvifScedule__GetScheduleInfoList = onvifScedule__GetScheduleInfoList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__GetScheduleInfoList(soap, &soap_tmp___onvifScedule__GetScheduleInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__GetScheduleInfoList(soap, &soap_tmp___onvifScedule__GetScheduleInfoList, "-onvifScedule:GetScheduleInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__GetScheduleInfoList(soap, &soap_tmp___onvifScedule__GetScheduleInfoList, "-onvifScedule:GetScheduleInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__GetScheduleInfoListResponse*>(&onvifScedule__GetScheduleInfoListResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__GetScheduleInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__GetScheduleInfoListResponse.soap_get(soap, "onvifScedule:GetScheduleInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSchedules(const char *endpoint, const char *soap_action, _onvifScedule__GetSchedules *onvifScedule__GetSchedules, _onvifScedule__GetSchedulesResponse &onvifScedule__GetSchedulesResponse)
{
	struct __onvifScedule__GetSchedules soap_tmp___onvifScedule__GetSchedules;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSchedules";
	soap_tmp___onvifScedule__GetSchedules.onvifScedule__GetSchedules = onvifScedule__GetSchedules;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__GetSchedules(soap, &soap_tmp___onvifScedule__GetSchedules);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__GetSchedules(soap, &soap_tmp___onvifScedule__GetSchedules, "-onvifScedule:GetSchedules", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__GetSchedules(soap, &soap_tmp___onvifScedule__GetSchedules, "-onvifScedule:GetSchedules", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__GetSchedulesResponse*>(&onvifScedule__GetSchedulesResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__GetSchedulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__GetSchedulesResponse.soap_get(soap, "onvifScedule:GetSchedulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetScheduleList(const char *endpoint, const char *soap_action, _onvifScedule__GetScheduleList *onvifScedule__GetScheduleList, _onvifScedule__GetScheduleListResponse &onvifScedule__GetScheduleListResponse)
{
	struct __onvifScedule__GetScheduleList soap_tmp___onvifScedule__GetScheduleList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleList";
	soap_tmp___onvifScedule__GetScheduleList.onvifScedule__GetScheduleList = onvifScedule__GetScheduleList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__GetScheduleList(soap, &soap_tmp___onvifScedule__GetScheduleList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__GetScheduleList(soap, &soap_tmp___onvifScedule__GetScheduleList, "-onvifScedule:GetScheduleList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__GetScheduleList(soap, &soap_tmp___onvifScedule__GetScheduleList, "-onvifScedule:GetScheduleList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__GetScheduleListResponse*>(&onvifScedule__GetScheduleListResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__GetScheduleListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__GetScheduleListResponse.soap_get(soap, "onvifScedule:GetScheduleListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::CreateSchedule(const char *endpoint, const char *soap_action, _onvifScedule__CreateSchedule *onvifScedule__CreateSchedule, _onvifScedule__CreateScheduleResponse &onvifScedule__CreateScheduleResponse)
{
	struct __onvifScedule__CreateSchedule soap_tmp___onvifScedule__CreateSchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/CreateSchedule";
	soap_tmp___onvifScedule__CreateSchedule.onvifScedule__CreateSchedule = onvifScedule__CreateSchedule;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__CreateSchedule(soap, &soap_tmp___onvifScedule__CreateSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__CreateSchedule(soap, &soap_tmp___onvifScedule__CreateSchedule, "-onvifScedule:CreateSchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__CreateSchedule(soap, &soap_tmp___onvifScedule__CreateSchedule, "-onvifScedule:CreateSchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__CreateScheduleResponse*>(&onvifScedule__CreateScheduleResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__CreateScheduleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__CreateScheduleResponse.soap_get(soap, "onvifScedule:CreateScheduleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::SetSchedule(const char *endpoint, const char *soap_action, _onvifScedule__SetSchedule *onvifScedule__SetSchedule, _onvifScedule__SetScheduleResponse &onvifScedule__SetScheduleResponse)
{
	struct __onvifScedule__SetSchedule soap_tmp___onvifScedule__SetSchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/SetSchedule";
	soap_tmp___onvifScedule__SetSchedule.onvifScedule__SetSchedule = onvifScedule__SetSchedule;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__SetSchedule(soap, &soap_tmp___onvifScedule__SetSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__SetSchedule(soap, &soap_tmp___onvifScedule__SetSchedule, "-onvifScedule:SetSchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__SetSchedule(soap, &soap_tmp___onvifScedule__SetSchedule, "-onvifScedule:SetSchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__SetScheduleResponse*>(&onvifScedule__SetScheduleResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__SetScheduleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__SetScheduleResponse.soap_get(soap, "onvifScedule:SetScheduleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::ModifySchedule(const char *endpoint, const char *soap_action, _onvifScedule__ModifySchedule *onvifScedule__ModifySchedule, _onvifScedule__ModifyScheduleResponse &onvifScedule__ModifyScheduleResponse)
{
	struct __onvifScedule__ModifySchedule soap_tmp___onvifScedule__ModifySchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/ModifySchedule";
	soap_tmp___onvifScedule__ModifySchedule.onvifScedule__ModifySchedule = onvifScedule__ModifySchedule;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__ModifySchedule(soap, &soap_tmp___onvifScedule__ModifySchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__ModifySchedule(soap, &soap_tmp___onvifScedule__ModifySchedule, "-onvifScedule:ModifySchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__ModifySchedule(soap, &soap_tmp___onvifScedule__ModifySchedule, "-onvifScedule:ModifySchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__ModifyScheduleResponse*>(&onvifScedule__ModifyScheduleResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__ModifyScheduleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__ModifyScheduleResponse.soap_get(soap, "onvifScedule:ModifyScheduleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::DeleteSchedule(const char *endpoint, const char *soap_action, _onvifScedule__DeleteSchedule *onvifScedule__DeleteSchedule, _onvifScedule__DeleteScheduleResponse &onvifScedule__DeleteScheduleResponse)
{
	struct __onvifScedule__DeleteSchedule soap_tmp___onvifScedule__DeleteSchedule;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/DeleteSchedule";
	soap_tmp___onvifScedule__DeleteSchedule.onvifScedule__DeleteSchedule = onvifScedule__DeleteSchedule;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__DeleteSchedule(soap, &soap_tmp___onvifScedule__DeleteSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__DeleteSchedule(soap, &soap_tmp___onvifScedule__DeleteSchedule, "-onvifScedule:DeleteSchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__DeleteSchedule(soap, &soap_tmp___onvifScedule__DeleteSchedule, "-onvifScedule:DeleteSchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__DeleteScheduleResponse*>(&onvifScedule__DeleteScheduleResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__DeleteScheduleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__DeleteScheduleResponse.soap_get(soap, "onvifScedule:DeleteScheduleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroupInfo(const char *endpoint, const char *soap_action, _onvifScedule__GetSpecialDayGroupInfo *onvifScedule__GetSpecialDayGroupInfo, _onvifScedule__GetSpecialDayGroupInfoResponse &onvifScedule__GetSpecialDayGroupInfoResponse)
{
	struct __onvifScedule__GetSpecialDayGroupInfo soap_tmp___onvifScedule__GetSpecialDayGroupInfo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfo";
	soap_tmp___onvifScedule__GetSpecialDayGroupInfo.onvifScedule__GetSpecialDayGroupInfo = onvifScedule__GetSpecialDayGroupInfo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__GetSpecialDayGroupInfo(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__GetSpecialDayGroupInfo(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupInfo, "-onvifScedule:GetSpecialDayGroupInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__GetSpecialDayGroupInfo(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupInfo, "-onvifScedule:GetSpecialDayGroupInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__GetSpecialDayGroupInfoResponse*>(&onvifScedule__GetSpecialDayGroupInfoResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__GetSpecialDayGroupInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__GetSpecialDayGroupInfoResponse.soap_get(soap, "onvifScedule:GetSpecialDayGroupInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroupInfoList(const char *endpoint, const char *soap_action, _onvifScedule__GetSpecialDayGroupInfoList *onvifScedule__GetSpecialDayGroupInfoList, _onvifScedule__GetSpecialDayGroupInfoListResponse &onvifScedule__GetSpecialDayGroupInfoListResponse)
{
	struct __onvifScedule__GetSpecialDayGroupInfoList soap_tmp___onvifScedule__GetSpecialDayGroupInfoList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfoList";
	soap_tmp___onvifScedule__GetSpecialDayGroupInfoList.onvifScedule__GetSpecialDayGroupInfoList = onvifScedule__GetSpecialDayGroupInfoList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__GetSpecialDayGroupInfoList(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__GetSpecialDayGroupInfoList(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupInfoList, "-onvifScedule:GetSpecialDayGroupInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__GetSpecialDayGroupInfoList(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupInfoList, "-onvifScedule:GetSpecialDayGroupInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__GetSpecialDayGroupInfoListResponse*>(&onvifScedule__GetSpecialDayGroupInfoListResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__GetSpecialDayGroupInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__GetSpecialDayGroupInfoListResponse.soap_get(soap, "onvifScedule:GetSpecialDayGroupInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroups(const char *endpoint, const char *soap_action, _onvifScedule__GetSpecialDayGroups *onvifScedule__GetSpecialDayGroups, _onvifScedule__GetSpecialDayGroupsResponse &onvifScedule__GetSpecialDayGroupsResponse)
{
	struct __onvifScedule__GetSpecialDayGroups soap_tmp___onvifScedule__GetSpecialDayGroups;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroups";
	soap_tmp___onvifScedule__GetSpecialDayGroups.onvifScedule__GetSpecialDayGroups = onvifScedule__GetSpecialDayGroups;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__GetSpecialDayGroups(soap, &soap_tmp___onvifScedule__GetSpecialDayGroups);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__GetSpecialDayGroups(soap, &soap_tmp___onvifScedule__GetSpecialDayGroups, "-onvifScedule:GetSpecialDayGroups", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__GetSpecialDayGroups(soap, &soap_tmp___onvifScedule__GetSpecialDayGroups, "-onvifScedule:GetSpecialDayGroups", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__GetSpecialDayGroupsResponse*>(&onvifScedule__GetSpecialDayGroupsResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__GetSpecialDayGroupsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__GetSpecialDayGroupsResponse.soap_get(soap, "onvifScedule:GetSpecialDayGroupsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::GetSpecialDayGroupList(const char *endpoint, const char *soap_action, _onvifScedule__GetSpecialDayGroupList *onvifScedule__GetSpecialDayGroupList, _onvifScedule__GetSpecialDayGroupListResponse &onvifScedule__GetSpecialDayGroupListResponse)
{
	struct __onvifScedule__GetSpecialDayGroupList soap_tmp___onvifScedule__GetSpecialDayGroupList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupList";
	soap_tmp___onvifScedule__GetSpecialDayGroupList.onvifScedule__GetSpecialDayGroupList = onvifScedule__GetSpecialDayGroupList;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__GetSpecialDayGroupList(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__GetSpecialDayGroupList(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupList, "-onvifScedule:GetSpecialDayGroupList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__GetSpecialDayGroupList(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupList, "-onvifScedule:GetSpecialDayGroupList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__GetSpecialDayGroupListResponse*>(&onvifScedule__GetSpecialDayGroupListResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__GetSpecialDayGroupListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__GetSpecialDayGroupListResponse.soap_get(soap, "onvifScedule:GetSpecialDayGroupListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::CreateSpecialDayGroup(const char *endpoint, const char *soap_action, _onvifScedule__CreateSpecialDayGroup *onvifScedule__CreateSpecialDayGroup, _onvifScedule__CreateSpecialDayGroupResponse &onvifScedule__CreateSpecialDayGroupResponse)
{
	struct __onvifScedule__CreateSpecialDayGroup soap_tmp___onvifScedule__CreateSpecialDayGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/CreateSpecialDayGroup";
	soap_tmp___onvifScedule__CreateSpecialDayGroup.onvifScedule__CreateSpecialDayGroup = onvifScedule__CreateSpecialDayGroup;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__CreateSpecialDayGroup(soap, &soap_tmp___onvifScedule__CreateSpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__CreateSpecialDayGroup(soap, &soap_tmp___onvifScedule__CreateSpecialDayGroup, "-onvifScedule:CreateSpecialDayGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__CreateSpecialDayGroup(soap, &soap_tmp___onvifScedule__CreateSpecialDayGroup, "-onvifScedule:CreateSpecialDayGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__CreateSpecialDayGroupResponse*>(&onvifScedule__CreateSpecialDayGroupResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__CreateSpecialDayGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__CreateSpecialDayGroupResponse.soap_get(soap, "onvifScedule:CreateSpecialDayGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::SetSpecialDayGroup(const char *endpoint, const char *soap_action, _onvifScedule__SetSpecialDayGroup *onvifScedule__SetSpecialDayGroup, _onvifScedule__SetSpecialDayGroupResponse &onvifScedule__SetSpecialDayGroupResponse)
{
	struct __onvifScedule__SetSpecialDayGroup soap_tmp___onvifScedule__SetSpecialDayGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/SetSpecialDayGroup";
	soap_tmp___onvifScedule__SetSpecialDayGroup.onvifScedule__SetSpecialDayGroup = onvifScedule__SetSpecialDayGroup;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__SetSpecialDayGroup(soap, &soap_tmp___onvifScedule__SetSpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__SetSpecialDayGroup(soap, &soap_tmp___onvifScedule__SetSpecialDayGroup, "-onvifScedule:SetSpecialDayGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__SetSpecialDayGroup(soap, &soap_tmp___onvifScedule__SetSpecialDayGroup, "-onvifScedule:SetSpecialDayGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__SetSpecialDayGroupResponse*>(&onvifScedule__SetSpecialDayGroupResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__SetSpecialDayGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__SetSpecialDayGroupResponse.soap_get(soap, "onvifScedule:SetSpecialDayGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::ModifySpecialDayGroup(const char *endpoint, const char *soap_action, _onvifScedule__ModifySpecialDayGroup *onvifScedule__ModifySpecialDayGroup, _onvifScedule__ModifySpecialDayGroupResponse &onvifScedule__ModifySpecialDayGroupResponse)
{
	struct __onvifScedule__ModifySpecialDayGroup soap_tmp___onvifScedule__ModifySpecialDayGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/ModifySpecialDayGroup";
	soap_tmp___onvifScedule__ModifySpecialDayGroup.onvifScedule__ModifySpecialDayGroup = onvifScedule__ModifySpecialDayGroup;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__ModifySpecialDayGroup(soap, &soap_tmp___onvifScedule__ModifySpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__ModifySpecialDayGroup(soap, &soap_tmp___onvifScedule__ModifySpecialDayGroup, "-onvifScedule:ModifySpecialDayGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__ModifySpecialDayGroup(soap, &soap_tmp___onvifScedule__ModifySpecialDayGroup, "-onvifScedule:ModifySpecialDayGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__ModifySpecialDayGroupResponse*>(&onvifScedule__ModifySpecialDayGroupResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__ModifySpecialDayGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__ModifySpecialDayGroupResponse.soap_get(soap, "onvifScedule:ModifySpecialDayGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ScheduleBindingProxy::DeleteSpecialDayGroup(const char *endpoint, const char *soap_action, _onvifScedule__DeleteSpecialDayGroup *onvifScedule__DeleteSpecialDayGroup, _onvifScedule__DeleteSpecialDayGroupResponse &onvifScedule__DeleteSpecialDayGroupResponse)
{
	struct __onvifScedule__DeleteSpecialDayGroup soap_tmp___onvifScedule__DeleteSpecialDayGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/DeleteSpecialDayGroup";
	soap_tmp___onvifScedule__DeleteSpecialDayGroup.onvifScedule__DeleteSpecialDayGroup = onvifScedule__DeleteSpecialDayGroup;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifScedule__DeleteSpecialDayGroup(soap, &soap_tmp___onvifScedule__DeleteSpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifScedule__DeleteSpecialDayGroup(soap, &soap_tmp___onvifScedule__DeleteSpecialDayGroup, "-onvifScedule:DeleteSpecialDayGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifScedule__DeleteSpecialDayGroup(soap, &soap_tmp___onvifScedule__DeleteSpecialDayGroup, "-onvifScedule:DeleteSpecialDayGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifScedule__DeleteSpecialDayGroupResponse*>(&onvifScedule__DeleteSpecialDayGroupResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifScedule__DeleteSpecialDayGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifScedule__DeleteSpecialDayGroupResponse.soap_get(soap, "onvifScedule:DeleteSpecialDayGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
