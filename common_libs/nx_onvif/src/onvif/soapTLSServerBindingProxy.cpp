/* soapTLSServerBindingProxy.cpp
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapTLSServerBindingProxy.h"

TLSServerBindingProxy::TLSServerBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	TLSServerBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

TLSServerBindingProxy::TLSServerBindingProxy(const TLSServerBindingProxy& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
	this->soap_endpoint = rhs.soap_endpoint;
}

TLSServerBindingProxy::TLSServerBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	TLSServerBindingProxy_init(_soap->imode, _soap->omode);
}

TLSServerBindingProxy::TLSServerBindingProxy(const char *endpoint)
{	this->soap = soap_new();
	this->soap_own = true;
	TLSServerBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

TLSServerBindingProxy::TLSServerBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	TLSServerBindingProxy_init(iomode, iomode);
}

TLSServerBindingProxy::TLSServerBindingProxy(const char *endpoint, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	TLSServerBindingProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

TLSServerBindingProxy::TLSServerBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	TLSServerBindingProxy_init(imode, omode);
}

TLSServerBindingProxy::~TLSServerBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void TLSServerBindingProxy::TLSServerBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"onvifPacs", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"onvifAccessControl", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"onvifAccessRules", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"onvifActionEngine", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"onvifAdvancedSecurity-assb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
        {"onvifAdvancedSecurity-db", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
        {"onvifAdvancedSecurity-kb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
        {"onvifAdvancedSecurity-tsb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
        {"onvifAdvancedSecurity", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"onvifAnalytics-aeb", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
        {"onvifAnalytics-reb", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
        {"onvifAnalytics", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"onvifAnalyticsDevice", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"onvifCredential", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"onvifDisplay", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"onvifDoorControl", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"onvifEvents-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
        {"onvifEvents-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
        {"onvifEvents-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
        {"onvifEvents-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
        {"onvifEvents-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
        {"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"onvifEvents-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
        {"onvifEvents-psmb", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
        {"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"onvifEvents-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
        {"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"onvifMedia2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"onvifNetwork-dlb", "http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding", NULL, NULL},
        {"onvifNetwork-rdb", "http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding", NULL, NULL},
        {"onvifNetwork", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"onvifProvisioning", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"onvifReceiver", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"onvifRecording", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"onvifReplay", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"onvifScedule", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"onvifSearch", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {"onvifThermal", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

TLSServerBindingProxy *TLSServerBindingProxy::copy()
{	TLSServerBindingProxy *dup = SOAP_NEW_UNMANAGED(TLSServerBindingProxy);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}

TLSServerBindingProxy& TLSServerBindingProxy::operator=(const TLSServerBindingProxy& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
		this->soap_endpoint = rhs.soap_endpoint;
	}
	return *this;
}

void TLSServerBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void TLSServerBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	TLSServerBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void TLSServerBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void TLSServerBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *subscriptionID)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->subscriptionID = subscriptionID;
}

::SOAP_ENV__Header *TLSServerBindingProxy::soap_header()
{	return this->soap->header;
}

::SOAP_ENV__Fault *TLSServerBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *TLSServerBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *TLSServerBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int TLSServerBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int TLSServerBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void TLSServerBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void TLSServerBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *TLSServerBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int TLSServerBindingProxy::AddServerCertificateAssignment(const char *endpoint, const char *soap_action, _onvifAdvancedSecurity__AddServerCertificateAssignment *onvifAdvancedSecurity__AddServerCertificateAssignment, _onvifAdvancedSecurity__AddServerCertificateAssignmentResponse &onvifAdvancedSecurity__AddServerCertificateAssignmentResponse)
{
	struct __onvifAdvancedSecurity_tsb__AddServerCertificateAssignment soap_tmp___onvifAdvancedSecurity_tsb__AddServerCertificateAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddServerCertificateAssignment";
	soap_tmp___onvifAdvancedSecurity_tsb__AddServerCertificateAssignment.onvifAdvancedSecurity__AddServerCertificateAssignment = onvifAdvancedSecurity__AddServerCertificateAssignment;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifAdvancedSecurity_tsb__AddServerCertificateAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__AddServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifAdvancedSecurity_tsb__AddServerCertificateAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__AddServerCertificateAssignment, "-onvifAdvancedSecurity-tsb:AddServerCertificateAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifAdvancedSecurity_tsb__AddServerCertificateAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__AddServerCertificateAssignment, "-onvifAdvancedSecurity-tsb:AddServerCertificateAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifAdvancedSecurity__AddServerCertificateAssignmentResponse*>(&onvifAdvancedSecurity__AddServerCertificateAssignmentResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifAdvancedSecurity__AddServerCertificateAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifAdvancedSecurity__AddServerCertificateAssignmentResponse.soap_get(soap, "onvifAdvancedSecurity:AddServerCertificateAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TLSServerBindingProxy::RemoveServerCertificateAssignment(const char *endpoint, const char *soap_action, _onvifAdvancedSecurity__RemoveServerCertificateAssignment *onvifAdvancedSecurity__RemoveServerCertificateAssignment, _onvifAdvancedSecurity__RemoveServerCertificateAssignmentResponse &onvifAdvancedSecurity__RemoveServerCertificateAssignmentResponse)
{
	struct __onvifAdvancedSecurity_tsb__RemoveServerCertificateAssignment soap_tmp___onvifAdvancedSecurity_tsb__RemoveServerCertificateAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveServerCertificateAssignment";
	soap_tmp___onvifAdvancedSecurity_tsb__RemoveServerCertificateAssignment.onvifAdvancedSecurity__RemoveServerCertificateAssignment = onvifAdvancedSecurity__RemoveServerCertificateAssignment;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifAdvancedSecurity_tsb__RemoveServerCertificateAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__RemoveServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifAdvancedSecurity_tsb__RemoveServerCertificateAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__RemoveServerCertificateAssignment, "-onvifAdvancedSecurity-tsb:RemoveServerCertificateAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifAdvancedSecurity_tsb__RemoveServerCertificateAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__RemoveServerCertificateAssignment, "-onvifAdvancedSecurity-tsb:RemoveServerCertificateAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifAdvancedSecurity__RemoveServerCertificateAssignmentResponse*>(&onvifAdvancedSecurity__RemoveServerCertificateAssignmentResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifAdvancedSecurity__RemoveServerCertificateAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifAdvancedSecurity__RemoveServerCertificateAssignmentResponse.soap_get(soap, "onvifAdvancedSecurity:RemoveServerCertificateAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TLSServerBindingProxy::ReplaceServerCertificateAssignment(const char *endpoint, const char *soap_action, _onvifAdvancedSecurity__ReplaceServerCertificateAssignment *onvifAdvancedSecurity__ReplaceServerCertificateAssignment, _onvifAdvancedSecurity__ReplaceServerCertificateAssignmentResponse &onvifAdvancedSecurity__ReplaceServerCertificateAssignmentResponse)
{
	struct __onvifAdvancedSecurity_tsb__ReplaceServerCertificateAssignment soap_tmp___onvifAdvancedSecurity_tsb__ReplaceServerCertificateAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceServerCertificateAssignment";
	soap_tmp___onvifAdvancedSecurity_tsb__ReplaceServerCertificateAssignment.onvifAdvancedSecurity__ReplaceServerCertificateAssignment = onvifAdvancedSecurity__ReplaceServerCertificateAssignment;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifAdvancedSecurity_tsb__ReplaceServerCertificateAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__ReplaceServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifAdvancedSecurity_tsb__ReplaceServerCertificateAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__ReplaceServerCertificateAssignment, "-onvifAdvancedSecurity-tsb:ReplaceServerCertificateAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifAdvancedSecurity_tsb__ReplaceServerCertificateAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__ReplaceServerCertificateAssignment, "-onvifAdvancedSecurity-tsb:ReplaceServerCertificateAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifAdvancedSecurity__ReplaceServerCertificateAssignmentResponse*>(&onvifAdvancedSecurity__ReplaceServerCertificateAssignmentResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifAdvancedSecurity__ReplaceServerCertificateAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifAdvancedSecurity__ReplaceServerCertificateAssignmentResponse.soap_get(soap, "onvifAdvancedSecurity:ReplaceServerCertificateAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TLSServerBindingProxy::GetAssignedServerCertificates(const char *endpoint, const char *soap_action, _onvifAdvancedSecurity__GetAssignedServerCertificates *onvifAdvancedSecurity__GetAssignedServerCertificates, _onvifAdvancedSecurity__GetAssignedServerCertificatesResponse &onvifAdvancedSecurity__GetAssignedServerCertificatesResponse)
{
	struct __onvifAdvancedSecurity_tsb__GetAssignedServerCertificates soap_tmp___onvifAdvancedSecurity_tsb__GetAssignedServerCertificates;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedServerCertificates";
	soap_tmp___onvifAdvancedSecurity_tsb__GetAssignedServerCertificates.onvifAdvancedSecurity__GetAssignedServerCertificates = onvifAdvancedSecurity__GetAssignedServerCertificates;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifAdvancedSecurity_tsb__GetAssignedServerCertificates(soap, &soap_tmp___onvifAdvancedSecurity_tsb__GetAssignedServerCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifAdvancedSecurity_tsb__GetAssignedServerCertificates(soap, &soap_tmp___onvifAdvancedSecurity_tsb__GetAssignedServerCertificates, "-onvifAdvancedSecurity-tsb:GetAssignedServerCertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifAdvancedSecurity_tsb__GetAssignedServerCertificates(soap, &soap_tmp___onvifAdvancedSecurity_tsb__GetAssignedServerCertificates, "-onvifAdvancedSecurity-tsb:GetAssignedServerCertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifAdvancedSecurity__GetAssignedServerCertificatesResponse*>(&onvifAdvancedSecurity__GetAssignedServerCertificatesResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifAdvancedSecurity__GetAssignedServerCertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifAdvancedSecurity__GetAssignedServerCertificatesResponse.soap_get(soap, "onvifAdvancedSecurity:GetAssignedServerCertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TLSServerBindingProxy::SetClientAuthenticationRequired(const char *endpoint, const char *soap_action, _onvifAdvancedSecurity__SetClientAuthenticationRequired *onvifAdvancedSecurity__SetClientAuthenticationRequired, _onvifAdvancedSecurity__SetClientAuthenticationRequiredResponse &onvifAdvancedSecurity__SetClientAuthenticationRequiredResponse)
{
	struct __onvifAdvancedSecurity_tsb__SetClientAuthenticationRequired soap_tmp___onvifAdvancedSecurity_tsb__SetClientAuthenticationRequired;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetClientAuthenticationRequired";
	soap_tmp___onvifAdvancedSecurity_tsb__SetClientAuthenticationRequired.onvifAdvancedSecurity__SetClientAuthenticationRequired = onvifAdvancedSecurity__SetClientAuthenticationRequired;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifAdvancedSecurity_tsb__SetClientAuthenticationRequired(soap, &soap_tmp___onvifAdvancedSecurity_tsb__SetClientAuthenticationRequired);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifAdvancedSecurity_tsb__SetClientAuthenticationRequired(soap, &soap_tmp___onvifAdvancedSecurity_tsb__SetClientAuthenticationRequired, "-onvifAdvancedSecurity-tsb:SetClientAuthenticationRequired", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifAdvancedSecurity_tsb__SetClientAuthenticationRequired(soap, &soap_tmp___onvifAdvancedSecurity_tsb__SetClientAuthenticationRequired, "-onvifAdvancedSecurity-tsb:SetClientAuthenticationRequired", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifAdvancedSecurity__SetClientAuthenticationRequiredResponse*>(&onvifAdvancedSecurity__SetClientAuthenticationRequiredResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifAdvancedSecurity__SetClientAuthenticationRequiredResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifAdvancedSecurity__SetClientAuthenticationRequiredResponse.soap_get(soap, "onvifAdvancedSecurity:SetClientAuthenticationRequiredResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TLSServerBindingProxy::GetClientAuthenticationRequired(const char *endpoint, const char *soap_action, _onvifAdvancedSecurity__GetClientAuthenticationRequired *onvifAdvancedSecurity__GetClientAuthenticationRequired, _onvifAdvancedSecurity__GetClientAuthenticationRequiredResponse &onvifAdvancedSecurity__GetClientAuthenticationRequiredResponse)
{
	struct __onvifAdvancedSecurity_tsb__GetClientAuthenticationRequired soap_tmp___onvifAdvancedSecurity_tsb__GetClientAuthenticationRequired;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetClientAuthenticationRequired";
	soap_tmp___onvifAdvancedSecurity_tsb__GetClientAuthenticationRequired.onvifAdvancedSecurity__GetClientAuthenticationRequired = onvifAdvancedSecurity__GetClientAuthenticationRequired;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifAdvancedSecurity_tsb__GetClientAuthenticationRequired(soap, &soap_tmp___onvifAdvancedSecurity_tsb__GetClientAuthenticationRequired);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifAdvancedSecurity_tsb__GetClientAuthenticationRequired(soap, &soap_tmp___onvifAdvancedSecurity_tsb__GetClientAuthenticationRequired, "-onvifAdvancedSecurity-tsb:GetClientAuthenticationRequired", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifAdvancedSecurity_tsb__GetClientAuthenticationRequired(soap, &soap_tmp___onvifAdvancedSecurity_tsb__GetClientAuthenticationRequired, "-onvifAdvancedSecurity-tsb:GetClientAuthenticationRequired", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifAdvancedSecurity__GetClientAuthenticationRequiredResponse*>(&onvifAdvancedSecurity__GetClientAuthenticationRequiredResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifAdvancedSecurity__GetClientAuthenticationRequiredResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifAdvancedSecurity__GetClientAuthenticationRequiredResponse.soap_get(soap, "onvifAdvancedSecurity:GetClientAuthenticationRequiredResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TLSServerBindingProxy::AddCertPathValidationPolicyAssignment(const char *endpoint, const char *soap_action, _onvifAdvancedSecurity__AddCertPathValidationPolicyAssignment *onvifAdvancedSecurity__AddCertPathValidationPolicyAssignment, _onvifAdvancedSecurity__AddCertPathValidationPolicyAssignmentResponse &onvifAdvancedSecurity__AddCertPathValidationPolicyAssignmentResponse)
{
	struct __onvifAdvancedSecurity_tsb__AddCertPathValidationPolicyAssignment soap_tmp___onvifAdvancedSecurity_tsb__AddCertPathValidationPolicyAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddCertPathValidationPolicyAssignment";
	soap_tmp___onvifAdvancedSecurity_tsb__AddCertPathValidationPolicyAssignment.onvifAdvancedSecurity__AddCertPathValidationPolicyAssignment = onvifAdvancedSecurity__AddCertPathValidationPolicyAssignment;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifAdvancedSecurity_tsb__AddCertPathValidationPolicyAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__AddCertPathValidationPolicyAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifAdvancedSecurity_tsb__AddCertPathValidationPolicyAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__AddCertPathValidationPolicyAssignment, "-onvifAdvancedSecurity-tsb:AddCertPathValidationPolicyAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifAdvancedSecurity_tsb__AddCertPathValidationPolicyAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__AddCertPathValidationPolicyAssignment, "-onvifAdvancedSecurity-tsb:AddCertPathValidationPolicyAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifAdvancedSecurity__AddCertPathValidationPolicyAssignmentResponse*>(&onvifAdvancedSecurity__AddCertPathValidationPolicyAssignmentResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifAdvancedSecurity__AddCertPathValidationPolicyAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifAdvancedSecurity__AddCertPathValidationPolicyAssignmentResponse.soap_get(soap, "onvifAdvancedSecurity:AddCertPathValidationPolicyAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TLSServerBindingProxy::RemoveCertPathValidationPolicyAssignment(const char *endpoint, const char *soap_action, _onvifAdvancedSecurity__RemoveCertPathValidationPolicyAssignment *onvifAdvancedSecurity__RemoveCertPathValidationPolicyAssignment, _onvifAdvancedSecurity__RemoveCertPathValidationPolicyAssignmentResponse &onvifAdvancedSecurity__RemoveCertPathValidationPolicyAssignmentResponse)
{
	struct __onvifAdvancedSecurity_tsb__RemoveCertPathValidationPolicyAssignment soap_tmp___onvifAdvancedSecurity_tsb__RemoveCertPathValidationPolicyAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveCertPathValidationPolicyAssignment";
	soap_tmp___onvifAdvancedSecurity_tsb__RemoveCertPathValidationPolicyAssignment.onvifAdvancedSecurity__RemoveCertPathValidationPolicyAssignment = onvifAdvancedSecurity__RemoveCertPathValidationPolicyAssignment;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifAdvancedSecurity_tsb__RemoveCertPathValidationPolicyAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__RemoveCertPathValidationPolicyAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifAdvancedSecurity_tsb__RemoveCertPathValidationPolicyAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__RemoveCertPathValidationPolicyAssignment, "-onvifAdvancedSecurity-tsb:RemoveCertPathValidationPolicyAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifAdvancedSecurity_tsb__RemoveCertPathValidationPolicyAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__RemoveCertPathValidationPolicyAssignment, "-onvifAdvancedSecurity-tsb:RemoveCertPathValidationPolicyAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifAdvancedSecurity__RemoveCertPathValidationPolicyAssignmentResponse*>(&onvifAdvancedSecurity__RemoveCertPathValidationPolicyAssignmentResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifAdvancedSecurity__RemoveCertPathValidationPolicyAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifAdvancedSecurity__RemoveCertPathValidationPolicyAssignmentResponse.soap_get(soap, "onvifAdvancedSecurity:RemoveCertPathValidationPolicyAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TLSServerBindingProxy::ReplaceCertPathValidationPolicyAssignment(const char *endpoint, const char *soap_action, _onvifAdvancedSecurity__ReplaceCertPathValidationPolicyAssignment *onvifAdvancedSecurity__ReplaceCertPathValidationPolicyAssignment, _onvifAdvancedSecurity__ReplaceCertPathValidationPolicyAssignmentResponse &onvifAdvancedSecurity__ReplaceCertPathValidationPolicyAssignmentResponse)
{
	struct __onvifAdvancedSecurity_tsb__ReplaceCertPathValidationPolicyAssignment soap_tmp___onvifAdvancedSecurity_tsb__ReplaceCertPathValidationPolicyAssignment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceCertPathValidationPolicyAssignment";
	soap_tmp___onvifAdvancedSecurity_tsb__ReplaceCertPathValidationPolicyAssignment.onvifAdvancedSecurity__ReplaceCertPathValidationPolicyAssignment = onvifAdvancedSecurity__ReplaceCertPathValidationPolicyAssignment;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifAdvancedSecurity_tsb__ReplaceCertPathValidationPolicyAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__ReplaceCertPathValidationPolicyAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifAdvancedSecurity_tsb__ReplaceCertPathValidationPolicyAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__ReplaceCertPathValidationPolicyAssignment, "-onvifAdvancedSecurity-tsb:ReplaceCertPathValidationPolicyAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifAdvancedSecurity_tsb__ReplaceCertPathValidationPolicyAssignment(soap, &soap_tmp___onvifAdvancedSecurity_tsb__ReplaceCertPathValidationPolicyAssignment, "-onvifAdvancedSecurity-tsb:ReplaceCertPathValidationPolicyAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifAdvancedSecurity__ReplaceCertPathValidationPolicyAssignmentResponse*>(&onvifAdvancedSecurity__ReplaceCertPathValidationPolicyAssignmentResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifAdvancedSecurity__ReplaceCertPathValidationPolicyAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifAdvancedSecurity__ReplaceCertPathValidationPolicyAssignmentResponse.soap_get(soap, "onvifAdvancedSecurity:ReplaceCertPathValidationPolicyAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int TLSServerBindingProxy::GetAssignedCertPathValidationPolicies(const char *endpoint, const char *soap_action, _onvifAdvancedSecurity__GetAssignedCertPathValidationPolicies *onvifAdvancedSecurity__GetAssignedCertPathValidationPolicies, _onvifAdvancedSecurity__GetAssignedCertPathValidationPoliciesResponse &onvifAdvancedSecurity__GetAssignedCertPathValidationPoliciesResponse)
{
	struct __onvifAdvancedSecurity_tsb__GetAssignedCertPathValidationPolicies soap_tmp___onvifAdvancedSecurity_tsb__GetAssignedCertPathValidationPolicies;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedCertPathValidationPolicies";
	soap_tmp___onvifAdvancedSecurity_tsb__GetAssignedCertPathValidationPolicies.onvifAdvancedSecurity__GetAssignedCertPathValidationPolicies = onvifAdvancedSecurity__GetAssignedCertPathValidationPolicies;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___onvifAdvancedSecurity_tsb__GetAssignedCertPathValidationPolicies(soap, &soap_tmp___onvifAdvancedSecurity_tsb__GetAssignedCertPathValidationPolicies);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___onvifAdvancedSecurity_tsb__GetAssignedCertPathValidationPolicies(soap, &soap_tmp___onvifAdvancedSecurity_tsb__GetAssignedCertPathValidationPolicies, "-onvifAdvancedSecurity-tsb:GetAssignedCertPathValidationPolicies", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___onvifAdvancedSecurity_tsb__GetAssignedCertPathValidationPolicies(soap, &soap_tmp___onvifAdvancedSecurity_tsb__GetAssignedCertPathValidationPolicies, "-onvifAdvancedSecurity-tsb:GetAssignedCertPathValidationPolicies", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<_onvifAdvancedSecurity__GetAssignedCertPathValidationPoliciesResponse*>(&onvifAdvancedSecurity__GetAssignedCertPathValidationPoliciesResponse)) // NULL ref?
		return soap_closesock(soap);
	onvifAdvancedSecurity__GetAssignedCertPathValidationPoliciesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	onvifAdvancedSecurity__GetAssignedCertPathValidationPoliciesResponse.soap_get(soap, "onvifAdvancedSecurity:GetAssignedCertPathValidationPoliciesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
