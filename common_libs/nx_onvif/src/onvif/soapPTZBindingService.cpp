/* soapPTZBindingService.cpp
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapPTZBindingService.h"

PTZBindingService::PTZBindingService()
{	this->soap = soap_new();
	this->soap_own = true;
	PTZBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

PTZBindingService::PTZBindingService(const PTZBindingService& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
}

PTZBindingService::PTZBindingService(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	PTZBindingService_init(_soap->imode, _soap->omode);
}

PTZBindingService::PTZBindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	PTZBindingService_init(iomode, iomode);
}

PTZBindingService::PTZBindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	PTZBindingService_init(imode, omode);
}

PTZBindingService::~PTZBindingService()
{	if (this->soap_own)
		soap_free(this->soap);
}

void PTZBindingService::PTZBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"onvifPacs", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"onvifAccessControl", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"onvifAccessRules", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"onvifActionEngine", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"onvifAdvancedSecurity-assb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
        {"onvifAdvancedSecurity-db", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
        {"onvifAdvancedSecurity-kb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
        {"onvifAdvancedSecurity-tsb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
        {"onvifAdvancedSecurity", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"onvifAnalytics-aeb", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
        {"onvifAnalytics-reb", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
        {"onvifAnalytics", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"onvifAnalyticsDevice", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"onvifCredential", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"onvifDisplay", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"onvifDoorControl", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"onvifEvents-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
        {"onvifEvents-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
        {"onvifEvents-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
        {"onvifEvents-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
        {"onvifEvents-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
        {"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"onvifEvents-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
        {"onvifEvents-psmb", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
        {"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"onvifEvents-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
        {"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"onvifMedia2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"onvifNetwork-dlb", "http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding", NULL, NULL},
        {"onvifNetwork-rdb", "http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding", NULL, NULL},
        {"onvifNetwork", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"onvifProvisioning", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"onvifReceiver", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"onvifRecording", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"onvifReplay", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"onvifScedule", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"onvifSearch", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {"onvifThermal", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

void PTZBindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void PTZBindingService::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	PTZBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
PTZBindingService *PTZBindingService::copy()
{	PTZBindingService *dup = SOAP_NEW_UNMANAGED(PTZBindingService);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}
#endif

PTZBindingService& PTZBindingService::operator=(const PTZBindingService& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
	}
	return *this;
}

int PTZBindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int PTZBindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int PTZBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int PTZBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int PTZBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int PTZBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void PTZBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void PTZBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *PTZBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void PTZBindingService::soap_noheader()
{	this->soap->header = NULL;
}

void PTZBindingService::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *subscriptionID)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->subscriptionID = subscriptionID;
}

::SOAP_ENV__Header *PTZBindingService::soap_header()
{	return this->soap->header;
}

#ifndef WITH_NOIO
int PTZBindingService::run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int PTZBindingService::ssl_run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}
#endif

SOAP_SOCKET PTZBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET PTZBindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int PTZBindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif
#endif

int PTZBindingService::serve()
{
#ifndef WITH_FASTCGI
	this->soap->keep_alive = this->soap->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (this->soap->keep_alive > 0 && this->soap->max_keep_alive > 0)
			this->soap->keep_alive--;
#endif
		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if ((dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap))) && this->soap->error && this->soap->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___onvifPtz__GetServiceCapabilities(struct soap*, PTZBindingService*);
static int serve___onvifPtz__GetConfigurations(struct soap*, PTZBindingService*);
static int serve___onvifPtz__GetPresets(struct soap*, PTZBindingService*);
static int serve___onvifPtz__SetPreset(struct soap*, PTZBindingService*);
static int serve___onvifPtz__RemovePreset(struct soap*, PTZBindingService*);
static int serve___onvifPtz__GotoPreset(struct soap*, PTZBindingService*);
static int serve___onvifPtz__GetStatus(struct soap*, PTZBindingService*);
static int serve___onvifPtz__GetConfiguration(struct soap*, PTZBindingService*);
static int serve___onvifPtz__GetNodes(struct soap*, PTZBindingService*);
static int serve___onvifPtz__GetNode(struct soap*, PTZBindingService*);
static int serve___onvifPtz__SetConfiguration(struct soap*, PTZBindingService*);
static int serve___onvifPtz__GetConfigurationOptions(struct soap*, PTZBindingService*);
static int serve___onvifPtz__GotoHomePosition(struct soap*, PTZBindingService*);
static int serve___onvifPtz__SetHomePosition(struct soap*, PTZBindingService*);
static int serve___onvifPtz__ContinuousMove(struct soap*, PTZBindingService*);
static int serve___onvifPtz__RelativeMove(struct soap*, PTZBindingService*);
static int serve___onvifPtz__SendAuxiliaryCommand(struct soap*, PTZBindingService*);
static int serve___onvifPtz__AbsoluteMove(struct soap*, PTZBindingService*);
static int serve___onvifPtz__GeoMove(struct soap*, PTZBindingService*);
static int serve___onvifPtz__Stop(struct soap*, PTZBindingService*);
static int serve___onvifPtz__GetPresetTours(struct soap*, PTZBindingService*);
static int serve___onvifPtz__GetPresetTour(struct soap*, PTZBindingService*);
static int serve___onvifPtz__GetPresetTourOptions(struct soap*, PTZBindingService*);
static int serve___onvifPtz__CreatePresetTour(struct soap*, PTZBindingService*);
static int serve___onvifPtz__ModifyPresetTour(struct soap*, PTZBindingService*);
static int serve___onvifPtz__OperatePresetTour(struct soap*, PTZBindingService*);
static int serve___onvifPtz__RemovePresetTour(struct soap*, PTZBindingService*);
static int serve___onvifPtz__GetCompatibleConfigurations(struct soap*, PTZBindingService*);

int PTZBindingService::dispatch()
{	return dispatch(this->soap);
}

int PTZBindingService::dispatch(struct soap* soap)
{
	PTZBindingService_init(soap->imode, soap->omode);

	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GetServiceCapabilities"))
		return serve___onvifPtz__GetServiceCapabilities(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GetConfigurations"))
		return serve___onvifPtz__GetConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GetPresets"))
		return serve___onvifPtz__GetPresets(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:SetPreset"))
		return serve___onvifPtz__SetPreset(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:RemovePreset"))
		return serve___onvifPtz__RemovePreset(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GotoPreset"))
		return serve___onvifPtz__GotoPreset(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GetStatus"))
		return serve___onvifPtz__GetStatus(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GetConfiguration"))
		return serve___onvifPtz__GetConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GetNodes"))
		return serve___onvifPtz__GetNodes(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GetNode"))
		return serve___onvifPtz__GetNode(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:SetConfiguration"))
		return serve___onvifPtz__SetConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GetConfigurationOptions"))
		return serve___onvifPtz__GetConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GotoHomePosition"))
		return serve___onvifPtz__GotoHomePosition(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:SetHomePosition"))
		return serve___onvifPtz__SetHomePosition(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:ContinuousMove"))
		return serve___onvifPtz__ContinuousMove(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:RelativeMove"))
		return serve___onvifPtz__RelativeMove(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:SendAuxiliaryCommand"))
		return serve___onvifPtz__SendAuxiliaryCommand(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:AbsoluteMove"))
		return serve___onvifPtz__AbsoluteMove(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GeoMove"))
		return serve___onvifPtz__GeoMove(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:Stop"))
		return serve___onvifPtz__Stop(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GetPresetTours"))
		return serve___onvifPtz__GetPresetTours(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GetPresetTour"))
		return serve___onvifPtz__GetPresetTour(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GetPresetTourOptions"))
		return serve___onvifPtz__GetPresetTourOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:CreatePresetTour"))
		return serve___onvifPtz__CreatePresetTour(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:ModifyPresetTour"))
		return serve___onvifPtz__ModifyPresetTour(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:OperatePresetTour"))
		return serve___onvifPtz__OperatePresetTour(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:RemovePresetTour"))
		return serve___onvifPtz__RemovePresetTour(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifPtz:GetCompatibleConfigurations"))
		return serve___onvifPtz__GetCompatibleConfigurations(soap, this);
	return soap->error = SOAP_NO_METHOD;
}

static int serve___onvifPtz__GetServiceCapabilities(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GetServiceCapabilities soap_tmp___onvifPtz__GetServiceCapabilities;
	_onvifPtz__GetServiceCapabilitiesResponse onvifPtz__GetServiceCapabilitiesResponse;
	onvifPtz__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___onvifPtz__GetServiceCapabilities(soap, &soap_tmp___onvifPtz__GetServiceCapabilities);
	if (!soap_get___onvifPtz__GetServiceCapabilities(soap, &soap_tmp___onvifPtz__GetServiceCapabilities, "-onvifPtz:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetServiceCapabilities(soap_tmp___onvifPtz__GetServiceCapabilities.onvifPtz__GetServiceCapabilities, onvifPtz__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GetServiceCapabilitiesResponse.soap_put(soap, "onvifPtz:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GetServiceCapabilitiesResponse.soap_put(soap, "onvifPtz:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__GetConfigurations(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GetConfigurations soap_tmp___onvifPtz__GetConfigurations;
	_onvifPtz__GetConfigurationsResponse onvifPtz__GetConfigurationsResponse;
	onvifPtz__GetConfigurationsResponse.soap_default(soap);
	soap_default___onvifPtz__GetConfigurations(soap, &soap_tmp___onvifPtz__GetConfigurations);
	if (!soap_get___onvifPtz__GetConfigurations(soap, &soap_tmp___onvifPtz__GetConfigurations, "-onvifPtz:GetConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetConfigurations(soap_tmp___onvifPtz__GetConfigurations.onvifPtz__GetConfigurations, onvifPtz__GetConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GetConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GetConfigurationsResponse.soap_put(soap, "onvifPtz:GetConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GetConfigurationsResponse.soap_put(soap, "onvifPtz:GetConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__GetPresets(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GetPresets soap_tmp___onvifPtz__GetPresets;
	_onvifPtz__GetPresetsResponse onvifPtz__GetPresetsResponse;
	onvifPtz__GetPresetsResponse.soap_default(soap);
	soap_default___onvifPtz__GetPresets(soap, &soap_tmp___onvifPtz__GetPresets);
	if (!soap_get___onvifPtz__GetPresets(soap, &soap_tmp___onvifPtz__GetPresets, "-onvifPtz:GetPresets", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetPresets(soap_tmp___onvifPtz__GetPresets.onvifPtz__GetPresets, onvifPtz__GetPresetsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GetPresetsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GetPresetsResponse.soap_put(soap, "onvifPtz:GetPresetsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GetPresetsResponse.soap_put(soap, "onvifPtz:GetPresetsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__SetPreset(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__SetPreset soap_tmp___onvifPtz__SetPreset;
	_onvifPtz__SetPresetResponse onvifPtz__SetPresetResponse;
	onvifPtz__SetPresetResponse.soap_default(soap);
	soap_default___onvifPtz__SetPreset(soap, &soap_tmp___onvifPtz__SetPreset);
	if (!soap_get___onvifPtz__SetPreset(soap, &soap_tmp___onvifPtz__SetPreset, "-onvifPtz:SetPreset", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetPreset(soap_tmp___onvifPtz__SetPreset.onvifPtz__SetPreset, onvifPtz__SetPresetResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__SetPresetResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__SetPresetResponse.soap_put(soap, "onvifPtz:SetPresetResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__SetPresetResponse.soap_put(soap, "onvifPtz:SetPresetResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__RemovePreset(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__RemovePreset soap_tmp___onvifPtz__RemovePreset;
	_onvifPtz__RemovePresetResponse onvifPtz__RemovePresetResponse;
	onvifPtz__RemovePresetResponse.soap_default(soap);
	soap_default___onvifPtz__RemovePreset(soap, &soap_tmp___onvifPtz__RemovePreset);
	if (!soap_get___onvifPtz__RemovePreset(soap, &soap_tmp___onvifPtz__RemovePreset, "-onvifPtz:RemovePreset", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemovePreset(soap_tmp___onvifPtz__RemovePreset.onvifPtz__RemovePreset, onvifPtz__RemovePresetResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__RemovePresetResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__RemovePresetResponse.soap_put(soap, "onvifPtz:RemovePresetResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__RemovePresetResponse.soap_put(soap, "onvifPtz:RemovePresetResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__GotoPreset(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GotoPreset soap_tmp___onvifPtz__GotoPreset;
	_onvifPtz__GotoPresetResponse onvifPtz__GotoPresetResponse;
	onvifPtz__GotoPresetResponse.soap_default(soap);
	soap_default___onvifPtz__GotoPreset(soap, &soap_tmp___onvifPtz__GotoPreset);
	if (!soap_get___onvifPtz__GotoPreset(soap, &soap_tmp___onvifPtz__GotoPreset, "-onvifPtz:GotoPreset", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GotoPreset(soap_tmp___onvifPtz__GotoPreset.onvifPtz__GotoPreset, onvifPtz__GotoPresetResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GotoPresetResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GotoPresetResponse.soap_put(soap, "onvifPtz:GotoPresetResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GotoPresetResponse.soap_put(soap, "onvifPtz:GotoPresetResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__GetStatus(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GetStatus soap_tmp___onvifPtz__GetStatus;
	_onvifPtz__GetStatusResponse onvifPtz__GetStatusResponse;
	onvifPtz__GetStatusResponse.soap_default(soap);
	soap_default___onvifPtz__GetStatus(soap, &soap_tmp___onvifPtz__GetStatus);
	if (!soap_get___onvifPtz__GetStatus(soap, &soap_tmp___onvifPtz__GetStatus, "-onvifPtz:GetStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetStatus(soap_tmp___onvifPtz__GetStatus.onvifPtz__GetStatus, onvifPtz__GetStatusResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GetStatusResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GetStatusResponse.soap_put(soap, "onvifPtz:GetStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GetStatusResponse.soap_put(soap, "onvifPtz:GetStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__GetConfiguration(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GetConfiguration soap_tmp___onvifPtz__GetConfiguration;
	_onvifPtz__GetConfigurationResponse onvifPtz__GetConfigurationResponse;
	onvifPtz__GetConfigurationResponse.soap_default(soap);
	soap_default___onvifPtz__GetConfiguration(soap, &soap_tmp___onvifPtz__GetConfiguration);
	if (!soap_get___onvifPtz__GetConfiguration(soap, &soap_tmp___onvifPtz__GetConfiguration, "-onvifPtz:GetConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetConfiguration(soap_tmp___onvifPtz__GetConfiguration.onvifPtz__GetConfiguration, onvifPtz__GetConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GetConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GetConfigurationResponse.soap_put(soap, "onvifPtz:GetConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GetConfigurationResponse.soap_put(soap, "onvifPtz:GetConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__GetNodes(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GetNodes soap_tmp___onvifPtz__GetNodes;
	_onvifPtz__GetNodesResponse onvifPtz__GetNodesResponse;
	onvifPtz__GetNodesResponse.soap_default(soap);
	soap_default___onvifPtz__GetNodes(soap, &soap_tmp___onvifPtz__GetNodes);
	if (!soap_get___onvifPtz__GetNodes(soap, &soap_tmp___onvifPtz__GetNodes, "-onvifPtz:GetNodes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetNodes(soap_tmp___onvifPtz__GetNodes.onvifPtz__GetNodes, onvifPtz__GetNodesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GetNodesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GetNodesResponse.soap_put(soap, "onvifPtz:GetNodesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GetNodesResponse.soap_put(soap, "onvifPtz:GetNodesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__GetNode(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GetNode soap_tmp___onvifPtz__GetNode;
	_onvifPtz__GetNodeResponse onvifPtz__GetNodeResponse;
	onvifPtz__GetNodeResponse.soap_default(soap);
	soap_default___onvifPtz__GetNode(soap, &soap_tmp___onvifPtz__GetNode);
	if (!soap_get___onvifPtz__GetNode(soap, &soap_tmp___onvifPtz__GetNode, "-onvifPtz:GetNode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetNode(soap_tmp___onvifPtz__GetNode.onvifPtz__GetNode, onvifPtz__GetNodeResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GetNodeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GetNodeResponse.soap_put(soap, "onvifPtz:GetNodeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GetNodeResponse.soap_put(soap, "onvifPtz:GetNodeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__SetConfiguration(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__SetConfiguration soap_tmp___onvifPtz__SetConfiguration;
	_onvifPtz__SetConfigurationResponse onvifPtz__SetConfigurationResponse;
	onvifPtz__SetConfigurationResponse.soap_default(soap);
	soap_default___onvifPtz__SetConfiguration(soap, &soap_tmp___onvifPtz__SetConfiguration);
	if (!soap_get___onvifPtz__SetConfiguration(soap, &soap_tmp___onvifPtz__SetConfiguration, "-onvifPtz:SetConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetConfiguration(soap_tmp___onvifPtz__SetConfiguration.onvifPtz__SetConfiguration, onvifPtz__SetConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__SetConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__SetConfigurationResponse.soap_put(soap, "onvifPtz:SetConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__SetConfigurationResponse.soap_put(soap, "onvifPtz:SetConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__GetConfigurationOptions(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GetConfigurationOptions soap_tmp___onvifPtz__GetConfigurationOptions;
	_onvifPtz__GetConfigurationOptionsResponse onvifPtz__GetConfigurationOptionsResponse;
	onvifPtz__GetConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifPtz__GetConfigurationOptions(soap, &soap_tmp___onvifPtz__GetConfigurationOptions);
	if (!soap_get___onvifPtz__GetConfigurationOptions(soap, &soap_tmp___onvifPtz__GetConfigurationOptions, "-onvifPtz:GetConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetConfigurationOptions(soap_tmp___onvifPtz__GetConfigurationOptions.onvifPtz__GetConfigurationOptions, onvifPtz__GetConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GetConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GetConfigurationOptionsResponse.soap_put(soap, "onvifPtz:GetConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GetConfigurationOptionsResponse.soap_put(soap, "onvifPtz:GetConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__GotoHomePosition(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GotoHomePosition soap_tmp___onvifPtz__GotoHomePosition;
	_onvifPtz__GotoHomePositionResponse onvifPtz__GotoHomePositionResponse;
	onvifPtz__GotoHomePositionResponse.soap_default(soap);
	soap_default___onvifPtz__GotoHomePosition(soap, &soap_tmp___onvifPtz__GotoHomePosition);
	if (!soap_get___onvifPtz__GotoHomePosition(soap, &soap_tmp___onvifPtz__GotoHomePosition, "-onvifPtz:GotoHomePosition", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GotoHomePosition(soap_tmp___onvifPtz__GotoHomePosition.onvifPtz__GotoHomePosition, onvifPtz__GotoHomePositionResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GotoHomePositionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GotoHomePositionResponse.soap_put(soap, "onvifPtz:GotoHomePositionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GotoHomePositionResponse.soap_put(soap, "onvifPtz:GotoHomePositionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__SetHomePosition(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__SetHomePosition soap_tmp___onvifPtz__SetHomePosition;
	_onvifPtz__SetHomePositionResponse onvifPtz__SetHomePositionResponse;
	onvifPtz__SetHomePositionResponse.soap_default(soap);
	soap_default___onvifPtz__SetHomePosition(soap, &soap_tmp___onvifPtz__SetHomePosition);
	if (!soap_get___onvifPtz__SetHomePosition(soap, &soap_tmp___onvifPtz__SetHomePosition, "-onvifPtz:SetHomePosition", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetHomePosition(soap_tmp___onvifPtz__SetHomePosition.onvifPtz__SetHomePosition, onvifPtz__SetHomePositionResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__SetHomePositionResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__SetHomePositionResponse.soap_put(soap, "onvifPtz:SetHomePositionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__SetHomePositionResponse.soap_put(soap, "onvifPtz:SetHomePositionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__ContinuousMove(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__ContinuousMove soap_tmp___onvifPtz__ContinuousMove;
	_onvifPtz__ContinuousMoveResponse onvifPtz__ContinuousMoveResponse;
	onvifPtz__ContinuousMoveResponse.soap_default(soap);
	soap_default___onvifPtz__ContinuousMove(soap, &soap_tmp___onvifPtz__ContinuousMove);
	if (!soap_get___onvifPtz__ContinuousMove(soap, &soap_tmp___onvifPtz__ContinuousMove, "-onvifPtz:ContinuousMove", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->ContinuousMove(soap_tmp___onvifPtz__ContinuousMove.onvifPtz__ContinuousMove, onvifPtz__ContinuousMoveResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__ContinuousMoveResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__ContinuousMoveResponse.soap_put(soap, "onvifPtz:ContinuousMoveResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__ContinuousMoveResponse.soap_put(soap, "onvifPtz:ContinuousMoveResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__RelativeMove(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__RelativeMove soap_tmp___onvifPtz__RelativeMove;
	_onvifPtz__RelativeMoveResponse onvifPtz__RelativeMoveResponse;
	onvifPtz__RelativeMoveResponse.soap_default(soap);
	soap_default___onvifPtz__RelativeMove(soap, &soap_tmp___onvifPtz__RelativeMove);
	if (!soap_get___onvifPtz__RelativeMove(soap, &soap_tmp___onvifPtz__RelativeMove, "-onvifPtz:RelativeMove", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RelativeMove(soap_tmp___onvifPtz__RelativeMove.onvifPtz__RelativeMove, onvifPtz__RelativeMoveResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__RelativeMoveResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__RelativeMoveResponse.soap_put(soap, "onvifPtz:RelativeMoveResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__RelativeMoveResponse.soap_put(soap, "onvifPtz:RelativeMoveResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__SendAuxiliaryCommand(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__SendAuxiliaryCommand soap_tmp___onvifPtz__SendAuxiliaryCommand;
	_onvifPtz__SendAuxiliaryCommandResponse onvifPtz__SendAuxiliaryCommandResponse;
	onvifPtz__SendAuxiliaryCommandResponse.soap_default(soap);
	soap_default___onvifPtz__SendAuxiliaryCommand(soap, &soap_tmp___onvifPtz__SendAuxiliaryCommand);
	if (!soap_get___onvifPtz__SendAuxiliaryCommand(soap, &soap_tmp___onvifPtz__SendAuxiliaryCommand, "-onvifPtz:SendAuxiliaryCommand", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SendAuxiliaryCommand(soap_tmp___onvifPtz__SendAuxiliaryCommand.onvifPtz__SendAuxiliaryCommand, onvifPtz__SendAuxiliaryCommandResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__SendAuxiliaryCommandResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__SendAuxiliaryCommandResponse.soap_put(soap, "onvifPtz:SendAuxiliaryCommandResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__SendAuxiliaryCommandResponse.soap_put(soap, "onvifPtz:SendAuxiliaryCommandResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__AbsoluteMove(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__AbsoluteMove soap_tmp___onvifPtz__AbsoluteMove;
	_onvifPtz__AbsoluteMoveResponse onvifPtz__AbsoluteMoveResponse;
	onvifPtz__AbsoluteMoveResponse.soap_default(soap);
	soap_default___onvifPtz__AbsoluteMove(soap, &soap_tmp___onvifPtz__AbsoluteMove);
	if (!soap_get___onvifPtz__AbsoluteMove(soap, &soap_tmp___onvifPtz__AbsoluteMove, "-onvifPtz:AbsoluteMove", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AbsoluteMove(soap_tmp___onvifPtz__AbsoluteMove.onvifPtz__AbsoluteMove, onvifPtz__AbsoluteMoveResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__AbsoluteMoveResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__AbsoluteMoveResponse.soap_put(soap, "onvifPtz:AbsoluteMoveResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__AbsoluteMoveResponse.soap_put(soap, "onvifPtz:AbsoluteMoveResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__GeoMove(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GeoMove soap_tmp___onvifPtz__GeoMove;
	_onvifPtz__GeoMoveResponse onvifPtz__GeoMoveResponse;
	onvifPtz__GeoMoveResponse.soap_default(soap);
	soap_default___onvifPtz__GeoMove(soap, &soap_tmp___onvifPtz__GeoMove);
	if (!soap_get___onvifPtz__GeoMove(soap, &soap_tmp___onvifPtz__GeoMove, "-onvifPtz:GeoMove", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GeoMove(soap_tmp___onvifPtz__GeoMove.onvifPtz__GeoMove, onvifPtz__GeoMoveResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GeoMoveResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GeoMoveResponse.soap_put(soap, "onvifPtz:GeoMoveResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GeoMoveResponse.soap_put(soap, "onvifPtz:GeoMoveResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__Stop(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__Stop soap_tmp___onvifPtz__Stop;
	_onvifPtz__StopResponse onvifPtz__StopResponse;
	onvifPtz__StopResponse.soap_default(soap);
	soap_default___onvifPtz__Stop(soap, &soap_tmp___onvifPtz__Stop);
	if (!soap_get___onvifPtz__Stop(soap, &soap_tmp___onvifPtz__Stop, "-onvifPtz:Stop", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->Stop(soap_tmp___onvifPtz__Stop.onvifPtz__Stop, onvifPtz__StopResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__StopResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__StopResponse.soap_put(soap, "onvifPtz:StopResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__StopResponse.soap_put(soap, "onvifPtz:StopResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__GetPresetTours(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GetPresetTours soap_tmp___onvifPtz__GetPresetTours;
	_onvifPtz__GetPresetToursResponse onvifPtz__GetPresetToursResponse;
	onvifPtz__GetPresetToursResponse.soap_default(soap);
	soap_default___onvifPtz__GetPresetTours(soap, &soap_tmp___onvifPtz__GetPresetTours);
	if (!soap_get___onvifPtz__GetPresetTours(soap, &soap_tmp___onvifPtz__GetPresetTours, "-onvifPtz:GetPresetTours", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetPresetTours(soap_tmp___onvifPtz__GetPresetTours.onvifPtz__GetPresetTours, onvifPtz__GetPresetToursResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GetPresetToursResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GetPresetToursResponse.soap_put(soap, "onvifPtz:GetPresetToursResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GetPresetToursResponse.soap_put(soap, "onvifPtz:GetPresetToursResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__GetPresetTour(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GetPresetTour soap_tmp___onvifPtz__GetPresetTour;
	_onvifPtz__GetPresetTourResponse onvifPtz__GetPresetTourResponse;
	onvifPtz__GetPresetTourResponse.soap_default(soap);
	soap_default___onvifPtz__GetPresetTour(soap, &soap_tmp___onvifPtz__GetPresetTour);
	if (!soap_get___onvifPtz__GetPresetTour(soap, &soap_tmp___onvifPtz__GetPresetTour, "-onvifPtz:GetPresetTour", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetPresetTour(soap_tmp___onvifPtz__GetPresetTour.onvifPtz__GetPresetTour, onvifPtz__GetPresetTourResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GetPresetTourResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GetPresetTourResponse.soap_put(soap, "onvifPtz:GetPresetTourResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GetPresetTourResponse.soap_put(soap, "onvifPtz:GetPresetTourResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__GetPresetTourOptions(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GetPresetTourOptions soap_tmp___onvifPtz__GetPresetTourOptions;
	_onvifPtz__GetPresetTourOptionsResponse onvifPtz__GetPresetTourOptionsResponse;
	onvifPtz__GetPresetTourOptionsResponse.soap_default(soap);
	soap_default___onvifPtz__GetPresetTourOptions(soap, &soap_tmp___onvifPtz__GetPresetTourOptions);
	if (!soap_get___onvifPtz__GetPresetTourOptions(soap, &soap_tmp___onvifPtz__GetPresetTourOptions, "-onvifPtz:GetPresetTourOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetPresetTourOptions(soap_tmp___onvifPtz__GetPresetTourOptions.onvifPtz__GetPresetTourOptions, onvifPtz__GetPresetTourOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GetPresetTourOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GetPresetTourOptionsResponse.soap_put(soap, "onvifPtz:GetPresetTourOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GetPresetTourOptionsResponse.soap_put(soap, "onvifPtz:GetPresetTourOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__CreatePresetTour(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__CreatePresetTour soap_tmp___onvifPtz__CreatePresetTour;
	_onvifPtz__CreatePresetTourResponse onvifPtz__CreatePresetTourResponse;
	onvifPtz__CreatePresetTourResponse.soap_default(soap);
	soap_default___onvifPtz__CreatePresetTour(soap, &soap_tmp___onvifPtz__CreatePresetTour);
	if (!soap_get___onvifPtz__CreatePresetTour(soap, &soap_tmp___onvifPtz__CreatePresetTour, "-onvifPtz:CreatePresetTour", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreatePresetTour(soap_tmp___onvifPtz__CreatePresetTour.onvifPtz__CreatePresetTour, onvifPtz__CreatePresetTourResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__CreatePresetTourResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__CreatePresetTourResponse.soap_put(soap, "onvifPtz:CreatePresetTourResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__CreatePresetTourResponse.soap_put(soap, "onvifPtz:CreatePresetTourResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__ModifyPresetTour(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__ModifyPresetTour soap_tmp___onvifPtz__ModifyPresetTour;
	_onvifPtz__ModifyPresetTourResponse onvifPtz__ModifyPresetTourResponse;
	onvifPtz__ModifyPresetTourResponse.soap_default(soap);
	soap_default___onvifPtz__ModifyPresetTour(soap, &soap_tmp___onvifPtz__ModifyPresetTour);
	if (!soap_get___onvifPtz__ModifyPresetTour(soap, &soap_tmp___onvifPtz__ModifyPresetTour, "-onvifPtz:ModifyPresetTour", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->ModifyPresetTour(soap_tmp___onvifPtz__ModifyPresetTour.onvifPtz__ModifyPresetTour, onvifPtz__ModifyPresetTourResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__ModifyPresetTourResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__ModifyPresetTourResponse.soap_put(soap, "onvifPtz:ModifyPresetTourResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__ModifyPresetTourResponse.soap_put(soap, "onvifPtz:ModifyPresetTourResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__OperatePresetTour(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__OperatePresetTour soap_tmp___onvifPtz__OperatePresetTour;
	_onvifPtz__OperatePresetTourResponse onvifPtz__OperatePresetTourResponse;
	onvifPtz__OperatePresetTourResponse.soap_default(soap);
	soap_default___onvifPtz__OperatePresetTour(soap, &soap_tmp___onvifPtz__OperatePresetTour);
	if (!soap_get___onvifPtz__OperatePresetTour(soap, &soap_tmp___onvifPtz__OperatePresetTour, "-onvifPtz:OperatePresetTour", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->OperatePresetTour(soap_tmp___onvifPtz__OperatePresetTour.onvifPtz__OperatePresetTour, onvifPtz__OperatePresetTourResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__OperatePresetTourResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__OperatePresetTourResponse.soap_put(soap, "onvifPtz:OperatePresetTourResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__OperatePresetTourResponse.soap_put(soap, "onvifPtz:OperatePresetTourResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__RemovePresetTour(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__RemovePresetTour soap_tmp___onvifPtz__RemovePresetTour;
	_onvifPtz__RemovePresetTourResponse onvifPtz__RemovePresetTourResponse;
	onvifPtz__RemovePresetTourResponse.soap_default(soap);
	soap_default___onvifPtz__RemovePresetTour(soap, &soap_tmp___onvifPtz__RemovePresetTour);
	if (!soap_get___onvifPtz__RemovePresetTour(soap, &soap_tmp___onvifPtz__RemovePresetTour, "-onvifPtz:RemovePresetTour", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemovePresetTour(soap_tmp___onvifPtz__RemovePresetTour.onvifPtz__RemovePresetTour, onvifPtz__RemovePresetTourResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__RemovePresetTourResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__RemovePresetTourResponse.soap_put(soap, "onvifPtz:RemovePresetTourResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__RemovePresetTourResponse.soap_put(soap, "onvifPtz:RemovePresetTourResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifPtz__GetCompatibleConfigurations(struct soap *soap, PTZBindingService *service)
{	struct __onvifPtz__GetCompatibleConfigurations soap_tmp___onvifPtz__GetCompatibleConfigurations;
	_onvifPtz__GetCompatibleConfigurationsResponse onvifPtz__GetCompatibleConfigurationsResponse;
	onvifPtz__GetCompatibleConfigurationsResponse.soap_default(soap);
	soap_default___onvifPtz__GetCompatibleConfigurations(soap, &soap_tmp___onvifPtz__GetCompatibleConfigurations);
	if (!soap_get___onvifPtz__GetCompatibleConfigurations(soap, &soap_tmp___onvifPtz__GetCompatibleConfigurations, "-onvifPtz:GetCompatibleConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetCompatibleConfigurations(soap_tmp___onvifPtz__GetCompatibleConfigurations.onvifPtz__GetCompatibleConfigurations, onvifPtz__GetCompatibleConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifPtz__GetCompatibleConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifPtz__GetCompatibleConfigurationsResponse.soap_put(soap, "onvifPtz:GetCompatibleConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifPtz__GetCompatibleConfigurationsResponse.soap_put(soap, "onvifPtz:GetCompatibleConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
