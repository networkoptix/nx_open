/* soapMedia2BindingService.cpp
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapMedia2BindingService.h"

Media2BindingService::Media2BindingService()
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

Media2BindingService::Media2BindingService(const Media2BindingService& rhs)
{	this->soap = rhs.soap;
	this->soap_own = false;
}

Media2BindingService::Media2BindingService(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	Media2BindingService_init(_soap->imode, _soap->omode);
}

Media2BindingService::Media2BindingService(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingService_init(iomode, iomode);
}

Media2BindingService::Media2BindingService(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	Media2BindingService_init(imode, omode);
}

Media2BindingService::~Media2BindingService()
{	if (this->soap_own)
		soap_free(this->soap);
}

void Media2BindingService::Media2BindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"onvifPacs", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"onvifAccessControl", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"onvifAccessRules", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"onvifActionEngine", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"onvifAdvancedSecurity-assb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
        {"onvifAdvancedSecurity-db", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
        {"onvifAdvancedSecurity-kb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
        {"onvifAdvancedSecurity-tsb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
        {"onvifAdvancedSecurity", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"onvifAnalytics-aeb", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
        {"onvifAnalytics-reb", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
        {"onvifAnalytics", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"onvifAnalyticsDevice", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"onvifCredential", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"onvifDisplay", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"onvifDoorControl", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"onvifEvents-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
        {"onvifEvents-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
        {"onvifEvents-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
        {"onvifEvents-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
        {"onvifEvents-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
        {"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"onvifEvents-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
        {"onvifEvents-psmb", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
        {"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"onvifEvents-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
        {"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"onvifMedia2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"onvifNetwork-dlb", "http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding", NULL, NULL},
        {"onvifNetwork-rdb", "http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding", NULL, NULL},
        {"onvifNetwork", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"onvifProvisioning", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"onvifReceiver", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"onvifRecording", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"onvifReplay", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"onvifScedule", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"onvifSearch", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {"onvifThermal", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this->soap, namespaces);
}

void Media2BindingService::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void Media2BindingService::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	Media2BindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
Media2BindingService *Media2BindingService::copy()
{	Media2BindingService *dup = SOAP_NEW_UNMANAGED(Media2BindingService);
	if (dup)
	{	soap_done(dup->soap);
		soap_copy_context(dup->soap, this->soap);
	}
	return dup;
}
#endif

Media2BindingService& Media2BindingService::operator=(const Media2BindingService& rhs)
{	if (this->soap != rhs.soap)
	{	if (this->soap_own)
			soap_free(this->soap);
		this->soap = rhs.soap;
		this->soap_own = false;
	}
	return *this;
}

int Media2BindingService::soap_close_socket()
{	return soap_closesock(this->soap);
}

int Media2BindingService::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

int Media2BindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this->soap, string, detailXML);
}

int Media2BindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int Media2BindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this->soap, string, detailXML);
}

int Media2BindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void Media2BindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void Media2BindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *Media2BindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void Media2BindingService::soap_noheader()
{	this->soap->header = NULL;
}

void Media2BindingService::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *subscriptionID)
{	::soap_header(this->soap);
	this->soap->header->wsa5__MessageID = wsa5__MessageID;
	this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
	this->soap->header->wsa5__From = wsa5__From;
	this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
	this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
	this->soap->header->wsa5__To = wsa5__To;
	this->soap->header->wsa5__Action = wsa5__Action;
	this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
	this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
	this->soap->header->wsse__Security = wsse__Security;
	this->soap->header->subscriptionID = subscriptionID;
}

::SOAP_ENV__Header *Media2BindingService::soap_header()
{	return this->soap->header;
}

#ifndef WITH_NOIO
int Media2BindingService::run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int Media2BindingService::ssl_run(int port)
{	if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
		return this->soap->error;
	for (;;)
	{	if (!soap_valid_socket(this->accept()))
		{	if (this->soap->errnum == 0) // timeout?
				this->soap->error = SOAP_OK;
			break;
		}
		if (this->ssl_accept() || this->serve())
			break;
		this->destroy();
	}
	return this->soap->error;
}
#endif

SOAP_SOCKET Media2BindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET Media2BindingService::accept()
{	return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int Media2BindingService::ssl_accept()
{	return soap_ssl_accept(this->soap);
}
#endif
#endif

int Media2BindingService::serve()
{
#ifndef WITH_FASTCGI
	this->soap->keep_alive = this->soap->max_keep_alive + 1;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (this->soap->keep_alive > 0 && this->soap->max_keep_alive > 0)
			this->soap->keep_alive--;
#endif
		if (soap_begin_serve(this->soap))
		{	if (this->soap->error >= SOAP_STOP)
				continue;
			return this->soap->error;
		}
		if ((dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap))) && this->soap->error && this->soap->error < SOAP_STOP)
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this->soap);
#else
			return soap_send_fault(this->soap);
#endif
		}
#ifdef WITH_FASTCGI
		soap_destroy(this->soap);
		soap_end(this->soap);
	} while (1);
#else
	} while (this->soap->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___onvifMedia2__GetServiceCapabilities(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__CreateProfile(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetProfiles(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__AddConfiguration(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__RemoveConfiguration(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__DeleteProfile(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetVideoSourceConfigurations(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetVideoEncoderConfigurations(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetAudioSourceConfigurations(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetAudioEncoderConfigurations(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetAnalyticsConfigurations(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetMetadataConfigurations(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetAudioOutputConfigurations(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetAudioDecoderConfigurations(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__SetVideoSourceConfiguration(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__SetVideoEncoderConfiguration(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__SetAudioSourceConfiguration(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__SetAudioEncoderConfiguration(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__SetMetadataConfiguration(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__SetAudioOutputConfiguration(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__SetAudioDecoderConfiguration(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetVideoSourceConfigurationOptions(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetVideoEncoderConfigurationOptions(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetAudioSourceConfigurationOptions(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetAudioEncoderConfigurationOptions(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetMetadataConfigurationOptions(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetAudioOutputConfigurationOptions(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetAudioDecoderConfigurationOptions(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetVideoEncoderInstances(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetStreamUri(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__StartMulticastStreaming(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__StopMulticastStreaming(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__SetSynchronizationPoint(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetSnapshotUri(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetVideoSourceModes(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__SetVideoSourceMode(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetOSDs(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetOSDOptions(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__SetOSD(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__CreateOSD(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__DeleteOSD(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetMasks(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__GetMaskOptions(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__SetMask(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__CreateMask(struct soap*, Media2BindingService*);
static int serve___onvifMedia2__DeleteMask(struct soap*, Media2BindingService*);

int Media2BindingService::dispatch()
{	return dispatch(this->soap);
}

int Media2BindingService::dispatch(struct soap* soap)
{
	Media2BindingService_init(soap->imode, soap->omode);

	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetServiceCapabilities"))
		return serve___onvifMedia2__GetServiceCapabilities(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:CreateProfile"))
		return serve___onvifMedia2__CreateProfile(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetProfiles"))
		return serve___onvifMedia2__GetProfiles(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:AddConfiguration"))
		return serve___onvifMedia2__AddConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:RemoveConfiguration"))
		return serve___onvifMedia2__RemoveConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:DeleteProfile"))
		return serve___onvifMedia2__DeleteProfile(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetVideoSourceConfigurations"))
		return serve___onvifMedia2__GetVideoSourceConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetVideoEncoderConfigurations"))
		return serve___onvifMedia2__GetVideoEncoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetAudioSourceConfigurations"))
		return serve___onvifMedia2__GetAudioSourceConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetAudioEncoderConfigurations"))
		return serve___onvifMedia2__GetAudioEncoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetAnalyticsConfigurations"))
		return serve___onvifMedia2__GetAnalyticsConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetMetadataConfigurations"))
		return serve___onvifMedia2__GetMetadataConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetAudioOutputConfigurations"))
		return serve___onvifMedia2__GetAudioOutputConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetAudioDecoderConfigurations"))
		return serve___onvifMedia2__GetAudioDecoderConfigurations(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:SetVideoSourceConfiguration"))
		return serve___onvifMedia2__SetVideoSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:SetVideoEncoderConfiguration"))
		return serve___onvifMedia2__SetVideoEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:SetAudioSourceConfiguration"))
		return serve___onvifMedia2__SetAudioSourceConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:SetAudioEncoderConfiguration"))
		return serve___onvifMedia2__SetAudioEncoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:SetMetadataConfiguration"))
		return serve___onvifMedia2__SetMetadataConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:SetAudioOutputConfiguration"))
		return serve___onvifMedia2__SetAudioOutputConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:SetAudioDecoderConfiguration"))
		return serve___onvifMedia2__SetAudioDecoderConfiguration(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetVideoSourceConfigurationOptions"))
		return serve___onvifMedia2__GetVideoSourceConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetVideoEncoderConfigurationOptions"))
		return serve___onvifMedia2__GetVideoEncoderConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetAudioSourceConfigurationOptions"))
		return serve___onvifMedia2__GetAudioSourceConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetAudioEncoderConfigurationOptions"))
		return serve___onvifMedia2__GetAudioEncoderConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetMetadataConfigurationOptions"))
		return serve___onvifMedia2__GetMetadataConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetAudioOutputConfigurationOptions"))
		return serve___onvifMedia2__GetAudioOutputConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetAudioDecoderConfigurationOptions"))
		return serve___onvifMedia2__GetAudioDecoderConfigurationOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetVideoEncoderInstances"))
		return serve___onvifMedia2__GetVideoEncoderInstances(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetStreamUri"))
		return serve___onvifMedia2__GetStreamUri(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:StartMulticastStreaming"))
		return serve___onvifMedia2__StartMulticastStreaming(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:StopMulticastStreaming"))
		return serve___onvifMedia2__StopMulticastStreaming(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:SetSynchronizationPoint"))
		return serve___onvifMedia2__SetSynchronizationPoint(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetSnapshotUri"))
		return serve___onvifMedia2__GetSnapshotUri(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetVideoSourceModes"))
		return serve___onvifMedia2__GetVideoSourceModes(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:SetVideoSourceMode"))
		return serve___onvifMedia2__SetVideoSourceMode(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetOSDs"))
		return serve___onvifMedia2__GetOSDs(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetOSDOptions"))
		return serve___onvifMedia2__GetOSDOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:SetOSD"))
		return serve___onvifMedia2__SetOSD(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:CreateOSD"))
		return serve___onvifMedia2__CreateOSD(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:DeleteOSD"))
		return serve___onvifMedia2__DeleteOSD(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetMasks"))
		return serve___onvifMedia2__GetMasks(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:GetMaskOptions"))
		return serve___onvifMedia2__GetMaskOptions(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:SetMask"))
		return serve___onvifMedia2__SetMask(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:CreateMask"))
		return serve___onvifMedia2__CreateMask(soap, this);
	if (!soap_match_tag(soap, soap->tag, "onvifMedia2:DeleteMask"))
		return serve___onvifMedia2__DeleteMask(soap, this);
	return soap->error = SOAP_NO_METHOD;
}

static int serve___onvifMedia2__GetServiceCapabilities(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetServiceCapabilities soap_tmp___onvifMedia2__GetServiceCapabilities;
	_onvifMedia2__GetServiceCapabilitiesResponse onvifMedia2__GetServiceCapabilitiesResponse;
	onvifMedia2__GetServiceCapabilitiesResponse.soap_default(soap);
	soap_default___onvifMedia2__GetServiceCapabilities(soap, &soap_tmp___onvifMedia2__GetServiceCapabilities);
	if (!soap_get___onvifMedia2__GetServiceCapabilities(soap, &soap_tmp___onvifMedia2__GetServiceCapabilities, "-onvifMedia2:GetServiceCapabilities", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetServiceCapabilities(soap_tmp___onvifMedia2__GetServiceCapabilities.onvifMedia2__GetServiceCapabilities, onvifMedia2__GetServiceCapabilitiesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetServiceCapabilitiesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetServiceCapabilitiesResponse.soap_put(soap, "onvifMedia2:GetServiceCapabilitiesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetServiceCapabilitiesResponse.soap_put(soap, "onvifMedia2:GetServiceCapabilitiesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__CreateProfile(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__CreateProfile soap_tmp___onvifMedia2__CreateProfile;
	_onvifMedia2__CreateProfileResponse onvifMedia2__CreateProfileResponse;
	onvifMedia2__CreateProfileResponse.soap_default(soap);
	soap_default___onvifMedia2__CreateProfile(soap, &soap_tmp___onvifMedia2__CreateProfile);
	if (!soap_get___onvifMedia2__CreateProfile(soap, &soap_tmp___onvifMedia2__CreateProfile, "-onvifMedia2:CreateProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateProfile(soap_tmp___onvifMedia2__CreateProfile.onvifMedia2__CreateProfile, onvifMedia2__CreateProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__CreateProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__CreateProfileResponse.soap_put(soap, "onvifMedia2:CreateProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__CreateProfileResponse.soap_put(soap, "onvifMedia2:CreateProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetProfiles(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetProfiles soap_tmp___onvifMedia2__GetProfiles;
	_onvifMedia2__GetProfilesResponse onvifMedia2__GetProfilesResponse;
	onvifMedia2__GetProfilesResponse.soap_default(soap);
	soap_default___onvifMedia2__GetProfiles(soap, &soap_tmp___onvifMedia2__GetProfiles);
	if (!soap_get___onvifMedia2__GetProfiles(soap, &soap_tmp___onvifMedia2__GetProfiles, "-onvifMedia2:GetProfiles", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetProfiles(soap_tmp___onvifMedia2__GetProfiles.onvifMedia2__GetProfiles, onvifMedia2__GetProfilesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetProfilesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetProfilesResponse.soap_put(soap, "onvifMedia2:GetProfilesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetProfilesResponse.soap_put(soap, "onvifMedia2:GetProfilesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__AddConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__AddConfiguration soap_tmp___onvifMedia2__AddConfiguration;
	_onvifMedia2__AddConfigurationResponse onvifMedia2__AddConfigurationResponse;
	onvifMedia2__AddConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia2__AddConfiguration(soap, &soap_tmp___onvifMedia2__AddConfiguration);
	if (!soap_get___onvifMedia2__AddConfiguration(soap, &soap_tmp___onvifMedia2__AddConfiguration, "-onvifMedia2:AddConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->AddConfiguration(soap_tmp___onvifMedia2__AddConfiguration.onvifMedia2__AddConfiguration, onvifMedia2__AddConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__AddConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__AddConfigurationResponse.soap_put(soap, "onvifMedia2:AddConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__AddConfigurationResponse.soap_put(soap, "onvifMedia2:AddConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__RemoveConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__RemoveConfiguration soap_tmp___onvifMedia2__RemoveConfiguration;
	_onvifMedia2__RemoveConfigurationResponse onvifMedia2__RemoveConfigurationResponse;
	onvifMedia2__RemoveConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia2__RemoveConfiguration(soap, &soap_tmp___onvifMedia2__RemoveConfiguration);
	if (!soap_get___onvifMedia2__RemoveConfiguration(soap, &soap_tmp___onvifMedia2__RemoveConfiguration, "-onvifMedia2:RemoveConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->RemoveConfiguration(soap_tmp___onvifMedia2__RemoveConfiguration.onvifMedia2__RemoveConfiguration, onvifMedia2__RemoveConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__RemoveConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__RemoveConfigurationResponse.soap_put(soap, "onvifMedia2:RemoveConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__RemoveConfigurationResponse.soap_put(soap, "onvifMedia2:RemoveConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__DeleteProfile(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__DeleteProfile soap_tmp___onvifMedia2__DeleteProfile;
	_onvifMedia2__DeleteProfileResponse onvifMedia2__DeleteProfileResponse;
	onvifMedia2__DeleteProfileResponse.soap_default(soap);
	soap_default___onvifMedia2__DeleteProfile(soap, &soap_tmp___onvifMedia2__DeleteProfile);
	if (!soap_get___onvifMedia2__DeleteProfile(soap, &soap_tmp___onvifMedia2__DeleteProfile, "-onvifMedia2:DeleteProfile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteProfile(soap_tmp___onvifMedia2__DeleteProfile.onvifMedia2__DeleteProfile, onvifMedia2__DeleteProfileResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__DeleteProfileResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__DeleteProfileResponse.soap_put(soap, "onvifMedia2:DeleteProfileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__DeleteProfileResponse.soap_put(soap, "onvifMedia2:DeleteProfileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetVideoSourceConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetVideoSourceConfigurations soap_tmp___onvifMedia2__GetVideoSourceConfigurations;
	_onvifMedia2__GetVideoSourceConfigurationsResponse onvifMedia2__GetVideoSourceConfigurationsResponse;
	onvifMedia2__GetVideoSourceConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetVideoSourceConfigurations(soap, &soap_tmp___onvifMedia2__GetVideoSourceConfigurations);
	if (!soap_get___onvifMedia2__GetVideoSourceConfigurations(soap, &soap_tmp___onvifMedia2__GetVideoSourceConfigurations, "-onvifMedia2:GetVideoSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfigurations(soap_tmp___onvifMedia2__GetVideoSourceConfigurations.onvifMedia2__GetVideoSourceConfigurations, onvifMedia2__GetVideoSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetVideoSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetVideoSourceConfigurationsResponse.soap_put(soap, "onvifMedia2:GetVideoSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetVideoSourceConfigurationsResponse.soap_put(soap, "onvifMedia2:GetVideoSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetVideoEncoderConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetVideoEncoderConfigurations soap_tmp___onvifMedia2__GetVideoEncoderConfigurations;
	_onvifMedia2__GetVideoEncoderConfigurationsResponse onvifMedia2__GetVideoEncoderConfigurationsResponse;
	onvifMedia2__GetVideoEncoderConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia2__GetVideoEncoderConfigurations);
	if (!soap_get___onvifMedia2__GetVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia2__GetVideoEncoderConfigurations, "-onvifMedia2:GetVideoEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderConfigurations(soap_tmp___onvifMedia2__GetVideoEncoderConfigurations.onvifMedia2__GetVideoEncoderConfigurations, onvifMedia2__GetVideoEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetVideoEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetVideoEncoderConfigurationsResponse.soap_put(soap, "onvifMedia2:GetVideoEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetVideoEncoderConfigurationsResponse.soap_put(soap, "onvifMedia2:GetVideoEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetAudioSourceConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetAudioSourceConfigurations soap_tmp___onvifMedia2__GetAudioSourceConfigurations;
	_onvifMedia2__GetAudioSourceConfigurationsResponse onvifMedia2__GetAudioSourceConfigurationsResponse;
	onvifMedia2__GetAudioSourceConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetAudioSourceConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioSourceConfigurations);
	if (!soap_get___onvifMedia2__GetAudioSourceConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioSourceConfigurations, "-onvifMedia2:GetAudioSourceConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfigurations(soap_tmp___onvifMedia2__GetAudioSourceConfigurations.onvifMedia2__GetAudioSourceConfigurations, onvifMedia2__GetAudioSourceConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetAudioSourceConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetAudioSourceConfigurationsResponse.soap_put(soap, "onvifMedia2:GetAudioSourceConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetAudioSourceConfigurationsResponse.soap_put(soap, "onvifMedia2:GetAudioSourceConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetAudioEncoderConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetAudioEncoderConfigurations soap_tmp___onvifMedia2__GetAudioEncoderConfigurations;
	_onvifMedia2__GetAudioEncoderConfigurationsResponse onvifMedia2__GetAudioEncoderConfigurationsResponse;
	onvifMedia2__GetAudioEncoderConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioEncoderConfigurations);
	if (!soap_get___onvifMedia2__GetAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioEncoderConfigurations, "-onvifMedia2:GetAudioEncoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioEncoderConfigurations(soap_tmp___onvifMedia2__GetAudioEncoderConfigurations.onvifMedia2__GetAudioEncoderConfigurations, onvifMedia2__GetAudioEncoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetAudioEncoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetAudioEncoderConfigurationsResponse.soap_put(soap, "onvifMedia2:GetAudioEncoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetAudioEncoderConfigurationsResponse.soap_put(soap, "onvifMedia2:GetAudioEncoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetAnalyticsConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetAnalyticsConfigurations soap_tmp___onvifMedia2__GetAnalyticsConfigurations;
	_onvifMedia2__GetAnalyticsConfigurationsResponse onvifMedia2__GetAnalyticsConfigurationsResponse;
	onvifMedia2__GetAnalyticsConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetAnalyticsConfigurations(soap, &soap_tmp___onvifMedia2__GetAnalyticsConfigurations);
	if (!soap_get___onvifMedia2__GetAnalyticsConfigurations(soap, &soap_tmp___onvifMedia2__GetAnalyticsConfigurations, "-onvifMedia2:GetAnalyticsConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAnalyticsConfigurations(soap_tmp___onvifMedia2__GetAnalyticsConfigurations.onvifMedia2__GetAnalyticsConfigurations, onvifMedia2__GetAnalyticsConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetAnalyticsConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetAnalyticsConfigurationsResponse.soap_put(soap, "onvifMedia2:GetAnalyticsConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetAnalyticsConfigurationsResponse.soap_put(soap, "onvifMedia2:GetAnalyticsConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetMetadataConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetMetadataConfigurations soap_tmp___onvifMedia2__GetMetadataConfigurations;
	_onvifMedia2__GetMetadataConfigurationsResponse onvifMedia2__GetMetadataConfigurationsResponse;
	onvifMedia2__GetMetadataConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetMetadataConfigurations(soap, &soap_tmp___onvifMedia2__GetMetadataConfigurations);
	if (!soap_get___onvifMedia2__GetMetadataConfigurations(soap, &soap_tmp___onvifMedia2__GetMetadataConfigurations, "-onvifMedia2:GetMetadataConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMetadataConfigurations(soap_tmp___onvifMedia2__GetMetadataConfigurations.onvifMedia2__GetMetadataConfigurations, onvifMedia2__GetMetadataConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetMetadataConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetMetadataConfigurationsResponse.soap_put(soap, "onvifMedia2:GetMetadataConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetMetadataConfigurationsResponse.soap_put(soap, "onvifMedia2:GetMetadataConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetAudioOutputConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetAudioOutputConfigurations soap_tmp___onvifMedia2__GetAudioOutputConfigurations;
	_onvifMedia2__GetAudioOutputConfigurationsResponse onvifMedia2__GetAudioOutputConfigurationsResponse;
	onvifMedia2__GetAudioOutputConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetAudioOutputConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioOutputConfigurations);
	if (!soap_get___onvifMedia2__GetAudioOutputConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioOutputConfigurations, "-onvifMedia2:GetAudioOutputConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfigurations(soap_tmp___onvifMedia2__GetAudioOutputConfigurations.onvifMedia2__GetAudioOutputConfigurations, onvifMedia2__GetAudioOutputConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetAudioOutputConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetAudioOutputConfigurationsResponse.soap_put(soap, "onvifMedia2:GetAudioOutputConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetAudioOutputConfigurationsResponse.soap_put(soap, "onvifMedia2:GetAudioOutputConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetAudioDecoderConfigurations(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetAudioDecoderConfigurations soap_tmp___onvifMedia2__GetAudioDecoderConfigurations;
	_onvifMedia2__GetAudioDecoderConfigurationsResponse onvifMedia2__GetAudioDecoderConfigurationsResponse;
	onvifMedia2__GetAudioDecoderConfigurationsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioDecoderConfigurations);
	if (!soap_get___onvifMedia2__GetAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia2__GetAudioDecoderConfigurations, "-onvifMedia2:GetAudioDecoderConfigurations", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioDecoderConfigurations(soap_tmp___onvifMedia2__GetAudioDecoderConfigurations.onvifMedia2__GetAudioDecoderConfigurations, onvifMedia2__GetAudioDecoderConfigurationsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetAudioDecoderConfigurationsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetAudioDecoderConfigurationsResponse.soap_put(soap, "onvifMedia2:GetAudioDecoderConfigurationsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetAudioDecoderConfigurationsResponse.soap_put(soap, "onvifMedia2:GetAudioDecoderConfigurationsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__SetVideoSourceConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__SetVideoSourceConfiguration soap_tmp___onvifMedia2__SetVideoSourceConfiguration;
	onvifMedia2__SetConfigurationResponse onvifMedia2__SetVideoSourceConfigurationResponse;
	onvifMedia2__SetVideoSourceConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia2__SetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia2__SetVideoSourceConfiguration);
	if (!soap_get___onvifMedia2__SetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia2__SetVideoSourceConfiguration, "-onvifMedia2:SetVideoSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoSourceConfiguration(soap_tmp___onvifMedia2__SetVideoSourceConfiguration.onvifMedia2__SetVideoSourceConfiguration, onvifMedia2__SetVideoSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__SetVideoSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__SetVideoSourceConfigurationResponse.soap_put(soap, "onvifMedia2:SetVideoSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__SetVideoSourceConfigurationResponse.soap_put(soap, "onvifMedia2:SetVideoSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__SetVideoEncoderConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__SetVideoEncoderConfiguration soap_tmp___onvifMedia2__SetVideoEncoderConfiguration;
	onvifMedia2__SetConfigurationResponse onvifMedia2__SetVideoEncoderConfigurationResponse;
	onvifMedia2__SetVideoEncoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia2__SetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia2__SetVideoEncoderConfiguration);
	if (!soap_get___onvifMedia2__SetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia2__SetVideoEncoderConfiguration, "-onvifMedia2:SetVideoEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoEncoderConfiguration(soap_tmp___onvifMedia2__SetVideoEncoderConfiguration.onvifMedia2__SetVideoEncoderConfiguration, onvifMedia2__SetVideoEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__SetVideoEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__SetVideoEncoderConfigurationResponse.soap_put(soap, "onvifMedia2:SetVideoEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__SetVideoEncoderConfigurationResponse.soap_put(soap, "onvifMedia2:SetVideoEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__SetAudioSourceConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__SetAudioSourceConfiguration soap_tmp___onvifMedia2__SetAudioSourceConfiguration;
	onvifMedia2__SetConfigurationResponse onvifMedia2__SetAudioSourceConfigurationResponse;
	onvifMedia2__SetAudioSourceConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia2__SetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioSourceConfiguration);
	if (!soap_get___onvifMedia2__SetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioSourceConfiguration, "-onvifMedia2:SetAudioSourceConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioSourceConfiguration(soap_tmp___onvifMedia2__SetAudioSourceConfiguration.onvifMedia2__SetAudioSourceConfiguration, onvifMedia2__SetAudioSourceConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__SetAudioSourceConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__SetAudioSourceConfigurationResponse.soap_put(soap, "onvifMedia2:SetAudioSourceConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__SetAudioSourceConfigurationResponse.soap_put(soap, "onvifMedia2:SetAudioSourceConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__SetAudioEncoderConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__SetAudioEncoderConfiguration soap_tmp___onvifMedia2__SetAudioEncoderConfiguration;
	onvifMedia2__SetConfigurationResponse onvifMedia2__SetAudioEncoderConfigurationResponse;
	onvifMedia2__SetAudioEncoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia2__SetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioEncoderConfiguration);
	if (!soap_get___onvifMedia2__SetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioEncoderConfiguration, "-onvifMedia2:SetAudioEncoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioEncoderConfiguration(soap_tmp___onvifMedia2__SetAudioEncoderConfiguration.onvifMedia2__SetAudioEncoderConfiguration, onvifMedia2__SetAudioEncoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__SetAudioEncoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__SetAudioEncoderConfigurationResponse.soap_put(soap, "onvifMedia2:SetAudioEncoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__SetAudioEncoderConfigurationResponse.soap_put(soap, "onvifMedia2:SetAudioEncoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__SetMetadataConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__SetMetadataConfiguration soap_tmp___onvifMedia2__SetMetadataConfiguration;
	onvifMedia2__SetConfigurationResponse onvifMedia2__SetMetadataConfigurationResponse;
	onvifMedia2__SetMetadataConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia2__SetMetadataConfiguration(soap, &soap_tmp___onvifMedia2__SetMetadataConfiguration);
	if (!soap_get___onvifMedia2__SetMetadataConfiguration(soap, &soap_tmp___onvifMedia2__SetMetadataConfiguration, "-onvifMedia2:SetMetadataConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetMetadataConfiguration(soap_tmp___onvifMedia2__SetMetadataConfiguration.onvifMedia2__SetMetadataConfiguration, onvifMedia2__SetMetadataConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__SetMetadataConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__SetMetadataConfigurationResponse.soap_put(soap, "onvifMedia2:SetMetadataConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__SetMetadataConfigurationResponse.soap_put(soap, "onvifMedia2:SetMetadataConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__SetAudioOutputConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__SetAudioOutputConfiguration soap_tmp___onvifMedia2__SetAudioOutputConfiguration;
	onvifMedia2__SetConfigurationResponse onvifMedia2__SetAudioOutputConfigurationResponse;
	onvifMedia2__SetAudioOutputConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia2__SetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioOutputConfiguration);
	if (!soap_get___onvifMedia2__SetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioOutputConfiguration, "-onvifMedia2:SetAudioOutputConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioOutputConfiguration(soap_tmp___onvifMedia2__SetAudioOutputConfiguration.onvifMedia2__SetAudioOutputConfiguration, onvifMedia2__SetAudioOutputConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__SetAudioOutputConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__SetAudioOutputConfigurationResponse.soap_put(soap, "onvifMedia2:SetAudioOutputConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__SetAudioOutputConfigurationResponse.soap_put(soap, "onvifMedia2:SetAudioOutputConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__SetAudioDecoderConfiguration(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__SetAudioDecoderConfiguration soap_tmp___onvifMedia2__SetAudioDecoderConfiguration;
	onvifMedia2__SetConfigurationResponse onvifMedia2__SetAudioDecoderConfigurationResponse;
	onvifMedia2__SetAudioDecoderConfigurationResponse.soap_default(soap);
	soap_default___onvifMedia2__SetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioDecoderConfiguration);
	if (!soap_get___onvifMedia2__SetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia2__SetAudioDecoderConfiguration, "-onvifMedia2:SetAudioDecoderConfiguration", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetAudioDecoderConfiguration(soap_tmp___onvifMedia2__SetAudioDecoderConfiguration.onvifMedia2__SetAudioDecoderConfiguration, onvifMedia2__SetAudioDecoderConfigurationResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__SetAudioDecoderConfigurationResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__SetAudioDecoderConfigurationResponse.soap_put(soap, "onvifMedia2:SetAudioDecoderConfigurationResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__SetAudioDecoderConfigurationResponse.soap_put(soap, "onvifMedia2:SetAudioDecoderConfigurationResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetVideoSourceConfigurationOptions(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetVideoSourceConfigurationOptions soap_tmp___onvifMedia2__GetVideoSourceConfigurationOptions;
	_onvifMedia2__GetVideoSourceConfigurationOptionsResponse onvifMedia2__GetVideoSourceConfigurationOptionsResponse;
	onvifMedia2__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetVideoSourceConfigurationOptions);
	if (!soap_get___onvifMedia2__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetVideoSourceConfigurationOptions, "-onvifMedia2:GetVideoSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceConfigurationOptions(soap_tmp___onvifMedia2__GetVideoSourceConfigurationOptions.onvifMedia2__GetVideoSourceConfigurationOptions, onvifMedia2__GetVideoSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetVideoSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "onvifMedia2:GetVideoSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetVideoSourceConfigurationOptionsResponse.soap_put(soap, "onvifMedia2:GetVideoSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetVideoEncoderConfigurationOptions(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetVideoEncoderConfigurationOptions soap_tmp___onvifMedia2__GetVideoEncoderConfigurationOptions;
	_onvifMedia2__GetVideoEncoderConfigurationOptionsResponse onvifMedia2__GetVideoEncoderConfigurationOptionsResponse;
	onvifMedia2__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetVideoEncoderConfigurationOptions);
	if (!soap_get___onvifMedia2__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetVideoEncoderConfigurationOptions, "-onvifMedia2:GetVideoEncoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderConfigurationOptions(soap_tmp___onvifMedia2__GetVideoEncoderConfigurationOptions.onvifMedia2__GetVideoEncoderConfigurationOptions, onvifMedia2__GetVideoEncoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetVideoEncoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetVideoEncoderConfigurationOptionsResponse.soap_put(soap, "onvifMedia2:GetVideoEncoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetVideoEncoderConfigurationOptionsResponse.soap_put(soap, "onvifMedia2:GetVideoEncoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetAudioSourceConfigurationOptions(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetAudioSourceConfigurationOptions soap_tmp___onvifMedia2__GetAudioSourceConfigurationOptions;
	_onvifMedia2__GetAudioSourceConfigurationOptionsResponse onvifMedia2__GetAudioSourceConfigurationOptionsResponse;
	onvifMedia2__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioSourceConfigurationOptions);
	if (!soap_get___onvifMedia2__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioSourceConfigurationOptions, "-onvifMedia2:GetAudioSourceConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioSourceConfigurationOptions(soap_tmp___onvifMedia2__GetAudioSourceConfigurationOptions.onvifMedia2__GetAudioSourceConfigurationOptions, onvifMedia2__GetAudioSourceConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetAudioSourceConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "onvifMedia2:GetAudioSourceConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetAudioSourceConfigurationOptionsResponse.soap_put(soap, "onvifMedia2:GetAudioSourceConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetAudioEncoderConfigurationOptions(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetAudioEncoderConfigurationOptions soap_tmp___onvifMedia2__GetAudioEncoderConfigurationOptions;
	_onvifMedia2__GetAudioEncoderConfigurationOptionsResponse onvifMedia2__GetAudioEncoderConfigurationOptionsResponse;
	onvifMedia2__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioEncoderConfigurationOptions);
	if (!soap_get___onvifMedia2__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioEncoderConfigurationOptions, "-onvifMedia2:GetAudioEncoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioEncoderConfigurationOptions(soap_tmp___onvifMedia2__GetAudioEncoderConfigurationOptions.onvifMedia2__GetAudioEncoderConfigurationOptions, onvifMedia2__GetAudioEncoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetAudioEncoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetAudioEncoderConfigurationOptionsResponse.soap_put(soap, "onvifMedia2:GetAudioEncoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetAudioEncoderConfigurationOptionsResponse.soap_put(soap, "onvifMedia2:GetAudioEncoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetMetadataConfigurationOptions(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetMetadataConfigurationOptions soap_tmp___onvifMedia2__GetMetadataConfigurationOptions;
	_onvifMedia2__GetMetadataConfigurationOptionsResponse onvifMedia2__GetMetadataConfigurationOptionsResponse;
	onvifMedia2__GetMetadataConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetMetadataConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetMetadataConfigurationOptions);
	if (!soap_get___onvifMedia2__GetMetadataConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetMetadataConfigurationOptions, "-onvifMedia2:GetMetadataConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMetadataConfigurationOptions(soap_tmp___onvifMedia2__GetMetadataConfigurationOptions.onvifMedia2__GetMetadataConfigurationOptions, onvifMedia2__GetMetadataConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetMetadataConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetMetadataConfigurationOptionsResponse.soap_put(soap, "onvifMedia2:GetMetadataConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetMetadataConfigurationOptionsResponse.soap_put(soap, "onvifMedia2:GetMetadataConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetAudioOutputConfigurationOptions(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetAudioOutputConfigurationOptions soap_tmp___onvifMedia2__GetAudioOutputConfigurationOptions;
	_onvifMedia2__GetAudioOutputConfigurationOptionsResponse onvifMedia2__GetAudioOutputConfigurationOptionsResponse;
	onvifMedia2__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioOutputConfigurationOptions);
	if (!soap_get___onvifMedia2__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioOutputConfigurationOptions, "-onvifMedia2:GetAudioOutputConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioOutputConfigurationOptions(soap_tmp___onvifMedia2__GetAudioOutputConfigurationOptions.onvifMedia2__GetAudioOutputConfigurationOptions, onvifMedia2__GetAudioOutputConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetAudioOutputConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "onvifMedia2:GetAudioOutputConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetAudioOutputConfigurationOptionsResponse.soap_put(soap, "onvifMedia2:GetAudioOutputConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetAudioDecoderConfigurationOptions(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetAudioDecoderConfigurationOptions soap_tmp___onvifMedia2__GetAudioDecoderConfigurationOptions;
	_onvifMedia2__GetAudioDecoderConfigurationOptionsResponse onvifMedia2__GetAudioDecoderConfigurationOptionsResponse;
	onvifMedia2__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioDecoderConfigurationOptions);
	if (!soap_get___onvifMedia2__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___onvifMedia2__GetAudioDecoderConfigurationOptions, "-onvifMedia2:GetAudioDecoderConfigurationOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetAudioDecoderConfigurationOptions(soap_tmp___onvifMedia2__GetAudioDecoderConfigurationOptions.onvifMedia2__GetAudioDecoderConfigurationOptions, onvifMedia2__GetAudioDecoderConfigurationOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetAudioDecoderConfigurationOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetAudioDecoderConfigurationOptionsResponse.soap_put(soap, "onvifMedia2:GetAudioDecoderConfigurationOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetAudioDecoderConfigurationOptionsResponse.soap_put(soap, "onvifMedia2:GetAudioDecoderConfigurationOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetVideoEncoderInstances(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetVideoEncoderInstances soap_tmp___onvifMedia2__GetVideoEncoderInstances;
	_onvifMedia2__GetVideoEncoderInstancesResponse onvifMedia2__GetVideoEncoderInstancesResponse;
	onvifMedia2__GetVideoEncoderInstancesResponse.soap_default(soap);
	soap_default___onvifMedia2__GetVideoEncoderInstances(soap, &soap_tmp___onvifMedia2__GetVideoEncoderInstances);
	if (!soap_get___onvifMedia2__GetVideoEncoderInstances(soap, &soap_tmp___onvifMedia2__GetVideoEncoderInstances, "-onvifMedia2:GetVideoEncoderInstances", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoEncoderInstances(soap_tmp___onvifMedia2__GetVideoEncoderInstances.onvifMedia2__GetVideoEncoderInstances, onvifMedia2__GetVideoEncoderInstancesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetVideoEncoderInstancesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetVideoEncoderInstancesResponse.soap_put(soap, "onvifMedia2:GetVideoEncoderInstancesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetVideoEncoderInstancesResponse.soap_put(soap, "onvifMedia2:GetVideoEncoderInstancesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetStreamUri(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetStreamUri soap_tmp___onvifMedia2__GetStreamUri;
	_onvifMedia2__GetStreamUriResponse onvifMedia2__GetStreamUriResponse;
	onvifMedia2__GetStreamUriResponse.soap_default(soap);
	soap_default___onvifMedia2__GetStreamUri(soap, &soap_tmp___onvifMedia2__GetStreamUri);
	if (!soap_get___onvifMedia2__GetStreamUri(soap, &soap_tmp___onvifMedia2__GetStreamUri, "-onvifMedia2:GetStreamUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetStreamUri(soap_tmp___onvifMedia2__GetStreamUri.onvifMedia2__GetStreamUri, onvifMedia2__GetStreamUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetStreamUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetStreamUriResponse.soap_put(soap, "onvifMedia2:GetStreamUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetStreamUriResponse.soap_put(soap, "onvifMedia2:GetStreamUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__StartMulticastStreaming(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__StartMulticastStreaming soap_tmp___onvifMedia2__StartMulticastStreaming;
	onvifMedia2__SetConfigurationResponse onvifMedia2__StartMulticastStreamingResponse;
	onvifMedia2__StartMulticastStreamingResponse.soap_default(soap);
	soap_default___onvifMedia2__StartMulticastStreaming(soap, &soap_tmp___onvifMedia2__StartMulticastStreaming);
	if (!soap_get___onvifMedia2__StartMulticastStreaming(soap, &soap_tmp___onvifMedia2__StartMulticastStreaming, "-onvifMedia2:StartMulticastStreaming", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->StartMulticastStreaming(soap_tmp___onvifMedia2__StartMulticastStreaming.onvifMedia2__StartMulticastStreaming, onvifMedia2__StartMulticastStreamingResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__StartMulticastStreamingResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__StartMulticastStreamingResponse.soap_put(soap, "onvifMedia2:StartMulticastStreamingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__StartMulticastStreamingResponse.soap_put(soap, "onvifMedia2:StartMulticastStreamingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__StopMulticastStreaming(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__StopMulticastStreaming soap_tmp___onvifMedia2__StopMulticastStreaming;
	onvifMedia2__SetConfigurationResponse onvifMedia2__StopMulticastStreamingResponse;
	onvifMedia2__StopMulticastStreamingResponse.soap_default(soap);
	soap_default___onvifMedia2__StopMulticastStreaming(soap, &soap_tmp___onvifMedia2__StopMulticastStreaming);
	if (!soap_get___onvifMedia2__StopMulticastStreaming(soap, &soap_tmp___onvifMedia2__StopMulticastStreaming, "-onvifMedia2:StopMulticastStreaming", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->StopMulticastStreaming(soap_tmp___onvifMedia2__StopMulticastStreaming.onvifMedia2__StopMulticastStreaming, onvifMedia2__StopMulticastStreamingResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__StopMulticastStreamingResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__StopMulticastStreamingResponse.soap_put(soap, "onvifMedia2:StopMulticastStreamingResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__StopMulticastStreamingResponse.soap_put(soap, "onvifMedia2:StopMulticastStreamingResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__SetSynchronizationPoint(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__SetSynchronizationPoint soap_tmp___onvifMedia2__SetSynchronizationPoint;
	_onvifMedia2__SetSynchronizationPointResponse onvifMedia2__SetSynchronizationPointResponse;
	onvifMedia2__SetSynchronizationPointResponse.soap_default(soap);
	soap_default___onvifMedia2__SetSynchronizationPoint(soap, &soap_tmp___onvifMedia2__SetSynchronizationPoint);
	if (!soap_get___onvifMedia2__SetSynchronizationPoint(soap, &soap_tmp___onvifMedia2__SetSynchronizationPoint, "-onvifMedia2:SetSynchronizationPoint", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetSynchronizationPoint(soap_tmp___onvifMedia2__SetSynchronizationPoint.onvifMedia2__SetSynchronizationPoint, onvifMedia2__SetSynchronizationPointResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__SetSynchronizationPointResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__SetSynchronizationPointResponse.soap_put(soap, "onvifMedia2:SetSynchronizationPointResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__SetSynchronizationPointResponse.soap_put(soap, "onvifMedia2:SetSynchronizationPointResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetSnapshotUri(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetSnapshotUri soap_tmp___onvifMedia2__GetSnapshotUri;
	_onvifMedia2__GetSnapshotUriResponse onvifMedia2__GetSnapshotUriResponse;
	onvifMedia2__GetSnapshotUriResponse.soap_default(soap);
	soap_default___onvifMedia2__GetSnapshotUri(soap, &soap_tmp___onvifMedia2__GetSnapshotUri);
	if (!soap_get___onvifMedia2__GetSnapshotUri(soap, &soap_tmp___onvifMedia2__GetSnapshotUri, "-onvifMedia2:GetSnapshotUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetSnapshotUri(soap_tmp___onvifMedia2__GetSnapshotUri.onvifMedia2__GetSnapshotUri, onvifMedia2__GetSnapshotUriResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetSnapshotUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetSnapshotUriResponse.soap_put(soap, "onvifMedia2:GetSnapshotUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetSnapshotUriResponse.soap_put(soap, "onvifMedia2:GetSnapshotUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetVideoSourceModes(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetVideoSourceModes soap_tmp___onvifMedia2__GetVideoSourceModes;
	_onvifMedia2__GetVideoSourceModesResponse onvifMedia2__GetVideoSourceModesResponse;
	onvifMedia2__GetVideoSourceModesResponse.soap_default(soap);
	soap_default___onvifMedia2__GetVideoSourceModes(soap, &soap_tmp___onvifMedia2__GetVideoSourceModes);
	if (!soap_get___onvifMedia2__GetVideoSourceModes(soap, &soap_tmp___onvifMedia2__GetVideoSourceModes, "-onvifMedia2:GetVideoSourceModes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetVideoSourceModes(soap_tmp___onvifMedia2__GetVideoSourceModes.onvifMedia2__GetVideoSourceModes, onvifMedia2__GetVideoSourceModesResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetVideoSourceModesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetVideoSourceModesResponse.soap_put(soap, "onvifMedia2:GetVideoSourceModesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetVideoSourceModesResponse.soap_put(soap, "onvifMedia2:GetVideoSourceModesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__SetVideoSourceMode(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__SetVideoSourceMode soap_tmp___onvifMedia2__SetVideoSourceMode;
	_onvifMedia2__SetVideoSourceModeResponse onvifMedia2__SetVideoSourceModeResponse;
	onvifMedia2__SetVideoSourceModeResponse.soap_default(soap);
	soap_default___onvifMedia2__SetVideoSourceMode(soap, &soap_tmp___onvifMedia2__SetVideoSourceMode);
	if (!soap_get___onvifMedia2__SetVideoSourceMode(soap, &soap_tmp___onvifMedia2__SetVideoSourceMode, "-onvifMedia2:SetVideoSourceMode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetVideoSourceMode(soap_tmp___onvifMedia2__SetVideoSourceMode.onvifMedia2__SetVideoSourceMode, onvifMedia2__SetVideoSourceModeResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__SetVideoSourceModeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__SetVideoSourceModeResponse.soap_put(soap, "onvifMedia2:SetVideoSourceModeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__SetVideoSourceModeResponse.soap_put(soap, "onvifMedia2:SetVideoSourceModeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetOSDs(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetOSDs soap_tmp___onvifMedia2__GetOSDs;
	_onvifMedia2__GetOSDsResponse onvifMedia2__GetOSDsResponse;
	onvifMedia2__GetOSDsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetOSDs(soap, &soap_tmp___onvifMedia2__GetOSDs);
	if (!soap_get___onvifMedia2__GetOSDs(soap, &soap_tmp___onvifMedia2__GetOSDs, "-onvifMedia2:GetOSDs", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetOSDs(soap_tmp___onvifMedia2__GetOSDs.onvifMedia2__GetOSDs, onvifMedia2__GetOSDsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetOSDsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetOSDsResponse.soap_put(soap, "onvifMedia2:GetOSDsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetOSDsResponse.soap_put(soap, "onvifMedia2:GetOSDsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetOSDOptions(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetOSDOptions soap_tmp___onvifMedia2__GetOSDOptions;
	_onvifMedia2__GetOSDOptionsResponse onvifMedia2__GetOSDOptionsResponse;
	onvifMedia2__GetOSDOptionsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetOSDOptions(soap, &soap_tmp___onvifMedia2__GetOSDOptions);
	if (!soap_get___onvifMedia2__GetOSDOptions(soap, &soap_tmp___onvifMedia2__GetOSDOptions, "-onvifMedia2:GetOSDOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetOSDOptions(soap_tmp___onvifMedia2__GetOSDOptions.onvifMedia2__GetOSDOptions, onvifMedia2__GetOSDOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetOSDOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetOSDOptionsResponse.soap_put(soap, "onvifMedia2:GetOSDOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetOSDOptionsResponse.soap_put(soap, "onvifMedia2:GetOSDOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__SetOSD(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__SetOSD soap_tmp___onvifMedia2__SetOSD;
	onvifMedia2__SetConfigurationResponse onvifMedia2__SetOSDResponse;
	onvifMedia2__SetOSDResponse.soap_default(soap);
	soap_default___onvifMedia2__SetOSD(soap, &soap_tmp___onvifMedia2__SetOSD);
	if (!soap_get___onvifMedia2__SetOSD(soap, &soap_tmp___onvifMedia2__SetOSD, "-onvifMedia2:SetOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetOSD(soap_tmp___onvifMedia2__SetOSD.onvifMedia2__SetOSD, onvifMedia2__SetOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__SetOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__SetOSDResponse.soap_put(soap, "onvifMedia2:SetOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__SetOSDResponse.soap_put(soap, "onvifMedia2:SetOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__CreateOSD(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__CreateOSD soap_tmp___onvifMedia2__CreateOSD;
	_onvifMedia2__CreateOSDResponse onvifMedia2__CreateOSDResponse;
	onvifMedia2__CreateOSDResponse.soap_default(soap);
	soap_default___onvifMedia2__CreateOSD(soap, &soap_tmp___onvifMedia2__CreateOSD);
	if (!soap_get___onvifMedia2__CreateOSD(soap, &soap_tmp___onvifMedia2__CreateOSD, "-onvifMedia2:CreateOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateOSD(soap_tmp___onvifMedia2__CreateOSD.onvifMedia2__CreateOSD, onvifMedia2__CreateOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__CreateOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__CreateOSDResponse.soap_put(soap, "onvifMedia2:CreateOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__CreateOSDResponse.soap_put(soap, "onvifMedia2:CreateOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__DeleteOSD(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__DeleteOSD soap_tmp___onvifMedia2__DeleteOSD;
	onvifMedia2__SetConfigurationResponse onvifMedia2__DeleteOSDResponse;
	onvifMedia2__DeleteOSDResponse.soap_default(soap);
	soap_default___onvifMedia2__DeleteOSD(soap, &soap_tmp___onvifMedia2__DeleteOSD);
	if (!soap_get___onvifMedia2__DeleteOSD(soap, &soap_tmp___onvifMedia2__DeleteOSD, "-onvifMedia2:DeleteOSD", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteOSD(soap_tmp___onvifMedia2__DeleteOSD.onvifMedia2__DeleteOSD, onvifMedia2__DeleteOSDResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__DeleteOSDResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__DeleteOSDResponse.soap_put(soap, "onvifMedia2:DeleteOSDResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__DeleteOSDResponse.soap_put(soap, "onvifMedia2:DeleteOSDResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetMasks(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetMasks soap_tmp___onvifMedia2__GetMasks;
	_onvifMedia2__GetMasksResponse onvifMedia2__GetMasksResponse;
	onvifMedia2__GetMasksResponse.soap_default(soap);
	soap_default___onvifMedia2__GetMasks(soap, &soap_tmp___onvifMedia2__GetMasks);
	if (!soap_get___onvifMedia2__GetMasks(soap, &soap_tmp___onvifMedia2__GetMasks, "-onvifMedia2:GetMasks", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMasks(soap_tmp___onvifMedia2__GetMasks.onvifMedia2__GetMasks, onvifMedia2__GetMasksResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetMasksResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetMasksResponse.soap_put(soap, "onvifMedia2:GetMasksResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetMasksResponse.soap_put(soap, "onvifMedia2:GetMasksResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__GetMaskOptions(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__GetMaskOptions soap_tmp___onvifMedia2__GetMaskOptions;
	_onvifMedia2__GetMaskOptionsResponse onvifMedia2__GetMaskOptionsResponse;
	onvifMedia2__GetMaskOptionsResponse.soap_default(soap);
	soap_default___onvifMedia2__GetMaskOptions(soap, &soap_tmp___onvifMedia2__GetMaskOptions);
	if (!soap_get___onvifMedia2__GetMaskOptions(soap, &soap_tmp___onvifMedia2__GetMaskOptions, "-onvifMedia2:GetMaskOptions", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->GetMaskOptions(soap_tmp___onvifMedia2__GetMaskOptions.onvifMedia2__GetMaskOptions, onvifMedia2__GetMaskOptionsResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__GetMaskOptionsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__GetMaskOptionsResponse.soap_put(soap, "onvifMedia2:GetMaskOptionsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__GetMaskOptionsResponse.soap_put(soap, "onvifMedia2:GetMaskOptionsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__SetMask(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__SetMask soap_tmp___onvifMedia2__SetMask;
	onvifMedia2__SetConfigurationResponse onvifMedia2__SetMaskResponse;
	onvifMedia2__SetMaskResponse.soap_default(soap);
	soap_default___onvifMedia2__SetMask(soap, &soap_tmp___onvifMedia2__SetMask);
	if (!soap_get___onvifMedia2__SetMask(soap, &soap_tmp___onvifMedia2__SetMask, "-onvifMedia2:SetMask", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->SetMask(soap_tmp___onvifMedia2__SetMask.onvifMedia2__SetMask, onvifMedia2__SetMaskResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__SetMaskResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__SetMaskResponse.soap_put(soap, "onvifMedia2:SetMaskResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__SetMaskResponse.soap_put(soap, "onvifMedia2:SetMaskResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__CreateMask(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__CreateMask soap_tmp___onvifMedia2__CreateMask;
	_onvifMedia2__CreateMaskResponse onvifMedia2__CreateMaskResponse;
	onvifMedia2__CreateMaskResponse.soap_default(soap);
	soap_default___onvifMedia2__CreateMask(soap, &soap_tmp___onvifMedia2__CreateMask);
	if (!soap_get___onvifMedia2__CreateMask(soap, &soap_tmp___onvifMedia2__CreateMask, "-onvifMedia2:CreateMask", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->CreateMask(soap_tmp___onvifMedia2__CreateMask.onvifMedia2__CreateMask, onvifMedia2__CreateMaskResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__CreateMaskResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__CreateMaskResponse.soap_put(soap, "onvifMedia2:CreateMaskResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__CreateMaskResponse.soap_put(soap, "onvifMedia2:CreateMaskResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___onvifMedia2__DeleteMask(struct soap *soap, Media2BindingService *service)
{	struct __onvifMedia2__DeleteMask soap_tmp___onvifMedia2__DeleteMask;
	onvifMedia2__SetConfigurationResponse onvifMedia2__DeleteMaskResponse;
	onvifMedia2__DeleteMaskResponse.soap_default(soap);
	soap_default___onvifMedia2__DeleteMask(soap, &soap_tmp___onvifMedia2__DeleteMask);
	if (!soap_get___onvifMedia2__DeleteMask(soap, &soap_tmp___onvifMedia2__DeleteMask, "-onvifMedia2:DeleteMask", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = service->DeleteMask(soap_tmp___onvifMedia2__DeleteMask.onvifMedia2__DeleteMask, onvifMedia2__DeleteMaskResponse);
	if (soap->error)
		return soap->error;
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	onvifMedia2__DeleteMaskResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || onvifMedia2__DeleteMaskResponse.soap_put(soap, "onvifMedia2:DeleteMaskResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || onvifMedia2__DeleteMaskResponse.soap_put(soap, "onvifMedia2:DeleteMaskResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
