/* soapDoorControlBindingService.cpp
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapDoorControlBindingService.h"

DoorControlBindingService::DoorControlBindingService()
{
    this->soap = soap_new();
    this->soap_own = true;
    DoorControlBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

DoorControlBindingService::DoorControlBindingService(const DoorControlBindingService& rhs)
{
    this->soap = rhs.soap;
    this->soap_own = false;
}

DoorControlBindingService::DoorControlBindingService(struct soap *_soap)
{
    this->soap = _soap;
    this->soap_own = false;
    DoorControlBindingService_init(_soap->imode, _soap->omode);
}

DoorControlBindingService::DoorControlBindingService(soap_mode iomode)
{
    this->soap = soap_new();
    this->soap_own = true;
    DoorControlBindingService_init(iomode, iomode);
}

DoorControlBindingService::DoorControlBindingService(soap_mode imode, soap_mode omode)
{
    this->soap = soap_new();
    this->soap_own = true;
    DoorControlBindingService_init(imode, omode);
}

DoorControlBindingService::~DoorControlBindingService()
{
    if (this->soap_own)
        soap_free(this->soap);
}

void DoorControlBindingService::DoorControlBindingService_init(soap_mode imode, soap_mode omode)
{
    soap_imode(this->soap, imode);
    soap_omode(this->soap, omode);
    static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"onvifPacs", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"onvifAccessControl", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"onvifAccessRules", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"onvifActionEngine", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"onvifAdvancedSecurity-assb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
        {"onvifAdvancedSecurity-db", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
        {"onvifAdvancedSecurity-kb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
        {"onvifAdvancedSecurity-tsb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
        {"onvifAdvancedSecurity", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"onvifAnalytics-aeb", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
        {"onvifAnalytics-reb", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
        {"onvifAnalytics", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"onvifAnalyticsDevice", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"onvifCredential", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"onvifDisplay", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"onvifDoorControl", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"onvifEvents-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
        {"onvifEvents-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
        {"onvifEvents-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
        {"onvifEvents-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
        {"onvifEvents-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
        {"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"onvifEvents-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
        {"onvifEvents-psmb", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
        {"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"onvifEvents-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
        {"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"onvifMedia2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"onvifNetwork-dlb", "http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding", NULL, NULL},
        {"onvifNetwork-rdb", "http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding", NULL, NULL},
        {"onvifNetwork", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"onvifProvisioning", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"onvifReceiver", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"onvifRecording", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"onvifReplay", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"onvifScedule", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"onvifSearch", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {"onvifThermal", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
    soap_set_namespaces(this->soap, namespaces);
}

void DoorControlBindingService::destroy()
{
    soap_destroy(this->soap);
    soap_end(this->soap);
}

void DoorControlBindingService::reset()
{
    this->destroy();
    soap_done(this->soap);
    soap_initialize(this->soap);
    DoorControlBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
DoorControlBindingService *DoorControlBindingService::copy()
{
    DoorControlBindingService *dup = SOAP_NEW_UNMANAGED(DoorControlBindingService);
    if (dup)
    {
        soap_done(dup->soap);
        soap_copy_context(dup->soap, this->soap);
    }
    return dup;
}
#endif

DoorControlBindingService& DoorControlBindingService::operator=(const DoorControlBindingService& rhs)
{
    if (this->soap != rhs.soap)
    {
        if (this->soap_own)
            soap_free(this->soap);
        this->soap = rhs.soap;
        this->soap_own = false;
    }
    return *this;
}

int DoorControlBindingService::soap_close_socket()
{
    return soap_closesock(this->soap);
}

int DoorControlBindingService::soap_force_close_socket()
{
    return soap_force_closesock(this->soap);
}

int DoorControlBindingService::soap_senderfault(const char *string, const char *detailXML)
{
    return ::soap_sender_fault(this->soap, string, detailXML);
}

int DoorControlBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{
    return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int DoorControlBindingService::soap_receiverfault(const char *string, const char *detailXML)
{
    return ::soap_receiver_fault(this->soap, string, detailXML);
}

int DoorControlBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{
    return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void DoorControlBindingService::soap_print_fault(FILE *fd)
{
    ::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void DoorControlBindingService::soap_stream_fault(std::ostream& os)
{
    ::soap_stream_fault(this->soap, os);
}
#endif

char *DoorControlBindingService::soap_sprint_fault(char *buf, size_t len)
{
    return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void DoorControlBindingService::soap_noheader()
{
    this->soap->header = NULL;
}

void DoorControlBindingService::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *SubscriptionId)
{
    ::soap_header(this->soap);
    this->soap->header->wsa5__MessageID = wsa5__MessageID;
    this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
    this->soap->header->wsa5__From = wsa5__From;
    this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
    this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
    this->soap->header->wsa5__To = wsa5__To;
    this->soap->header->wsa5__Action = wsa5__Action;
    this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
    this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
    this->soap->header->wsse__Security = wsse__Security;
    this->soap->header->SubscriptionId = SubscriptionId;
}

::SOAP_ENV__Header *DoorControlBindingService::soap_header()
{
    return this->soap->header;
}

#ifndef WITH_NOIO
int DoorControlBindingService::run(int port)
{
    if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
        return this->soap->error;
    for (;;)
    {
        if (!soap_valid_socket(this->accept()))
        {
            if (this->soap->errnum == 0) // timeout?
                this->soap->error = SOAP_OK;
            break;
        }
        if (this->serve())
            break;
        this->destroy();
    }
    return this->soap->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int DoorControlBindingService::ssl_run(int port)
{
    if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
        return this->soap->error;
    for (;;)
    {
        if (!soap_valid_socket(this->accept()))
        {
            if (this->soap->errnum == 0) // timeout?
                this->soap->error = SOAP_OK;
            break;
        }
        if (this->ssl_accept() || this->serve())
            break;
        this->destroy();
    }
    return this->soap->error;
}
#endif

SOAP_SOCKET DoorControlBindingService::bind(const char *host, int port, int backlog)
{
    return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET DoorControlBindingService::accept()
{
    return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int DoorControlBindingService::ssl_accept()
{
    return soap_ssl_accept(this->soap);
}
#endif
#endif

int DoorControlBindingService::serve()
{
#ifndef WITH_FASTCGI
    this->soap->keep_alive = this->soap->max_keep_alive + 1;
#endif
    do
    {
#ifndef WITH_FASTCGI
        if (this->soap->keep_alive > 0 && this->soap->max_keep_alive > 0)
            this->soap->keep_alive--;
#endif
        if (soap_begin_serve(this->soap))
        {
            if (this->soap->error >= SOAP_STOP)
                continue;
            return this->soap->error;
        }
        if ((dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap))) && this->soap->error && this->soap->error < SOAP_STOP)
        {
#ifdef WITH_FASTCGI
            soap_send_fault(this->soap);
#else
            return soap_send_fault(this->soap);
#endif
        }
#ifdef WITH_FASTCGI
        soap_destroy(this->soap);
        soap_end(this->soap);
    } while (1);
#else
    } while (this->soap->keep_alive);
#endif
    return SOAP_OK;
}

static int serve___onvifDoorControl__GetServiceCapabilities(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__GetDoorInfoList(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__GetDoorInfo(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__GetDoorList(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__GetDoors(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__CreateDoor(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__SetDoor(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__ModifyDoor(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__DeleteDoor(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__GetDoorState(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__AccessDoor(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__LockDoor(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__UnlockDoor(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__BlockDoor(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__LockDownDoor(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__LockDownReleaseDoor(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__LockOpenDoor(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__LockOpenReleaseDoor(struct soap*, DoorControlBindingService*);
static int serve___onvifDoorControl__DoubleLockDoor(struct soap*, DoorControlBindingService*);

int DoorControlBindingService::dispatch()
{
    return dispatch(this->soap);
}

int DoorControlBindingService::dispatch(struct soap* soap)
{
    DoorControlBindingService_init(soap->imode, soap->omode);

    soap_peek_element(soap);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:GetServiceCapabilities"))
        return serve___onvifDoorControl__GetServiceCapabilities(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:GetDoorInfoList"))
        return serve___onvifDoorControl__GetDoorInfoList(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:GetDoorInfo"))
        return serve___onvifDoorControl__GetDoorInfo(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:GetDoorList"))
        return serve___onvifDoorControl__GetDoorList(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:GetDoors"))
        return serve___onvifDoorControl__GetDoors(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:CreateDoor"))
        return serve___onvifDoorControl__CreateDoor(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:SetDoor"))
        return serve___onvifDoorControl__SetDoor(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:ModifyDoor"))
        return serve___onvifDoorControl__ModifyDoor(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:DeleteDoor"))
        return serve___onvifDoorControl__DeleteDoor(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:GetDoorState"))
        return serve___onvifDoorControl__GetDoorState(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:AccessDoor"))
        return serve___onvifDoorControl__AccessDoor(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:LockDoor"))
        return serve___onvifDoorControl__LockDoor(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:UnlockDoor"))
        return serve___onvifDoorControl__UnlockDoor(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:BlockDoor"))
        return serve___onvifDoorControl__BlockDoor(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:LockDownDoor"))
        return serve___onvifDoorControl__LockDownDoor(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:LockDownReleaseDoor"))
        return serve___onvifDoorControl__LockDownReleaseDoor(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:LockOpenDoor"))
        return serve___onvifDoorControl__LockOpenDoor(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:LockOpenReleaseDoor"))
        return serve___onvifDoorControl__LockOpenReleaseDoor(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifDoorControl:DoubleLockDoor"))
        return serve___onvifDoorControl__DoubleLockDoor(soap, this);
    return soap->error = SOAP_NO_METHOD;
}

static int serve___onvifDoorControl__GetServiceCapabilities(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__GetServiceCapabilities soap_tmp___onvifDoorControl__GetServiceCapabilities;
    _onvifDoorControl__GetServiceCapabilitiesResponse onvifDoorControl__GetServiceCapabilitiesResponse;
    onvifDoorControl__GetServiceCapabilitiesResponse.soap_default(soap);
    soap_default___onvifDoorControl__GetServiceCapabilities(soap, &soap_tmp___onvifDoorControl__GetServiceCapabilities);
    if (!soap_get___onvifDoorControl__GetServiceCapabilities(soap, &soap_tmp___onvifDoorControl__GetServiceCapabilities, "-onvifDoorControl:GetServiceCapabilities", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetServiceCapabilities(soap_tmp___onvifDoorControl__GetServiceCapabilities.onvifDoorControl__GetServiceCapabilities, onvifDoorControl__GetServiceCapabilitiesResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__GetServiceCapabilitiesResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__GetServiceCapabilitiesResponse.soap_put(soap, "onvifDoorControl:GetServiceCapabilitiesResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__GetServiceCapabilitiesResponse.soap_put(soap, "onvifDoorControl:GetServiceCapabilitiesResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__GetDoorInfoList(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__GetDoorInfoList soap_tmp___onvifDoorControl__GetDoorInfoList;
    _onvifDoorControl__GetDoorInfoListResponse onvifDoorControl__GetDoorInfoListResponse;
    onvifDoorControl__GetDoorInfoListResponse.soap_default(soap);
    soap_default___onvifDoorControl__GetDoorInfoList(soap, &soap_tmp___onvifDoorControl__GetDoorInfoList);
    if (!soap_get___onvifDoorControl__GetDoorInfoList(soap, &soap_tmp___onvifDoorControl__GetDoorInfoList, "-onvifDoorControl:GetDoorInfoList", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetDoorInfoList(soap_tmp___onvifDoorControl__GetDoorInfoList.onvifDoorControl__GetDoorInfoList, onvifDoorControl__GetDoorInfoListResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__GetDoorInfoListResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__GetDoorInfoListResponse.soap_put(soap, "onvifDoorControl:GetDoorInfoListResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__GetDoorInfoListResponse.soap_put(soap, "onvifDoorControl:GetDoorInfoListResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__GetDoorInfo(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__GetDoorInfo soap_tmp___onvifDoorControl__GetDoorInfo;
    _onvifDoorControl__GetDoorInfoResponse onvifDoorControl__GetDoorInfoResponse;
    onvifDoorControl__GetDoorInfoResponse.soap_default(soap);
    soap_default___onvifDoorControl__GetDoorInfo(soap, &soap_tmp___onvifDoorControl__GetDoorInfo);
    if (!soap_get___onvifDoorControl__GetDoorInfo(soap, &soap_tmp___onvifDoorControl__GetDoorInfo, "-onvifDoorControl:GetDoorInfo", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetDoorInfo(soap_tmp___onvifDoorControl__GetDoorInfo.onvifDoorControl__GetDoorInfo, onvifDoorControl__GetDoorInfoResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__GetDoorInfoResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__GetDoorInfoResponse.soap_put(soap, "onvifDoorControl:GetDoorInfoResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__GetDoorInfoResponse.soap_put(soap, "onvifDoorControl:GetDoorInfoResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__GetDoorList(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__GetDoorList soap_tmp___onvifDoorControl__GetDoorList;
    _onvifDoorControl__GetDoorListResponse onvifDoorControl__GetDoorListResponse;
    onvifDoorControl__GetDoorListResponse.soap_default(soap);
    soap_default___onvifDoorControl__GetDoorList(soap, &soap_tmp___onvifDoorControl__GetDoorList);
    if (!soap_get___onvifDoorControl__GetDoorList(soap, &soap_tmp___onvifDoorControl__GetDoorList, "-onvifDoorControl:GetDoorList", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetDoorList(soap_tmp___onvifDoorControl__GetDoorList.onvifDoorControl__GetDoorList, onvifDoorControl__GetDoorListResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__GetDoorListResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__GetDoorListResponse.soap_put(soap, "onvifDoorControl:GetDoorListResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__GetDoorListResponse.soap_put(soap, "onvifDoorControl:GetDoorListResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__GetDoors(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__GetDoors soap_tmp___onvifDoorControl__GetDoors;
    _onvifDoorControl__GetDoorsResponse onvifDoorControl__GetDoorsResponse;
    onvifDoorControl__GetDoorsResponse.soap_default(soap);
    soap_default___onvifDoorControl__GetDoors(soap, &soap_tmp___onvifDoorControl__GetDoors);
    if (!soap_get___onvifDoorControl__GetDoors(soap, &soap_tmp___onvifDoorControl__GetDoors, "-onvifDoorControl:GetDoors", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetDoors(soap_tmp___onvifDoorControl__GetDoors.onvifDoorControl__GetDoors, onvifDoorControl__GetDoorsResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__GetDoorsResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__GetDoorsResponse.soap_put(soap, "onvifDoorControl:GetDoorsResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__GetDoorsResponse.soap_put(soap, "onvifDoorControl:GetDoorsResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__CreateDoor(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__CreateDoor soap_tmp___onvifDoorControl__CreateDoor;
    _onvifDoorControl__CreateDoorResponse onvifDoorControl__CreateDoorResponse;
    onvifDoorControl__CreateDoorResponse.soap_default(soap);
    soap_default___onvifDoorControl__CreateDoor(soap, &soap_tmp___onvifDoorControl__CreateDoor);
    if (!soap_get___onvifDoorControl__CreateDoor(soap, &soap_tmp___onvifDoorControl__CreateDoor, "-onvifDoorControl:CreateDoor", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->CreateDoor(soap_tmp___onvifDoorControl__CreateDoor.onvifDoorControl__CreateDoor, onvifDoorControl__CreateDoorResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__CreateDoorResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__CreateDoorResponse.soap_put(soap, "onvifDoorControl:CreateDoorResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__CreateDoorResponse.soap_put(soap, "onvifDoorControl:CreateDoorResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__SetDoor(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__SetDoor soap_tmp___onvifDoorControl__SetDoor;
    _onvifDoorControl__SetDoorResponse onvifDoorControl__SetDoorResponse;
    onvifDoorControl__SetDoorResponse.soap_default(soap);
    soap_default___onvifDoorControl__SetDoor(soap, &soap_tmp___onvifDoorControl__SetDoor);
    if (!soap_get___onvifDoorControl__SetDoor(soap, &soap_tmp___onvifDoorControl__SetDoor, "-onvifDoorControl:SetDoor", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->SetDoor(soap_tmp___onvifDoorControl__SetDoor.onvifDoorControl__SetDoor, onvifDoorControl__SetDoorResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__SetDoorResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__SetDoorResponse.soap_put(soap, "onvifDoorControl:SetDoorResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__SetDoorResponse.soap_put(soap, "onvifDoorControl:SetDoorResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__ModifyDoor(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__ModifyDoor soap_tmp___onvifDoorControl__ModifyDoor;
    _onvifDoorControl__ModifyDoorResponse onvifDoorControl__ModifyDoorResponse;
    onvifDoorControl__ModifyDoorResponse.soap_default(soap);
    soap_default___onvifDoorControl__ModifyDoor(soap, &soap_tmp___onvifDoorControl__ModifyDoor);
    if (!soap_get___onvifDoorControl__ModifyDoor(soap, &soap_tmp___onvifDoorControl__ModifyDoor, "-onvifDoorControl:ModifyDoor", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->ModifyDoor(soap_tmp___onvifDoorControl__ModifyDoor.onvifDoorControl__ModifyDoor, onvifDoorControl__ModifyDoorResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__ModifyDoorResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__ModifyDoorResponse.soap_put(soap, "onvifDoorControl:ModifyDoorResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__ModifyDoorResponse.soap_put(soap, "onvifDoorControl:ModifyDoorResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__DeleteDoor(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__DeleteDoor soap_tmp___onvifDoorControl__DeleteDoor;
    _onvifDoorControl__DeleteDoorResponse onvifDoorControl__DeleteDoorResponse;
    onvifDoorControl__DeleteDoorResponse.soap_default(soap);
    soap_default___onvifDoorControl__DeleteDoor(soap, &soap_tmp___onvifDoorControl__DeleteDoor);
    if (!soap_get___onvifDoorControl__DeleteDoor(soap, &soap_tmp___onvifDoorControl__DeleteDoor, "-onvifDoorControl:DeleteDoor", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->DeleteDoor(soap_tmp___onvifDoorControl__DeleteDoor.onvifDoorControl__DeleteDoor, onvifDoorControl__DeleteDoorResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__DeleteDoorResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__DeleteDoorResponse.soap_put(soap, "onvifDoorControl:DeleteDoorResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__DeleteDoorResponse.soap_put(soap, "onvifDoorControl:DeleteDoorResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__GetDoorState(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__GetDoorState soap_tmp___onvifDoorControl__GetDoorState;
    _onvifDoorControl__GetDoorStateResponse onvifDoorControl__GetDoorStateResponse;
    onvifDoorControl__GetDoorStateResponse.soap_default(soap);
    soap_default___onvifDoorControl__GetDoorState(soap, &soap_tmp___onvifDoorControl__GetDoorState);
    if (!soap_get___onvifDoorControl__GetDoorState(soap, &soap_tmp___onvifDoorControl__GetDoorState, "-onvifDoorControl:GetDoorState", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetDoorState(soap_tmp___onvifDoorControl__GetDoorState.onvifDoorControl__GetDoorState, onvifDoorControl__GetDoorStateResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__GetDoorStateResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__GetDoorStateResponse.soap_put(soap, "onvifDoorControl:GetDoorStateResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__GetDoorStateResponse.soap_put(soap, "onvifDoorControl:GetDoorStateResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__AccessDoor(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__AccessDoor soap_tmp___onvifDoorControl__AccessDoor;
    _onvifDoorControl__AccessDoorResponse onvifDoorControl__AccessDoorResponse;
    onvifDoorControl__AccessDoorResponse.soap_default(soap);
    soap_default___onvifDoorControl__AccessDoor(soap, &soap_tmp___onvifDoorControl__AccessDoor);
    if (!soap_get___onvifDoorControl__AccessDoor(soap, &soap_tmp___onvifDoorControl__AccessDoor, "-onvifDoorControl:AccessDoor", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->AccessDoor(soap_tmp___onvifDoorControl__AccessDoor.onvifDoorControl__AccessDoor, onvifDoorControl__AccessDoorResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__AccessDoorResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__AccessDoorResponse.soap_put(soap, "onvifDoorControl:AccessDoorResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__AccessDoorResponse.soap_put(soap, "onvifDoorControl:AccessDoorResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__LockDoor(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__LockDoor soap_tmp___onvifDoorControl__LockDoor;
    _onvifDoorControl__LockDoorResponse onvifDoorControl__LockDoorResponse;
    onvifDoorControl__LockDoorResponse.soap_default(soap);
    soap_default___onvifDoorControl__LockDoor(soap, &soap_tmp___onvifDoorControl__LockDoor);
    if (!soap_get___onvifDoorControl__LockDoor(soap, &soap_tmp___onvifDoorControl__LockDoor, "-onvifDoorControl:LockDoor", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->LockDoor(soap_tmp___onvifDoorControl__LockDoor.onvifDoorControl__LockDoor, onvifDoorControl__LockDoorResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__LockDoorResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__LockDoorResponse.soap_put(soap, "onvifDoorControl:LockDoorResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__LockDoorResponse.soap_put(soap, "onvifDoorControl:LockDoorResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__UnlockDoor(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__UnlockDoor soap_tmp___onvifDoorControl__UnlockDoor;
    _onvifDoorControl__UnlockDoorResponse onvifDoorControl__UnlockDoorResponse;
    onvifDoorControl__UnlockDoorResponse.soap_default(soap);
    soap_default___onvifDoorControl__UnlockDoor(soap, &soap_tmp___onvifDoorControl__UnlockDoor);
    if (!soap_get___onvifDoorControl__UnlockDoor(soap, &soap_tmp___onvifDoorControl__UnlockDoor, "-onvifDoorControl:UnlockDoor", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->UnlockDoor(soap_tmp___onvifDoorControl__UnlockDoor.onvifDoorControl__UnlockDoor, onvifDoorControl__UnlockDoorResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__UnlockDoorResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__UnlockDoorResponse.soap_put(soap, "onvifDoorControl:UnlockDoorResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__UnlockDoorResponse.soap_put(soap, "onvifDoorControl:UnlockDoorResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__BlockDoor(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__BlockDoor soap_tmp___onvifDoorControl__BlockDoor;
    _onvifDoorControl__BlockDoorResponse onvifDoorControl__BlockDoorResponse;
    onvifDoorControl__BlockDoorResponse.soap_default(soap);
    soap_default___onvifDoorControl__BlockDoor(soap, &soap_tmp___onvifDoorControl__BlockDoor);
    if (!soap_get___onvifDoorControl__BlockDoor(soap, &soap_tmp___onvifDoorControl__BlockDoor, "-onvifDoorControl:BlockDoor", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->BlockDoor(soap_tmp___onvifDoorControl__BlockDoor.onvifDoorControl__BlockDoor, onvifDoorControl__BlockDoorResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__BlockDoorResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__BlockDoorResponse.soap_put(soap, "onvifDoorControl:BlockDoorResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__BlockDoorResponse.soap_put(soap, "onvifDoorControl:BlockDoorResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__LockDownDoor(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__LockDownDoor soap_tmp___onvifDoorControl__LockDownDoor;
    _onvifDoorControl__LockDownDoorResponse onvifDoorControl__LockDownDoorResponse;
    onvifDoorControl__LockDownDoorResponse.soap_default(soap);
    soap_default___onvifDoorControl__LockDownDoor(soap, &soap_tmp___onvifDoorControl__LockDownDoor);
    if (!soap_get___onvifDoorControl__LockDownDoor(soap, &soap_tmp___onvifDoorControl__LockDownDoor, "-onvifDoorControl:LockDownDoor", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->LockDownDoor(soap_tmp___onvifDoorControl__LockDownDoor.onvifDoorControl__LockDownDoor, onvifDoorControl__LockDownDoorResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__LockDownDoorResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__LockDownDoorResponse.soap_put(soap, "onvifDoorControl:LockDownDoorResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__LockDownDoorResponse.soap_put(soap, "onvifDoorControl:LockDownDoorResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__LockDownReleaseDoor(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__LockDownReleaseDoor soap_tmp___onvifDoorControl__LockDownReleaseDoor;
    _onvifDoorControl__LockDownReleaseDoorResponse onvifDoorControl__LockDownReleaseDoorResponse;
    onvifDoorControl__LockDownReleaseDoorResponse.soap_default(soap);
    soap_default___onvifDoorControl__LockDownReleaseDoor(soap, &soap_tmp___onvifDoorControl__LockDownReleaseDoor);
    if (!soap_get___onvifDoorControl__LockDownReleaseDoor(soap, &soap_tmp___onvifDoorControl__LockDownReleaseDoor, "-onvifDoorControl:LockDownReleaseDoor", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->LockDownReleaseDoor(soap_tmp___onvifDoorControl__LockDownReleaseDoor.onvifDoorControl__LockDownReleaseDoor, onvifDoorControl__LockDownReleaseDoorResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__LockDownReleaseDoorResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__LockDownReleaseDoorResponse.soap_put(soap, "onvifDoorControl:LockDownReleaseDoorResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__LockDownReleaseDoorResponse.soap_put(soap, "onvifDoorControl:LockDownReleaseDoorResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__LockOpenDoor(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__LockOpenDoor soap_tmp___onvifDoorControl__LockOpenDoor;
    _onvifDoorControl__LockOpenDoorResponse onvifDoorControl__LockOpenDoorResponse;
    onvifDoorControl__LockOpenDoorResponse.soap_default(soap);
    soap_default___onvifDoorControl__LockOpenDoor(soap, &soap_tmp___onvifDoorControl__LockOpenDoor);
    if (!soap_get___onvifDoorControl__LockOpenDoor(soap, &soap_tmp___onvifDoorControl__LockOpenDoor, "-onvifDoorControl:LockOpenDoor", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->LockOpenDoor(soap_tmp___onvifDoorControl__LockOpenDoor.onvifDoorControl__LockOpenDoor, onvifDoorControl__LockOpenDoorResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__LockOpenDoorResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__LockOpenDoorResponse.soap_put(soap, "onvifDoorControl:LockOpenDoorResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__LockOpenDoorResponse.soap_put(soap, "onvifDoorControl:LockOpenDoorResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__LockOpenReleaseDoor(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__LockOpenReleaseDoor soap_tmp___onvifDoorControl__LockOpenReleaseDoor;
    _onvifDoorControl__LockOpenReleaseDoorResponse onvifDoorControl__LockOpenReleaseDoorResponse;
    onvifDoorControl__LockOpenReleaseDoorResponse.soap_default(soap);
    soap_default___onvifDoorControl__LockOpenReleaseDoor(soap, &soap_tmp___onvifDoorControl__LockOpenReleaseDoor);
    if (!soap_get___onvifDoorControl__LockOpenReleaseDoor(soap, &soap_tmp___onvifDoorControl__LockOpenReleaseDoor, "-onvifDoorControl:LockOpenReleaseDoor", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->LockOpenReleaseDoor(soap_tmp___onvifDoorControl__LockOpenReleaseDoor.onvifDoorControl__LockOpenReleaseDoor, onvifDoorControl__LockOpenReleaseDoorResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__LockOpenReleaseDoorResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__LockOpenReleaseDoorResponse.soap_put(soap, "onvifDoorControl:LockOpenReleaseDoorResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__LockOpenReleaseDoorResponse.soap_put(soap, "onvifDoorControl:LockOpenReleaseDoorResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifDoorControl__DoubleLockDoor(struct soap *soap, DoorControlBindingService *service)
{
    struct __onvifDoorControl__DoubleLockDoor soap_tmp___onvifDoorControl__DoubleLockDoor;
    _onvifDoorControl__DoubleLockDoorResponse onvifDoorControl__DoubleLockDoorResponse;
    onvifDoorControl__DoubleLockDoorResponse.soap_default(soap);
    soap_default___onvifDoorControl__DoubleLockDoor(soap, &soap_tmp___onvifDoorControl__DoubleLockDoor);
    if (!soap_get___onvifDoorControl__DoubleLockDoor(soap, &soap_tmp___onvifDoorControl__DoubleLockDoor, "-onvifDoorControl:DoubleLockDoor", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->DoubleLockDoor(soap_tmp___onvifDoorControl__DoubleLockDoor.onvifDoorControl__DoubleLockDoor, onvifDoorControl__DoubleLockDoorResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifDoorControl__DoubleLockDoorResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifDoorControl__DoubleLockDoorResponse.soap_put(soap, "onvifDoorControl:DoubleLockDoorResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifDoorControl__DoubleLockDoorResponse.soap_put(soap, "onvifDoorControl:DoubleLockDoorResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}
/* End of server object code */
