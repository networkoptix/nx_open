<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<artifactId>hdwitness</artifactId>
		<groupId>com.networkoptix.hdwitness</groupId>
		<version>1.4.2</version>
		<relativePath>..</relativePath>
	</parent>

	<groupId>com.networkoptix.hdwitness</groupId>
	<version>1.4.2</version>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>cpp</artifactId>
	<packaging>pom</packaging>
	<name>Common POM for cpp projects</name>

	<properties>
		<buildLib/>
		<product.title>${project.name}</product.title>		
	</properties>

	<build>
		<directory>${arch}</directory>
		<outputDirectory>${arch}</outputDirectory>
		<sourceDirectory>${basedir}/src</sourceDirectory> 
		<defaultGoal>compile</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>../build-${customization}.properties</file>
								<file>../build-environment/${arch}/libdir.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>auto-clean</id>
						<phase>validate</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.build.directory}</directory>
									<followSymlinks>false</followSymlinks>
									<useDefaultExcludes>true</useDefaultExcludes>
									<excludes>
										<exclude>**/*.user</exclude>
										<exclude>**/launcher.exe</exclude>
									</excludes>
								</fileset>
								<fileset>
									<directory>${project.build.sourceDirectory}</directory>
									<followSymlinks>false</followSymlinks>
									<useDefaultExcludes>true</useDefaultExcludes>
									<includes>
										<include>**/version.h</include>
										<include>**/filetypes.h</include>
										<include>**/compatibility_info.cpp</include>
										<include>*-${arch}*.vcproj</include>
									</includes>
								</fileset>								
								<fileset>
									<directory>${libdir}</directory>
									<followSymlinks>false</followSymlinks>
									<useDefaultExcludes>true</useDefaultExcludes>
									<includes>
										<include>**/${project.artifactId}.lib</include>
										<include>**/${project.artifactId}.exe</include>
										<include>**/${project.artifactId}.pdb</include>
										<include>**/${project.artifactId}.ilk</include>											
										<include>**/${project.artifactId}.so</include>
										<include>**/${project.artifactId}</include>
										<include>**/${project.artifactId}-bin</include>
									</includes>
								</fileset>								
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>prepare-qt-project</id>
						<phase>initialize</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>          
								<resource>
									<targetPath>${project.build.directory}</targetPath>
									<directory>${basedir}/../cpp/shared-resources</directory>
									<filtering>true</filtering>
									<excludes>
										<exclude>icons/**</exclude>
									</excludes>
								</resource>
								<resource>
									<targetPath>${project.build.directory}</targetPath>
									<directory>${basedir}/../cpp/shared-resources/icons/${custom.skin}</directory>
									<filtering>false</filtering>
								</resource>												
							</resources>              
							<encoding>UTF-8</encoding>
						</configuration>            
					</execution>
				</executions>
			</plugin>			

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<id>gen-qrc</id>
						<phase>process-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${python.dir}/python</executable>
							<arguments>
								<argument>gen-resources.py</argument>
							</arguments>
							<workingDirectory>${project.build.directory}</workingDirectory>		
						</configuration>
					</execution>
					<execution>
						<id>additional-build-steps</id>
						<phase>process-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${python.dir}/python</executable>
							<arguments>
								<argument>build-prepare.py</argument>
							</arguments>
							<workingDirectory>${project.build.directory}</workingDirectory>		
						</configuration>
					</execution>
				</executions>
			</plugin>					
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>generate-qt-project</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<failOnError>false</failOnError>
							<target>							
								<chmod file="${project.build.directory}/*.sh" perm="755"/>

								<concat destfile="${project.build.directory}/${project.artifactId}.pro" append="false">
									<filelist dir="${project.build.directory}" files="template.pro"/>
								</concat>	
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}</echo>
								<concat destfile="${project.build.directory}/${project.artifactId}.pro" append="true">
									<filelist dir="${project.build.directory}" files="${project.artifactId}-specifics.pro"/>
								</concat>								

								<dirset id="includes_path" dir="${libdir}/build/include" includes="*" erroronmissingdir="false"/>
								<pathconvert pathsep="${line.separator}" property="includes" refid="includes_path">
									<map from="" to="INCLUDEPATH += "/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${includes}</echo>

								<dirset id="base_includes_path" dir="${environment.dir}/include" includes="*" erroronmissingdir="false"/>
								<pathconvert pathsep="${line.separator}" property="base_includes" refid="base_includes_path">
									<map from="" to="INCLUDEPATH += "/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${base_includes}</echo>								

								<fileset id="debug_libs_path" dir="${libdir}/build/bin/debug" erroronmissingdir="false">
									<include name="**/*.lib" />
								</fileset>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}CONFIG(debug, debug|release) {</echo>
								<pathconvert pathsep="${line.separator}" property="debug_libs" refid="debug_libs_path">
									<map from="${libdir}/build/bin/debug/" to="     LIBS += -l"/>									
									<regexpmapper from="^(.*)\.lib$$" to="\1"/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${debug_libs}${line.separator}}</echo>

								<fileset id="release_libs_path" dir="${libdir}/build/bin/release" erroronmissingdir="false">
									<include name="**/*.lib" />
								</fileset>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}CONFIG(release, debug|release) {</echo>
								<pathconvert pathsep="${line.separator}" property="release_libs" refid="release_libs_path">
									<map from="${libdir}/build/bin/release/" to="    LIBS += -l"/>									
									<regexpmapper from="^(.*)\.lib$$" to="\1"/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${release_libs}${line.separator}}</echo>

								<fileset id="linux_debug_libs_path" dir="${libdir}/build/bin/debug" erroronmissingdir="false">
									<include name="**/*.so" />
									<include name="**/*.a" />
									<exclude name="**/libcommon.a" />																		
								</fileset>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}CONFIG(debug, debug|release) {</echo>
								<pathconvert pathsep="${line.separator}" property="linux_debug_libs" refid="linux_debug_libs_path">
									<map from="${libdir}/build/bin/debug/lib" to="    LIBS += -l"/>									
									<regexpmapper from="^(.*)\.(.*)$$" to="\1"/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${linux_debug_libs}${line.separator}}</echo>

								<fileset id="linux_release_libs_path" dir="${libdir}/build/bin/release" erroronmissingdir="false">
									<include name="**/*.so" />
									<include name="**/*.a" />									
									<exclude name="**/libcommon.a" />									
								</fileset>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}CONFIG(release, debug|release) {</echo>
								<pathconvert pathsep="${line.separator}" property="linux_release_libs" refid="linux_release_libs_path">
									<map from="${libdir}/build/bin/release/lib" to="    LIBS += -l"/>									
									<regexpmapper from="^(.*)\.(.*)$$" to="\1"/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${linux_release_libs}${line.separator}}</echo>

								<fileset id="headers_path" dir="${project.build.sourceDirectory}" erroronmissingdir="false">
									<include name="**/*.h" />
									<exclude name="**/version.h" />
									<exclude name="**/*_${exclude_platform}/**" />		
									<exclude name="**/*_${exclude_platform}.*" />											
									<exclude name="youtube/**" />
								</fileset>
								<pathconvert pathsep="${line.separator}" property="headers" refid="headers_path">
									<map from="" to="HEADERS += "/>
								</pathconvert>									
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${headers}</echo>

								<!--<fileset id="libs_headers_path" dir="${libdir}" erroronmissingdir="false">
									<include name="**/*.c" />
								</fileset>
								<pathconvert pathsep="${line.separator}" property="libs_headers" refid="libs_headers_path">
									<map from="" to="HEADERS += "/>
								</pathconvert>									
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${libs_headers}</echo>		-->						

								<fileset id="sources_path" dir="${project.build.sourceDirectory}" erroronmissingdir="false">
									<include name="**/*.cpp" />
									<include name="**/*.cc" />
									<include name="**/*.c" />
									<exclude name="youtube/**" />									
									<exclude name="**/*_${exclude_platform}/**" />	
									<exclude name="**/*_${exclude_platform}.*" />																				
								</fileset>
								<pathconvert pathsep="${line.separator}" property="sources" refid="sources_path">
									<map from="" to="SOURCES += "/>
								</pathconvert>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${sources}</echo>

								<fileset id="forms_path" dir="${project.build.sourceDirectory}" erroronmissingdir="false">
									<include name="**/*.ui" />
									<exclude name="youtube/**" />
									<exclude name="**/**_${exclude_platform}/**" />										
								</fileset>
								<pathconvert pathsep="${line.separator}" property="forms" refid="forms_path">
									<map from="" to="FORMS += "/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${forms}</echo>

								<fileset id="proto_path" dir="${project.build.sourceDirectory}" erroronmissingdir="false">
									<include name="**/*.proto" />
								</fileset>
								<pathconvert pathsep="${line.separator}" property="proto" refid="proto_path">
									<map from="" to="PB_FILES += "/>
								</pathconvert>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${proto}</echo>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}</echo>								
							</target>
						</configuration>
					</execution>				
				</executions>
			</plugin>				
		</plugins>		
	</build>
	<profiles>
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<properties>
				<compiler>msvc2008</compiler>
				<arch>x86</arch>
				<platform>windows</platform>
				<exclude_platform>unix</exclude_platform>
			</properties>
			<build>
				<plugins>					
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1.1</version>
						<executions>
							<execution>
								<id>generate-vcproj</id>
								<phase>process-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>qmake</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>		
									<arguments>
										<commandlineArgs>-tp</commandlineArgs>
										<commandlineArgs>vc</commandlineArgs>
										<commandlineArgs>-o</commandlineArgs>
										<commandlineArgs>${project.build.sourceDirectory}/${project.artifactId}-${arch}.vcproj</commandlineArgs>
										<commandlineArgs>${project.build.directory}/${project.artifactId}.pro</commandlineArgs>
									</arguments>
								</configuration>
							</execution>	
							<execution>
								<id>default-cli</id>
								<phase>process-classes</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>build.bat</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>		
									<arguments>
										<commandlineArgs>${build.configuration}</commandlineArgs>
									</arguments>
								</configuration>
							</execution>							
						</executions>
					</plugin>	
					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>maven-replacer-plugin</artifactId>
						<version>1.4.1</version>
						<executions>
							<execution>
								<phase>process-resources</phase>
								<goals>
									<goal>replace</goal>
								</goals>
								<configuration>
									<includes>
										<include>**/${project.artifactId}-x64.vcproj</include>
									</includes>
									<replacements>
										<replacement>
											<token>Win32</token>
											<value>${arch}</value>
										</replacement>         
									</replacements>
								</configuration>								
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>linux</id>
			<activation>
				<os>
					<family>unix</family>
					<name>linux</name>
				</os>		
			</activation>
			<properties>
				<compiler>gcc</compiler>
				<rename-skip>false</rename-skip>
				<exclude_platform>win</exclude_platform>				
			</properties>
			<build>	
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1.1</version>
						<executions>
							<execution>
								<id>generate-makefile</id>
								<phase>process-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>qmake</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>		
									<arguments>
										<commandlineArgs>-spec</commandlineArgs>
										<commandlineArgs>linux-g++</commandlineArgs>
										<commandlineArgs>CONFIG+=${build.configuration}</commandlineArgs>
										<commandlineArgs>-o</commandlineArgs>
										<commandlineArgs>${project.build.directory}/Makefile.${build.configuration}</commandlineArgs>
										<commandlineArgs>${project.build.directory}/${project.artifactId}.pro</commandlineArgs>
									</arguments>
								</configuration>
							</execution>	
							<execution>
								<id>process-with-make</id>
								<phase>process-classes</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${project.build.directory}/build.sh</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>		
								</configuration>
							</execution>

							<execution>
								<id>prepare-deb</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${project.build.directory}/prepare-package.sh</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>		
									<skip>${assembly-skip}</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!--<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.2.2</version>
						<executions>
							<execution>
								<id>pack-binaries</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.build.directory}/binaries-linux.xml</descriptor>
									</descriptors>							
								</configuration>
							</execution>
						</executions>
					</plugin>-->
				</plugins>	
			</build>			
		</profile>	
	</profiles>	
</project>
