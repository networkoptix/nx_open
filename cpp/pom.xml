<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<artifactId>hdwitness</artifactId>
		<groupId>com.networkoptix.hdwitness</groupId>
		<version>1.2.0</version>
		<relativePath>..</relativePath>
	</parent>

	<groupId>com.networkoptix.hdwitness</groupId>
	<version>1.2.0</version>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>cpp</artifactId>
	<packaging>pom</packaging>
	<name>Common POM for cpp projects</name>

	<properties>
		<assembly-skip>false</assembly-skip>
		<convert-only>true</convert-only>
		<ffmpeg.version>2012-04-10-N-39672-g40b7a27</ffmpeg.version>
		<openssl.version>1.0.0j</openssl.version>
		<buildLib/>
		<qtlib1/>
		<qtlib2/>
		<qtlib3/>
		<qtlib4/>
		<qtlib5/>
		<qtlib6/>
		<qtlib7/>
		<qtlib8/>
		<qtlib9/>	
	</properties>

	<dependencies>
		<dependency>
			<groupId>org</groupId>
			<artifactId>openssl</artifactId>
			<version>${openssl.version}</version>
			<type>zip</type>
			<classifier>${platform}-${arch}</classifier>
		</dependency>
	</dependencies>		
	
	<build>
		<directory>${arch}</directory>
		<outputDirectory>${arch}</outputDirectory>
		<sourceDirectory>${basedir}/src</sourceDirectory> 	
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>../build-${customization}.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<id>additional-build-steps</id>
						<phase>process-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>python</executable>
							<arguments>
								<argument>build-prepare.py</argument>
							</arguments>
							<workingDirectory>${project.build.directory}</workingDirectory>		
						</configuration>
					</execution>
				</executions>
			</plugin>					
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>generate-qt-project</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<failOnError>false</failOnError>
							<target>							
								<chmod file="${project.build.directory}/*.sh" perm="755"/>
								
								<!-- This ugly hack prevents creating symlinks instead of text files (this is known unzip issue).
								First everything except *.h is unpacked then *.h only -->
								
								<exec dir="${project.build.directory}" executable="unzip" failifexecutionfails="false">
									<arg line="-a -u *.zip -x **/include/** *.a"/>
								</exec>
								<exec dir="${project.build.directory}" executable="unzip" failifexecutionfails="false">
									<arg line="-a -u *.zip **/include/**"/>
								</exec>
								<exec dir="${project.build.directory}" executable="unzip" failifexecutionfails="false">
									<arg line="-a -u *.zip *.a"/>
								</exec>                             
								
								<concat destfile="${project.build.directory}/${project.artifactId}.pro" append="false">
									<filelist dir="${project.build.directory}" files="template.pro"/>
								</concat>	
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}</echo>
								<concat destfile="${project.build.directory}/${project.artifactId}.pro" append="true">
									<filelist dir="${project.build.directory}" files="${project.artifactId}-specifics.pro"/>
								</concat>								

								<dirset id="includes_path" dir="${project.build.directory}/build/include" includes="*" erroronmissingdir="false"/>
								<pathconvert pathsep="${line.separator}" property="includes" refid="includes_path">
									<map from="" to="INCLUDEPATH += "/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${includes}</echo>

								<fileset id="debug_libs_path" dir="${project.build.directory}/build/bin/debug" erroronmissingdir="false">
									<include name="**/*.lib" />
								</fileset>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}CONFIG(debug, debug|release) {</echo>
								<pathconvert pathsep="${line.separator}" property="debug_libs" refid="debug_libs_path">
									<map from="${project.build.directory}/build/bin/debug/" to="     LIBS += -l"/>									
									<regexpmapper from="^(.*)\.lib$$" to="\1"/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${debug_libs}${line.separator}}</echo>

								<fileset id="release_libs_path" dir="${project.build.directory}/build/bin/release" erroronmissingdir="false">
									<include name="**/*.lib" />
								</fileset>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}CONFIG(release, debug|release) {</echo>
								<pathconvert pathsep="${line.separator}" property="release_libs" refid="release_libs_path">
									<map from="${project.build.directory}/build/bin/release/" to="    LIBS += -l"/>									
									<regexpmapper from="^(.*)\.lib$$" to="\1"/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${release_libs}${line.separator}}</echo>

								<fileset id="linux_debug_libs_path" dir="${project.build.directory}/build/bin/debug" erroronmissingdir="false">
									<include name="**/*.so" />
									<include name="**/*.a" />
								</fileset>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}CONFIG(debug, debug|release) {</echo>
								<pathconvert pathsep="${line.separator}" property="linux_debug_libs" refid="linux_debug_libs_path">
									<map from="${project.build.directory}/build/bin/debug/lib" to="     LIBS += -l"/>									
									<regexpmapper from="^(.*)\.(.*)$$" to="\1"/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${linux_debug_libs}${line.separator}}</echo>

								<fileset id="linux_release_libs_path" dir="${project.build.directory}/build/bin/release" erroronmissingdir="false">
									<include name="**/*.so" />
									<include name="**/*.a" />									
								</fileset>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}CONFIG(release, debug|release) {</echo>
								<pathconvert pathsep="${line.separator}" property="linux_release_libs" refid="linux_release_libs_path">
									<map from="${project.build.directory}/build/bin/release/lib" to="    LIBS += -l"/>									
									<regexpmapper from="^(.*)\.(.*)$$" to="\1"/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${linux_release_libs}${line.separator}}</echo>

								<fileset id="headers_path" dir="${project.build.sourceDirectory}" erroronmissingdir="false">
									<include name="**/*.h" />
								</fileset>
								<pathconvert pathsep="${line.separator}" property="headers" refid="headers_path">
									<map from="" to="HEADERS += "/>
								</pathconvert>									
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${headers}</echo>

								<fileset id="sources_path" dir="${project.build.sourceDirectory}" erroronmissingdir="false">
									<include name="**/*.cpp" />
									<include name="**/*.cc" />
									<include name="**/*.c" />
								</fileset>
								<pathconvert pathsep="${line.separator}" property="sources" refid="sources_path">
									<map from="" to="SOURCES += "/>
								</pathconvert>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${sources}</echo>

								<fileset id="add_sources_path" dir="${project.build.directory}/build/include" erroronmissingdir="false">
									<include name="**/*.cpp" />
									<include name="**/*.cc" />
									<include name="**/*.c" />
								</fileset>
								<pathconvert pathsep="${line.separator}" property="add_sources" refid="add_sources_path">
									<map from="" to="SOURCES += "/>
								</pathconvert>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${add_sources}</echo>

								<fileset id="qrc_path" dir="${project.build.directory}" erroronmissingdir="false">
									<include name="**/*.qrc" />
								</fileset>
								<pathconvert pathsep="${line.separator}" property="qrc" refid="qrc_path">
									<map from="" to="RESOURCES += "/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${qrc}</echo>

								<!-- <fileset id="lang_path" dir="${project.build.sourceDirectory}" erroronmissingdir="false">
									<include name="**/*.ts" />
								</fileset>
								<pathconvert pathsep="${line.separator}" property="lang" refid="lang_path">
									<map from="" to="TRANSLATIONS += "/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${lang}</echo> -->

								<fileset id="forms_path" dir="${project.build.sourceDirectory}" erroronmissingdir="false">
									<include name="**/*.ui" />
								</fileset>
								<pathconvert pathsep="${line.separator}" property="forms" refid="forms_path">
									<map from="" to="FORMS += "/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${forms}</echo>

								<dirset id="includes_pri_path" dir="${project.build.directory}/build/pri" includes="*" erroronmissingdir="false"/>
								<pathconvert pathsep="${line.separator}" property="includes_pri" refid="includes_pri_path">
									<map from="" to="INCLUDEPATH += "/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${includes_pri}</echo>	

								<fileset id="pri_path" dir="${project.build.directory}/build/pri" erroronmissingdir="false">
									<include name="**/src/*.pri" />
								</fileset>
								<pathconvert pathsep="${line.separator}" property="pri" refid="pri_path">
									<map from="" to="include("/>
									<globmapper from="*.pri" to="*.pri)"/>
								</pathconvert>								
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${pri}</echo>

								<fileset id="proto_path" dir="${project.build.sourceDirectory}" erroronmissingdir="false">
									<include name="**/*.proto" />
								</fileset>
								<pathconvert pathsep="${line.separator}" property="proto" refid="proto_path">
									<map from="" to="PB_FILES += "/>
								</pathconvert>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${proto}</echo>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}</echo>								
							</target>
						</configuration>
					</execution>				
				</executions>
			</plugin>				
		</plugins>		
	</build>
	<profiles>
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<properties>
				<arch>x86</arch>
				<platform>windows</platform>
			</properties>
			<build>
				<plugins>					
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1.1</version>
						<executions>
							<execution>
								<id>generate-vcproj</id>
								<phase>process-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>qmake</executable>
									<workingDirectory>${environment.dir}/qt/bin/</workingDirectory>		
									<arguments>
										<commandlineArgs>-tp</commandlineArgs>
										<commandlineArgs>vc</commandlineArgs>
										<commandlineArgs>-o</commandlineArgs>
										<commandlineArgs>${project.build.sourceDirectory}/${project.artifactId}-${arch}.vcproj</commandlineArgs>
										<commandlineArgs>${project.build.directory}/${project.artifactId}.pro</commandlineArgs>
									</arguments>
								</configuration>
							</execution>	
							<execution>
								<id>package-with-msbuild</id>
								<phase>process-classes</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>build.bat</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>		
									<arguments>
										<commandlineArgs>${build.configuration}</commandlineArgs>
									</arguments>
								</configuration>
							</execution>							
						</executions>
					</plugin>	
					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>maven-replacer-plugin</artifactId>
						<version>1.4.0</version>
						<executions>
							<execution>
								<phase>process-resources</phase>
								<goals>
									<goal>replace</goal>
								</goals>
								<configuration>
									<includes>
										<include>${arch}/${project.artifactId}-x64.vcproj</include>
									</includes>
									<replacements>
										<replacement>
											<token>Win32</token>
											<value>${arch}</value>
										</replacement>         
									</replacements>
								</configuration>								
							</execution>
						</executions>
					</plugin>						
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.2.2</version>
						<executions>
							<execution>
								<id>pack-binaries</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.build.directory}/binaries-${build.configuration}.xml</descriptor>
									</descriptors>	
									<skip>${assembly-skip}</skip>									
								</configuration>
							</execution>
						</executions>
					</plugin>					
				</plugins>
			</build>
		</profile>

		<profile>
			<id>linux</id>
			<activation>
				<os>
					<family>unix</family>
					<name>linux</name>
				</os>		
			</activation>
			<properties>
				<rename-skip>false</rename-skip>
			</properties>
			<build>	
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<id>copy-platform-libs</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1.1</version>
						<executions>
							<execution>
								<id>generate-makefile</id>
								<phase>process-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>qmake</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>		
									<arguments>
										<commandlineArgs>-spec</commandlineArgs>
										<commandlineArgs>linux-g++</commandlineArgs>
										<commandlineArgs>CONFIG+=${build.configuration}</commandlineArgs>
										<commandlineArgs>-o</commandlineArgs>
										<commandlineArgs>${project.build.directory}/Makefile.${build.configuration}</commandlineArgs>
										<commandlineArgs>${project.build.directory}/${project.artifactId}.pro</commandlineArgs>
									</arguments>
								</configuration>
							</execution>	
							<execution>
								<id>process-with-make</id>
								<phase>process-classes</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>make</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>		
									<arguments>
										<commandlineArgs>-f</commandlineArgs>
										<commandlineArgs>Makefile.${build.configuration}</commandlineArgs>
										<commandlineArgs>-j</commandlineArgs>
										<commandlineArgs>1</commandlineArgs>
									</arguments>
								</configuration>
							</execution>

							<execution>
								<id>prepare-deb</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${project.build.directory}/prepare-package.sh</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>		
									<skip>${assembly-skip}</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.2.2</version>
						<executions>
							<execution>
								<id>pack-binaries</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.build.directory}/binaries-linux.xml</descriptor>
									</descriptors>							
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>	
			</build>			
		</profile>	

		<profile>
			<id>convert-clean-windows</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
			</activation>	
			<properties>
				<qtlib9>multimedia</qtlib9>
			</properties>				
			<dependencies>
				<dependency>
					<groupId>org.ffmpeg</groupId>
					<artifactId>ffmpeg-misc-headers-win32</artifactId>
					<version>dev</version>
					<type>zip</type>
					<classifier>${platform}</classifier>	
				</dependency>		
			</dependencies>				
			<build>
				<plugins>
					<!--<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<id>unpack-platform-libs</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin> -->
					<plugin>
						<groupId>com.goldin.plugins</groupId>
						<artifactId>maven-copy-plugin</artifactId>
						<version>0.2.3.6</version>
						<executions>
							<execution>
								<id>copy-qt-libraries</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<runIf>{{ buildLib != "staticlib" }}</runIf>
									<failIfNotFound>false</failIfNotFound>
									<resources>
										<resource>
											<targetPath>${project.build.directory}/bin</targetPath>
											<directory>${environment.dir}/qt/bin/${arch}</directory>
											<preservePath>true</preservePath>
											<includes>
												<include>**/qt${qtlib1}4.*</include>
												<include>**/qt${qtlib2}4.*</include>
												<include>**/qt${qtlib3}4.*</include>
												<include>**/qt${qtlib4}4.*</include>
												<include>**/qt${qtlib5}4.*</include>
												<include>**/qt${qtlib6}4.*</include>
												<include>**/qt${qtlib7}4.*</include>
												<include>**/qt${qtlib8}4.*</include>
												<include>**/qt${qtlib9}4.*</include>
												<include>**/qt${qtlib1}d4.*</include>
												<include>**/qt${qtlib2}d4.*</include>
												<include>**/qt${qtlib3}d4.*</include>
												<include>**/qt${qtlib4}d4.*</include>
												<include>**/qt${qtlib5}d4.*</include>
												<include>**/qt${qtlib6}d4.*</include>
												<include>**/qt${qtlib7}d4.*</include>
												<include>**/qt${qtlib8}d4.*</include>
												<include>**/qt${qtlib9}d4.*</include>												
											</includes>
											<excludes>
												<exclude>**/*.lib</exclude>
											</excludes>
										</resource>
										<resource>
											<targetPath>${project.build.directory}/bin</targetPath>
											<directory>${environment.dir}/qt/plugins/${arch}</directory>
											<preservePath>true</preservePath>
											<includes>
												<include>*/${qtplugin1}/**</include>
												<include>*/${qtplugin2}/**</include>
												<include>*/${qtplugin3}/**</include>
											</includes>										
										</resource>	
									</resources>								
								</configuration>
							</execution>
						</executions>
					</plugin>						
				</plugins>
			</build>
		</profile> 

		<profile>
			<id>convert-clean</id>
			<activation>				
				<file>
					<missing>${project.build.directory}/build/include</missing>
				</file> 
			</activation>			
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.5</version>
						<executions>
							<execution>
								<id>prepare-qt-project</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<resources>          
										<resource>
											<targetPath>${project.build.directory}</targetPath>
											<directory>${basedir}/../cpp/shared-resources</directory>
											<filtering>true</filtering>
											<excludes>
												<exclude>icons/**</exclude>
											</excludes>
										</resource>
										<resource>
											<targetPath>${project.build.directory}</targetPath>
											<directory>${basedir}/../cpp/shared-resources/icons/${custom.skin}</directory>
											<filtering>false</filtering>
										</resource>												
									</resources>              
									<encoding>UTF-8</encoding>
								</configuration>            
							</execution>
						</executions>
					</plugin>			
				</plugins>
			</build>
		</profile>
	</profiles>	
</project>
