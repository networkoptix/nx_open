<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!--
    Example pom for delegating maven goals to msbuild so it builds the "solution"
 
    A solution can be a group of projects, but here we only have one.
    It should also be possible to have one maven project per solution project, 
    and have a parent pom to deletegate the build.
  -->
	<parent>
		<artifactId>hdwitness</artifactId>
		<groupId>com.networkoptix.hdwitness</groupId>
		<version>1.3.1</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
  
	<groupId>com.networkoptix.hdwitness</groupId>
	<version>1.3.1</version>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>launcher</artifactId>
	<packaging>pom</packaging>
	<name>HD Witness Launcher</name>	

	<properties>
		<product.title>Launcher App</product.title>		
	</properties>	

	<build>  
		<directory>${arch}</directory>
		<outputDirectory>${arch}</outputDirectory>
		<sourceDirectory>${basedir}/src</sourceDirectory> 
		<defaultGoal>compile</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>../build-${customization}.properties</file>
								<file>../build-environment/${arch}/libdir.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>auto-clean</id>
						<phase>validate</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.build.directory}</directory>
									<followSymlinks>false</followSymlinks>
									<useDefaultExcludes>true</useDefaultExcludes>
									<excludes>
										<exclude>**/*.user</exclude>
									</excludes>
								</fileset>
								<fileset>
									<directory>${libdir}</directory>
									<followSymlinks>false</followSymlinks>
									<useDefaultExcludes>true</useDefaultExcludes>
									<includes>
										<include>**/${project.artifactId}.lib</include>
										<include>**/${project.artifactId}.exe</include>
										<include>**/${project.artifactId}.pdb</include>										
										<include>**/${project.artifactId}.ilk</include>	
										<include>**/${project.artifactId}.so</include>
										<include>**/${project.artifactId}</include>
										<include>**/${project.artifactId}-bin</include>
									</includes>
								</fileset>								
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>prepare-qt-project</id>
						<phase>initialize</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>          
								<resource>
									<targetPath>${project.build.directory}</targetPath>
									<directory>${basedir}/../cpp/shared-resources</directory>
									<filtering>true</filtering>
									<excludes>
										<exclude>icons/**</exclude>
										<exclude>**/build.bat</exclude>										
									</excludes>
								</resource>
								<resource>
									<targetPath>${project.build.directory}</targetPath>
									<directory>${basedir}/../cpp/shared-resources/icons/${custom.skin}</directory>
									<filtering>false</filtering>
								</resource>									
							</resources>              
							<encoding>UTF-8</encoding>
						</configuration>            
					</execution>
				</executions>
			</plugin>			

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<id>default-cli</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>build.bat</executable>
							<workingDirectory>${project.build.directory}</workingDirectory>		
							<arguments>
								<commandlineArgs>${build.configuration}</commandlineArgs>
							</arguments>
						</configuration>
					</execution>							
				</executions>
			</plugin>									
		</plugins>		
	</build>  
</project>