<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
     xmlns:util="http://schemas.microsoft.com/wix/UtilExtension"
     xmlns:fire="http://schemas.microsoft.com/wix/FirewallExtension"
     xmlns:SystemTools="http://schemas.appsecinc.com/wix/SystemToolsExtension">
    <Product Id="*" Name="${display.product.name} Server" Language="1033" Version="${release.version}.${buildNumber}" Manufacturer="${company.name}" UpgradeCode="${customization.upgradeCode}">
        <Package Id="*" InstallerVersion="300" Compressed="yes" Keywords="Installer" Comments="${company.name} ${display.product.name} Server Installer" Manufacturer="${company.name}" InstallPrivileges="elevated" InstallScope="perMachine"/>

        <?include ControlPanel.wxi ?>
        <?include BuildVars.wxi ?>

        <?define ProductName="${display.product.name}"?>
        <?define ServerRegPath="Software\${company.name}\${mediaserver.name}"?>

        <!-- Add property to access from custom actions -->
        <Property Id="ARCHITECTURE" Value="$(var.arch)" />

        <Property Id="REINSTALLMODE" Value="dmus"/> 

        <Property Id="ARPSYSTEMCOMPONENT" Value="1" />

        <?define VmsInstalling=" (NOT Installed AND PREVIOUSSERVERINSTALLED <> 1) "?>
        <?define VmsUpgrading=" (NOT Installed AND PREVIOUSSERVERINSTALLED = 1)" ?>
        <?define VmsChanging=" (Installed AND REMOVE <> "ALL") "?>
        <?define VmsRemoving=" (Installed AND REMOVE = "ALL") "?>

        <?define Remove_S1="(INSTALL_SERVER <> 1 AND !ServerFeature = 3)"?>

        <?define InstallServer="&ServerFeature = 3 AND !ServerFeature <> 3"?>

        <?define Inst_S1="(INSTALL_SERVER=1 AND !ServerFeature <> 3)"?>
        <?define Inst_S0="(NOT $(var.Inst_S1))"?>

        <?define Changing_S1="NOT $(var.VmsInstalling) AND $(var.Inst_S1)"?>
        <?define ChangingNothing="NOT $(var.VmsInstalling) AND $(var.Inst_S0)"?>

        <?define PasswordsEqual="(SERVER_PASSWORD = SERVER_PASSWORD_CONFIRM)" ?>
        <?define IsSettingsFilled="(SYSTEM_NAME AND SERVER_PORT AND SERVER_LOGIN AND SERVER_PASSWORD AND SERVER_PASSWORD_CONFIRM)"?>
        <?define IsSettingsCorrect=$(var.IsSettingsFilled) AND $(var.PasswordsEqual)?>
        <?define IsSettingsValid="($(var.IsSettingsFilled) AND $(var.PasswordsEqual) AND NOT BUSYPORT)"?>

        <?if $(var.arch) = x86 ?>
        <Condition Message="!(loc.Product_ArchMismatch)">
            <![CDATA[ NOT VersionNT64 ]]>
        </Condition>
        <?endif?>

        <SetProperty Id="REBOOT" Value="reallysuppress" After="FindRelatedProducts">Installed AND REMOVE&lt;&gt;"ALL"</SetProperty>
        <SetProperty Id="PREVIOUSVERSIONSINSTALLED" Value="[MIGRATE]" After="FindRelatedProducts"/>

        <SetProperty Action="SetServerPort1" Id="SERVER_PORT" Value="[SERVER_PORT_EC]" Before="SetServerPort2">NOT SERVER_PORT</SetProperty>
        <SetProperty Action="SetServerPort2" Id="SERVER_PORT" Value="7001" Before="CostInitialize">NOT SERVER_PORT</SetProperty>

        <Property Id="INSTALL_SERVER" Secure="yes"/>

        <SetProperty Id="INSTALL_SERVER" Value="1" After="ResetPreselected" Sequence="ui">
            <![CDATA[ $(var.VmsInstalling) OR &ServerFeature = 3 OR !ServerFeature = 3 ]]>
        </SetProperty>
        
        <WixVariable Id="WixUILicenseRtf" Value="License.rtf" />
        <WixVariable Id="WixUIBannerBmp" Value="Binary\eve\eve_logo-493x58.bmp" />
        <WixVariable Id="WixUIDialogBmp" Value="Binary\eve\eve_logo-493x312.bmp" />

        <!-- Logo -->
        <Icon Id="icon_menu.exe" SourceFile="Binary\eve\eve_logo.ico"/>
        <Icon Id="icon_desktop.exe" SourceFile="Binary\eve\eve_logo.ico"/>

        <!-- Disable restart manager as it causes installer to ask to stop services instead of doing this automatically -->
        <Property Id="MSIRESTARTMANAGERCONTROL" Value="Disable" Secure="yes"/>

        <Property Id="LAUNCHAPPONEXIT" Secure="yes" />
        <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOXTEXT" Secure="yes" />

        <!-- Properties -->
        <Property Id="WelcomeDlg_Title" Value="$(var.ProductName) Installer Setup" />

        <Property Id="BUSYPORT" Secure="yes"/>

        <Property Id="REMOVE_DATABASE" Secure="yes" Value="0"/>

        <Property Id="MEDIASERVER_REGISTRY_PATH" Value="$(var.ServerRegPath)"/>
        <Property Id="OLDEC_REGISTRY_PATH" Value="$(var.ECRegPath)"/>
        <Property Id="INSTALL_SHORTCUT_DESKTOP" Value="1"/>

        <!-- MediaServer properties-->

        <Property Id="SYSTEM_NAME" Secure="yes">
            <RegistrySearch Id="SystemNameReg" Root="HKLM" Key="$(var.ServerRegPath)" Name="systemName" Type="raw" Win64="yes"/>
        </Property>
        
        <Property Id="SERVER_PORT" Secure="yes">
            <RegistrySearch Id="ServerPortReg" Root="HKLM" Key="$(var.ServerRegPath)" Name="port" Type="raw" Win64="yes"/>
        </Property>

        <Property Id="SERVER_PORT_EC" Secure="yes">
            <RegistrySearch Id="ServerEcsPortReg" Root="HKLM" Key="$(var.ECRegPath)" Name="port" Type="raw" Win64="yes"/>
        </Property>

        <Property Id="ALLOW_CAMERA_CHANGES" Secure="yes"/>
   
        <Property Id="SERVER_LOGIN" Value="admin"/>
        <Property Id="SERVER_PASSWORD" Secure="yes"/>
        <Property Id="SERVER_PASSWORD_CONFIRM" Secure="yes"/>

        <Property Id="ALLOW_CAMERA_CHANGES_REF" Value="ALLOW_CAMERA_CHANGES"/>

        <Binary Id="CustomActions.dll" SourceFile="CustomActions\Release\CustomActions.dll" />

        <!-- Custom actions -->
        <CustomAction Id="SetPreviousServerInstalled" BinaryKey="CustomActions.dll" DllEntry="SetPreviousServerInstalled" Execute="immediate" Return="check"/>
        <CustomAction Id="ResetPreselected" Property="Preselected" Value="" />
        <CustomAction Id="GenerateGuidsForServers" BinaryKey="CustomActions.dll" DllEntry="GenerateGuidsForServers"/>
        <CustomAction Id="FindConfiguredStorages" BinaryKey="CustomActions.dll" DllEntry="FindConfiguredStorages"/>
        <CustomAction Id="DeleteDatabaseFile" BinaryKey="CustomActions.dll" DllEntry="DeleteDatabaseFile" Execute="deferred" Impersonate="no"/>

        <CustomAction Id="MissingFeature"  Error="At least one component should be selected"/>

        <CustomAction Id="FindFreePorts" BinaryKey="CustomActions.dll" DllEntry="FindFreePorts" />
        <CustomAction Id="CheckPorts" BinaryKey="CustomActions.dll" DllEntry="CheckPorts"/>
        <CustomAction Id="FixServerFolder" BinaryKey="CustomActions.dll" DllEntry="FixServerFolder"/>
        <CustomAction Id="GenerateSystemName" BinaryKey="CustomActions.dll" DllEntry="GenerateSystemName"/>
        <CustomAction Id="DetectIfSystemIsStandalone" BinaryKey="CustomActions.dll" DllEntry="DetectIfSystemIsStandalone"/>
        
        <CustomAction Id="CopyDatabaseFile_Cmd" Property="CopyDatabaseFile" Execute="immediate" Impersonate="no"
            Value="[$(var.SystemFolderActual)]config\systemprofile\AppData\Local\${company.name}\Enterprise Controller\db\ecs.db;#LocalAppDataFolder#\${company.name}\${mediaserver.name}\ecs.sqlite"/>
        <CustomAction Id="CopyDatabaseFile" BinaryKey="CustomActions.dll" DllEntry="CopyDatabaseFile" Execute="deferred" Impersonate="no"/>

        <CustomAction Id="CopyHostedFiles_Cmd" Property="CopyHostedFiles" Execute="immediate" Impersonate="no"
            Value="[$(var.SystemFolderActual)]config\systemprofile\AppData\Local\${company.name}\Enterprise Controller\hostedfiles;#LocalAppDataFolder#\${company.name}\${mediaserver.name}\vms_storedfiles"/>
        <CustomAction Id="CopyHostedFiles" BinaryKey="CustomActions.dll" DllEntry="CopyHostedFiles" Execute="deferred" Impersonate="no"/>

        <CustomAction Id="DeleteOldMediaserverSettings_Cmd" Property="DeleteOldMediaserverSettings" Value="$(var.ServerRegPath)" Execute="immediate" Impersonate="yes"/>
        <CustomAction Id="DeleteOldMediaserverSettings" BinaryKey="CustomActions.dll" DllEntry="DeleteOldMediaserverSettings" Execute="deferred" Impersonate="no"/>
        
        <!-- Assign default values for Quick installation -->
        <CustomAction Id="AssignServerPort" Property="SERVER_PORT" Value="[FREEPORT1]"/>

        <CustomAction Id="CertGenAction_Cmd" Property="CertGenAction"
                      Value="&quot;[#certgen.exe]&quot; -i" Execute="immediate" Impersonate="yes"/>
        <CustomAction Id="CertGenAction" BinaryKey="WixCA" DllEntry="CAQuietExec"
                      Execute="deferred" Return="check" Impersonate="no" />

        <CustomAction Id="CloseTrayToolAction_Cmd" Property="CloseTrayToolAction"
                      Value="&quot;[${customization}TrayToolDir]traytool.exe&quot; &quot;quit&quot;" Execute="immediate" />
        <CustomAction Id="CloseTrayToolAction" BinaryKey="WixCA" DllEntry="CAQuietExec"
                      Execute="deferred" Return="ignore" Impersonate="no" />

        <CustomAction Id="CloseTrayToolAction2_Cmd" Property="CloseTrayToolAction2"
                      Value='"[WindowsFolder]\System32\taskkill.exe" /F /IM traytool.exe' Execute="immediate" />
        <CustomAction Id="CloseTrayToolAction2" BinaryKey="WixCA" DllEntry="CAQuietExec"
                      Execute="deferred" Return="ignore" Impersonate="no" />

        <CustomAction Id="SyncDatabaseAction_Cmd_WithWarning" Property="SyncDatabaseAction"
                      Value="&quot;[#dbsync.exe]&quot;;1;!(loc.UpgradeDlg_DatabaseRecovery)" Execute="immediate" Impersonate="yes"/>
        <CustomAction Id="SyncDatabaseAction_Cmd_WithoutWarning" Property="SyncDatabaseAction"
                      Value="&quot;[#dbsync.exe]&quot;;100500;" Execute="immediate" Impersonate="yes"/>
        <CustomAction Id="SyncDatabaseAction" BinaryKey="CustomActions.dll" DllEntry="CAQuitExecAndWarn"
                      Execute="deferred" Return="check" Impersonate="no" />

        <CustomAction Id="DeleteDatabaseFile_Cmd" Property="DeleteDatabaseFile" Execute="immediate" Impersonate="no"
                      Value="#LocalAppDataFolder#\${company.name}\${mediaserver.name}\ecs.sqlite"/>

        <CustomAction Id="LaunchTrayTool" Execute="immediate" Impersonate="yes" Return="asyncNoWait" Directory="${customization}TrayToolDir" ExeCommand="[${customization}TrayToolDir]traytool.exe"/>

        <CustomAction Id="NoDowngrade" Error="NoDowngrade" /> 


        <MajorUpgrade AllowSameVersionUpgrades="yes"
            Schedule="afterInstallInitialize"
            DowngradeErrorMessage="!(loc.DowngradeWarningDlg_DowngradeWarning)"
            MigrateFeatures="yes" />

        <InstallUISequence>
            <Custom Action="SetPreviousServerInstalled" Before="MigrateFeatureStates">(NOT Installed) AND (NOT (REMOVE="ALL"))</Custom>
            <Custom Action="ResetPreselected" After="MigrateFeatureStates">Installed AND Preselected</Custom>
            <FindRelatedProducts Before="AppSearch" />
            <AppSearch Before="LaunchConditions" />

            <Custom Action="FindFreePorts" After="SetServerPort2"/>
            <Custom Action="AssignServerPort" After="FindFreePorts">NOT SERVER_PORT</Custom>
            <Custom Action="FindConfiguredStorages" After="AssignServerPort"/> 
        </InstallUISequence>

        <InstallExecuteSequence>
            <FindRelatedProducts Before="AppSearch" />
            <AppSearch Before="LaunchConditions" />

            <Custom Action="DetectIfSystemIsStandalone" Before="CostInitialize">$(var.VmsUpgrading)</Custom>
            <Custom Action="GenerateSystemName" After="DetectIfSystemIsStandalone">$(var.VmsUpgrading) AND NOT SYSTEM_NAME AND STANDALONE_SYSTEM="yes"</Custom>

            <Custom Action="CopyDatabaseFile_Cmd" After="InstallFiles">
                <![CDATA[ $(var.Inst_S1) AND REMOVE <> "ALL" ]]></Custom>
            <Custom Action="CopyDatabaseFile" After="CopyDatabaseFile_Cmd">
                <![CDATA[ $(var.Inst_S1) AND REMOVE <> "ALL" ]]></Custom>
            <Custom Action="CopyHostedFiles_Cmd" After="InstallFiles">
                <![CDATA[ $(var.Inst_S1) AND REMOVE <> "ALL" ]]></Custom>
            <Custom Action="CopyHostedFiles" After="CopyHostedFiles_Cmd">
                <![CDATA[ $(var.Inst_S1) AND REMOVE <> "ALL" ]]></Custom>

            <Custom Action="CertGenAction_Cmd" After="CopyDatabaseFile">
                <![CDATA[ $(var.InstallServer) AND REMOVE <> "ALL" ]]></Custom>
            <Custom Action="CertGenAction" After="CertGenAction_Cmd">
                <![CDATA[ $(var.InstallServer) AND REMOVE <> "ALL" ]]></Custom>

            <Custom Action="SyncDatabaseAction_Cmd_WithWarning" Before="SyncDatabaseAction">
                <![CDATA[ $(var.VmsUpgrading) AND $(var.InstallServer) AND REMOVE <> "ALL" ]]></Custom>
            <Custom Action="SyncDatabaseAction_Cmd_WithoutWarning" Before="SyncDatabaseAction">
                <![CDATA[ (NOT $(var.VmsUpgrading)) AND $(var.InstallServer) AND REMOVE <> "ALL" ]]></Custom>

            <Custom Action="SyncDatabaseAction" After="CertGenAction">
                <![CDATA[ $(var.InstallServer) AND REMOVE <> "ALL" AND $(var.VmsUpgrading) ]]></Custom>

            <Custom Action="DeleteOldMediaserverSettings_Cmd" After="WriteRegistryValues">$(var.VmsUpgrading)</Custom>
            <Custom Action="DeleteOldMediaserverSettings" After="DeleteOldMediaserverSettings_Cmd">$(var.VmsUpgrading)</Custom>

            <Custom Action="CloseTrayToolAction_Cmd" Before="CloseTrayToolAction">NOT $(var.VmsInstalling)</Custom>                                 
            <Custom Action="CloseTrayToolAction" Before="CloseTrayToolAction2_Cmd">NOT $(var.VmsInstalling)</Custom>

            <Custom Action="CloseTrayToolAction2_Cmd" Before="CloseTrayToolAction2">NOT $(var.VmsInstalling)</Custom>
            <Custom Action="CloseTrayToolAction2" Before="StopServices">NOT $(var.VmsInstalling)</Custom>

            <Custom Action="LaunchTrayTool" After="InstallFinalize">
            <![CDATA[ (!ServerFeature=3 OR INSTALL_SERVER) AND REMOVE <> "ALL" ]]></Custom>

            <Custom Action="DeleteDatabaseFile_Cmd" After="StopServices">REMOVE_DATABASE=1</Custom>
            <Custom Action="DeleteDatabaseFile" After="DeleteDatabaseFile_Cmd">REMOVE_DATABASE=1</Custom>

        </InstallExecuteSequence>

        <Media Id="1" Cabinet="media1.cab" EmbedCab="yes" />
        <Media Id="2" Cabinet="media2.cab" EmbedCab="yes" />
        <Media Id="3" Cabinet="media3.cab" EmbedCab="yes" />
        <Media Id="4" Cabinet="media4.cab" EmbedCab="yes" />
        <Media Id="5" Cabinet="media5.cab" EmbedCab="yes" />
        <Media Id="6" Cabinet="media6.cab" EmbedCab="yes" />
        <Media Id="7" Cabinet="media7.cab" EmbedCab="yes" />
        <Media Id="8" Cabinet="media8.cab" EmbedCab="yes" />
        <Media Id="9" Cabinet="media9.cab" EmbedCab="yes" />
        <Media Id="10" Cabinet="media10.cab" EmbedCab="yes" />
        <Media Id="11" Cabinet="media11.cab" EmbedCab="yes" />
        <Media Id="12" Cabinet="media12.cab" EmbedCab="yes" />

        <Directory Id="TARGETDIR" Name="SourceDir">
            <Directory Id="LocalAppDataFolder">
                                <Directory Id="sysfocona" Name="${company.name}">
                                    <Component Id="sysfomediaservercomponent">
                                        <CreateFolder Directory="sysfocona"/>
                                        <RegistryValue Root='HKLM' Key='Software\[Manufacturer]\version' Type='string' Value='${release.version}.${buildNumber}' KeyPath='yes' />
                                    </Component>
                                </Directory>
                            </Directory>

            <Directory Id="MyPicturesFolder">
                <Directory Id="${customization}BgDir" Name="$(var.ProductName) Backgrounds"/>
            </Directory>

            <Directory Id="$(var.ProgramFilesFolder)">
                <Directory Id="NetworkOptix" Name="${company.name}">
                    <Directory Id="INSTALLDIR" Name="$(var.ProductName)"/>
                </Directory>
            </Directory>

            <Directory Id="ProgramMenuFolder" Name="Programs">
                <Directory Id="ProgramMenuDir" Name="${company.name}">
                    <Component Id="UninstallProgramMenuFolder" DiskId="1">
                        <RegistryValue Root='HKLM' Key='Software\[Manufacturer]\ProgramMenu' Type='string' Value='' KeyPath='yes' />
                        <RemoveFolder Id='DashMenuDirRem' On='uninstall' />
                    </Component>
                </Directory>
            </Directory>

            <Directory Id="DesktopFolder" Name="Desktop"/>
            <Directory Id="StartupFolder" Name="Startup"/>            
        </Directory>

        <DirectoryRef Id="TARGETDIR">
            <Merge Id="VCRedist90" SourceFile="MergeModules\Microsoft_VC90_CRT_${arch}.msm" DiskId="1" Language="0"/>
            <Merge Id="VCRedist90Policy" SourceFile="MergeModules\policy_9_0_Microsoft_VC90_CRT_${arch}.msm" DiskId="1" Language="0"/>
            <Merge Id="VCRedist100" SourceFile="MergeModules\Microsoft_VC100_CRT_${arch}.msm" DiskId="1" Language="0"/>
            <Merge Id="VCRedist110" SourceFile="$(var.commonProgramFiles)Merge Modules\Microsoft_VC110_CRT_${arch}.msm" DiskId="1" Language="0"/>
            <?if ${build.configuration} = debug ?>
            <Merge Id="VCRedist110Debug" SourceFile="$(var.commonProgramFiles)Merge Modules\Microsoft_VC110_DebugCRT_${arch}.msm" DiskId="1" Language="0"/>
            <Merge Id="VCRedist90Debug" SourceFile="MergeModules\Microsoft_VC90_DebugCRT_$(var.archSuffix).msm" DiskId="1" Language="0"/>
            <Merge Id="VCRedist90PolicyDebug" SourceFile="MergeModules\policy_9_0_Microsoft_VC90_DebugCRT_$(var.archSuffix).msm" DiskId="1" Language="0"/>
            <?endif?>
        </DirectoryRef>

        <Feature Id="VCRedistVS9" Title="Visual C++ 9.0 Runtime" AllowAdvertise="no" Display="hidden" Level="1">
            <MergeRef Id="VCRedist90"/>
            <MergeRef Id="VCRedist90Policy"/>
            <?if ${build.configuration} = Debug ?>
            <MergeRef Id="VCRedist90Debug"/>
            <MergeRef Id="VCRedist90PolicyDebug"/>
            <?endif?>
        </Feature>

        <Feature Id="VCRedistVS10" Title="Visual C++ 10.0 Runtime" AllowAdvertise="no" Display="hidden" Level="1">
            <MergeRef Id="VCRedist100"/>
        </Feature>

        <Feature Id="VCRedistVS11" Title="Visual C++ 11.0 Runtime" AllowAdvertise="no" Display="hidden" Level="1">
            <MergeRef Id="VCRedist110"/>
            <?if ${build.configuration} = debug ?>
            <MergeRef Id="VCRedist110Debug"/>
            <?endif?>
        </Feature>

        <Feature Id="AlwaysFeature" Title="Always Tool" AllowAdvertise="no" Display="hidden" Level="1">
            <ComponentRef Id="AlwaysFiles"/>
            <ComponentRef Id="ARPAltRegistryEntries"/>            
            <ComponentRef Id="UninstallProgramMenuFolder"/>
        </Feature>

        <FeatureRef Id="ServerFeature"/>

        <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR" />
        <Property Id="WIXUI_SERVER_ALLOWCHANGEIP" Value="SERVER_ALLOWCHANGEIP"/>


        <UIRef Id="WixUI_Common" />
        <UIRef Id="WixUI_ErrorProgressText" />

        <UI>
            <!-- These dialog references are needed for CloseApplication above to work correctly -->
            <DialogRef Id="FilesInUse" />
            <DialogRef Id="MsiRMFilesInUse" />      

            <Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />
            <TextStyle Id="WixUI_Font_Normal" FaceName="Tahoma" Size="8" />
            <TextStyle Id="WixUI_Font_Bigger" FaceName="Tahoma" Size="12" />
            <TextStyle Id="WixUI_Font_Title" FaceName="Tahoma" Size="9" Bold="yes" />

            <DialogRef Id="SelectionWarningDlg" />
            <DialogRef Id="BrowseDlg" />
            <DialogRef Id="DiskCostDlg" />
            <DialogRef Id="ErrorDlg" />
            <DialogRef Id="FatalError" />
            <DialogRef Id="FilesInUse" />
            <DialogRef Id="MsiRMFilesInUse" />
            <DialogRef Id="PrepareDlg" />
            <DialogRef Id="ProgressDlg" />
            <DialogRef Id="ResumeDlg" />
            <DialogRef Id="UserExit" />

            <Binary Id="Warning" SourceFile="Binary\Exclam.ico" />

            <!-- WelcomeDlg -->
            <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg"><![CDATA[ PREVIOUSSERVERINSTALLED <> "1" AND NOT LICENSE_ALREADY_ACCEPTED ]]></Publish>          
            <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="MediaServerDlg"><![CDATA[ PREVIOUSSERVERINSTALLED <> "1" AND LICENSE_ALREADY_ACCEPTED ]]></Publish>          
            <Publish Dialog="WelcomeDlg" Control="Next" Property="ALLOW_CAMERA_CHANGES" Value="yes"><![CDATA[ PREVIOUSSERVERINSTALLED <> "1" AND LICENSE_ALREADY_ACCEPTED ]]></Publish>
            <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="UpgradeDlg">PREVIOUSSERVERINSTALLED = "1"</Publish>

            <!-- LicenseAgreementDlg -->
            <Publish Dialog="LicenseAgreementDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
            <Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="MediaServerDlg">LicenseAccepted = "1"</Publish>
            <Publish Dialog="LicenseAgreementDlg" Control="Next" Property="ALLOW_CAMERA_CHANGES" Value="yes">LicenseAccepted = "1"</Publish>

            <!-- UpgradeDlg -->
            <Publish Dialog="UpgradeDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
            <Publish Dialog="UpgradeDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>

            <!-- MediaServerDlg -->
            <Publish Dialog="MediaServerDlg" Control="Back" Event="NewDialog" Value="LicenseAgreementDlg">NOT LICENSE_ALREADY_ACCEPTED</Publish>
            <Publish Dialog="MediaServerDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">LICENSE_ALREADY_ACCEPTED</Publish>

            <Publish Dialog="MediaServerDlg" Control="Next" Event="SpawnDialog" Value="AllFieldsAreMandatoryDlg" Order="1">NOT $(var.IsSettingsFilled)</Publish>
            <Publish Dialog="MediaServerDlg" Control="Next" Event="SpawnDialog" Value="InvalidPasswordDlg" Order="1">$(var.IsSettingsFilled) AND NOT $(var.PasswordsEqual)</Publish>
            <Publish Dialog="MediaServerDlg" Control="Next" Property="BUSYPORT" Value="{}">$(var.IsSettingsCorrect)</Publish>
            <Publish Dialog="MediaServerDlg" Control="Next" Property="PORTSTOTEST" Value="[SERVER_PORT]" Order="1">$(var.IsSettingsCorrect)</Publish>
            <Publish Dialog="MediaServerDlg" Control="Next" Event="DoAction" Value="CheckPorts" Order="2">$(var.IsSettingsCorrect)</Publish>
            <Publish Dialog="MediaServerDlg" Control="Next" Event="NewDialog" Value="PortIsBusyDlg" Order="3">$(var.IsSettingsCorrect) AND BUSYPORT</Publish>

            <Publish Dialog="MediaServerDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg" Order="4"><![CDATA[ $(var.IsSettingsValid) ]]></Publish>
            <Publish Dialog="MediaServerDlg" Control="Next" Property="ALLOW_CAMERA_CHANGES" Value="0" Order="4">ALLOW_CAMERA_CHANGES = ""</Publish>

            <Publish Dialog="MediaServerDlg" Control="Next" Property="PORT_DIALOG_BACK" Value="MediaServerDlg">1</Publish>
            <Publish Dialog="MediaServerDlg" Control="Next" Property="PORT_DIALOG_NEXT" Value="VerifyReadyDlg">1</Publish>

            <!-- PortIsBusyDlg -->
            <Publish Dialog="PortIsBusyDlg" Control="Back" Event="NewDialog" Value="[PORT_DIALOG_BACK]">1</Publish>
            <Publish Dialog="PortIsBusyDlg" Control="Next" Event="NewDialog" Value="[PORT_DIALOG_NEXT]">1</Publish>

            <!-- VerifyReadyDlg -->
            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="MediaServerDlg">NOT $(var.VmsRemoving) AND NOT $(var.VmsUpgrading)</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Back" Property="ALLOW_CAMERA_CHANGES" Value="{}">ALLOW_CAMERA_CHANGES = "0"</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="MaintenanceTypeDlg"><![CDATA[ NOT $(var.Remove_S1) AND $(var.VmsRemoving) AND !ServerFeature <> 3 ]]></Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="UninstallOptionsDlg">$(var.Remove_S1) OR (!ServerFeature = 3 AND $(var.VmsRemoving))</Publish>            
            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="UpgradeDlg">$(var.VmsUpgrading)</Publish>
            
            <Publish Dialog="VerifyReadyDlg" Control="Install" Event="AddLocal" Value="ServerFeature">INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Install" Event="Remove" Value="ServerFeature">NOT INSTALL_SERVER</Publish>

            <Publish Dialog="VerifyReadyDlg" Control="InstallNoShield" Event="AddLocal" Value="ServerFeature">INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="InstallNoShield" Event="Remove" Value="ServerFeature">NOT INSTALL_SERVER</Publish>

            <Publish Dialog="VerifyReadyDlg" Control="Change" Event="AddLocal" Value="ServerFeature">INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Change" Event="Remove" Value="ServerFeature">NOT INSTALL_SERVER</Publish>

            <Publish Dialog="VerifyReadyDlg" Control="ChangeNoShield" Event="AddLocal" Value="ServerFeature">INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="ChangeNoShield" Event="Remove" Value="ServerFeature">NOT INSTALL_SERVER</Publish>

            <!-- MyExitDialog -->
            <Publish Dialog="MyExitDialog" Control="Finish" Event="EndDialog" Value="Return" Order="999">1</Publish>

            <!-- MaintenanceWelcomeDlg -->
            <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="UninstallOptionsDlg">1</Publish>
            <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Property="REMOVE" Value="ALL">1</Publish>
            <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Property="WixUI_InstallMode" Value="Remove">1</Publish>

            <!-- MaintenanceTypeDlg -->
            <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="UninstallOptionsDlg">!ServerFeature = 3</Publish>
            <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg"><![CDATA[ !ServerFeature <> 3 ]]></Publish>            
            
            <Publish Dialog="UninstallOptionsDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
            <Publish Dialog="UninstallOptionsDlg" Control="Back" Event="NewDialog" Value="MaintenanceWelcomeDlg">1</Publish>
            <Publish Dialog="UninstallOptionsDlg" Control="Back" Property="REMOVE" Value="{}">1</Publish>
            <Publish Dialog="UninstallOptionsDlg" Control="Back" Property="REMOVE_DATABASE" Value="0">1</Publish>
            
        </UI>
    </Product>
</Wix>
