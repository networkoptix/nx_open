<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
     xmlns:util="http://schemas.microsoft.com/wix/UtilExtension"
     xmlns:fire="http://schemas.microsoft.com/wix/FirewallExtension"
     xmlns:SystemTools="http://schemas.appsecinc.com/wix/SystemToolsExtension">
    <Product Id="*" Name="${product.name}" Language="1033" Version="${release.version}.${buildNumber}" Manufacturer="${company.name}" UpgradeCode="${customization.upgradeCode}">
        <Package Id="*" InstallerVersion="405" Compressed="yes" Keywords="Installer" Comments="${company.name} ${product.name} Installer" Manufacturer="${company.name}" InstallPrivileges="elevated" InstallScope="perMachine"/>

        <?include ControlPanel.wxi ?>
        <?include BuildVars.wxi ?>

        <Property Id="REINSTALLMODE" Value="amus"/>
        <Property Id="ARPSYSTEMCOMPONENT" Value="1" />

        <?define SourceDir="${libdir}/${arch}/bin/${build.configuration}"?>
        <?define PluginsDir="${libdir}/${arch}/bin/${build.configuration}/plugins"?>

        <?define VmsInstalling=" (NOT Installed AND NOT PREVIOUSVERSIONSINSTALLED) "?>
        <?define VmsUpgrading=" (NOT Installed AND PREVIOUSVERSIONSINSTALLED)" ?>
        <?define VmsChanging=" (Installed AND REMOVE <> "ALL") "?>
        <?define VmsRemoving=" (Installed AND REMOVE = "ALL") "?>

        <?define LaunchClientChecBoxText="!(loc.Product_LaunchClient)" ?>

        <?if $(var.arch) = x86 ?>
        <Condition Message="!(loc.Product_ArchMismatch)">
            <![CDATA[ NOT VersionNT64 ]]>
        </Condition>
        <?endif?>

        <SetProperty Id="REBOOT" Value="reallysuppress" After="FindRelatedProducts">Installed AND REMOVE&lt;&gt;"ALL"</SetProperty>
        <SetProperty Id="PREVIOUSVERSIONSINSTALLED" Value="[MIGRATE]" After="FindRelatedProducts"/>

        <Property Id="INSTALL_SERVER" Secure="yes"/>
        <Property Id="INSTALL_CLIENT" Secure="yes"/>


        <SetProperty Id="INSTALL_SERVER" Value="1" After="ResetPreselected" Sequence="ui">
            <![CDATA[ $(var.VmsInstalling) OR &ServerFeature = 3 OR !ServerFeature = 3 ]]>
        </SetProperty>
        <SetProperty Id="INSTALL_CLIENT" Value="1" After="ResetPreselected" Sequence="ui">
            <![CDATA[ $(var.VmsInstalling) OR &ClientFeature = 3 OR !ClientFeature = 3 ]]>
        </SetProperty>

        <WixVariable Id="WixUILicenseRtf" Value="License.rtf" />
        <WixVariable Id="WixUIBannerBmp" Value="Binary\eve\eve_logo-493x58.bmp" />
        <WixVariable Id="WixUIDialogBmp" Value="Binary\eve\eve_logo-493x312.bmp" />

        <!-- Logo -->
        <Icon Id="icon_menu.exe" SourceFile="Binary\eve\eve_logo.ico"/>
        <Icon Id="icon_desktop.exe" SourceFile="Binary\eve\eve_logo.ico"/>

        <!-- Add property to access from custom actions -->
        <Property Id="ARCHITECTURE" Value="$(var.arch)" />
        <Property Id="MSIRESTARTMANAGERCONTROL" Value="Disable" Secure="yes"/>

        <Property Id="LAUNCHAPPONEXIT" Secure="yes" />
        <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOXTEXT" Secure="yes" />

        <!-- Properties -->
        <Property Id="WelcomeDlg_Title" Value="${product.name} Installer Setup" />

        <Property Id="INSTALLTYPE" Secure="yes"/>

        <Property Id="BUSYPORT" Secure="yes"/>

        <Property Id="MEDIASERVER_REGISTRY_PATH" Value="Software\${company.name}\${mediaserver.name}"/>

        <Property Id="REMOVE_DATABASE" Secure="yes" Value="0"/>
        <Property Id="VERSION_TO_RESTORE" Secure="yes" Value="Current"/>

        <Property Id="INSTALL_SHORTCUT_DESKTOP" Value="1"/>

        <!-- MediaServer properties-->

        <Property Id="SYSTEM_NAME" Secure="yes">
                        <RegistrySearch Id="SystemNameReg"
                            Root="HKLM"
                            Key="Software\${company.name}\${mediaserver.name}"
                            Name="systemName"
                            Type="raw"
                            Win64="yes"/>
        </Property>
        
        <Property Id="SERVER_PORT" Secure="yes">
            <RegistrySearch Id="ServerEcsPortReg"
                            Root="HKLM"
                            Key="Software\${company.name}\${mediaserver.name}"
                            Name="appserverPort"
                            Type="raw"
                            Win64="yes"/>
        </Property>

        <Property Id="SERVER_LOGIN" Value="admin"/>
        <Property Id="SERVER_PASSWORD" Secure="yes"/>
        <Property Id="SERVER_PASSWORD_CONFIRM" Secure="yes"/>


        <!-- Client properties-->
        <Property Id="CLIENT_VMS_MODE" Value="1"/>
        <Property Id="CLIENT_DIRECTORY_REG" Secure="yes">
            <RegistrySearch Id="ClientDirectoryReg"
                            Root="HKCU"
                            Key="Software\[Manufacturer]\${product.name}"
                            Name="mediaRoot"
                            Type="raw"
                            Win64="yes"/>
        </Property>

        <Binary Id="CustomActions.dll" SourceFile="CustomActions\Release\CustomActions.dll" />

        <!-- Custom actions -->
        <CustomAction Id="ResetPreselected" Property="Preselected" Value="" />
        <CustomAction Id="SetMoviesFolder" BinaryKey="CustomActions.dll" DllEntry="SetMoviesFolder" />
        <CustomAction Id="GenerateGuidsForServers" BinaryKey="CustomActions.dll" DllEntry="GenerateGuidsForServers"/>
        <CustomAction Id="CopyMediaServerProfile" BinaryKey="CustomActions.dll" DllEntry="CopyMediaServerProfile" Execute="deferred" Impersonate="no"/>
        <CustomAction Id="FindConfiguredStorages" BinaryKey="CustomActions.dll" DllEntry="FindConfiguredStorages"/>

        <CustomAction Id="MissingFeature"  Error="At least one component should be selected"/>

        <CustomAction Id="IsClientFolderExists" BinaryKey="CustomActions.dll" DllEntry="IsClientFolderExists"/>

        <CustomAction Id="FindFreePorts" BinaryKey="CustomActions.dll" DllEntry="FindFreePorts" />
        <CustomAction Id="CheckPorts" BinaryKey="CustomActions.dll" DllEntry="CheckPorts"/>
        <CustomAction Id="CheckPorts2" BinaryKey="CustomActions.dll" DllEntry="CheckPorts"/>
        <CustomAction Id="FixServerFolder" BinaryKey="CustomActions.dll" DllEntry="FixServerFolder"/>
        <CustomAction Id="FixClientFolder" BinaryKey="CustomActions.dll" DllEntry="FixClientFolder"/>

        <!-- Assign default values for Quick installation -->
        <CustomAction Id="AssignServerPort" Property="SERVER_PORT" Value="7001"/>
        <CustomAction Id="AssignClientPort" Property="CLIENT_PORT" Value="[SERVER_PORT]"/>

        <CustomAction Id="SetClientFolderToDefault" Property="CLIENT_DIRECTORY" Value="[MOVIESFOLDER]\${product.name} Client Media" />
        <CustomAction Id="SetClientFolderToRegistry" Property="CLIENT_DIRECTORY" Value="[CLIENT_DIRECTORY_REG]" />

        <CustomAction Id="CopyMediaServerProfile_Cmd" Property="CopyMediaServerProfile" Execute="immediate" Impersonate="yes"
            Value="[SystemFolder]config\systemprofile\AppData\Local\${company.name}\${company.name} Media Server;[System64Folder]config\systemprofile\AppData\Local\${company.name}\${company.name} Media Server"/>

        <CustomAction Id="CloseAppLauncherAction_Cmd" Property="CloseAppLauncherAction"
                      Value="&quot;[${customization}_${parsedVersion.majorVersion}_${parsedVersion.minorVersion}_Dir]${product.name} Launcher.exe&quot; &quot;quit&quot;" Execute="immediate" />
        <CustomAction Id="CloseAppLauncherAction" BinaryKey="WixCA" DllEntry="CAQuietExec"
                      Execute="deferred" Return="ignore" Impersonate="no" />

        <CustomAction Id="LaunchClient" Execute="immediate" Impersonate="yes" Return="asyncNoWait" FileKey="applauncher.exe" ExeCommand=""/>

        <CustomAction Id="NoDowngrade" Error="NoDowngrade" /> 


        <MajorUpgrade AllowSameVersionUpgrades="yes"
            Schedule="afterInstallInitialize"
            DowngradeErrorMessage="!(loc.DowngradeWarningDlg_DowngradeWarning)"
            MigrateFeatures="yes" />

        <!--        <Upgrade Id="${customization.clientUpgradeCode}">
            <UpgradeVersion OnlyDetect='yes' Property='NEWERCLIENTINSTALLED' Minimum='${release.version}.${buildNumber}' IncludeMinimum='no' />
        </Upgrade> -->

        <InstallUISequence>
            <Custom Action="ResetPreselected" After="MigrateFeatureStates">Installed AND Preselected</Custom>
            <FindRelatedProducts Before="AppSearch" />
            <AppSearch Before="LaunchConditions" />

            <Custom Action="FindFreePorts" Before="AssignServerPort"/>
            <Custom Action="AssignServerPort" Before="AssignClientPort">NOT SERVER_PORT</Custom>
            <Custom Action="AssignClientPort" Before="SetMoviesFolder">1</Custom>
            <Custom Action="SetMoviesFolder" Before="FindConfiguredStorages">1</Custom>
            <Custom Action="FindConfiguredStorages" Before="SetClientFolderToDefault"/> 

            <Custom Action="SetClientFolderToRegistry" Before="CostInitialize">1</Custom>
            <Custom Action="FixClientFolder" After="SetClientFolderToRegistry">1</Custom>
            <Custom Action="IsClientFolderExists" After="FixClientFolder">1</Custom>
            <Custom Action="SetClientFolderToDefault" After="CostInitialize">CLIENT_DIRECTORY=""</Custom>

        </InstallUISequence>

        <InstallExecuteSequence>
            <FindRelatedProducts Before="AppSearch" />
            <AppSearch Before="LaunchConditions" />

            <!--            <RemoveExistingProducts After="InstallFinalize"/>-->

            <!--            <RemoveExistingProducts After="InstallInitialize" />-->
            <Custom Action="CloseAppLauncherAction_Cmd" Before="CloseAppLauncherAction">
                <![CDATA[ NOT $(var.VmsInstalling) ]]>
            </Custom>
            <Custom Action="CloseAppLauncherAction" Before="StopServices">
                <![CDATA[ NOT $(var.VmsInstalling) ]]>
            </Custom>

            <Custom Action="CopyMediaServerProfile_Cmd" After="InstallFiles">
                <![CDATA[ (INSTALL_SERVER OR !ServerFeature=3) AND REMOVE <> "ALL" ]]></Custom>
            <Custom Action="CopyMediaServerProfile" After="CopyMediaServerProfile_Cmd">
                <![CDATA[ (INSTALL_SERVER OR !ServerFeature=3) AND REMOVE <> "ALL" ]]></Custom>

        </InstallExecuteSequence>

        <Media Id="1" Cabinet="media1.cab" EmbedCab="yes" />

        <Directory Id="TARGETDIR" Name="SourceDir">

            <Directory Id="$(var.SystemFolderActual)">
                <Directory Id="sysfoconfig" Name="config">
                    <Directory Id="sysfoprofile" Name="systemprofile">
                        <Directory Id="sysfoappda" Name="AppData">
                            <Directory Id="sysfolocal" Name="Local">
                                <Directory Id="sysfocona" Name="${company.name}">
                                    <Component Id="sysfomediaservercomponent">
                                        <CreateFolder Directory="sysfocona"/>
                                        <RegistryValue Root='HKLM' Key='Software\[Manufacturer]\version' Type='string' Value='${release.version}.${buildNumber}' KeyPath='yes' />
                                    </Component>
                                </Directory>
                            </Directory>
                        </Directory>
                    </Directory>
                </Directory>
            </Directory>

            <Directory Id="CLIENT_DIRECTORY" Name="Client Media">
                <Component Id="ClientDirectoryComponent" Permanent="yes">
                    <CreateFolder Directory="CLIENT_DIRECTORY"/>
                    <RegistryValue Root='HKCU' Key='Software\[Manufacturer]\${client.name} Media' Type='string' Value='' KeyPath='yes' />
                </Component>
            </Directory>

            <Directory Id="MyPicturesFolder">
                <Directory Id="${customization}BgDir" Name="${product.name} Backgrounds"/>
            </Directory>

            <Directory Id="$(var.ProgramFilesFolder)">
                <Directory Id="NetworkOptix" Name="${company.name}">
                    <Directory Id="INSTALLDIR" Name="${product.name}"/>
                </Directory>
            </Directory>

            <Directory Id="ProgramMenuFolder" Name="Programs">
                <Directory Id="ProgramMenuDir" Name="${company.name}">
                    <Component Id="UninstallProgramMenuFolder" DiskId="1">
                        <RegistryValue Root='HKLM' Key='Software\[Manufacturer]\ProgramMenu' Type='string' Value='' KeyPath='yes' />
                        <RemoveFolder Id='DashMenuDirRem' On='uninstall' />
                    </Component>
                </Directory>
            </Directory>

            <Directory Id="DesktopFolder" Name="Desktop"/>
            <Directory Id="StartupFolder" Name="Startup"/>            
        </Directory>

        <DirectoryRef Id="TARGETDIR">
            <Merge Id="VCRedist110" SourceFile="$(var.commonProgramFiles)Merge Modules\Microsoft_VC110_CRT_${arch}.msm" DiskId="1" Language="0"/>
            <?if ${build.configuration} = debug ?>
            <Merge Id="VCRedist110Debug" SourceFile="$(var.commonProgramFiles)Merge Modules\Microsoft_VC110_DebugCRT_${arch}.msm" DiskId="1" Language="0"/>
            <?endif?>
        </DirectoryRef>

        <Feature Id="VCRedistVS11" Title="Visual C++ 11.0 Runtime" AllowAdvertise="no" Display="hidden" Level="1">
            <MergeRef Id="VCRedist110"/>
            <?if ${build.configuration} = debug ?>
            <MergeRef Id="VCRedist110Debug"/>
            <?endif?>
        </Feature>

        <Feature Id="AlwaysFeature" Title="Always Tool" AllowAdvertise="no" Display="hidden" Level="1">
            <ComponentRef Id="AlwaysFiles"/>
            <ComponentRef Id="ARPAltRegistryEntries"/>            
            <ComponentRef Id="UninstallProgramMenuFolder"/>
        </Feature>

        <FeatureRef Id="ServerFeature"/>
        <FeatureRef Id="ClientFeature"/>

        <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR" />
        <Property Id="WIXUI_CLIENT_DIRECTORY" Value="CLIENT_DIRECTORY"/>
        <Property Id="WIXUI_SERVER_ALLOWCHANGEIP" Value="SERVER_ALLOWCHANGEIP"/>


        <UIRef Id="WixUI_Common" />
        <UIRef Id="WixUI_ErrorProgressText" />

        <UI>
            <!-- These dialog references are needed for CloseApplication above to work correctly -->
            <DialogRef Id="FilesInUse" />
            <DialogRef Id="MsiRMFilesInUse" />      

            <Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />
            <TextStyle Id="WixUI_Font_Normal" FaceName="Tahoma" Size="8" />
            <TextStyle Id="WixUI_Font_Bigger" FaceName="Tahoma" Size="12" />
            <TextStyle Id="WixUI_Font_Title" FaceName="Tahoma" Size="9" Bold="yes" />

            <DialogRef Id="SelectionWarningDlg" />
            <DialogRef Id="DowngradeWarningDlg" />
            <DialogRef Id="BrowseDlg" />
            <DialogRef Id="DiskCostDlg" />
            <DialogRef Id="ErrorDlg" />
            <DialogRef Id="FatalError" />
            <DialogRef Id="FilesInUse" />
            <DialogRef Id="MsiRMFilesInUse" />
            <DialogRef Id="PrepareDlg" />
            <DialogRef Id="ProgressDlg" />
            <DialogRef Id="ResumeDlg" />
            <DialogRef Id="UserExit" />

            <Binary Id="Warning" SourceFile="Binary\Exclam.ico" />

            <Publish Dialog="MyExitDialog" Control="Finish" Event="EndDialog" Value="Return" Order="999">1</Publish>
            <Publish Dialog="MyExitDialog" Control="Finish" Order="1" Event="DoAction" Value="LaunchClient">WIXUI_EXITDIALOGOPTIONALCHECKBOX</Publish>

            <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg">NOT PREVIOUSVERSIONSINSTALLED</Publish>          
            <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="UpgradeDlg">PREVIOUSVERSIONSINSTALLED</Publish>

            <Publish Dialog="UpgradeDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
            <Publish Dialog="UpgradeDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>

            <Publish Dialog="DowngradeWarningDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>
            <Publish Dialog="DowngradeWarningDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>

            <Publish Dialog="LicenseAgreementDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
            <Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="InstallTypeDlg">LicenseAccepted = "1"</Publish>

            <Publish Dialog="InstallTypeDlg" Control="Back" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>

            <Publish Dialog="InstallTypeDlg" Control="Next" Property="INSTALL_SERVER" Value="1" Order="1">INSTALLTYPE=0</Publish>
            <Publish Dialog="InstallTypeDlg" Control="Next" Property="INSTALL_CLIENT" Value="1" Order="1">INSTALLTYPE=0</Publish>
            <Publish Dialog="InstallTypeDlg" Control="Next" Property="INSTALL_SERVER" Value="1" Order="1">INSTALLTYPE=1</Publish>
            <Publish Dialog="InstallTypeDlg" Control="Next" Property="INSTALL_CLIENT" Value="{}" Order="1">INSTALLTYPE=1</Publish>
            <Publish Dialog="InstallTypeDlg" Control="Next" Property="INSTALL_SERVER" Value="{}" Order="1">INSTALLTYPE=2</Publish>
            <Publish Dialog="InstallTypeDlg" Control="Next" Property="INSTALL_CLIENT" Value="1" Order="1">INSTALLTYPE=2</Publish>
            
            <Publish Dialog="InstallTypeDlg" Control="Next" Property="WIXUI_EXITDIALOGOPTIONALCHECKBOXTEXT" Value="$(var.LaunchClientChecBoxText)" Order="1">INSTALL_CLIENT</Publish>

            <?define SomeFeaturesSelected="(INSTALL_SERVER OR INSTALL_CLIENT)"?>         

            <?define Inst_S1="(INSTALL_SERVER=1 AND !ServerFeature <> 3)"?>
            <?define Inst_C1="(INSTALL_CLIENT=1 AND !ClientFeature <> 3)"?>
            <?define Inst_S0="(NOT $(var.Inst_S1))"?>
            <?define Inst_C0="(NOT $(var.Inst_C1))"?>

            <?define Inst_S0C0="($(var.Inst_S0) AND $(var.Inst_C0))"?>
            <?define Inst_S0C1="($(var.Inst_S0) AND $(var.Inst_C1))"?>
            <?define Inst_S1C0="($(var.Inst_S1) AND $(var.Inst_C0))"?>
            <?define Inst_S1C1="($(var.Inst_S1) AND $(var.Inst_C1))"?>

            <?define Changing_S1="NOT $(var.VmsInstalling) AND $(var.Inst_S1)"?>
            <?define Changing_S0C1="NOT $(var.VmsInstalling) AND $(var.Inst_S0C1)"?>
            <?define ChangingNothing="NOT $(var.VmsInstalling) AND $(var.Inst_S0C0)"?>

            <Publish Dialog="InstallTypeDlg" Control="Next" Event="NewDialog" Value="MediaServerDlg" Order="2">
                <![CDATA[ $(var.Inst_S1) ]]>
            </Publish>
            <Publish Dialog="InstallTypeDlg" Control="Next" Event="NewDialog" Value="ClientDlg" Order="2">
                <![CDATA[ $(var.Inst_S0C1) ]]>
            </Publish>
            <Publish Dialog="InstallTypeDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg" Order="2">
                <![CDATA[ $(var.ChangingNothing) ]]>
            </Publish>

            <?define PasswordsEqual="(SERVER_PASSWORD = SERVER_PASSWORD_CONFIRM)" ?>

            <Publish Dialog="MediaServerDlg" Control="Back" Event="NewDialog" Value="InstallTypeDlg"/>

            <?define IsSettingsFilled="(SYSTEM_NAME AND SERVER_PORT AND SERVER_LOGIN AND SERVER_PASSWORD AND SERVER_PASSWORD_CONFIRM)"?>
            <?define IsSettingsValid="($(var.IsSettingsFilled) AND $(var.PasswordsEqual))"?>

            <Publish Dialog="MediaServerDlg" Control="Next" Event="SpawnDialog" Value="AllFieldsAreMandatoryDlg">
                <![CDATA[ NOT $(var.IsSettingsFilled) ]]>
            </Publish>
            
            <Publish Dialog="MediaServerDlg" Control="Next" Event="SpawnDialog" Value="InvalidPasswordDlg">
                <![CDATA[ $(var.IsSettingsFilled) AND NOT $(var.PasswordsEqual) ]]>
            </Publish>

            <Publish Dialog="MediaServerDlg" Control="Next" Event="NewDialog" Value="ClientDlg" Order="2">
                <![CDATA[$(var.IsSettingsValid) AND $(var.Inst_C1) ]]>
            </Publish>
            <Publish Dialog="MediaServerDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg" Order="2">
                <![CDATA[$(var.IsSettingsValid) AND $(var.Inst_C0) ]]>
            </Publish>

            <Publish Dialog="MediaServerDlg" Control="Next" Property="CLIENT_HOST" Value="localhost" Order="4">1</Publish>
            <Publish Dialog="MediaServerDlg" Control="Next" Property="CLIENT_PORT" Value="[SERVER_PORT]" Order="4">1</Publish>
            <Publish Dialog="MediaServerDlg" Control="Next" Property="CLIENT_LOGIN" Value="[SERVER_LOGIN]" Order="4">1</Publish>

            <Publish Dialog="MediaServerDlg" Control="Next" Property="PORT_DIALOG_BACK" Value="MediaServerDlg">1</Publish>
            <Publish Dialog="MediaServerDlg" Control="Next" Property="PORT_DIALOG_NEXT" Value="VerifyReadyDlg">1</Publish>

            <Publish Dialog="ClientDlg" Control="Back" Event="NewDialog" Value="InstallTypeDlg" Order="2">
                <![CDATA[ $(var.Inst_S0) ]]>
            </Publish>
            <Publish Dialog="ClientDlg" Control="Back" Event="NewDialog" Value="MediaServerDlg" Order="2">
                <![CDATA[ $(var.Inst_S1) ]]>
            </Publish>

            <Publish Dialog="ClientDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg" Order="2">
                <![CDATA[ 1 ]]>
            </Publish>

            <!-- Normal installation -->
            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="InstallTypeDlg" Order="2">
                <![CDATA[ $(var.Inst_S0C0) ]]>
            </Publish>

            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="MediaServerDlg" Order="2">
                <![CDATA[ ($(var.VmsInstalling) OR $(var.VmsChanging)) AND $(var.Inst_S1C0) ]]>
            </Publish>
            
            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="ClientDlg" Order="2">
                <![CDATA[ ($(var.VmsInstalling) OR $(var.VmsChanging)) AND $(var.Inst_C1) ]]>
            </Publish>

            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="UpgradeDlg" Order="2">
                <![CDATA[$(var.VmsUpgrading)]]>
            </Publish>
            
            <!-- Maintanance -->
            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="MaintenanceTypeDlg" Order="2">
                <![CDATA[ $(var.VmsRemoving) OR WixUI_InstallMode = "Repair" ]]>
            </Publish>
            
            <Publish Dialog="VerifyReadyDlg" Control="Back" Property="REMOVE" Value="{}" Order="3">
                <![CDATA[ Installed ]]>
            </Publish>

            <Publish Dialog="VerifyReadyDlg" Control="Install" Event="AddLocal" Value="ServerFeature">INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Install" Event="AddLocal" Value="ClientFeature">INSTALL_CLIENT</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Install" Event="Remove" Value="ServerFeature">NOT INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Install" Event="Remove" Value="ClientFeature">NOT INSTALL_CLIENT</Publish>

            <Publish Dialog="VerifyReadyDlg" Control="InstallNoShield" Event="AddLocal" Value="ServerFeature">INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="InstallNoShield" Event="AddLocal" Value="ClientFeature">INSTALL_CLIENT</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="InstallNoShield" Event="Remove" Value="ServerFeature">NOT INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="InstallNoShield" Event="Remove" Value="ClientFeature">NOT INSTALL_CLIENT</Publish>

            <Publish Dialog="VerifyReadyDlg" Control="Change" Event="AddLocal" Value="ServerFeature">INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Change" Event="AddLocal" Value="ClientFeature">INSTALL_CLIENT</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Change" Event="Remove" Value="ServerFeature">NOT INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Change" Event="Remove" Value="ClientFeature">NOT INSTALL_CLIENT</Publish>

            <Publish Dialog="VerifyReadyDlg" Control="ChangeNoShield" Event="AddLocal" Value="ServerFeature">INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="ChangeNoShield" Event="AddLocal" Value="ClientFeature">INSTALL_CLIENT</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="ChangeNoShield" Event="Remove" Value="ServerFeature">NOT INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="ChangeNoShield" Event="Remove" Value="ClientFeature">NOT INSTALL_CLIENT</Publish>

            <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="MaintenanceTypeDlg">1</Publish>
            <Publish Dialog="MaintenanceTypeDlg" Control="ChangeButton" Event="NewDialog" Value="InstallTypeDlg">1</Publish>
            <Publish Dialog="MaintenanceTypeDlg" Control="RepairButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
            <Publish Dialog="MaintenanceTypeDlg" Control="RemoveButton" Property="REMOVE" Value="ALL">1</Publish>
            <Publish Dialog="MaintenanceTypeDlg" Control="RemoveButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
            <Publish Dialog="MaintenanceTypeDlg" Control="Back" Event="NewDialog" Value="MaintenanceWelcomeDlg">1</Publish>
        </UI>
    </Product>
</Wix>
