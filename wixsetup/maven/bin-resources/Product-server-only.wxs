<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
     xmlns:util="http://schemas.microsoft.com/wix/UtilExtension"
     xmlns:fire="http://schemas.microsoft.com/wix/FirewallExtension">
    <?include BuildVars.wxi ?>
    <Product Id="*" Name="$(var.productName) Server" Language="1033" Version="$(var.releaseVersionFull)" Manufacturer="$(var.companyName)" UpgradeCode="$(var.serverUpgradeCode)">
        <Package Id="*" InstallerVersion="405" Compressed="yes" Keywords="Installer" Comments="$(var.companyName) $(var.productName) Server Installer" Manufacturer="$(var.companyName)" InstallPrivileges="elevated" InstallScope="perMachine"/>

        <?include ControlPanel.wxi ?>

        <?define ProductName="$(var.productName)"?>

        <!-- Add property to access from custom actions -->
        <Property Id="ARCHITECTURE" Value="$(var.arch)" />

        <Property Id="REINSTALLMODE" Value="dmus"/>

        <Property Id="ARPSYSTEMCOMPONENT" Value="1" />

        <?define VmsInstalling=" (NOT Installed AND PREVIOUSSERVERINSTALLED <> 1) "?>
        <?define VmsUpgrading=" (NOT Installed AND PREVIOUSSERVERINSTALLED = 1)" ?>
        <?define VmsChanging=" (Installed AND REMOVE <> "ALL") "?>
        <?define VmsRemoving=" (Installed AND REMOVE = "ALL") "?>

        <?define InstallServer="&ServerFeature = 3 AND !ServerFeature <> 3"?>

        <?define Inst_S1="(INSTALL_SERVER=1 AND !ServerFeature <> 3)"?>

        <?define CloudHostIsDifferent="(CLOUD_HOST <> "" AND CLOUD_HOST <> "$(var.cloudHost)")" ?>

        <!-- Exit if upgrading and cloud hosts differ -->
        <Condition Message="This beta package is for another cloud instance. Please disconnect from the cloud first. Setup will now exit.">
            <![CDATA[ NOT ($(var.VmsUpgrading) AND IS_CONNECTED_TO_CLOUD = "yes" AND $(var.CloudHostIsDifferent)) ]]>
        </Condition>

        <SetProperty Id="REBOOT" Value="reallysuppress" After="FindRelatedProducts">Installed AND REMOVE&lt;&gt;"ALL"</SetProperty>
        <SetProperty Id="PREVIOUSVERSIONSINSTALLED" Value="[MIGRATE]" After="FindRelatedProducts"/>

        <Property Id="INSTALL_SERVER" Secure="yes"/>

        <SetProperty Id="INSTALL_SERVER" Value="1" After="ResetPreselected" Sequence="ui">
            <![CDATA[ $(var.VmsInstalling) OR &ServerFeature = 3 OR !ServerFeature = 3 ]]>
        </SetProperty>

        <WixVariable Id="WixUILicenseRtf" Value="license.rtf" />

        <!-- Logo -->
        <Icon Id="icon_menu.exe" SourceFile="$(var.CustomizationDir)/icons/all/favicon.ico"/>
        <Icon Id="icon_desktop.exe" SourceFile="$(var.CustomizationDir)/icons/all/favicon.ico"/>

        <!-- Disable restart manager as it causes installer to ask to stop services instead of doing this automatically -->
        <Property Id="MSIRESTARTMANAGERCONTROL" Value="Disable" Secure="yes"/>

        <Property Id="LAUNCHAPPONEXIT" Secure="yes" />
        <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOXTEXT" Secure="yes" />

        <!-- Properties -->
        <Property Id="WelcomeDlg_Title" Value="$(var.ProductTitle)" />

        <Property Id="BUSYPORT" Secure="yes"/>

        <Property Id="MEDIASERVER_REGISTRY_PATH" Value="$(var.ServerRegPath)"/>
        <Property Id="OLDEC_REGISTRY_PATH" Value="$(var.ECRegPath)"/>

        <!-- MediaServer properties-->

        <Property Id="CLOUD_HOST">
            <RegistrySearch Id="CloudHostReg" Root="HKLM" Key="$(var.ServerRegPath)" Name="cloudHost" Type="raw" Win64="yes"/>
        </Property>

        <Property Id="IS_CONNECTED_TO_CLOUD">
            <RegistrySearch Id="isConnectedToCloudReg" Root="HKLM" Key="$(var.ServerRegPath)" Name="isConnectedToCloud" Type="raw" Win64="yes"/>
        </Property>

        <!-- Demo only!!! -->
        <Property Id="SYSTEM_NAME" Secure="yes">
            <RegistrySearch Id="SystemNameReg" Root="HKLM" Key="$(var.ServerRegPath)" Name="systemName" Type="raw" Win64="yes"/>
        </Property>
        <!-- <Property Id="SYSTEM_NAME" Value="[SYSTEM_NAME]" Secure="yes">
            <RegistrySearch Id="SystemNameReg" Root="HKLM" Key="$(var.ServerRegPath)" Name="systemName" Type="raw" Win64="yes"/>
        </Property> -->

        <!-- Demo only!!! -->
        <Property Id="SERVER_PORT" Secure="yes">
            <RegistrySearch Id="ServerPortReg" Root="HKLM" Key="$(var.ServerRegPath)" Name="port" Type="raw" Win64="yes"/>
        </Property>
        <!-- <Property Id="SERVER_PORT" Secure="yes">
            <RegistrySearch Id="ServerPortReg" Root="HKLM" Key="$(var.ServerRegPath)" Name="port" Type="raw" Win64="yes"/>
        </Property> -->

        <Property Id="ALLOW_CAMERA_CHANGES" Secure="yes">
            <RegistrySearch Id="CameraSettingsOptimizationReg" Root="HKLM" Key="$(var.ServerRegPath)" Name="cameraSettingsOptimization" Type="raw" Win64="yes"/>
        </Property>

        <Property Id="STATISTICS_REPORT_ALLOWED" Value="1" Secure="yes"/>

        <Property Id="SERVER_LOGIN" Value="admin"/>

        <?if NOT $(var.VmsUpgrading) ?>
        <Property Id="SERVER_PASSWORD" Value="admin" Secure="yes"/>
        <Property Id="SERVER_PASSWORD_CONFIRM" Value="admin" Secure="yes"/>
        <?endif?>

        <Binary Id="CustomActions.dll" SourceFile="$(var.SourceDir)\wix_custom_actions.dll" />

        <!-- Custom actions -->
        <CustomAction Id="SetPreviousServerInstalled" BinaryKey="CustomActions.dll" DllEntry="SetPreviousServerInstalled" Execute="immediate" Return="check"/>

        <SetProperty Action="SetStatisticsReportAllowed1" Id="ALLOW_CAMERA_CHANGES" Value="1" After="SetPreviousServerInstalled" Sequence="ui">$(var.VmsInstalling)</SetProperty>
        <SetProperty Action="SetAllowCameraOptimization1" Id="STATISTICS_REPORT_ALLOWED" Value="1" After="AppSearch">$(var.VmsInstalling)</SetProperty>

        <CustomAction Id="ResetPreselected" Property="Preselected" Value="" />
        <CustomAction Id="GenerateGuidsForServers" BinaryKey="CustomActions.dll" DllEntry="GenerateGuidsForServers"/>
        <CustomAction Id="DeleteDatabaseFile" BinaryKey="CustomActions.dll" DllEntry="DeleteDatabaseFile" Execute="deferred" Impersonate="no"/>
        <CustomAction Id="BackupDatabaseFile" BinaryKey="CustomActions.dll" DllEntry="BackupDatabaseFile" Execute="deferred" Impersonate="no"/>


        <CustomAction Id="DeleteRegistryKeys_Cmd" Property="DeleteRegistryKeys" Value="$(var.ServerRegPath)" Execute="immediate" Impersonate="yes"/>
        <CustomAction Id="DeleteRegistryKeys" BinaryKey="CustomActions.dll" DllEntry="DeleteRegistryKeys" Execute="deferred" Impersonate="no"/>

        <CustomAction Id="DeleteAllRegistryKeys_Cmd" Property="DeleteAllRegistryKeys" Value="$(var.ServerRegPath)" Execute="immediate" Impersonate="yes"/>
        <CustomAction Id="DeleteAllRegistryKeys" BinaryKey="CustomActions.dll" DllEntry="DeleteAllRegistryKeys" Execute="deferred" Impersonate="no"/>

        <CustomAction Id="MissingFeature"  Error="At least one component should be selected"/>

        <CustomAction Id="FindFreePorts" BinaryKey="CustomActions.dll" DllEntry="FindFreePorts" />
        <CustomAction Id="CheckPorts" BinaryKey="CustomActions.dll" DllEntry="CheckPorts"/>
        <CustomAction Id="FixServerFolder" BinaryKey="CustomActions.dll" DllEntry="FixServerFolder"/>
        <CustomAction Id="GenerateSystemName" BinaryKey="CustomActions.dll" DllEntry="GenerateSystemName"/>
        <CustomAction Id="DetectIfSystemIsStandalone" BinaryKey="CustomActions.dll" DllEntry="DetectIfSystemIsStandalone"/>

        <CustomAction Id="CopyDatabaseFile_Cmd" Property="CopyDatabaseFile" Execute="immediate"
            Value="[$(var.SystemFolderActual)]config\systemprofile\AppData\Local\$(var.companyName)\Enterprise Controller\db\ecs.db;#LocalAppDataFolder#\$(var.companyName)\$(var.mediaserverName)\ecs.sqlite"/>
        <CustomAction Id="CopyDatabaseFile" BinaryKey="CustomActions.dll" DllEntry="CopyDatabaseFile" Execute="deferred" Impersonate="no"/>

        <CustomAction Id="CopyHostedFiles_Cmd" Property="CopyHostedFiles" Execute="immediate"
            Value="[$(var.SystemFolderActual)]config\systemprofile\AppData\Local\$(var.companyName)\Enterprise Controller\hostedfiles;#LocalAppDataFolder#\$(var.companyName)\$(var.mediaserverName)\vms_storedfiles"/>
        <CustomAction Id="CopyHostedFiles" BinaryKey="CustomActions.dll" DllEntry="CopyHostedFiles" Execute="deferred" Impersonate="no"/>

        <CustomAction Id="DeleteOldMediaserverSettings_Cmd" Property="DeleteOldMediaserverSettings" Value="$(var.ServerRegPath)" Execute="immediate" Impersonate="yes"/>
        <CustomAction Id="DeleteOldMediaserverSettings" BinaryKey="CustomActions.dll" DllEntry="DeleteOldMediaserverSettings" Execute="deferred" Impersonate="no"/>

        <!-- Assign default values for Quick installation -->
        <CustomAction Id="AssignServerPort" Property="SERVER_PORT" Value="[FREEPORT1]"/>
        <CustomAction Id="CloseTrayToolAction_Cmd" Property="CloseTrayToolAction"
                      Value="&quot;[TrayToolRootDir]traytool.exe&quot; &quot;quit&quot;" Execute="immediate" />
        <CustomAction Id="CloseTrayToolAction" BinaryKey="WixCA" DllEntry="CAQuietExec"
                      Execute="deferred" Return="ignore" Impersonate="no" />

        <CustomAction Id="CloseTrayToolAction2_Cmd" Property="CloseTrayToolAction2"
                      Value='"[WindowsFolder]\System32\taskkill.exe" /F /IM traytool.exe' Execute="immediate" />
        <CustomAction Id="CloseTrayToolAction2" BinaryKey="WixCA" DllEntry="CAQuietExec"
                      Execute="deferred" Return="ignore" Impersonate="no" />

        <CustomAction Id="BackupDatabaseFile_Cmd" Property="BackupDatabaseFile" Execute="immediate"
                      Value="#LocalAppDataFolder#\$(var.companyName)\$(var.mediaserverName);Software\[Manufacturer]\version;"/>

        <CustomAction Id="DeleteDatabaseFile_Cmd" Property="DeleteDatabaseFile" Execute="immediate"
                      Value="#LocalAppDataFolder#\$(var.companyName)\$(var.mediaserverName)"/>

        <CustomAction Id="LaunchTrayTool" Execute="immediate" Impersonate="yes" Return="asyncNoWait" Directory="TrayToolRootDir" ExeCommand="[TrayToolRootDir]traytool.exe"/>

        <CustomAction Id="NoDowngrade" Error="NoDowngrade" />


        <MajorUpgrade
            AllowDowngrades="yes"
            Schedule="afterInstallInitialize"
            MigrateFeatures="yes" />

        <InstallUISequence>
            <Custom Action="SetPreviousServerInstalled" Before="MigrateFeatureStates">(NOT Installed) AND (NOT (REMOVE="ALL"))</Custom>
            <Custom Action="ResetPreselected" After="MigrateFeatureStates">Installed AND Preselected</Custom>

            <FindRelatedProducts Before="AppSearch" />
            <AppSearch Before="LaunchConditions" />

            <Custom Action="FindFreePorts" Before="AssignServerPort">NOT SERVER_PORT</Custom>
            <Custom Action="AssignServerPort" Before="CostInitialize">NOT SERVER_PORT</Custom>
        </InstallUISequence>

        <InstallExecuteSequence>
            <Custom Action="FindFreePorts" Before="AssignServerPort">NOT SERVER_PORT</Custom>
            <Custom Action="AssignServerPort" Before="CostInitialize">NOT SERVER_PORT</Custom>

            <FindRelatedProducts Before="AppSearch" />
            <AppSearch Before="LaunchConditions" />

            <Custom Action="DetectIfSystemIsStandalone" Before="CostInitialize">$(var.VmsUpgrading)</Custom>
            <Custom Action="GenerateSystemName" After="DetectIfSystemIsStandalone">$(var.VmsUpgrading) AND NOT SYSTEM_NAME AND STANDALONE_SYSTEM="yes"</Custom>

            <Custom Action="CopyDatabaseFile_Cmd" After="InstallFiles">
                <![CDATA[ $(var.Inst_S1) AND REMOVE <> "ALL" ]]>
            </Custom>
            <Custom Action="CopyDatabaseFile" After="CopyDatabaseFile_Cmd">
                <![CDATA[ $(var.Inst_S1) AND REMOVE <> "ALL" ]]>
            </Custom>
            <Custom Action="CopyHostedFiles_Cmd" After="InstallFiles">
                <![CDATA[ $(var.Inst_S1) AND REMOVE <> "ALL" ]]>
            </Custom>
            <Custom Action="CopyHostedFiles" After="CopyHostedFiles_Cmd">
                <![CDATA[ $(var.Inst_S1) AND REMOVE <> "ALL" ]]>
            </Custom>

            <Custom Action="DeleteOldMediaserverSettings_Cmd" After="WriteRegistryValues">$(var.VmsUpgrading)</Custom>
            <Custom Action="DeleteOldMediaserverSettings" After="DeleteOldMediaserverSettings_Cmd">$(var.VmsUpgrading)</Custom>

            <Custom Action="CloseTrayToolAction_Cmd" Before="CloseTrayToolAction">NOT $(var.VmsInstalling)</Custom>
            <Custom Action="CloseTrayToolAction" Before="CloseTrayToolAction2_Cmd">NOT $(var.VmsInstalling)</Custom>

            <Custom Action="CloseTrayToolAction2_Cmd" Before="CloseTrayToolAction2">NOT $(var.VmsInstalling)</Custom>
            <Custom Action="CloseTrayToolAction2" Before="StopServices">NOT $(var.VmsInstalling)</Custom>

            <Custom Action="LaunchTrayTool" After="InstallFinalize">
                <![CDATA[ (!ServerFeature=3 OR &ServerFeature = 3) AND REMOVE <> "ALL" ]]>
            </Custom>

            <Custom Action="BackupDatabaseFile_Cmd" After="StopServices">1</Custom>
            <Custom Action="BackupDatabaseFile" After="BackupDatabaseFile_Cmd">1</Custom>

            <Custom Action="DeleteDatabaseFile_Cmd" After="BackupDatabaseFile">(NOT UPGRADINGPRODUCTCODE) AND (REMOVE="ALL")</Custom>
            <Custom Action="DeleteDatabaseFile" After="DeleteDatabaseFile_Cmd">(NOT UPGRADINGPRODUCTCODE) AND (REMOVE="ALL")</Custom>

            <Custom Action="DeleteAllRegistryKeys_Cmd" After="StopServices">(NOT UPGRADINGPRODUCTCODE) AND (REMOVE="ALL")</Custom>
            <Custom Action="DeleteAllRegistryKeys" After="DeleteAllRegistryKeys_Cmd">(NOT UPGRADINGPRODUCTCODE) AND (REMOVE="ALL")</Custom>

            <Custom Action="DeleteRegistryKeys_Cmd" After="DeleteDatabaseFile">(NOT UPGRADINGPRODUCTCODE) AND (REMOVE="ALL")</Custom>
            <Custom Action="DeleteRegistryKeys" After="DeleteRegistryKeys_Cmd">(NOT UPGRADINGPRODUCTCODE) AND (REMOVE="ALL")</Custom>
        </InstallExecuteSequence>

        <Media Id="1" Cabinet="srvmisc.cab" EmbedCab="yes" />

        <Media Id="2" Cabinet="cmnff1.cab" EmbedCab="$(var.NoStrip)" />
        <Media Id="3" Cabinet="cmnff2.cab" EmbedCab="$(var.NoStrip)" />
        <Media Id="4" Cabinet="cmnlib1.cab" EmbedCab="$(var.NoStrip)" />
        <Media Id="5" Cabinet="cmnicu.cab" EmbedCab="$(var.NoStrip)" />
        <Media Id="6" Cabinet="cmnlib2.cab" EmbedCab="$(var.NoStrip)" />
        <Media Id="7" Cabinet="cmnqt1.cab" EmbedCab="$(var.NoStrip)" />
        <Media Id="8" Cabinet="cmnqt2.cab" EmbedCab="$(var.NoStrip)" />
        <Media Id="9" Cabinet="cmnqtui.cab" EmbedCab="$(var.NoStrip)" />

        <Media Id="10" Cabinet="srvlib.cab" EmbedCab="yes" />
        <Media Id="11" Cabinet="srvexec.cab" EmbedCab="yes" />

        <Directory Id="TARGETDIR" Name="SourceDir">
            <Directory Id="MyPicturesFolder">
                <Directory Id="$(var.customization)BgDir" Name="$(var.ProductName) Backgrounds"/>
            </Directory>

            <Directory Id="$(var.ProgramFilesFolder)">
                <Directory Id="NetworkOptix" Name="$(var.companyInstallPath)">
                    <Directory Id="INSTALLDIR" Name="$(var.ProductName)"/>
                </Directory>
            </Directory>

            <Directory Id="ProgramMenuFolder" Name="Programs">
                <Directory Id="ProgramMenuDir" Name="$(var.companyName)">
                    <Component Id="UninstallProgramMenuFolder" DiskId="1">
                        <RegistryValue Root='HKCU' Key='Software\[Manufacturer]\ProgramMenu' Type='string' Value='' KeyPath='yes' />
                        <RemoveFolder Id='DashMenuDirRem' On='uninstall' />
                    </Component>
                </Directory>
            </Directory>

            <Directory Id="DesktopFolder" Name="Desktop"/>
            <Directory Id="StartupFolder" Name="Startup"/>
        </Directory>

        <Feature Id="AlwaysFeature" Title="Always Tool" AllowAdvertise="no" Display="hidden" Level="1">
            <ComponentRef Id="AlwaysFiles"/>
            <ComponentRef Id="UninstallProgramMenuFolder"/>
        </Feature>

        <FeatureRef Id="ServerFeature"/>

        <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR" />
        <Property Id="WIXUI_SERVER_ALLOWCHANGEIP" Value="SERVER_ALLOWCHANGEIP"/>


        <UIRef Id="WixUI_Common" />
        <UIRef Id="WixUI_ErrorProgressText" />

        <UI>
            <!-- These dialog references are needed for CloseApplication above to work correctly -->
            <DialogRef Id="FilesInUse" />
            <DialogRef Id="MsiRMFilesInUse" />

            <Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />
            <TextStyle Id="WixUI_Font_Normal" FaceName="Tahoma" Size="8" />
            <TextStyle Id="WixUI_Font_Bigger" FaceName="Tahoma" Size="12" />
            <TextStyle Id="WixUI_Font_Title" FaceName="Tahoma" Size="9" Bold="yes" />

            <DialogRef Id="SelectionWarningDlg" />
            <DialogRef Id="BrowseDlg" />
            <DialogRef Id="DiskCostDlg" />
            <DialogRef Id="ErrorDlg" />
            <DialogRef Id="FatalError" />
            <DialogRef Id="FilesInUse" />
            <DialogRef Id="MsiRMFilesInUse" />
            <DialogRef Id="PrepareDlg" />
            <DialogRef Id="ProgressDlg" />
            <DialogRef Id="ResumeDlg" />
            <DialogRef Id="UserExit" />

            <Binary Id="Warning" SourceFile="Binary\Exclam.ico" />

            <!-- WelcomeDlg -->
            <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg">
                <![CDATA[ PREVIOUSSERVERINSTALLED <> "1" AND NOT LICENSE_ALREADY_ACCEPTED ]]>
            </Publish>

            <!-- Demo only!!! -->
            <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">
                <![CDATA[ PREVIOUSSERVERINSTALLED <> "1" AND LICENSE_ALREADY_ACCEPTED ]]>
            </Publish>

            <Publish Dialog="WelcomeDlg" Control="Next" Property="ALLOW_CAMERA_CHANGES" Value="yes">
                <![CDATA[ PREVIOUSSERVERINSTALLED <> "1" AND LICENSE_ALREADY_ACCEPTED ]]>
            </Publish>
            <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="UpgradeDlg">PREVIOUSSERVERINSTALLED = "1"</Publish>

            <!-- LicenseAgreementDlg -->
            <Publish Dialog="LicenseAgreementDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>

            <!-- Demo only!!! -->
            <Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">LicenseAccepted = "1"</Publish>

            <!-- Demo only!!! <Publish Dialog="LicenseAgreementDlg" Control="Next" Property="ALLOW_CAMERA_CHANGES" Value="yes">LicenseAccepted = "1"</Publish> -->

            <!-- UpgradeDlg -->
            <Publish Dialog="UpgradeDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
            <Publish Dialog="UpgradeDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>

            <!-- Demo only!!! -->
            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="LicenseAgreementDlg">NOT $(var.VmsRemoving) AND NOT $(var.VmsUpgrading) AND NOT LICENSE_ALREADY_ACCEPTED</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">LICENSE_ALREADY_ACCEPTED</Publish>

            <Publish Dialog="VerifyReadyDlg" Control="Back" Property="ALLOW_CAMERA_CHANGES" Value="{}">ALLOW_CAMERA_CHANGES = "0"</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="UpgradeDlg">1</Publish>

            <Publish Dialog="VerifyReadyDlg" Control="Install" Event="AddLocal" Value="ServerFeature">INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Install" Event="Remove" Value="ServerFeature">NOT INSTALL_SERVER</Publish>

            <Publish Dialog="VerifyReadyDlg" Control="InstallNoShield" Event="AddLocal" Value="ServerFeature">INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="InstallNoShield" Event="Remove" Value="ServerFeature">NOT INSTALL_SERVER</Publish>

            <Publish Dialog="VerifyReadyDlg" Control="Change" Event="AddLocal" Value="ServerFeature">INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Change" Event="Remove" Value="ServerFeature">NOT INSTALL_SERVER</Publish>

            <Publish Dialog="VerifyReadyDlg" Control="ChangeNoShield" Event="AddLocal" Value="ServerFeature">INSTALL_SERVER</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="ChangeNoShield" Event="Remove" Value="ServerFeature">NOT INSTALL_SERVER</Publish>

            <!-- MyExitDialog -->
            <Publish Dialog="MyExitDialog" Control="Finish" Event="EndDialog" Value="Return" Order="999">1</Publish>
        </UI>
    </Product>
</Wix>
