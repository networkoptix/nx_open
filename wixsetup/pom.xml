<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!--
    Example pom for delegating maven goals to msbuild so it builds the "solution"
 
    A solution can be a group of projects, but here we only have one.
    It should also be possible to have one maven project per solution project, 
    and have a parent pom to deletegate the build.
  -->
	<parent>
		<artifactId>hdwitness</artifactId>
		<groupId>com.networkoptix.hdwitness</groupId>
		<version>1.1</version>
		<relativePath>..</relativePath>
	</parent>

	<groupId>com.networkoptix.hdwitness</groupId>
	<version>1.1</version>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>wixsetup</artifactId>
	<packaging>pom</packaging>
	<name>HD Witness Installer</name>

	<build>
		<directory>${arch}</directory>
		<sourceDirectory>${basedir}</sourceDirectory>
		<finalName>${pom.parent.artifactId}-${version}.${buildNumber}-${platform}-${arch}-${build.configuration}-${customization}</finalName>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>../build-${customization}.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<properties>
		<arch>x86</arch>
	</properties>

	<profiles>
		<profile>
			<id>installer</id>
			<activation>				
				<activeByDefault>true</activeByDefault>
			</activation>			
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<id>unpack-artifacts</id>
								<phase>initialize</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>com.networkoptix.hdwitness</groupId>
											<artifactId>appserver</artifactId>
											<version>${project.version}</version>
											<type>zip</type>
											<classifier>${platform}-exec</classifier>
											<overWrite>false</overWrite>
											<excludes>ecs.exe,db/ecs.db</excludes>
											<outputDirectory>${project.build.directory}/appserver</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>com.networkoptix.hdwitness</groupId>
											<artifactId>appserver</artifactId>
											<version>${project.version}</version>
											<type>zip</type>
											<classifier>${platform}-exec</classifier>
											<overWrite>false</overWrite>
											<includes>ecs.exe</includes>
											<outputDirectory>${project.build.directory}/files</outputDirectory>
										</artifactItem>								
										<artifactItem>
											<groupId>com.networkoptix.hdwitness</groupId>
											<artifactId>client</artifactId>
											<version>${project.version}</version>
											<type>zip</type>
											<classifier>${platform}-${arch}-${build.configuration}-${customization}-exec</classifier>
											<overWrite>false</overWrite>
											<outputDirectory>${project.build.directory}/client</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>com.networkoptix.hdwitness</groupId>
											<artifactId>mediaserver</artifactId>
											<version>${project.version}</version>
											<type>zip</type>
											<classifier>${platform}-${arch}-${build.configuration}-${customization}-exec</classifier>
											<overWrite>false</overWrite>
											<outputDirectory>${project.build.directory}/mediaserver</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>com.networkoptix.hdwitness</groupId>
											<artifactId>traytool</artifactId>
											<version>${project.version}</version>
											<type>zip</type>
											<classifier>${platform}-${arch}-${build.configuration}-${customization}-exec</classifier>
											<overWrite>false</overWrite>
											<outputDirectory>${project.build.directory}/traytool</outputDirectory>
										</artifactItem>								
										<artifactItem>
											<groupId>com.networkoptix.hdwitness</groupId>
											<artifactId>mediaproxy</artifactId>
											<version>${project.version}</version>
											<type>zip</type>
											<classifier>${platform}-${arch}-${build.configuration}-${customization}-exec</classifier>
											<overWrite>false</overWrite>
											<outputDirectory>${project.build.directory}/mediaproxy</outputDirectory>
										</artifactItem>											
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.5</version>

						<executions>
							<execution>
								<id>prepare-resources</id>
								<phase>process-sources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.sourceDirectory}/maven/wix-resources</directory>
											<filtering>true</filtering>
										</resource>
										<resource>
											<directory>${project.build.sourceDirectory}/maven/bin-resources/common</directory>
											<filtering>false</filtering>
										</resource>		
										<resource>
											<directory>${project.build.sourceDirectory}/maven/bin-resources/custom/${installer.customization}</directory>
											<filtering>false</filtering>
										</resource>		
										<resource>
											<directory>${project.build.sourceDirectory}</directory>
											<filtering>false</filtering>
											<includes>
												<include>CustomActions/**</include>
											</includes>
										</resource>											
									</resources>            
									<encoding>UTF-8</encoding>
								</configuration>            
							</execution>
						</executions>
					</plugin>		

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1.1</version>
						<executions>
							<execution>
								<id>wix-heat</id>
								<phase>process-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>heat</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>dir</argument>
										<argument>appserver</argument>
										<argument>-wixvar</argument>
										<argument>-nologo</argument>
										<argument>-sfrag</argument> 
										<argument>-suid</argument> 
										<argument>-sreg</argument> 
										<argument>-ag</argument> 
										<argument>-srd</argument> 
										<argument>-dir WebHelp</argument> 
										<argument>-out</argument> 
										<argument>AppServerFiles.wxs</argument>
										<argument>-cg </argument> 
										<argument>AppServerFilesComponent</argument>
										<argument>-dr </argument> 
										<argument>VmsAppServerDir</argument>
										<argument>-var</argument> 
										<argument>var.AppServerSourceDir</argument>
										<argument>-wixvar</argument>
									</arguments>
								</configuration>					
							</execution>

							<execution>
								<id>package-CustomActions-with-msbuild</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${project.build.directory}/build.bat</executable>
									<workingDirectory>${project.build.directory}/CustomActions/</workingDirectory>		
									<arguments>
										<argument>CustomActions.vcproj</argument>
										<argument>/t:Rebuild</argument>
										<argument>/p:Configuration=${build.configuration}</argument>
									</arguments>
								</configuration>
							</execution>

							<execution>
								<id>wix-candle</id>
								<phase>process-resources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>candle</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>-dAppServerSourceDir="appserver"</argument>
										<argument>-out</argument>
										<argument>obj\${build.configuration}\</argument>
										<argument>-ext</argument> 
										<argument>WixFirewallExtension.dll</argument>
										<argument>-ext</argument> 
										<argument>WixUIExtension.dll</argument>
										<argument>-ext</argument> 
										<argument>WixUtilExtension.dll</argument> 
										<argument>UpgradeDlg.wxs</argument> 
										<argument>PasswordDlg.wxs</argument>
										<argument>EmptyPasswordDlg.wxs</argument>
										<argument>AllFieldsAreMandatoryDlg.wxs</argument>
										<argument>InstallTypeDlg.wxs</argument>
										<argument>AdvancedTypeDlg.wxs</argument>
										<argument>PortDuplicateDlg.wxs</argument>
										<argument>PortIsBusyDlg.wxs</argument>
										<argument>InvalidPasswordDlg.wxs</argument>
										<argument>MediaDirDlg.wxs</argument>
										<argument>MediaServerDlg.wxs</argument>
										<argument>MyFeaturesDlg.wxs</argument>
										<argument>SelectionWarning.wxs</argument>
										<argument>DowngradeWarningDlg.wxs</argument>
										<argument>Product.wxs</argument>
										<argument>AppServerFiles.wxs</argument>
										<argument>AppServerDlg.wxs</argument> 
									</arguments>
								</configuration>					
							</execution>

							<execution>
								<id>wix-light</id>
								<phase>compile</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>light</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>-cultures:en-US</argument>
										<argument>-loc</argument>
										<argument>CustomStrings.wxl</argument>
										<argument>-ext</argument>
										<argument>WixFirewallExtension.dll</argument>
										<argument>-ext</argument>
										<argument>WixUIExtension.dll</argument>
										<argument>-ext</argument>
										<argument>WixUtilExtension.dll</argument>
										<argument>-out</argument>
										<argument>bin/${project.build.finalName}.msi</argument> 
										<argument>-pdbout</argument> 
										<argument>bin\${build.configuration}\EVEMediaPlayerSetup.wixpdb</argument> 
										<argument>obj\${build.configuration}\*.wixobj"</argument>
									</arguments>
									<successCodes>
										<successCode>0</successCode>
										<successCode>204</successCode>
									</successCodes>	
								</configuration>					
							</execution>

							<execution>
								<id>wix-fix</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>cscript</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>FixExitDialog.js</argument>
										<argument>bin/${project.build.finalName}.msi</argument>
									</arguments>							
								</configuration>
							</execution>

							<execution>
								<id>integration-test</id>
								<phase>integration-test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>test.bat</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>						
								</configuration>	
							</execution>			
						</executions> 
					</plugin>
					<!--<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<id>attach</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>${basedir}/bin/${msbuild.configuration}/${pom.parent.artifact}-${version}.exe</file>
									<type>exe</type>
									<classifier>${platform}-x86-${msbuild.configuration}</classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
				</plugins>
			</build>
		</profile>
	</profiles>
</project>