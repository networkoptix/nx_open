function(pick_file file_name result_name)
  if(file_name MATCHES "StdAfx.cpp")
    set(${result_name} FALSE PARENT_SCOPE)
    return()
  #elseif(file_name MATCHES "moc_")
  #  set(${result_name} FALSE PARENT_SCOPE)
  #  return()
  elseif(file_name MATCHES "_automoc")
    set(${result_name} FALSE PARENT_SCOPE)
    return()    
  elseif(file_name MATCHES "_win.cpp" OR file_name MATCHES "_win32")
    if(NOT WIN32)
      set(${result_name} FALSE PARENT_SCOPE)
      return()
    endif()
  elseif(file_name MATCHES "_unix.cpp")
    if(NOT UNIX)
      set(${result_name} FALSE PARENT_SCOPE)
      return()
    endif()
  elseif(file_name MATCHES "_linux.cpp")
    if(NOT ${CMAKE_SYSTEM_NAME} MATCHES "Linux")
      set(${result_name} FALSE PARENT_SCOPE)
      return()
    endif()
  elseif(file_name MATCHES "_mac.cpp")
    if(NOT ${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
      set(${result_name} FALSE PARENT_SCOPE)
      return()
    endif()
  elseif(file_name MATCHES "_android.cpp")
    if(NOT ${CMAKE_SYSTEM_NAME} MATCHES "Android")
      set(${result_name} FALSE PARENT_SCOPE)
      return()
    endif()
  elseif(file_name MATCHES "_ios.cpp")
    if(NOT ${CMAKE_SYSTEM_NAME} MATCHES "iOS")
      set(${result_name} FALSE PARENT_SCOPE)
      return()
    endif()
  endif()
  set(${result_name} TRUE PARENT_SCOPE)
endfunction()

function(find_sources src_dir)
    file(GLOB_RECURSE CODE_FILES ${src_dir}/*.cpp ${PROJECT_BINARY_DIR}/*.cpp)
    file(GLOB_RECURSE HEADER_FILES ${src_dir}/*.h)
    file(GLOB_RECURSE UI_FILES src/*.ui)

    foreach(file_name ${CODE_FILES})
      pick_file(${file_name} PICK)
      if(${PICK})
        list(APPEND RESULT_FILES ${file_name})
      endif()
    endforeach()

    set(CPP_FILES ${RESULT_FILES} PARENT_SCOPE)
    set(UI_FILES ${UI_FILES} PARENT_SCOPE)
  #foreach(filename ${RESULT_FILES})
  #  message("Adding source: " ${filename})
  #endforeach(filename ${RESULT_FILES})      
    
endfunction()
