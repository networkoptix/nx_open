// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

#import "Resource.pb.h"

@class Camera;
@class Camera_Builder;
@class Camera_ScheduleTask;
@class Camera_ScheduleTask_Builder;
@class Resource;
@class Resource_Builder;
@class Resource_Property;
@class Resource_Property_Builder;
@class Resources;
@class Resources_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef enum {
  Camera_MotionTypeDefault = 0,
  Camera_MotionTypeHardwareGrid = 1,
  Camera_MotionTypeSoftwareGrid = 2,
  Camera_MotionTypeMotionWindow = 4,
  Camera_MotionTypeNoMotion = 8,
} Camera_MotionType;

BOOL Camera_MotionTypeIsValidValue(Camera_MotionType value);

typedef enum {
  Camera_QualityLowest = 0,
  Camera_QualityLow = 1,
  Camera_QualityNormal = 2,
  Camera_QualityHigh = 3,
  Camera_QualityHighest = 4,
  Camera_QualityPreset = 5,
} Camera_Quality;

BOOL Camera_QualityIsValidValue(Camera_Quality value);

typedef enum {
  Camera_SecondaryQualitySecondaryLow = 0,
  Camera_SecondaryQualitySecondaryMedium = 1,
  Camera_SecondaryQualitySecondaryHigh = 2,
  Camera_SecondaryQualitySecondaryNotDefined = 3,
  Camera_SecondaryQualitySecondaryDontUse = 4,
} Camera_SecondaryQuality;

BOOL Camera_SecondaryQualityIsValidValue(Camera_SecondaryQuality value);


@interface CameraRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface Camera : PBGeneratedMessage {
@private
  BOOL hasControlDisabled_:1;
  BOOL hasManuallyAdded_:1;
  BOOL hasAudioEnabled_:1;
  BOOL hasScheduleDisabled_:1;
  BOOL hasStatusFlags_:1;
  BOOL hasMac_:1;
  BOOL hasLogin_:1;
  BOOL hasPassword_:1;
  BOOL hasRegion_:1;
  BOOL hasPhysicalId_:1;
  BOOL hasModel_:1;
  BOOL hasFirmware_:1;
  BOOL hasGroupId_:1;
  BOOL hasGroupName_:1;
  BOOL hasDewarpingParams_:1;
  BOOL hasVendor_:1;
  BOOL hasMotionType_:1;
  BOOL hasSecondaryQuality_:1;
  BOOL controlDisabled_:1;
  BOOL manuallyAdded_:1;
  BOOL audioEnabled_:1;
  BOOL scheduleDisabled_:1;
  int32_t statusFlags;
  NSString* mac;
  NSString* login;
  NSString* password;
  NSString* region;
  NSString* physicalId;
  NSString* model;
  NSString* firmware;
  NSString* groupId;
  NSString* groupName;
  NSString* dewarpingParams;
  NSString* vendor;
  Camera_MotionType motionType;
  Camera_SecondaryQuality secondaryQuality;
  NSMutableArray * scheduleTaskArray;
}
- (BOOL) hasScheduleDisabled;
- (BOOL) hasMotionType;
- (BOOL) hasRegion;
- (BOOL) hasMac;
- (BOOL) hasLogin;
- (BOOL) hasPassword;
- (BOOL) hasAudioEnabled;
- (BOOL) hasPhysicalId;
- (BOOL) hasManuallyAdded;
- (BOOL) hasModel;
- (BOOL) hasFirmware;
- (BOOL) hasGroupId;
- (BOOL) hasGroupName;
- (BOOL) hasSecondaryQuality;
- (BOOL) hasControlDisabled;
- (BOOL) hasStatusFlags;
- (BOOL) hasDewarpingParams;
- (BOOL) hasVendor;
- (BOOL) scheduleDisabled;
@property (readonly) Camera_MotionType motionType;
@property (readonly, strong) NSString* region;
@property (readonly, strong) NSString* mac;
@property (readonly, strong) NSString* login;
@property (readonly, strong) NSString* password;
@property (readonly, strong) NSArray * scheduleTask;
- (BOOL) audioEnabled;
@property (readonly, strong) NSString* physicalId;
- (BOOL) manuallyAdded;
@property (readonly, strong) NSString* model;
@property (readonly, strong) NSString* firmware;
@property (readonly, strong) NSString* groupId;
@property (readonly, strong) NSString* groupName;
@property (readonly) Camera_SecondaryQuality secondaryQuality;
- (BOOL) controlDisabled;
@property (readonly) int32_t statusFlags;
@property (readonly, strong) NSString* dewarpingParams;
@property (readonly, strong) NSString* vendor;
- (Camera_ScheduleTask*)scheduleTaskAtIndex:(NSUInteger)index;

+ (Camera*) defaultInstance;
- (Camera*) defaultInstance;

+ (id<PBExtensionField>) resource;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Camera_Builder*) builder;
+ (Camera_Builder*) builder;
+ (Camera_Builder*) builderWithPrototype:(Camera*) prototype;
- (Camera_Builder*) toBuilder;

+ (Camera*) parseFromData:(NSData*) data;
+ (Camera*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Camera*) parseFromInputStream:(NSInputStream*) input;
+ (Camera*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Camera*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Camera*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Camera_ScheduleTask : PBGeneratedMessage {
@private
  BOOL hasDoRecordAudio_:1;
  BOOL hasId_:1;
  BOOL hasSourceId_:1;
  BOOL hasStartTime_:1;
  BOOL hasEndTime_:1;
  BOOL hasRecordType_:1;
  BOOL hasDayOfWeek_:1;
  BOOL hasBeforeThreshold_:1;
  BOOL hasAfterThreshold_:1;
  BOOL hasFps_:1;
  BOOL hasStreamQuality_:1;
  BOOL doRecordAudio_:1;
  int32_t id;
  int32_t sourceId;
  int32_t startTime;
  int32_t endTime;
  int32_t recordType;
  int32_t dayOfWeek;
  int32_t beforeThreshold;
  int32_t afterThreshold;
  int32_t fps;
  Camera_Quality streamQuality;
}
- (BOOL) hasId;
- (BOOL) hasSourceId;
- (BOOL) hasStartTime;
- (BOOL) hasEndTime;
- (BOOL) hasDoRecordAudio;
- (BOOL) hasRecordType;
- (BOOL) hasDayOfWeek;
- (BOOL) hasBeforeThreshold;
- (BOOL) hasAfterThreshold;
- (BOOL) hasStreamQuality;
- (BOOL) hasFps;
@property (readonly) int32_t id;
@property (readonly) int32_t sourceId;
@property (readonly) int32_t startTime;
@property (readonly) int32_t endTime;
- (BOOL) doRecordAudio;
@property (readonly) int32_t recordType;
@property (readonly) int32_t dayOfWeek;
@property (readonly) int32_t beforeThreshold;
@property (readonly) int32_t afterThreshold;
@property (readonly) Camera_Quality streamQuality;
@property (readonly) int32_t fps;

+ (Camera_ScheduleTask*) defaultInstance;
- (Camera_ScheduleTask*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Camera_ScheduleTask_Builder*) builder;
+ (Camera_ScheduleTask_Builder*) builder;
+ (Camera_ScheduleTask_Builder*) builderWithPrototype:(Camera_ScheduleTask*) prototype;
- (Camera_ScheduleTask_Builder*) toBuilder;

+ (Camera_ScheduleTask*) parseFromData:(NSData*) data;
+ (Camera_ScheduleTask*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Camera_ScheduleTask*) parseFromInputStream:(NSInputStream*) input;
+ (Camera_ScheduleTask*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Camera_ScheduleTask*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Camera_ScheduleTask*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Camera_ScheduleTask_Builder : PBGeneratedMessage_Builder {
@private
  Camera_ScheduleTask* result;
}

- (Camera_ScheduleTask*) defaultInstance;

- (Camera_ScheduleTask_Builder*) clear;
- (Camera_ScheduleTask_Builder*) clone;

- (Camera_ScheduleTask*) build;
- (Camera_ScheduleTask*) buildPartial;

- (Camera_ScheduleTask_Builder*) mergeFrom:(Camera_ScheduleTask*) other;
- (Camera_ScheduleTask_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Camera_ScheduleTask_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (int32_t) id;
- (Camera_ScheduleTask_Builder*) setId:(int32_t) value;
- (Camera_ScheduleTask_Builder*) clearId;

- (BOOL) hasSourceId;
- (int32_t) sourceId;
- (Camera_ScheduleTask_Builder*) setSourceId:(int32_t) value;
- (Camera_ScheduleTask_Builder*) clearSourceId;

- (BOOL) hasStartTime;
- (int32_t) startTime;
- (Camera_ScheduleTask_Builder*) setStartTime:(int32_t) value;
- (Camera_ScheduleTask_Builder*) clearStartTime;

- (BOOL) hasEndTime;
- (int32_t) endTime;
- (Camera_ScheduleTask_Builder*) setEndTime:(int32_t) value;
- (Camera_ScheduleTask_Builder*) clearEndTime;

- (BOOL) hasDoRecordAudio;
- (BOOL) doRecordAudio;
- (Camera_ScheduleTask_Builder*) setDoRecordAudio:(BOOL) value;
- (Camera_ScheduleTask_Builder*) clearDoRecordAudio;

- (BOOL) hasRecordType;
- (int32_t) recordType;
- (Camera_ScheduleTask_Builder*) setRecordType:(int32_t) value;
- (Camera_ScheduleTask_Builder*) clearRecordType;

- (BOOL) hasDayOfWeek;
- (int32_t) dayOfWeek;
- (Camera_ScheduleTask_Builder*) setDayOfWeek:(int32_t) value;
- (Camera_ScheduleTask_Builder*) clearDayOfWeek;

- (BOOL) hasBeforeThreshold;
- (int32_t) beforeThreshold;
- (Camera_ScheduleTask_Builder*) setBeforeThreshold:(int32_t) value;
- (Camera_ScheduleTask_Builder*) clearBeforeThreshold;

- (BOOL) hasAfterThreshold;
- (int32_t) afterThreshold;
- (Camera_ScheduleTask_Builder*) setAfterThreshold:(int32_t) value;
- (Camera_ScheduleTask_Builder*) clearAfterThreshold;

- (BOOL) hasStreamQuality;
- (Camera_Quality) streamQuality;
- (Camera_ScheduleTask_Builder*) setStreamQuality:(Camera_Quality) value;
- (Camera_ScheduleTask_Builder*) clearStreamQuality;

- (BOOL) hasFps;
- (int32_t) fps;
- (Camera_ScheduleTask_Builder*) setFps:(int32_t) value;
- (Camera_ScheduleTask_Builder*) clearFps;
@end

@interface Camera_Builder : PBGeneratedMessage_Builder {
@private
  Camera* result;
}

- (Camera*) defaultInstance;

- (Camera_Builder*) clear;
- (Camera_Builder*) clone;

- (Camera*) build;
- (Camera*) buildPartial;

- (Camera_Builder*) mergeFrom:(Camera*) other;
- (Camera_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Camera_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasScheduleDisabled;
- (BOOL) scheduleDisabled;
- (Camera_Builder*) setScheduleDisabled:(BOOL) value;
- (Camera_Builder*) clearScheduleDisabled;

- (BOOL) hasMotionType;
- (Camera_MotionType) motionType;
- (Camera_Builder*) setMotionType:(Camera_MotionType) value;
- (Camera_Builder*) clearMotionType;

- (BOOL) hasRegion;
- (NSString*) region;
- (Camera_Builder*) setRegion:(NSString*) value;
- (Camera_Builder*) clearRegion;

- (BOOL) hasMac;
- (NSString*) mac;
- (Camera_Builder*) setMac:(NSString*) value;
- (Camera_Builder*) clearMac;

- (BOOL) hasLogin;
- (NSString*) login;
- (Camera_Builder*) setLogin:(NSString*) value;
- (Camera_Builder*) clearLogin;

- (BOOL) hasPassword;
- (NSString*) password;
- (Camera_Builder*) setPassword:(NSString*) value;
- (Camera_Builder*) clearPassword;

- (NSMutableArray *)scheduleTask;
- (Camera_ScheduleTask*)scheduleTaskAtIndex:(NSUInteger)index;
- (Camera_Builder *)addScheduleTask:(Camera_ScheduleTask*)value;
- (Camera_Builder *)setScheduleTaskArray:(NSArray *)array;
- (Camera_Builder *)clearScheduleTask;

- (BOOL) hasAudioEnabled;
- (BOOL) audioEnabled;
- (Camera_Builder*) setAudioEnabled:(BOOL) value;
- (Camera_Builder*) clearAudioEnabled;

- (BOOL) hasPhysicalId;
- (NSString*) physicalId;
- (Camera_Builder*) setPhysicalId:(NSString*) value;
- (Camera_Builder*) clearPhysicalId;

- (BOOL) hasManuallyAdded;
- (BOOL) manuallyAdded;
- (Camera_Builder*) setManuallyAdded:(BOOL) value;
- (Camera_Builder*) clearManuallyAdded;

- (BOOL) hasModel;
- (NSString*) model;
- (Camera_Builder*) setModel:(NSString*) value;
- (Camera_Builder*) clearModel;

- (BOOL) hasFirmware;
- (NSString*) firmware;
- (Camera_Builder*) setFirmware:(NSString*) value;
- (Camera_Builder*) clearFirmware;

- (BOOL) hasGroupId;
- (NSString*) groupId;
- (Camera_Builder*) setGroupId:(NSString*) value;
- (Camera_Builder*) clearGroupId;

- (BOOL) hasGroupName;
- (NSString*) groupName;
- (Camera_Builder*) setGroupName:(NSString*) value;
- (Camera_Builder*) clearGroupName;

- (BOOL) hasSecondaryQuality;
- (Camera_SecondaryQuality) secondaryQuality;
- (Camera_Builder*) setSecondaryQuality:(Camera_SecondaryQuality) value;
- (Camera_Builder*) clearSecondaryQuality;

- (BOOL) hasControlDisabled;
- (BOOL) controlDisabled;
- (Camera_Builder*) setControlDisabled:(BOOL) value;
- (Camera_Builder*) clearControlDisabled;

- (BOOL) hasStatusFlags;
- (int32_t) statusFlags;
- (Camera_Builder*) setStatusFlags:(int32_t) value;
- (Camera_Builder*) clearStatusFlags;

- (BOOL) hasDewarpingParams;
- (NSString*) dewarpingParams;
- (Camera_Builder*) setDewarpingParams:(NSString*) value;
- (Camera_Builder*) clearDewarpingParams;

- (BOOL) hasVendor;
- (NSString*) vendor;
- (Camera_Builder*) setVendor:(NSString*) value;
- (Camera_Builder*) clearVendor;
@end

