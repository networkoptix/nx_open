// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Kvpair.pb.h"

@implementation KvpairRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [KvpairRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface KvPair ()
@property int32_t resourceId;
@property (strong) NSString* name;
@property (strong) NSString* value;
@end

@implementation KvPair

- (BOOL) hasResourceId {
  return !!hasResourceId_;
}
- (void) setHasResourceId:(BOOL) value {
  hasResourceId_ = !!value;
}
@synthesize resourceId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value {
  hasValue_ = !!value;
}
@synthesize value;
- (id) init {
  if ((self = [super init])) {
    self.resourceId = 0;
    self.name = @"";
    self.value = @"";
  }
  return self;
}
static KvPair* defaultKvPairInstance = nil;
+ (void) initialize {
  if (self == [KvPair class]) {
    defaultKvPairInstance = [[KvPair alloc] init];
  }
}
+ (KvPair*) defaultInstance {
  return defaultKvPairInstance;
}
- (KvPair*) defaultInstance {
  return defaultKvPairInstance;
}
- (BOOL) isInitialized {
  if (!self.hasResourceId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasValue) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResourceId) {
    [output writeInt32:1 value:self.resourceId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasValue) {
    [output writeString:3 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasResourceId) {
    size += computeInt32Size(1, self.resourceId);
  }
  if (self.hasName) {
    size += computeStringSize(2, self.name);
  }
  if (self.hasValue) {
    size += computeStringSize(3, self.value);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (KvPair*) parseFromData:(NSData*) data {
  return (KvPair*)[[[KvPair builder] mergeFromData:data] build];
}
+ (KvPair*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KvPair*)[[[KvPair builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (KvPair*) parseFromInputStream:(NSInputStream*) input {
  return (KvPair*)[[[KvPair builder] mergeFromInputStream:input] build];
}
+ (KvPair*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KvPair*)[[[KvPair builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (KvPair*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (KvPair*)[[[KvPair builder] mergeFromCodedInputStream:input] build];
}
+ (KvPair*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KvPair*)[[[KvPair builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (KvPair_Builder*) builder {
  return [[KvPair_Builder alloc] init];
}
+ (KvPair_Builder*) builderWithPrototype:(KvPair*) prototype {
  return [[KvPair builder] mergeFrom:prototype];
}
- (KvPair_Builder*) builder {
  return [KvPair builder];
}
- (KvPair_Builder*) toBuilder {
  return [KvPair builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasResourceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resourceId", [NSNumber numberWithInt:self.resourceId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"value", self.value];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[KvPair class]]) {
    return NO;
  }
  KvPair *otherMessage = other;
  return
      self.hasResourceId == otherMessage.hasResourceId &&
      (!self.hasResourceId || self.resourceId == otherMessage.resourceId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasValue == otherMessage.hasValue &&
      (!self.hasValue || [self.value isEqual:otherMessage.value]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasResourceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.resourceId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasValue) {
    hashCode = hashCode * 31 + [self.value hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface KvPair_Builder()
@property (strong) KvPair* result;
@end

@implementation KvPair_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[KvPair alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (KvPair_Builder*) clear {
  self.result = [[KvPair alloc] init];
  return self;
}
- (KvPair_Builder*) clone {
  return [KvPair builderWithPrototype:result];
}
- (KvPair*) defaultInstance {
  return [KvPair defaultInstance];
}
- (KvPair*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (KvPair*) buildPartial {
  KvPair* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (KvPair_Builder*) mergeFrom:(KvPair*) other {
  if (other == [KvPair defaultInstance]) {
    return self;
  }
  if (other.hasResourceId) {
    [self setResourceId:other.resourceId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (KvPair_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (KvPair_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResourceId:[input readInt32]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setValue:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasResourceId {
  return result.hasResourceId;
}
- (int32_t) resourceId {
  return result.resourceId;
}
- (KvPair_Builder*) setResourceId:(int32_t) value {
  result.hasResourceId = YES;
  result.resourceId = value;
  return self;
}
- (KvPair_Builder*) clearResourceId {
  result.hasResourceId = NO;
  result.resourceId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (KvPair_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (KvPair_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (NSString*) value {
  return result.value;
}
- (KvPair_Builder*) setValue:(NSString*) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (KvPair_Builder*) clearValue {
  result.hasValue = NO;
  result.value = @"";
  return self;
}
@end

@interface KvPairs ()
@property (strong) NSMutableArray * kvPairArray;
@end

@implementation KvPairs

@synthesize kvPairArray;
@dynamic kvPair;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static KvPairs* defaultKvPairsInstance = nil;
+ (void) initialize {
  if (self == [KvPairs class]) {
    defaultKvPairsInstance = [[KvPairs alloc] init];
  }
}
+ (KvPairs*) defaultInstance {
  return defaultKvPairsInstance;
}
- (KvPairs*) defaultInstance {
  return defaultKvPairsInstance;
}
- (NSArray *)kvPair {
  return kvPairArray;
}
- (KvPair*)kvPairAtIndex:(NSUInteger)index {
  return [kvPairArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (KvPair* element in self.kvPair) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (KvPair *element in self.kvPairArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (KvPair *element in self.kvPairArray) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (KvPairs*) parseFromData:(NSData*) data {
  return (KvPairs*)[[[KvPairs builder] mergeFromData:data] build];
}
+ (KvPairs*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KvPairs*)[[[KvPairs builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (KvPairs*) parseFromInputStream:(NSInputStream*) input {
  return (KvPairs*)[[[KvPairs builder] mergeFromInputStream:input] build];
}
+ (KvPairs*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KvPairs*)[[[KvPairs builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (KvPairs*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (KvPairs*)[[[KvPairs builder] mergeFromCodedInputStream:input] build];
}
+ (KvPairs*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KvPairs*)[[[KvPairs builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (KvPairs_Builder*) builder {
  return [[KvPairs_Builder alloc] init];
}
+ (KvPairs_Builder*) builderWithPrototype:(KvPairs*) prototype {
  return [[KvPairs builder] mergeFrom:prototype];
}
- (KvPairs_Builder*) builder {
  return [KvPairs builder];
}
- (KvPairs_Builder*) toBuilder {
  return [KvPairs builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  for (KvPair* element in self.kvPairArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"kvPair"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[KvPairs class]]) {
    return NO;
  }
  KvPairs *otherMessage = other;
  return
      [self.kvPairArray isEqualToArray:otherMessage.kvPairArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  for (KvPair* element in self.kvPairArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface KvPairs_Builder()
@property (strong) KvPairs* result;
@end

@implementation KvPairs_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[KvPairs alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (KvPairs_Builder*) clear {
  self.result = [[KvPairs alloc] init];
  return self;
}
- (KvPairs_Builder*) clone {
  return [KvPairs builderWithPrototype:result];
}
- (KvPairs*) defaultInstance {
  return [KvPairs defaultInstance];
}
- (KvPairs*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (KvPairs*) buildPartial {
  KvPairs* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (KvPairs_Builder*) mergeFrom:(KvPairs*) other {
  if (other == [KvPairs defaultInstance]) {
    return self;
  }
  if (other.kvPairArray.count > 0) {
    if (result.kvPairArray == nil) {
      result.kvPairArray = [[NSMutableArray alloc] initWithArray:other.kvPairArray];
    } else {
      [result.kvPairArray addObjectsFromArray:other.kvPairArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (KvPairs_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (KvPairs_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        KvPair_Builder* subBuilder = [KvPair builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addKvPair:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)kvPair {
  return result.kvPairArray;
}
- (KvPair*)kvPairAtIndex:(NSUInteger)index {
  return [result kvPairAtIndex:index];
}
- (KvPairs_Builder *)addKvPair:(KvPair*)value {
  if (result.kvPairArray == nil) {
    result.kvPairArray = [[NSMutableArray alloc]init];
  }
  [result.kvPairArray addObject:value];
  return self;
}
- (KvPairs_Builder *)setKvPairArray:(NSArray *)array {
  result.kvPairArray = [[NSMutableArray alloc]init];
  return self;
}
- (KvPairs_Builder *)clearKvPair {
  result.kvPairArray = nil;
  return self;
}
@end

