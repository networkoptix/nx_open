// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Resource.pb.h"

@implementation ResourceRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ResourceRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Resource ()
@property Resource_Type type;
@property int32_t id;
@property int32_t resourceTypeId;
@property int32_t parentId;
@property (strong) NSString* name;
@property (strong) NSString* url;
@property Resource_Status status;
@property BOOL disabled;
@property (strong) NSString* guid;
@property (strong) NSMutableArray * propertyArray;
@end

@implementation Resource

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasResourceTypeId {
  return !!hasResourceTypeId_;
}
- (void) setHasResourceTypeId:(BOOL) value {
  hasResourceTypeId_ = !!value;
}
@synthesize resourceTypeId;
- (BOOL) hasParentId {
  return !!hasParentId_;
}
- (void) setHasParentId:(BOOL) value {
  hasParentId_ = !!value;
}
@synthesize parentId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasUrl {
  return !!hasUrl_;
}
- (void) setHasUrl:(BOOL) value {
  hasUrl_ = !!value;
}
@synthesize url;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasDisabled {
  return !!hasDisabled_;
}
- (void) setHasDisabled:(BOOL) value {
  hasDisabled_ = !!value;
}
- (BOOL) disabled {
  return !!disabled_;
}
- (void) setDisabled:(BOOL) value {
  disabled_ = !!value;
}
- (BOOL) hasGuid {
  return !!hasGuid_;
}
- (void) setHasGuid:(BOOL) value {
  hasGuid_ = !!value;
}
@synthesize guid;
@synthesize propertyArray;
@dynamic property;
- (id) init {
  if ((self = [super init])) {
    self.type = Resource_TypeCamera;
    self.id = 0;
    self.resourceTypeId = 0;
    self.parentId = 0;
    self.name = @"";
    self.url = @"";
    self.status = Resource_StatusOffline;
    self.disabled = NO;
    self.guid = @"";
  }
  return self;
}
static Resource* defaultResourceInstance = nil;
+ (void) initialize {
  if (self == [Resource class]) {
    defaultResourceInstance = [[Resource alloc] init];
  }
}
+ (Resource*) defaultInstance {
  return defaultResourceInstance;
}
- (Resource*) defaultInstance {
  return defaultResourceInstance;
}
- (NSArray *)property {
  return propertyArray;
}
- (Resource_Property*)propertyAtIndex:(NSUInteger)index {
  return [propertyArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  for (Resource_Property* element in self.property) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeEnum:1 value:self.type];
  }
  if (self.hasId) {
    [output writeInt32:2 value:self.id];
  }
  if (self.hasResourceTypeId) {
    [output writeInt32:3 value:self.resourceTypeId];
  }
  if (self.hasParentId) {
    [output writeInt32:4 value:self.parentId];
  }
  if (self.hasName) {
    [output writeString:5 value:self.name];
  }
  if (self.hasUrl) {
    [output writeString:6 value:self.url];
  }
  if (self.hasStatus) {
    [output writeEnum:7 value:self.status];
  }
  if (self.hasDisabled) {
    [output writeBool:8 value:self.disabled];
  }
  if (self.hasGuid) {
    [output writeString:9 value:self.guid];
  }
  for (Resource_Property *element in self.propertyArray) {
    [output writeMessage:10 value:element];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:100
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasType) {
    size += computeEnumSize(1, self.type);
  }
  if (self.hasId) {
    size += computeInt32Size(2, self.id);
  }
  if (self.hasResourceTypeId) {
    size += computeInt32Size(3, self.resourceTypeId);
  }
  if (self.hasParentId) {
    size += computeInt32Size(4, self.parentId);
  }
  if (self.hasName) {
    size += computeStringSize(5, self.name);
  }
  if (self.hasUrl) {
    size += computeStringSize(6, self.url);
  }
  if (self.hasStatus) {
    size += computeEnumSize(7, self.status);
  }
  if (self.hasDisabled) {
    size += computeBoolSize(8, self.disabled);
  }
  if (self.hasGuid) {
    size += computeStringSize(9, self.guid);
  }
  for (Resource_Property *element in self.propertyArray) {
    size += computeMessageSize(10, element);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Resource*) parseFromData:(NSData*) data {
  return (Resource*)[[[Resource builder] mergeFromData:data] build];
}
+ (Resource*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Resource*)[[[Resource builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Resource*) parseFromInputStream:(NSInputStream*) input {
  return (Resource*)[[[Resource builder] mergeFromInputStream:input] build];
}
+ (Resource*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Resource*)[[[Resource builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Resource*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Resource*)[[[Resource builder] mergeFromCodedInputStream:input] build];
}
+ (Resource*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Resource*)[[[Resource builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Resource_Builder*) builder {
  return [[Resource_Builder alloc] init];
}
+ (Resource_Builder*) builderWithPrototype:(Resource*) prototype {
  return [[Resource builder] mergeFrom:prototype];
}
- (Resource_Builder*) builder {
  return [Resource builder];
}
- (Resource_Builder*) toBuilder {
  return [Resource builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"type", self.type];
  }
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  if (self.hasResourceTypeId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resourceTypeId", [NSNumber numberWithInt:self.resourceTypeId]];
  }
  if (self.hasParentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentId", [NSNumber numberWithInt:self.parentId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"url", self.url];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %d\n", indent, @"status", self.status];
  }
  if (self.hasDisabled) {
    [output appendFormat:@"%@%@: %@\n", indent, @"disabled", [NSNumber numberWithBool:self.disabled]];
  }
  if (self.hasGuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"guid", self.guid];
  }
  for (Resource_Property* element in self.propertyArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"property"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self writeExtensionDescriptionToMutableString:(NSMutableString*)output
                                            from:100
                                              to:536870912
                                      withIndent:indent];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Resource class]]) {
    return NO;
  }
  Resource *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type != otherMessage.type) &&
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasResourceTypeId == otherMessage.hasResourceTypeId &&
      (!self.hasResourceTypeId || self.resourceTypeId == otherMessage.resourceTypeId) &&
      self.hasParentId == otherMessage.hasParentId &&
      (!self.hasParentId || self.parentId == otherMessage.parentId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasUrl == otherMessage.hasUrl &&
      (!self.hasUrl || [self.url isEqual:otherMessage.url]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status != otherMessage.status) &&
      self.hasDisabled == otherMessage.hasDisabled &&
      (!self.hasDisabled || self.disabled == otherMessage.disabled) &&
      self.hasGuid == otherMessage.hasGuid &&
      (!self.hasGuid || [self.guid isEqual:otherMessage.guid]) &&
      [self.propertyArray isEqualToArray:otherMessage.propertyArray] &&
      [self isEqualExtensionsInOther:otherMessage from:100 to:536870912] &&
      
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  if (self.hasResourceTypeId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.resourceTypeId] hash];
  }
  if (self.hasParentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.parentId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasUrl) {
    hashCode = hashCode * 31 + [self.url hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasDisabled) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.disabled] hash];
  }
  if (self.hasGuid) {
    hashCode = hashCode * 31 + [self.guid hash];
  }
  for (Resource_Property* element in self.propertyArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self hashExtensionsFrom:100 to:536870912];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL Resource_TypeIsValidValue(Resource_Type value) {
  switch (value) {
    case Resource_TypeCamera:
    case Resource_TypeServer:
    case Resource_TypeUser:
    case Resource_TypeLayout:
      return YES;
    default:
      return NO;
  }
}
BOOL Resource_StatusIsValidValue(Resource_Status value) {
  switch (value) {
    case Resource_StatusOffline:
    case Resource_StatusUnauthorized:
    case Resource_StatusOnline:
    case Resource_StatusRecording:
      return YES;
    default:
      return NO;
  }
}
@interface Resource_Property ()
@property (strong) NSString* name;
@property (strong) NSString* value;
@property int32_t id;
@end

@implementation Resource_Property

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) value {
  hasValue_ = !!value;
}
@synthesize value;
- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (id) init {
  if ((self = [super init])) {
    self.name = @"";
    self.value = @"";
    self.id = 0;
  }
  return self;
}
static Resource_Property* defaultResource_PropertyInstance = nil;
+ (void) initialize {
  if (self == [Resource_Property class]) {
    defaultResource_PropertyInstance = [[Resource_Property alloc] init];
  }
}
+ (Resource_Property*) defaultInstance {
  return defaultResource_PropertyInstance;
}
- (Resource_Property*) defaultInstance {
  return defaultResource_PropertyInstance;
}
- (BOOL) isInitialized {
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasValue) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasValue) {
    [output writeString:2 value:self.value];
  }
  if (self.hasId) {
    [output writeInt32:3 value:self.id];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasName) {
    size += computeStringSize(1, self.name);
  }
  if (self.hasValue) {
    size += computeStringSize(2, self.value);
  }
  if (self.hasId) {
    size += computeInt32Size(3, self.id);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Resource_Property*) parseFromData:(NSData*) data {
  return (Resource_Property*)[[[Resource_Property builder] mergeFromData:data] build];
}
+ (Resource_Property*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Resource_Property*)[[[Resource_Property builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Resource_Property*) parseFromInputStream:(NSInputStream*) input {
  return (Resource_Property*)[[[Resource_Property builder] mergeFromInputStream:input] build];
}
+ (Resource_Property*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Resource_Property*)[[[Resource_Property builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Resource_Property*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Resource_Property*)[[[Resource_Property builder] mergeFromCodedInputStream:input] build];
}
+ (Resource_Property*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Resource_Property*)[[[Resource_Property builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Resource_Property_Builder*) builder {
  return [[Resource_Property_Builder alloc] init];
}
+ (Resource_Property_Builder*) builderWithPrototype:(Resource_Property*) prototype {
  return [[Resource_Property builder] mergeFrom:prototype];
}
- (Resource_Property_Builder*) builder {
  return [Resource_Property builder];
}
- (Resource_Property_Builder*) toBuilder {
  return [Resource_Property builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"value", self.value];
  }
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithInt:self.id]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Resource_Property class]]) {
    return NO;
  }
  Resource_Property *otherMessage = other;
  return
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasValue == otherMessage.hasValue &&
      (!self.hasValue || [self.value isEqual:otherMessage.value]) &&
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasValue) {
    hashCode = hashCode * 31 + [self.value hash];
  }
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.id] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface Resource_Property_Builder()
@property (strong) Resource_Property* result;
@end

@implementation Resource_Property_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[Resource_Property alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Resource_Property_Builder*) clear {
  self.result = [[Resource_Property alloc] init];
  return self;
}
- (Resource_Property_Builder*) clone {
  return [Resource_Property builderWithPrototype:result];
}
- (Resource_Property*) defaultInstance {
  return [Resource_Property defaultInstance];
}
- (Resource_Property*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Resource_Property*) buildPartial {
  Resource_Property* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (Resource_Property_Builder*) mergeFrom:(Resource_Property*) other {
  if (other == [Resource_Property defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Resource_Property_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Resource_Property_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setValue:[input readString]];
        break;
      }
      case 24: {
        [self setId:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (Resource_Property_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (Resource_Property_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasValue {
  return result.hasValue;
}
- (NSString*) value {
  return result.value;
}
- (Resource_Property_Builder*) setValue:(NSString*) value {
  result.hasValue = YES;
  result.value = value;
  return self;
}
- (Resource_Property_Builder*) clearValue {
  result.hasValue = NO;
  result.value = @"";
  return self;
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (Resource_Property_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (Resource_Property_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
@end

@interface Resource_Builder()
@property (strong) Resource* result;
@end

@implementation Resource_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[Resource alloc] init];
  }
  return self;
}
- (PBExtendableMessage*) internalGetResult {
  return result;
}
- (Resource_Builder*) clear {
  self.result = [[Resource alloc] init];
  return self;
}
- (Resource_Builder*) clone {
  return [Resource builderWithPrototype:result];
}
- (Resource*) defaultInstance {
  return [Resource defaultInstance];
}
- (Resource*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Resource*) buildPartial {
  Resource* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (Resource_Builder*) mergeFrom:(Resource*) other {
  if (other == [Resource defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasResourceTypeId) {
    [self setResourceTypeId:other.resourceTypeId];
  }
  if (other.hasParentId) {
    [self setParentId:other.parentId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasUrl) {
    [self setUrl:other.url];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasDisabled) {
    [self setDisabled:other.disabled];
  }
  if (other.hasGuid) {
    [self setGuid:other.guid];
  }
  if (other.propertyArray.count > 0) {
    if (result.propertyArray == nil) {
      result.propertyArray = [[NSMutableArray alloc] initWithArray:other.propertyArray];
    } else {
      [result.propertyArray addObjectsFromArray:other.propertyArray];
    }
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Resource_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Resource_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (Resource_TypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setId:[input readInt32]];
        break;
      }
      case 24: {
        [self setResourceTypeId:[input readInt32]];
        break;
      }
      case 32: {
        [self setParentId:[input readInt32]];
        break;
      }
      case 42: {
        [self setName:[input readString]];
        break;
      }
      case 50: {
        [self setUrl:[input readString]];
        break;
      }
      case 56: {
        int32_t value = [input readEnum];
        if (Resource_StatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
      case 64: {
        [self setDisabled:[input readBool]];
        break;
      }
      case 74: {
        [self setGuid:[input readString]];
        break;
      }
      case 82: {
        Resource_Property_Builder* subBuilder = [Resource_Property builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProperty:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (Resource_Type) type {
  return result.type;
}
- (Resource_Builder*) setType:(Resource_Type) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (Resource_Builder*) clearType {
  result.hasType = NO;
  result.type = Resource_TypeCamera;
  return self;
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (Resource_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (Resource_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasResourceTypeId {
  return result.hasResourceTypeId;
}
- (int32_t) resourceTypeId {
  return result.resourceTypeId;
}
- (Resource_Builder*) setResourceTypeId:(int32_t) value {
  result.hasResourceTypeId = YES;
  result.resourceTypeId = value;
  return self;
}
- (Resource_Builder*) clearResourceTypeId {
  result.hasResourceTypeId = NO;
  result.resourceTypeId = 0;
  return self;
}
- (BOOL) hasParentId {
  return result.hasParentId;
}
- (int32_t) parentId {
  return result.parentId;
}
- (Resource_Builder*) setParentId:(int32_t) value {
  result.hasParentId = YES;
  result.parentId = value;
  return self;
}
- (Resource_Builder*) clearParentId {
  result.hasParentId = NO;
  result.parentId = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (Resource_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (Resource_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasUrl {
  return result.hasUrl;
}
- (NSString*) url {
  return result.url;
}
- (Resource_Builder*) setUrl:(NSString*) value {
  result.hasUrl = YES;
  result.url = value;
  return self;
}
- (Resource_Builder*) clearUrl {
  result.hasUrl = NO;
  result.url = @"";
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (Resource_Status) status {
  return result.status;
}
- (Resource_Builder*) setStatus:(Resource_Status) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (Resource_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = Resource_StatusOffline;
  return self;
}
- (BOOL) hasDisabled {
  return result.hasDisabled;
}
- (BOOL) disabled {
  return result.disabled;
}
- (Resource_Builder*) setDisabled:(BOOL) value {
  result.hasDisabled = YES;
  result.disabled = value;
  return self;
}
- (Resource_Builder*) clearDisabled {
  result.hasDisabled = NO;
  result.disabled = NO;
  return self;
}
- (BOOL) hasGuid {
  return result.hasGuid;
}
- (NSString*) guid {
  return result.guid;
}
- (Resource_Builder*) setGuid:(NSString*) value {
  result.hasGuid = YES;
  result.guid = value;
  return self;
}
- (Resource_Builder*) clearGuid {
  result.hasGuid = NO;
  result.guid = @"";
  return self;
}
- (NSMutableArray *)property {
  return result.propertyArray;
}
- (Resource_Property*)propertyAtIndex:(NSUInteger)index {
  return [result propertyAtIndex:index];
}
- (Resource_Builder *)addProperty:(Resource_Property*)value {
  if (result.propertyArray == nil) {
    result.propertyArray = [[NSMutableArray alloc]init];
  }
  [result.propertyArray addObject:value];
  return self;
}
- (Resource_Builder *)setPropertyArray:(NSArray *)array {
  result.propertyArray = [[NSMutableArray alloc]init];
  return self;
}
- (Resource_Builder *)clearProperty {
  result.propertyArray = nil;
  return self;
}
@end

@interface Resources ()
@property (strong) NSMutableArray * resourceArray;
@end

@implementation Resources

@synthesize resourceArray;
@dynamic resource;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static Resources* defaultResourcesInstance = nil;
+ (void) initialize {
  if (self == [Resources class]) {
    defaultResourcesInstance = [[Resources alloc] init];
  }
}
+ (Resources*) defaultInstance {
  return defaultResourcesInstance;
}
- (Resources*) defaultInstance {
  return defaultResourcesInstance;
}
- (NSArray *)resource {
  return resourceArray;
}
- (Resource*)resourceAtIndex:(NSUInteger)index {
  return [resourceArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (Resource* element in self.resource) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (Resource *element in self.resourceArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (Resource *element in self.resourceArray) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Resources*) parseFromData:(NSData*) data {
  return (Resources*)[[[Resources builder] mergeFromData:data] build];
}
+ (Resources*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Resources*)[[[Resources builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Resources*) parseFromInputStream:(NSInputStream*) input {
  return (Resources*)[[[Resources builder] mergeFromInputStream:input] build];
}
+ (Resources*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Resources*)[[[Resources builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Resources*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Resources*)[[[Resources builder] mergeFromCodedInputStream:input] build];
}
+ (Resources*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Resources*)[[[Resources builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Resources_Builder*) builder {
  return [[Resources_Builder alloc] init];
}
+ (Resources_Builder*) builderWithPrototype:(Resources*) prototype {
  return [[Resources builder] mergeFrom:prototype];
}
- (Resources_Builder*) builder {
  return [Resources builder];
}
- (Resources_Builder*) toBuilder {
  return [Resources builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  for (Resource* element in self.resourceArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"resource"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Resources class]]) {
    return NO;
  }
  Resources *otherMessage = other;
  return
      [self.resourceArray isEqualToArray:otherMessage.resourceArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  for (Resource* element in self.resourceArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface Resources_Builder()
@property (strong) Resources* result;
@end

@implementation Resources_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[Resources alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Resources_Builder*) clear {
  self.result = [[Resources alloc] init];
  return self;
}
- (Resources_Builder*) clone {
  return [Resources builderWithPrototype:result];
}
- (Resources*) defaultInstance {
  return [Resources defaultInstance];
}
- (Resources*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Resources*) buildPartial {
  Resources* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (Resources_Builder*) mergeFrom:(Resources*) other {
  if (other == [Resources defaultInstance]) {
    return self;
  }
  if (other.resourceArray.count > 0) {
    if (result.resourceArray == nil) {
      result.resourceArray = [[NSMutableArray alloc] initWithArray:other.resourceArray];
    } else {
      [result.resourceArray addObjectsFromArray:other.resourceArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Resources_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Resources_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Resource_Builder* subBuilder = [Resource builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addResource:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)resource {
  return result.resourceArray;
}
- (Resource*)resourceAtIndex:(NSUInteger)index {
  return [result resourceAtIndex:index];
}
- (Resources_Builder *)addResource:(Resource*)value {
  if (result.resourceArray == nil) {
    result.resourceArray = [[NSMutableArray alloc]init];
  }
  [result.resourceArray addObject:value];
  return self;
}
- (Resources_Builder *)setResourceArray:(NSArray *)array {
  result.resourceArray = [[NSMutableArray alloc]init];
  return self;
}
- (Resources_Builder *)clearResource {
  result.resourceArray = nil;
  return self;
}
@end

