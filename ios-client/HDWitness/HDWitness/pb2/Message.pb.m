// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Message.pb.h"

@implementation MessageRoot
static id<PBExtensionField> ResourceMessage_message = nil;
static id<PBExtensionField> LicenseMessage_message = nil;
static id<PBExtensionField> CameraServerItemMessage_message = nil;
static id<PBExtensionField> BusinessRuleMessage_message = nil;
static id<PBExtensionField> BroadcastBusinessActionMessage_message = nil;
static id<PBExtensionField> InitialMessage_message = nil;
static id<PBExtensionField> FileAddMessage_message = nil;
static id<PBExtensionField> FileRemoveMessage_message = nil;
static id<PBExtensionField> FileUpdateMessage_message = nil;
static id<PBExtensionField> RuntimeInfoChangeMessage_message = nil;
static id<PBExtensionField> BusinessRuleResetMessage_message = nil;
static id<PBExtensionField> KvPairChangeMessage_message = nil;
static id<PBExtensionField> KvPairDeleteMessage_message = nil;
static id<PBExtensionField> CommandMessage_message = nil;
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [MessageRoot class]) {
    ResourceMessage_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Message class]
                                       fieldNumber:100
                                      defaultValue:[ResourceMessage defaultInstance]
                               messageOrGroupClass:[ResourceMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    LicenseMessage_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Message class]
                                       fieldNumber:101
                                      defaultValue:[LicenseMessage defaultInstance]
                               messageOrGroupClass:[LicenseMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    CameraServerItemMessage_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Message class]
                                       fieldNumber:102
                                      defaultValue:[CameraServerItemMessage defaultInstance]
                               messageOrGroupClass:[CameraServerItemMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    BusinessRuleMessage_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Message class]
                                       fieldNumber:103
                                      defaultValue:[BusinessRuleMessage defaultInstance]
                               messageOrGroupClass:[BusinessRuleMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    BroadcastBusinessActionMessage_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Message class]
                                       fieldNumber:104
                                      defaultValue:[BroadcastBusinessActionMessage defaultInstance]
                               messageOrGroupClass:[BroadcastBusinessActionMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    InitialMessage_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Message class]
                                       fieldNumber:105
                                      defaultValue:[InitialMessage defaultInstance]
                               messageOrGroupClass:[InitialMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    FileAddMessage_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Message class]
                                       fieldNumber:106
                                      defaultValue:[FileAddMessage defaultInstance]
                               messageOrGroupClass:[FileAddMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    FileRemoveMessage_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Message class]
                                       fieldNumber:107
                                      defaultValue:[FileRemoveMessage defaultInstance]
                               messageOrGroupClass:[FileRemoveMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    FileUpdateMessage_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Message class]
                                       fieldNumber:108
                                      defaultValue:[FileUpdateMessage defaultInstance]
                               messageOrGroupClass:[FileUpdateMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    RuntimeInfoChangeMessage_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Message class]
                                       fieldNumber:109
                                      defaultValue:[RuntimeInfoChangeMessage defaultInstance]
                               messageOrGroupClass:[RuntimeInfoChangeMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    BusinessRuleResetMessage_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Message class]
                                       fieldNumber:110
                                      defaultValue:[BusinessRuleResetMessage defaultInstance]
                               messageOrGroupClass:[BusinessRuleResetMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    KvPairChangeMessage_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Message class]
                                       fieldNumber:111
                                      defaultValue:[KvPairChangeMessage defaultInstance]
                               messageOrGroupClass:[KvPairChangeMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    KvPairDeleteMessage_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Message class]
                                       fieldNumber:112
                                      defaultValue:[KvPairDeleteMessage defaultInstance]
                               messageOrGroupClass:[KvPairDeleteMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    CommandMessage_message =
      [PBConcreteExtensionField extensionWithType:PBExtensionTypeMessage
                                     extendedClass:[Message class]
                                       fieldNumber:113
                                      defaultValue:[CommandMessage defaultInstance]
                               messageOrGroupClass:[CommandMessage class]
                                        isRepeated:NO
                                          isPacked:NO
                            isMessageSetWireFormat:NO];
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ResourceTypeRoot registerAllExtensions:registry];
    [ResourceRoot registerAllExtensions:registry];
    [LicenseRoot registerAllExtensions:registry];
    [CameraServerItemRoot registerAllExtensions:registry];
    [BusinessRuleRoot registerAllExtensions:registry];
    [BusinessActionRoot registerAllExtensions:registry];
    [KvpairRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
  [registry addExtension:ResourceMessage_message];
  [registry addExtension:LicenseMessage_message];
  [registry addExtension:CameraServerItemMessage_message];
  [registry addExtension:BusinessRuleMessage_message];
  [registry addExtension:BroadcastBusinessActionMessage_message];
  [registry addExtension:InitialMessage_message];
  [registry addExtension:FileAddMessage_message];
  [registry addExtension:FileRemoveMessage_message];
  [registry addExtension:FileUpdateMessage_message];
  [registry addExtension:RuntimeInfoChangeMessage_message];
  [registry addExtension:BusinessRuleResetMessage_message];
  [registry addExtension:KvPairChangeMessage_message];
  [registry addExtension:KvPairDeleteMessage_message];
  [registry addExtension:CommandMessage_message];
}
@end

@interface Message ()
@property Message_Type type;
@property uint32_t seqNumber;
@end

@implementation Message

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasSeqNumber {
  return !!hasSeqNumber_;
}
- (void) setHasSeqNumber:(BOOL) value {
  hasSeqNumber_ = !!value;
}
@synthesize seqNumber;
- (id) init {
  if ((self = [super init])) {
    self.type = Message_TypeInitial;
    self.seqNumber = 0;
  }
  return self;
}
static Message* defaultMessageInstance = nil;
+ (void) initialize {
  if (self == [Message class]) {
    defaultMessageInstance = [[Message alloc] init];
  }
}
+ (Message*) defaultInstance {
  return defaultMessageInstance;
}
- (Message*) defaultInstance {
  return defaultMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasSeqNumber) {
    return NO;
  }
  if (!self.extensionsAreInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeEnum:1 value:self.type];
  }
  if (self.hasSeqNumber) {
    [output writeUInt32:2 value:self.seqNumber];
  }
  [self writeExtensionsToCodedOutputStream:output
                                      from:100
                                        to:536870912];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasType) {
    size += computeEnumSize(1, self.type);
  }
  if (self.hasSeqNumber) {
    size += computeUInt32Size(2, self.seqNumber);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Message*) parseFromData:(NSData*) data {
  return (Message*)[[[Message builder] mergeFromData:data] build];
}
+ (Message*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Message*)[[[Message builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Message*) parseFromInputStream:(NSInputStream*) input {
  return (Message*)[[[Message builder] mergeFromInputStream:input] build];
}
+ (Message*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Message*)[[[Message builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Message*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Message*)[[[Message builder] mergeFromCodedInputStream:input] build];
}
+ (Message*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Message*)[[[Message builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Message_Builder*) builder {
  return [[Message_Builder alloc] init];
}
+ (Message_Builder*) builderWithPrototype:(Message*) prototype {
  return [[Message builder] mergeFrom:prototype];
}
- (Message_Builder*) builder {
  return [Message builder];
}
- (Message_Builder*) toBuilder {
  return [Message builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasType) {
    [output appendFormat:@"%@%@: %d\n", indent, @"type", self.type];
  }
  if (self.hasSeqNumber) {
    [output appendFormat:@"%@%@: %@\n", indent, @"seqNumber", [NSNumber numberWithInt:self.seqNumber]];
  }
  [self writeExtensionDescriptionToMutableString:(NSMutableString*)output
                                            from:100
                                              to:536870912
                                      withIndent:indent];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Message class]]) {
    return NO;
  }
  Message *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type != otherMessage.type) &&
      self.hasSeqNumber == otherMessage.hasSeqNumber &&
      (!self.hasSeqNumber || self.seqNumber == otherMessage.seqNumber) &&
      [self isEqualExtensionsInOther:otherMessage from:100 to:536870912] &&
      
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasSeqNumber) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.seqNumber] hash];
  }
  hashCode = hashCode * 31 + [self hashExtensionsFrom:100 to:536870912];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL Message_TypeIsValidValue(Message_Type value) {
  switch (value) {
    case Message_TypeInitial:
    case Message_TypePing:
    case Message_TypeResourceChange:
    case Message_TypeResourceDelete:
    case Message_TypeResourceStatusChange:
    case Message_TypeResourceDisabledChange:
    case Message_TypeLicense:
    case Message_TypeCameraServerItem:
    case Message_TypeBusinessRuleChange:
    case Message_TypeBusinessRuleDelete:
    case Message_TypeBroadcastBusinessAction:
    case Message_TypeFileAdd:
    case Message_TypeFileRemove:
    case Message_TypeFileUpdate:
    case Message_TypeRuntimeInfoChange:
    case Message_TypeBusinessRuleReset:
    case Message_TypeKvPairChange:
    case Message_TypeKvPairDelete:
    case Message_TypeCommand:
      return YES;
    default:
      return NO;
  }
}
@interface Message_Builder()
@property (strong) Message* result;
@end

@implementation Message_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[Message alloc] init];
  }
  return self;
}
- (PBExtendableMessage*) internalGetResult {
  return result;
}
- (Message_Builder*) clear {
  self.result = [[Message alloc] init];
  return self;
}
- (Message_Builder*) clone {
  return [Message builderWithPrototype:result];
}
- (Message*) defaultInstance {
  return [Message defaultInstance];
}
- (Message*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Message*) buildPartial {
  Message* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (Message_Builder*) mergeFrom:(Message*) other {
  if (other == [Message defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasSeqNumber) {
    [self setSeqNumber:other.seqNumber];
  }
  [self mergeExtensionFields:other];
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Message_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Message_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (Message_TypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setSeqNumber:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (Message_Type) type {
  return result.type;
}
- (Message_Builder*) setType:(Message_Type) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (Message_Builder*) clearType {
  result.hasType = NO;
  result.type = Message_TypeInitial;
  return self;
}
- (BOOL) hasSeqNumber {
  return result.hasSeqNumber;
}
- (uint32_t) seqNumber {
  return result.seqNumber;
}
- (Message_Builder*) setSeqNumber:(uint32_t) value {
  result.hasSeqNumber = YES;
  result.seqNumber = value;
  return self;
}
- (Message_Builder*) clearSeqNumber {
  result.hasSeqNumber = NO;
  result.seqNumber = 0;
  return self;
}
@end

@interface ResourceMessage ()
@property (strong) Resource* resource;
@end

@implementation ResourceMessage

- (BOOL) hasResource {
  return !!hasResource_;
}
- (void) setHasResource:(BOOL) value {
  hasResource_ = !!value;
}
@synthesize resource;
- (id) init {
  if ((self = [super init])) {
    self.resource = [Resource defaultInstance];
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return ResourceMessage_message;
}
static ResourceMessage* defaultResourceMessageInstance = nil;
+ (void) initialize {
  if (self == [ResourceMessage class]) {
    defaultResourceMessageInstance = [[ResourceMessage alloc] init];
  }
}
+ (ResourceMessage*) defaultInstance {
  return defaultResourceMessageInstance;
}
- (ResourceMessage*) defaultInstance {
  return defaultResourceMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasResource) {
    return NO;
  }
  if (!self.resource.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResource) {
    [output writeMessage:1 value:self.resource];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasResource) {
    size += computeMessageSize(1, self.resource);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ResourceMessage*) parseFromData:(NSData*) data {
  return (ResourceMessage*)[[[ResourceMessage builder] mergeFromData:data] build];
}
+ (ResourceMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResourceMessage*)[[[ResourceMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ResourceMessage*) parseFromInputStream:(NSInputStream*) input {
  return (ResourceMessage*)[[[ResourceMessage builder] mergeFromInputStream:input] build];
}
+ (ResourceMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResourceMessage*)[[[ResourceMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResourceMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ResourceMessage*)[[[ResourceMessage builder] mergeFromCodedInputStream:input] build];
}
+ (ResourceMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResourceMessage*)[[[ResourceMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResourceMessage_Builder*) builder {
  return [[ResourceMessage_Builder alloc] init];
}
+ (ResourceMessage_Builder*) builderWithPrototype:(ResourceMessage*) prototype {
  return [[ResourceMessage builder] mergeFrom:prototype];
}
- (ResourceMessage_Builder*) builder {
  return [ResourceMessage builder];
}
- (ResourceMessage_Builder*) toBuilder {
  return [ResourceMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasResource) {
    [output appendFormat:@"%@%@ {\n", indent, @"resource"];
    [self.resource writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ResourceMessage class]]) {
    return NO;
  }
  ResourceMessage *otherMessage = other;
  return
      self.hasResource == otherMessage.hasResource &&
      (!self.hasResource || [self.resource isEqual:otherMessage.resource]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasResource) {
    hashCode = hashCode * 31 + [self.resource hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ResourceMessage_Builder()
@property (strong) ResourceMessage* result;
@end

@implementation ResourceMessage_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[ResourceMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ResourceMessage_Builder*) clear {
  self.result = [[ResourceMessage alloc] init];
  return self;
}
- (ResourceMessage_Builder*) clone {
  return [ResourceMessage builderWithPrototype:result];
}
- (ResourceMessage*) defaultInstance {
  return [ResourceMessage defaultInstance];
}
- (ResourceMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ResourceMessage*) buildPartial {
  ResourceMessage* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (ResourceMessage_Builder*) mergeFrom:(ResourceMessage*) other {
  if (other == [ResourceMessage defaultInstance]) {
    return self;
  }
  if (other.hasResource) {
    [self mergeResource:other.resource];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ResourceMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ResourceMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Resource_Builder* subBuilder = [Resource builder];
        if (self.hasResource) {
          [subBuilder mergeFrom:self.resource];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setResource:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasResource {
  return result.hasResource;
}
- (Resource*) resource {
  return result.resource;
}
- (ResourceMessage_Builder*) setResource:(Resource*) value {
  result.hasResource = YES;
  result.resource = value;
  return self;
}
- (ResourceMessage_Builder*) setResourceBuilder:(Resource_Builder*) builderForValue {
  return [self setResource:[builderForValue build]];
}
- (ResourceMessage_Builder*) mergeResource:(Resource*) value {
  if (result.hasResource &&
      result.resource != [Resource defaultInstance]) {
    result.resource =
      [[[Resource builderWithPrototype:result.resource] mergeFrom:value] buildPartial];
  } else {
    result.resource = value;
  }
  result.hasResource = YES;
  return self;
}
- (ResourceMessage_Builder*) clearResource {
  result.hasResource = NO;
  result.resource = [Resource defaultInstance];
  return self;
}
@end

@interface LicenseMessage ()
@property (strong) License* license;
@end

@implementation LicenseMessage

- (BOOL) hasLicense {
  return !!hasLicense_;
}
- (void) setHasLicense:(BOOL) value {
  hasLicense_ = !!value;
}
@synthesize license;
- (id) init {
  if ((self = [super init])) {
    self.license = [License defaultInstance];
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return LicenseMessage_message;
}
static LicenseMessage* defaultLicenseMessageInstance = nil;
+ (void) initialize {
  if (self == [LicenseMessage class]) {
    defaultLicenseMessageInstance = [[LicenseMessage alloc] init];
  }
}
+ (LicenseMessage*) defaultInstance {
  return defaultLicenseMessageInstance;
}
- (LicenseMessage*) defaultInstance {
  return defaultLicenseMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasLicense) {
    return NO;
  }
  if (!self.license.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLicense) {
    [output writeMessage:1 value:self.license];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasLicense) {
    size += computeMessageSize(1, self.license);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (LicenseMessage*) parseFromData:(NSData*) data {
  return (LicenseMessage*)[[[LicenseMessage builder] mergeFromData:data] build];
}
+ (LicenseMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LicenseMessage*)[[[LicenseMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LicenseMessage*) parseFromInputStream:(NSInputStream*) input {
  return (LicenseMessage*)[[[LicenseMessage builder] mergeFromInputStream:input] build];
}
+ (LicenseMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LicenseMessage*)[[[LicenseMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LicenseMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LicenseMessage*)[[[LicenseMessage builder] mergeFromCodedInputStream:input] build];
}
+ (LicenseMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LicenseMessage*)[[[LicenseMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LicenseMessage_Builder*) builder {
  return [[LicenseMessage_Builder alloc] init];
}
+ (LicenseMessage_Builder*) builderWithPrototype:(LicenseMessage*) prototype {
  return [[LicenseMessage builder] mergeFrom:prototype];
}
- (LicenseMessage_Builder*) builder {
  return [LicenseMessage builder];
}
- (LicenseMessage_Builder*) toBuilder {
  return [LicenseMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasLicense) {
    [output appendFormat:@"%@%@ {\n", indent, @"license"];
    [self.license writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LicenseMessage class]]) {
    return NO;
  }
  LicenseMessage *otherMessage = other;
  return
      self.hasLicense == otherMessage.hasLicense &&
      (!self.hasLicense || [self.license isEqual:otherMessage.license]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasLicense) {
    hashCode = hashCode * 31 + [self.license hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface LicenseMessage_Builder()
@property (strong) LicenseMessage* result;
@end

@implementation LicenseMessage_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[LicenseMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (LicenseMessage_Builder*) clear {
  self.result = [[LicenseMessage alloc] init];
  return self;
}
- (LicenseMessage_Builder*) clone {
  return [LicenseMessage builderWithPrototype:result];
}
- (LicenseMessage*) defaultInstance {
  return [LicenseMessage defaultInstance];
}
- (LicenseMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LicenseMessage*) buildPartial {
  LicenseMessage* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (LicenseMessage_Builder*) mergeFrom:(LicenseMessage*) other {
  if (other == [LicenseMessage defaultInstance]) {
    return self;
  }
  if (other.hasLicense) {
    [self mergeLicense:other.license];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LicenseMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LicenseMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        License_Builder* subBuilder = [License builder];
        if (self.hasLicense) {
          [subBuilder mergeFrom:self.license];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLicense:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasLicense {
  return result.hasLicense;
}
- (License*) license {
  return result.license;
}
- (LicenseMessage_Builder*) setLicense:(License*) value {
  result.hasLicense = YES;
  result.license = value;
  return self;
}
- (LicenseMessage_Builder*) setLicenseBuilder:(License_Builder*) builderForValue {
  return [self setLicense:[builderForValue build]];
}
- (LicenseMessage_Builder*) mergeLicense:(License*) value {
  if (result.hasLicense &&
      result.license != [License defaultInstance]) {
    result.license =
      [[[License builderWithPrototype:result.license] mergeFrom:value] buildPartial];
  } else {
    result.license = value;
  }
  result.hasLicense = YES;
  return self;
}
- (LicenseMessage_Builder*) clearLicense {
  result.hasLicense = NO;
  result.license = [License defaultInstance];
  return self;
}
@end

@interface CameraServerItemMessage ()
@property (strong) CameraServerItem* cameraServerItem;
@end

@implementation CameraServerItemMessage

- (BOOL) hasCameraServerItem {
  return !!hasCameraServerItem_;
}
- (void) setHasCameraServerItem:(BOOL) value {
  hasCameraServerItem_ = !!value;
}
@synthesize cameraServerItem;
- (id) init {
  if ((self = [super init])) {
    self.cameraServerItem = [CameraServerItem defaultInstance];
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return CameraServerItemMessage_message;
}
static CameraServerItemMessage* defaultCameraServerItemMessageInstance = nil;
+ (void) initialize {
  if (self == [CameraServerItemMessage class]) {
    defaultCameraServerItemMessageInstance = [[CameraServerItemMessage alloc] init];
  }
}
+ (CameraServerItemMessage*) defaultInstance {
  return defaultCameraServerItemMessageInstance;
}
- (CameraServerItemMessage*) defaultInstance {
  return defaultCameraServerItemMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCameraServerItem) {
    return NO;
  }
  if (!self.cameraServerItem.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCameraServerItem) {
    [output writeMessage:1 value:self.cameraServerItem];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCameraServerItem) {
    size += computeMessageSize(1, self.cameraServerItem);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CameraServerItemMessage*) parseFromData:(NSData*) data {
  return (CameraServerItemMessage*)[[[CameraServerItemMessage builder] mergeFromData:data] build];
}
+ (CameraServerItemMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CameraServerItemMessage*)[[[CameraServerItemMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CameraServerItemMessage*) parseFromInputStream:(NSInputStream*) input {
  return (CameraServerItemMessage*)[[[CameraServerItemMessage builder] mergeFromInputStream:input] build];
}
+ (CameraServerItemMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CameraServerItemMessage*)[[[CameraServerItemMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CameraServerItemMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CameraServerItemMessage*)[[[CameraServerItemMessage builder] mergeFromCodedInputStream:input] build];
}
+ (CameraServerItemMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CameraServerItemMessage*)[[[CameraServerItemMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CameraServerItemMessage_Builder*) builder {
  return [[CameraServerItemMessage_Builder alloc] init];
}
+ (CameraServerItemMessage_Builder*) builderWithPrototype:(CameraServerItemMessage*) prototype {
  return [[CameraServerItemMessage builder] mergeFrom:prototype];
}
- (CameraServerItemMessage_Builder*) builder {
  return [CameraServerItemMessage builder];
}
- (CameraServerItemMessage_Builder*) toBuilder {
  return [CameraServerItemMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasCameraServerItem) {
    [output appendFormat:@"%@%@ {\n", indent, @"cameraServerItem"];
    [self.cameraServerItem writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CameraServerItemMessage class]]) {
    return NO;
  }
  CameraServerItemMessage *otherMessage = other;
  return
      self.hasCameraServerItem == otherMessage.hasCameraServerItem &&
      (!self.hasCameraServerItem || [self.cameraServerItem isEqual:otherMessage.cameraServerItem]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasCameraServerItem) {
    hashCode = hashCode * 31 + [self.cameraServerItem hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CameraServerItemMessage_Builder()
@property (strong) CameraServerItemMessage* result;
@end

@implementation CameraServerItemMessage_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[CameraServerItemMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CameraServerItemMessage_Builder*) clear {
  self.result = [[CameraServerItemMessage alloc] init];
  return self;
}
- (CameraServerItemMessage_Builder*) clone {
  return [CameraServerItemMessage builderWithPrototype:result];
}
- (CameraServerItemMessage*) defaultInstance {
  return [CameraServerItemMessage defaultInstance];
}
- (CameraServerItemMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CameraServerItemMessage*) buildPartial {
  CameraServerItemMessage* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (CameraServerItemMessage_Builder*) mergeFrom:(CameraServerItemMessage*) other {
  if (other == [CameraServerItemMessage defaultInstance]) {
    return self;
  }
  if (other.hasCameraServerItem) {
    [self mergeCameraServerItem:other.cameraServerItem];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CameraServerItemMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CameraServerItemMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CameraServerItem_Builder* subBuilder = [CameraServerItem builder];
        if (self.hasCameraServerItem) {
          [subBuilder mergeFrom:self.cameraServerItem];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCameraServerItem:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCameraServerItem {
  return result.hasCameraServerItem;
}
- (CameraServerItem*) cameraServerItem {
  return result.cameraServerItem;
}
- (CameraServerItemMessage_Builder*) setCameraServerItem:(CameraServerItem*) value {
  result.hasCameraServerItem = YES;
  result.cameraServerItem = value;
  return self;
}
- (CameraServerItemMessage_Builder*) setCameraServerItemBuilder:(CameraServerItem_Builder*) builderForValue {
  return [self setCameraServerItem:[builderForValue build]];
}
- (CameraServerItemMessage_Builder*) mergeCameraServerItem:(CameraServerItem*) value {
  if (result.hasCameraServerItem &&
      result.cameraServerItem != [CameraServerItem defaultInstance]) {
    result.cameraServerItem =
      [[[CameraServerItem builderWithPrototype:result.cameraServerItem] mergeFrom:value] buildPartial];
  } else {
    result.cameraServerItem = value;
  }
  result.hasCameraServerItem = YES;
  return self;
}
- (CameraServerItemMessage_Builder*) clearCameraServerItem {
  result.hasCameraServerItem = NO;
  result.cameraServerItem = [CameraServerItem defaultInstance];
  return self;
}
@end

@interface BusinessRuleMessage ()
@property (strong) BusinessRule* businessRule;
@end

@implementation BusinessRuleMessage

- (BOOL) hasBusinessRule {
  return !!hasBusinessRule_;
}
- (void) setHasBusinessRule:(BOOL) value {
  hasBusinessRule_ = !!value;
}
@synthesize businessRule;
- (id) init {
  if ((self = [super init])) {
    self.businessRule = [BusinessRule defaultInstance];
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return BusinessRuleMessage_message;
}
static BusinessRuleMessage* defaultBusinessRuleMessageInstance = nil;
+ (void) initialize {
  if (self == [BusinessRuleMessage class]) {
    defaultBusinessRuleMessageInstance = [[BusinessRuleMessage alloc] init];
  }
}
+ (BusinessRuleMessage*) defaultInstance {
  return defaultBusinessRuleMessageInstance;
}
- (BusinessRuleMessage*) defaultInstance {
  return defaultBusinessRuleMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasBusinessRule) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBusinessRule) {
    [output writeMessage:1 value:self.businessRule];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasBusinessRule) {
    size += computeMessageSize(1, self.businessRule);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BusinessRuleMessage*) parseFromData:(NSData*) data {
  return (BusinessRuleMessage*)[[[BusinessRuleMessage builder] mergeFromData:data] build];
}
+ (BusinessRuleMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessRuleMessage*)[[[BusinessRuleMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BusinessRuleMessage*) parseFromInputStream:(NSInputStream*) input {
  return (BusinessRuleMessage*)[[[BusinessRuleMessage builder] mergeFromInputStream:input] build];
}
+ (BusinessRuleMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessRuleMessage*)[[[BusinessRuleMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BusinessRuleMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BusinessRuleMessage*)[[[BusinessRuleMessage builder] mergeFromCodedInputStream:input] build];
}
+ (BusinessRuleMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessRuleMessage*)[[[BusinessRuleMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BusinessRuleMessage_Builder*) builder {
  return [[BusinessRuleMessage_Builder alloc] init];
}
+ (BusinessRuleMessage_Builder*) builderWithPrototype:(BusinessRuleMessage*) prototype {
  return [[BusinessRuleMessage builder] mergeFrom:prototype];
}
- (BusinessRuleMessage_Builder*) builder {
  return [BusinessRuleMessage builder];
}
- (BusinessRuleMessage_Builder*) toBuilder {
  return [BusinessRuleMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasBusinessRule) {
    [output appendFormat:@"%@%@ {\n", indent, @"businessRule"];
    [self.businessRule writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BusinessRuleMessage class]]) {
    return NO;
  }
  BusinessRuleMessage *otherMessage = other;
  return
      self.hasBusinessRule == otherMessage.hasBusinessRule &&
      (!self.hasBusinessRule || [self.businessRule isEqual:otherMessage.businessRule]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasBusinessRule) {
    hashCode = hashCode * 31 + [self.businessRule hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BusinessRuleMessage_Builder()
@property (strong) BusinessRuleMessage* result;
@end

@implementation BusinessRuleMessage_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BusinessRuleMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BusinessRuleMessage_Builder*) clear {
  self.result = [[BusinessRuleMessage alloc] init];
  return self;
}
- (BusinessRuleMessage_Builder*) clone {
  return [BusinessRuleMessage builderWithPrototype:result];
}
- (BusinessRuleMessage*) defaultInstance {
  return [BusinessRuleMessage defaultInstance];
}
- (BusinessRuleMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BusinessRuleMessage*) buildPartial {
  BusinessRuleMessage* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BusinessRuleMessage_Builder*) mergeFrom:(BusinessRuleMessage*) other {
  if (other == [BusinessRuleMessage defaultInstance]) {
    return self;
  }
  if (other.hasBusinessRule) {
    [self mergeBusinessRule:other.businessRule];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BusinessRuleMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BusinessRuleMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BusinessRule_Builder* subBuilder = [BusinessRule builder];
        if (self.hasBusinessRule) {
          [subBuilder mergeFrom:self.businessRule];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBusinessRule:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasBusinessRule {
  return result.hasBusinessRule;
}
- (BusinessRule*) businessRule {
  return result.businessRule;
}
- (BusinessRuleMessage_Builder*) setBusinessRule:(BusinessRule*) value {
  result.hasBusinessRule = YES;
  result.businessRule = value;
  return self;
}
- (BusinessRuleMessage_Builder*) setBusinessRuleBuilder:(BusinessRule_Builder*) builderForValue {
  return [self setBusinessRule:[builderForValue build]];
}
- (BusinessRuleMessage_Builder*) mergeBusinessRule:(BusinessRule*) value {
  if (result.hasBusinessRule &&
      result.businessRule != [BusinessRule defaultInstance]) {
    result.businessRule =
      [[[BusinessRule builderWithPrototype:result.businessRule] mergeFrom:value] buildPartial];
  } else {
    result.businessRule = value;
  }
  result.hasBusinessRule = YES;
  return self;
}
- (BusinessRuleMessage_Builder*) clearBusinessRule {
  result.hasBusinessRule = NO;
  result.businessRule = [BusinessRule defaultInstance];
  return self;
}
@end

@interface BroadcastBusinessActionMessage ()
@property (strong) BusinessAction* businessAction;
@end

@implementation BroadcastBusinessActionMessage

- (BOOL) hasBusinessAction {
  return !!hasBusinessAction_;
}
- (void) setHasBusinessAction:(BOOL) value {
  hasBusinessAction_ = !!value;
}
@synthesize businessAction;
- (id) init {
  if ((self = [super init])) {
    self.businessAction = [BusinessAction defaultInstance];
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return BroadcastBusinessActionMessage_message;
}
static BroadcastBusinessActionMessage* defaultBroadcastBusinessActionMessageInstance = nil;
+ (void) initialize {
  if (self == [BroadcastBusinessActionMessage class]) {
    defaultBroadcastBusinessActionMessageInstance = [[BroadcastBusinessActionMessage alloc] init];
  }
}
+ (BroadcastBusinessActionMessage*) defaultInstance {
  return defaultBroadcastBusinessActionMessageInstance;
}
- (BroadcastBusinessActionMessage*) defaultInstance {
  return defaultBroadcastBusinessActionMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasBusinessAction) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBusinessAction) {
    [output writeMessage:1 value:self.businessAction];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasBusinessAction) {
    size += computeMessageSize(1, self.businessAction);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BroadcastBusinessActionMessage*) parseFromData:(NSData*) data {
  return (BroadcastBusinessActionMessage*)[[[BroadcastBusinessActionMessage builder] mergeFromData:data] build];
}
+ (BroadcastBusinessActionMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BroadcastBusinessActionMessage*)[[[BroadcastBusinessActionMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BroadcastBusinessActionMessage*) parseFromInputStream:(NSInputStream*) input {
  return (BroadcastBusinessActionMessage*)[[[BroadcastBusinessActionMessage builder] mergeFromInputStream:input] build];
}
+ (BroadcastBusinessActionMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BroadcastBusinessActionMessage*)[[[BroadcastBusinessActionMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BroadcastBusinessActionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BroadcastBusinessActionMessage*)[[[BroadcastBusinessActionMessage builder] mergeFromCodedInputStream:input] build];
}
+ (BroadcastBusinessActionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BroadcastBusinessActionMessage*)[[[BroadcastBusinessActionMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BroadcastBusinessActionMessage_Builder*) builder {
  return [[BroadcastBusinessActionMessage_Builder alloc] init];
}
+ (BroadcastBusinessActionMessage_Builder*) builderWithPrototype:(BroadcastBusinessActionMessage*) prototype {
  return [[BroadcastBusinessActionMessage builder] mergeFrom:prototype];
}
- (BroadcastBusinessActionMessage_Builder*) builder {
  return [BroadcastBusinessActionMessage builder];
}
- (BroadcastBusinessActionMessage_Builder*) toBuilder {
  return [BroadcastBusinessActionMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasBusinessAction) {
    [output appendFormat:@"%@%@ {\n", indent, @"businessAction"];
    [self.businessAction writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BroadcastBusinessActionMessage class]]) {
    return NO;
  }
  BroadcastBusinessActionMessage *otherMessage = other;
  return
      self.hasBusinessAction == otherMessage.hasBusinessAction &&
      (!self.hasBusinessAction || [self.businessAction isEqual:otherMessage.businessAction]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasBusinessAction) {
    hashCode = hashCode * 31 + [self.businessAction hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BroadcastBusinessActionMessage_Builder()
@property (strong) BroadcastBusinessActionMessage* result;
@end

@implementation BroadcastBusinessActionMessage_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BroadcastBusinessActionMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BroadcastBusinessActionMessage_Builder*) clear {
  self.result = [[BroadcastBusinessActionMessage alloc] init];
  return self;
}
- (BroadcastBusinessActionMessage_Builder*) clone {
  return [BroadcastBusinessActionMessage builderWithPrototype:result];
}
- (BroadcastBusinessActionMessage*) defaultInstance {
  return [BroadcastBusinessActionMessage defaultInstance];
}
- (BroadcastBusinessActionMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BroadcastBusinessActionMessage*) buildPartial {
  BroadcastBusinessActionMessage* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BroadcastBusinessActionMessage_Builder*) mergeFrom:(BroadcastBusinessActionMessage*) other {
  if (other == [BroadcastBusinessActionMessage defaultInstance]) {
    return self;
  }
  if (other.hasBusinessAction) {
    [self mergeBusinessAction:other.businessAction];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BroadcastBusinessActionMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BroadcastBusinessActionMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BusinessAction_Builder* subBuilder = [BusinessAction builder];
        if (self.hasBusinessAction) {
          [subBuilder mergeFrom:self.businessAction];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBusinessAction:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasBusinessAction {
  return result.hasBusinessAction;
}
- (BusinessAction*) businessAction {
  return result.businessAction;
}
- (BroadcastBusinessActionMessage_Builder*) setBusinessAction:(BusinessAction*) value {
  result.hasBusinessAction = YES;
  result.businessAction = value;
  return self;
}
- (BroadcastBusinessActionMessage_Builder*) setBusinessActionBuilder:(BusinessAction_Builder*) builderForValue {
  return [self setBusinessAction:[builderForValue build]];
}
- (BroadcastBusinessActionMessage_Builder*) mergeBusinessAction:(BusinessAction*) value {
  if (result.hasBusinessAction &&
      result.businessAction != [BusinessAction defaultInstance]) {
    result.businessAction =
      [[[BusinessAction builderWithPrototype:result.businessAction] mergeFrom:value] buildPartial];
  } else {
    result.businessAction = value;
  }
  result.hasBusinessAction = YES;
  return self;
}
- (BroadcastBusinessActionMessage_Builder*) clearBusinessAction {
  result.hasBusinessAction = NO;
  result.businessAction = [BusinessAction defaultInstance];
  return self;
}
@end

@interface InitialMessage ()
@property (strong) NSMutableArray * resourceTypeArray;
@property (strong) NSMutableArray * resourceArray;
@property (strong) NSMutableArray * licenseArray;
@property (strong) NSMutableArray * cameraServerItemArray;
@property (strong) NSString* hardwareId1;
@property (strong) NSString* oldHardwareId;
@property (strong) NSString* hardwareId2;
@property (strong) NSString* publicIp;
@property (strong) NSString* systemName;
@property (strong) NSString* hardwareId3;
@property (strong) NSString* sessionKey;
@property BOOL allowCameraChangesDeprecated;
@property (strong) NSMutableArray * kvPairArray;
@end

@implementation InitialMessage

@synthesize resourceTypeArray;
@dynamic resourceType;
@synthesize resourceArray;
@dynamic resource;
@synthesize licenseArray;
@dynamic license;
@synthesize cameraServerItemArray;
@dynamic cameraServerItem;
- (BOOL) hasHardwareId1 {
  return !!hasHardwareId1_;
}
- (void) setHasHardwareId1:(BOOL) value {
  hasHardwareId1_ = !!value;
}
@synthesize hardwareId1;
- (BOOL) hasOldHardwareId {
  return !!hasOldHardwareId_;
}
- (void) setHasOldHardwareId:(BOOL) value {
  hasOldHardwareId_ = !!value;
}
@synthesize oldHardwareId;
- (BOOL) hasHardwareId2 {
  return !!hasHardwareId2_;
}
- (void) setHasHardwareId2:(BOOL) value {
  hasHardwareId2_ = !!value;
}
@synthesize hardwareId2;
- (BOOL) hasPublicIp {
  return !!hasPublicIp_;
}
- (void) setHasPublicIp:(BOOL) value {
  hasPublicIp_ = !!value;
}
@synthesize publicIp;
- (BOOL) hasSystemName {
  return !!hasSystemName_;
}
- (void) setHasSystemName:(BOOL) value {
  hasSystemName_ = !!value;
}
@synthesize systemName;
- (BOOL) hasHardwareId3 {
  return !!hasHardwareId3_;
}
- (void) setHasHardwareId3:(BOOL) value {
  hasHardwareId3_ = !!value;
}
@synthesize hardwareId3;
- (BOOL) hasSessionKey {
  return !!hasSessionKey_;
}
- (void) setHasSessionKey:(BOOL) value {
  hasSessionKey_ = !!value;
}
@synthesize sessionKey;
- (BOOL) hasAllowCameraChangesDeprecated {
  return !!hasAllowCameraChangesDeprecated_;
}
- (void) setHasAllowCameraChangesDeprecated:(BOOL) value {
  hasAllowCameraChangesDeprecated_ = !!value;
}
- (BOOL) allowCameraChangesDeprecated {
  return !!allowCameraChangesDeprecated_;
}
- (void) setAllowCameraChangesDeprecated:(BOOL) value {
  allowCameraChangesDeprecated_ = !!value;
}
@synthesize kvPairArray;
@dynamic kvPair;
- (id) init {
  if ((self = [super init])) {
    self.hardwareId1 = @"";
    self.oldHardwareId = @"";
    self.hardwareId2 = @"";
    self.publicIp = @"";
    self.systemName = @"";
    self.hardwareId3 = @"";
    self.sessionKey = @"";
    self.allowCameraChangesDeprecated = NO;
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return InitialMessage_message;
}
static InitialMessage* defaultInitialMessageInstance = nil;
+ (void) initialize {
  if (self == [InitialMessage class]) {
    defaultInitialMessageInstance = [[InitialMessage alloc] init];
  }
}
+ (InitialMessage*) defaultInstance {
  return defaultInitialMessageInstance;
}
- (InitialMessage*) defaultInstance {
  return defaultInitialMessageInstance;
}
- (NSArray *)resourceType {
  return resourceTypeArray;
}
- (ResourceType*)resourceTypeAtIndex:(NSUInteger)index {
  return [resourceTypeArray objectAtIndex:index];
}
- (NSArray *)resource {
  return resourceArray;
}
- (Resource*)resourceAtIndex:(NSUInteger)index {
  return [resourceArray objectAtIndex:index];
}
- (NSArray *)license {
  return licenseArray;
}
- (License*)licenseAtIndex:(NSUInteger)index {
  return [licenseArray objectAtIndex:index];
}
- (NSArray *)cameraServerItem {
  return cameraServerItemArray;
}
- (CameraServerItem*)cameraServerItemAtIndex:(NSUInteger)index {
  return [cameraServerItemArray objectAtIndex:index];
}
- (NSArray *)kvPair {
  return kvPairArray;
}
- (KvPair*)kvPairAtIndex:(NSUInteger)index {
  return [kvPairArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (ResourceType* element in self.resourceType) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (Resource* element in self.resource) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (License* element in self.license) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (CameraServerItem* element in self.cameraServerItem) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (KvPair* element in self.kvPair) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (ResourceType *element in self.resourceTypeArray) {
    [output writeMessage:1 value:element];
  }
  for (Resource *element in self.resourceArray) {
    [output writeMessage:2 value:element];
  }
  for (License *element in self.licenseArray) {
    [output writeMessage:3 value:element];
  }
  for (CameraServerItem *element in self.cameraServerItemArray) {
    [output writeMessage:4 value:element];
  }
  if (self.hasHardwareId1) {
    [output writeString:5 value:self.hardwareId1];
  }
  if (self.hasOldHardwareId) {
    [output writeString:6 value:self.oldHardwareId];
  }
  if (self.hasHardwareId2) {
    [output writeString:7 value:self.hardwareId2];
  }
  if (self.hasPublicIp) {
    [output writeString:8 value:self.publicIp];
  }
  if (self.hasSystemName) {
    [output writeString:9 value:self.systemName];
  }
  if (self.hasHardwareId3) {
    [output writeString:10 value:self.hardwareId3];
  }
  if (self.hasSessionKey) {
    [output writeString:11 value:self.sessionKey];
  }
  if (self.hasAllowCameraChangesDeprecated) {
    [output writeBool:12 value:self.allowCameraChangesDeprecated];
  }
  for (KvPair *element in self.kvPairArray) {
    [output writeMessage:13 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (ResourceType *element in self.resourceTypeArray) {
    size += computeMessageSize(1, element);
  }
  for (Resource *element in self.resourceArray) {
    size += computeMessageSize(2, element);
  }
  for (License *element in self.licenseArray) {
    size += computeMessageSize(3, element);
  }
  for (CameraServerItem *element in self.cameraServerItemArray) {
    size += computeMessageSize(4, element);
  }
  if (self.hasHardwareId1) {
    size += computeStringSize(5, self.hardwareId1);
  }
  if (self.hasOldHardwareId) {
    size += computeStringSize(6, self.oldHardwareId);
  }
  if (self.hasHardwareId2) {
    size += computeStringSize(7, self.hardwareId2);
  }
  if (self.hasPublicIp) {
    size += computeStringSize(8, self.publicIp);
  }
  if (self.hasSystemName) {
    size += computeStringSize(9, self.systemName);
  }
  if (self.hasHardwareId3) {
    size += computeStringSize(10, self.hardwareId3);
  }
  if (self.hasSessionKey) {
    size += computeStringSize(11, self.sessionKey);
  }
  if (self.hasAllowCameraChangesDeprecated) {
    size += computeBoolSize(12, self.allowCameraChangesDeprecated);
  }
  for (KvPair *element in self.kvPairArray) {
    size += computeMessageSize(13, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (InitialMessage*) parseFromData:(NSData*) data {
  return (InitialMessage*)[[[InitialMessage builder] mergeFromData:data] build];
}
+ (InitialMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InitialMessage*)[[[InitialMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (InitialMessage*) parseFromInputStream:(NSInputStream*) input {
  return (InitialMessage*)[[[InitialMessage builder] mergeFromInputStream:input] build];
}
+ (InitialMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InitialMessage*)[[[InitialMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InitialMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (InitialMessage*)[[[InitialMessage builder] mergeFromCodedInputStream:input] build];
}
+ (InitialMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InitialMessage*)[[[InitialMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InitialMessage_Builder*) builder {
  return [[InitialMessage_Builder alloc] init];
}
+ (InitialMessage_Builder*) builderWithPrototype:(InitialMessage*) prototype {
  return [[InitialMessage builder] mergeFrom:prototype];
}
- (InitialMessage_Builder*) builder {
  return [InitialMessage builder];
}
- (InitialMessage_Builder*) toBuilder {
  return [InitialMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  for (ResourceType* element in self.resourceTypeArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"resourceType"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (Resource* element in self.resourceArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"resource"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (License* element in self.licenseArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"license"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  for (CameraServerItem* element in self.cameraServerItemArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"cameraServerItem"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasHardwareId1) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hardwareId1", self.hardwareId1];
  }
  if (self.hasOldHardwareId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"oldHardwareId", self.oldHardwareId];
  }
  if (self.hasHardwareId2) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hardwareId2", self.hardwareId2];
  }
  if (self.hasPublicIp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"publicIp", self.publicIp];
  }
  if (self.hasSystemName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"systemName", self.systemName];
  }
  if (self.hasHardwareId3) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hardwareId3", self.hardwareId3];
  }
  if (self.hasSessionKey) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sessionKey", self.sessionKey];
  }
  if (self.hasAllowCameraChangesDeprecated) {
    [output appendFormat:@"%@%@: %@\n", indent, @"allowCameraChangesDeprecated", [NSNumber numberWithBool:self.allowCameraChangesDeprecated]];
  }
  for (KvPair* element in self.kvPairArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"kvPair"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[InitialMessage class]]) {
    return NO;
  }
  InitialMessage *otherMessage = other;
  return
      [self.resourceTypeArray isEqualToArray:otherMessage.resourceTypeArray] &&
      [self.resourceArray isEqualToArray:otherMessage.resourceArray] &&
      [self.licenseArray isEqualToArray:otherMessage.licenseArray] &&
      [self.cameraServerItemArray isEqualToArray:otherMessage.cameraServerItemArray] &&
      self.hasHardwareId1 == otherMessage.hasHardwareId1 &&
      (!self.hasHardwareId1 || [self.hardwareId1 isEqual:otherMessage.hardwareId1]) &&
      self.hasOldHardwareId == otherMessage.hasOldHardwareId &&
      (!self.hasOldHardwareId || [self.oldHardwareId isEqual:otherMessage.oldHardwareId]) &&
      self.hasHardwareId2 == otherMessage.hasHardwareId2 &&
      (!self.hasHardwareId2 || [self.hardwareId2 isEqual:otherMessage.hardwareId2]) &&
      self.hasPublicIp == otherMessage.hasPublicIp &&
      (!self.hasPublicIp || [self.publicIp isEqual:otherMessage.publicIp]) &&
      self.hasSystemName == otherMessage.hasSystemName &&
      (!self.hasSystemName || [self.systemName isEqual:otherMessage.systemName]) &&
      self.hasHardwareId3 == otherMessage.hasHardwareId3 &&
      (!self.hasHardwareId3 || [self.hardwareId3 isEqual:otherMessage.hardwareId3]) &&
      self.hasSessionKey == otherMessage.hasSessionKey &&
      (!self.hasSessionKey || [self.sessionKey isEqual:otherMessage.sessionKey]) &&
      self.hasAllowCameraChangesDeprecated == otherMessage.hasAllowCameraChangesDeprecated &&
      (!self.hasAllowCameraChangesDeprecated || self.allowCameraChangesDeprecated == otherMessage.allowCameraChangesDeprecated) &&
      [self.kvPairArray isEqualToArray:otherMessage.kvPairArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  for (ResourceType* element in self.resourceTypeArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (Resource* element in self.resourceArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (License* element in self.licenseArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  for (CameraServerItem* element in self.cameraServerItemArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  if (self.hasHardwareId1) {
    hashCode = hashCode * 31 + [self.hardwareId1 hash];
  }
  if (self.hasOldHardwareId) {
    hashCode = hashCode * 31 + [self.oldHardwareId hash];
  }
  if (self.hasHardwareId2) {
    hashCode = hashCode * 31 + [self.hardwareId2 hash];
  }
  if (self.hasPublicIp) {
    hashCode = hashCode * 31 + [self.publicIp hash];
  }
  if (self.hasSystemName) {
    hashCode = hashCode * 31 + [self.systemName hash];
  }
  if (self.hasHardwareId3) {
    hashCode = hashCode * 31 + [self.hardwareId3 hash];
  }
  if (self.hasSessionKey) {
    hashCode = hashCode * 31 + [self.sessionKey hash];
  }
  if (self.hasAllowCameraChangesDeprecated) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.allowCameraChangesDeprecated] hash];
  }
  for (KvPair* element in self.kvPairArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface InitialMessage_Builder()
@property (strong) InitialMessage* result;
@end

@implementation InitialMessage_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[InitialMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (InitialMessage_Builder*) clear {
  self.result = [[InitialMessage alloc] init];
  return self;
}
- (InitialMessage_Builder*) clone {
  return [InitialMessage builderWithPrototype:result];
}
- (InitialMessage*) defaultInstance {
  return [InitialMessage defaultInstance];
}
- (InitialMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (InitialMessage*) buildPartial {
  InitialMessage* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (InitialMessage_Builder*) mergeFrom:(InitialMessage*) other {
  if (other == [InitialMessage defaultInstance]) {
    return self;
  }
  if (other.resourceTypeArray.count > 0) {
    if (result.resourceTypeArray == nil) {
      result.resourceTypeArray = [[NSMutableArray alloc] initWithArray:other.resourceTypeArray];
    } else {
      [result.resourceTypeArray addObjectsFromArray:other.resourceTypeArray];
    }
  }
  if (other.resourceArray.count > 0) {
    if (result.resourceArray == nil) {
      result.resourceArray = [[NSMutableArray alloc] initWithArray:other.resourceArray];
    } else {
      [result.resourceArray addObjectsFromArray:other.resourceArray];
    }
  }
  if (other.licenseArray.count > 0) {
    if (result.licenseArray == nil) {
      result.licenseArray = [[NSMutableArray alloc] initWithArray:other.licenseArray];
    } else {
      [result.licenseArray addObjectsFromArray:other.licenseArray];
    }
  }
  if (other.cameraServerItemArray.count > 0) {
    if (result.cameraServerItemArray == nil) {
      result.cameraServerItemArray = [[NSMutableArray alloc] initWithArray:other.cameraServerItemArray];
    } else {
      [result.cameraServerItemArray addObjectsFromArray:other.cameraServerItemArray];
    }
  }
  if (other.hasHardwareId1) {
    [self setHardwareId1:other.hardwareId1];
  }
  if (other.hasOldHardwareId) {
    [self setOldHardwareId:other.oldHardwareId];
  }
  if (other.hasHardwareId2) {
    [self setHardwareId2:other.hardwareId2];
  }
  if (other.hasPublicIp) {
    [self setPublicIp:other.publicIp];
  }
  if (other.hasSystemName) {
    [self setSystemName:other.systemName];
  }
  if (other.hasHardwareId3) {
    [self setHardwareId3:other.hardwareId3];
  }
  if (other.hasSessionKey) {
    [self setSessionKey:other.sessionKey];
  }
  if (other.hasAllowCameraChangesDeprecated) {
    [self setAllowCameraChangesDeprecated:other.allowCameraChangesDeprecated];
  }
  if (other.kvPairArray.count > 0) {
    if (result.kvPairArray == nil) {
      result.kvPairArray = [[NSMutableArray alloc] initWithArray:other.kvPairArray];
    } else {
      [result.kvPairArray addObjectsFromArray:other.kvPairArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (InitialMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (InitialMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        ResourceType_Builder* subBuilder = [ResourceType builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addResourceType:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        Resource_Builder* subBuilder = [Resource builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addResource:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        License_Builder* subBuilder = [License builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addLicense:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        CameraServerItem_Builder* subBuilder = [CameraServerItem builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCameraServerItem:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        [self setHardwareId1:[input readString]];
        break;
      }
      case 50: {
        [self setOldHardwareId:[input readString]];
        break;
      }
      case 58: {
        [self setHardwareId2:[input readString]];
        break;
      }
      case 66: {
        [self setPublicIp:[input readString]];
        break;
      }
      case 74: {
        [self setSystemName:[input readString]];
        break;
      }
      case 82: {
        [self setHardwareId3:[input readString]];
        break;
      }
      case 90: {
        [self setSessionKey:[input readString]];
        break;
      }
      case 96: {
        [self setAllowCameraChangesDeprecated:[input readBool]];
        break;
      }
      case 106: {
        KvPair_Builder* subBuilder = [KvPair builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addKvPair:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)resourceType {
  return result.resourceTypeArray;
}
- (ResourceType*)resourceTypeAtIndex:(NSUInteger)index {
  return [result resourceTypeAtIndex:index];
}
- (InitialMessage_Builder *)addResourceType:(ResourceType*)value {
  if (result.resourceTypeArray == nil) {
    result.resourceTypeArray = [[NSMutableArray alloc]init];
  }
  [result.resourceTypeArray addObject:value];
  return self;
}
- (InitialMessage_Builder *)setResourceTypeArray:(NSArray *)array {
  result.resourceTypeArray = [[NSMutableArray alloc]init];
  return self;
}
- (InitialMessage_Builder *)clearResourceType {
  result.resourceTypeArray = nil;
  return self;
}
- (NSMutableArray *)resource {
  return result.resourceArray;
}
- (Resource*)resourceAtIndex:(NSUInteger)index {
  return [result resourceAtIndex:index];
}
- (InitialMessage_Builder *)addResource:(Resource*)value {
  if (result.resourceArray == nil) {
    result.resourceArray = [[NSMutableArray alloc]init];
  }
  [result.resourceArray addObject:value];
  return self;
}
- (InitialMessage_Builder *)setResourceArray:(NSArray *)array {
  result.resourceArray = [[NSMutableArray alloc]init];
  return self;
}
- (InitialMessage_Builder *)clearResource {
  result.resourceArray = nil;
  return self;
}
- (NSMutableArray *)license {
  return result.licenseArray;
}
- (License*)licenseAtIndex:(NSUInteger)index {
  return [result licenseAtIndex:index];
}
- (InitialMessage_Builder *)addLicense:(License*)value {
  if (result.licenseArray == nil) {
    result.licenseArray = [[NSMutableArray alloc]init];
  }
  [result.licenseArray addObject:value];
  return self;
}
- (InitialMessage_Builder *)setLicenseArray:(NSArray *)array {
  result.licenseArray = [[NSMutableArray alloc]init];
  return self;
}
- (InitialMessage_Builder *)clearLicense {
  result.licenseArray = nil;
  return self;
}
- (NSMutableArray *)cameraServerItem {
  return result.cameraServerItemArray;
}
- (CameraServerItem*)cameraServerItemAtIndex:(NSUInteger)index {
  return [result cameraServerItemAtIndex:index];
}
- (InitialMessage_Builder *)addCameraServerItem:(CameraServerItem*)value {
  if (result.cameraServerItemArray == nil) {
    result.cameraServerItemArray = [[NSMutableArray alloc]init];
  }
  [result.cameraServerItemArray addObject:value];
  return self;
}
- (InitialMessage_Builder *)setCameraServerItemArray:(NSArray *)array {
  result.cameraServerItemArray = [[NSMutableArray alloc]init];
  return self;
}
- (InitialMessage_Builder *)clearCameraServerItem {
  result.cameraServerItemArray = nil;
  return self;
}
- (BOOL) hasHardwareId1 {
  return result.hasHardwareId1;
}
- (NSString*) hardwareId1 {
  return result.hardwareId1;
}
- (InitialMessage_Builder*) setHardwareId1:(NSString*) value {
  result.hasHardwareId1 = YES;
  result.hardwareId1 = value;
  return self;
}
- (InitialMessage_Builder*) clearHardwareId1 {
  result.hasHardwareId1 = NO;
  result.hardwareId1 = @"";
  return self;
}
- (BOOL) hasOldHardwareId {
  return result.hasOldHardwareId;
}
- (NSString*) oldHardwareId {
  return result.oldHardwareId;
}
- (InitialMessage_Builder*) setOldHardwareId:(NSString*) value {
  result.hasOldHardwareId = YES;
  result.oldHardwareId = value;
  return self;
}
- (InitialMessage_Builder*) clearOldHardwareId {
  result.hasOldHardwareId = NO;
  result.oldHardwareId = @"";
  return self;
}
- (BOOL) hasHardwareId2 {
  return result.hasHardwareId2;
}
- (NSString*) hardwareId2 {
  return result.hardwareId2;
}
- (InitialMessage_Builder*) setHardwareId2:(NSString*) value {
  result.hasHardwareId2 = YES;
  result.hardwareId2 = value;
  return self;
}
- (InitialMessage_Builder*) clearHardwareId2 {
  result.hasHardwareId2 = NO;
  result.hardwareId2 = @"";
  return self;
}
- (BOOL) hasPublicIp {
  return result.hasPublicIp;
}
- (NSString*) publicIp {
  return result.publicIp;
}
- (InitialMessage_Builder*) setPublicIp:(NSString*) value {
  result.hasPublicIp = YES;
  result.publicIp = value;
  return self;
}
- (InitialMessage_Builder*) clearPublicIp {
  result.hasPublicIp = NO;
  result.publicIp = @"";
  return self;
}
- (BOOL) hasSystemName {
  return result.hasSystemName;
}
- (NSString*) systemName {
  return result.systemName;
}
- (InitialMessage_Builder*) setSystemName:(NSString*) value {
  result.hasSystemName = YES;
  result.systemName = value;
  return self;
}
- (InitialMessage_Builder*) clearSystemName {
  result.hasSystemName = NO;
  result.systemName = @"";
  return self;
}
- (BOOL) hasHardwareId3 {
  return result.hasHardwareId3;
}
- (NSString*) hardwareId3 {
  return result.hardwareId3;
}
- (InitialMessage_Builder*) setHardwareId3:(NSString*) value {
  result.hasHardwareId3 = YES;
  result.hardwareId3 = value;
  return self;
}
- (InitialMessage_Builder*) clearHardwareId3 {
  result.hasHardwareId3 = NO;
  result.hardwareId3 = @"";
  return self;
}
- (BOOL) hasSessionKey {
  return result.hasSessionKey;
}
- (NSString*) sessionKey {
  return result.sessionKey;
}
- (InitialMessage_Builder*) setSessionKey:(NSString*) value {
  result.hasSessionKey = YES;
  result.sessionKey = value;
  return self;
}
- (InitialMessage_Builder*) clearSessionKey {
  result.hasSessionKey = NO;
  result.sessionKey = @"";
  return self;
}
- (BOOL) hasAllowCameraChangesDeprecated {
  return result.hasAllowCameraChangesDeprecated;
}
- (BOOL) allowCameraChangesDeprecated {
  return result.allowCameraChangesDeprecated;
}
- (InitialMessage_Builder*) setAllowCameraChangesDeprecated:(BOOL) value {
  result.hasAllowCameraChangesDeprecated = YES;
  result.allowCameraChangesDeprecated = value;
  return self;
}
- (InitialMessage_Builder*) clearAllowCameraChangesDeprecated {
  result.hasAllowCameraChangesDeprecated = NO;
  result.allowCameraChangesDeprecated = NO;
  return self;
}
- (NSMutableArray *)kvPair {
  return result.kvPairArray;
}
- (KvPair*)kvPairAtIndex:(NSUInteger)index {
  return [result kvPairAtIndex:index];
}
- (InitialMessage_Builder *)addKvPair:(KvPair*)value {
  if (result.kvPairArray == nil) {
    result.kvPairArray = [[NSMutableArray alloc]init];
  }
  [result.kvPairArray addObject:value];
  return self;
}
- (InitialMessage_Builder *)setKvPairArray:(NSArray *)array {
  result.kvPairArray = [[NSMutableArray alloc]init];
  return self;
}
- (InitialMessage_Builder *)clearKvPair {
  result.kvPairArray = nil;
  return self;
}
@end

@interface FileAddMessage ()
@property (strong) NSString* path;
@end

@implementation FileAddMessage

- (BOOL) hasPath {
  return !!hasPath_;
}
- (void) setHasPath:(BOOL) value {
  hasPath_ = !!value;
}
@synthesize path;
- (id) init {
  if ((self = [super init])) {
    self.path = @"";
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return FileAddMessage_message;
}
static FileAddMessage* defaultFileAddMessageInstance = nil;
+ (void) initialize {
  if (self == [FileAddMessage class]) {
    defaultFileAddMessageInstance = [[FileAddMessage alloc] init];
  }
}
+ (FileAddMessage*) defaultInstance {
  return defaultFileAddMessageInstance;
}
- (FileAddMessage*) defaultInstance {
  return defaultFileAddMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPath) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPath) {
    [output writeString:1 value:self.path];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPath) {
    size += computeStringSize(1, self.path);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FileAddMessage*) parseFromData:(NSData*) data {
  return (FileAddMessage*)[[[FileAddMessage builder] mergeFromData:data] build];
}
+ (FileAddMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileAddMessage*)[[[FileAddMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FileAddMessage*) parseFromInputStream:(NSInputStream*) input {
  return (FileAddMessage*)[[[FileAddMessage builder] mergeFromInputStream:input] build];
}
+ (FileAddMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileAddMessage*)[[[FileAddMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileAddMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FileAddMessage*)[[[FileAddMessage builder] mergeFromCodedInputStream:input] build];
}
+ (FileAddMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileAddMessage*)[[[FileAddMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileAddMessage_Builder*) builder {
  return [[FileAddMessage_Builder alloc] init];
}
+ (FileAddMessage_Builder*) builderWithPrototype:(FileAddMessage*) prototype {
  return [[FileAddMessage builder] mergeFrom:prototype];
}
- (FileAddMessage_Builder*) builder {
  return [FileAddMessage builder];
}
- (FileAddMessage_Builder*) toBuilder {
  return [FileAddMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasPath) {
    [output appendFormat:@"%@%@: %@\n", indent, @"path", self.path];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FileAddMessage class]]) {
    return NO;
  }
  FileAddMessage *otherMessage = other;
  return
      self.hasPath == otherMessage.hasPath &&
      (!self.hasPath || [self.path isEqual:otherMessage.path]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasPath) {
    hashCode = hashCode * 31 + [self.path hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FileAddMessage_Builder()
@property (strong) FileAddMessage* result;
@end

@implementation FileAddMessage_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[FileAddMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FileAddMessage_Builder*) clear {
  self.result = [[FileAddMessage alloc] init];
  return self;
}
- (FileAddMessage_Builder*) clone {
  return [FileAddMessage builderWithPrototype:result];
}
- (FileAddMessage*) defaultInstance {
  return [FileAddMessage defaultInstance];
}
- (FileAddMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FileAddMessage*) buildPartial {
  FileAddMessage* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (FileAddMessage_Builder*) mergeFrom:(FileAddMessage*) other {
  if (other == [FileAddMessage defaultInstance]) {
    return self;
  }
  if (other.hasPath) {
    [self setPath:other.path];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FileAddMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FileAddMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPath:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPath {
  return result.hasPath;
}
- (NSString*) path {
  return result.path;
}
- (FileAddMessage_Builder*) setPath:(NSString*) value {
  result.hasPath = YES;
  result.path = value;
  return self;
}
- (FileAddMessage_Builder*) clearPath {
  result.hasPath = NO;
  result.path = @"";
  return self;
}
@end

@interface FileRemoveMessage ()
@property (strong) NSString* path;
@end

@implementation FileRemoveMessage

- (BOOL) hasPath {
  return !!hasPath_;
}
- (void) setHasPath:(BOOL) value {
  hasPath_ = !!value;
}
@synthesize path;
- (id) init {
  if ((self = [super init])) {
    self.path = @"";
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return FileRemoveMessage_message;
}
static FileRemoveMessage* defaultFileRemoveMessageInstance = nil;
+ (void) initialize {
  if (self == [FileRemoveMessage class]) {
    defaultFileRemoveMessageInstance = [[FileRemoveMessage alloc] init];
  }
}
+ (FileRemoveMessage*) defaultInstance {
  return defaultFileRemoveMessageInstance;
}
- (FileRemoveMessage*) defaultInstance {
  return defaultFileRemoveMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPath) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPath) {
    [output writeString:1 value:self.path];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPath) {
    size += computeStringSize(1, self.path);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FileRemoveMessage*) parseFromData:(NSData*) data {
  return (FileRemoveMessage*)[[[FileRemoveMessage builder] mergeFromData:data] build];
}
+ (FileRemoveMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileRemoveMessage*)[[[FileRemoveMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FileRemoveMessage*) parseFromInputStream:(NSInputStream*) input {
  return (FileRemoveMessage*)[[[FileRemoveMessage builder] mergeFromInputStream:input] build];
}
+ (FileRemoveMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileRemoveMessage*)[[[FileRemoveMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileRemoveMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FileRemoveMessage*)[[[FileRemoveMessage builder] mergeFromCodedInputStream:input] build];
}
+ (FileRemoveMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileRemoveMessage*)[[[FileRemoveMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileRemoveMessage_Builder*) builder {
  return [[FileRemoveMessage_Builder alloc] init];
}
+ (FileRemoveMessage_Builder*) builderWithPrototype:(FileRemoveMessage*) prototype {
  return [[FileRemoveMessage builder] mergeFrom:prototype];
}
- (FileRemoveMessage_Builder*) builder {
  return [FileRemoveMessage builder];
}
- (FileRemoveMessage_Builder*) toBuilder {
  return [FileRemoveMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasPath) {
    [output appendFormat:@"%@%@: %@\n", indent, @"path", self.path];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FileRemoveMessage class]]) {
    return NO;
  }
  FileRemoveMessage *otherMessage = other;
  return
      self.hasPath == otherMessage.hasPath &&
      (!self.hasPath || [self.path isEqual:otherMessage.path]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasPath) {
    hashCode = hashCode * 31 + [self.path hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FileRemoveMessage_Builder()
@property (strong) FileRemoveMessage* result;
@end

@implementation FileRemoveMessage_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[FileRemoveMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FileRemoveMessage_Builder*) clear {
  self.result = [[FileRemoveMessage alloc] init];
  return self;
}
- (FileRemoveMessage_Builder*) clone {
  return [FileRemoveMessage builderWithPrototype:result];
}
- (FileRemoveMessage*) defaultInstance {
  return [FileRemoveMessage defaultInstance];
}
- (FileRemoveMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FileRemoveMessage*) buildPartial {
  FileRemoveMessage* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (FileRemoveMessage_Builder*) mergeFrom:(FileRemoveMessage*) other {
  if (other == [FileRemoveMessage defaultInstance]) {
    return self;
  }
  if (other.hasPath) {
    [self setPath:other.path];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FileRemoveMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FileRemoveMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPath:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPath {
  return result.hasPath;
}
- (NSString*) path {
  return result.path;
}
- (FileRemoveMessage_Builder*) setPath:(NSString*) value {
  result.hasPath = YES;
  result.path = value;
  return self;
}
- (FileRemoveMessage_Builder*) clearPath {
  result.hasPath = NO;
  result.path = @"";
  return self;
}
@end

@interface FileUpdateMessage ()
@property (strong) NSString* path;
@end

@implementation FileUpdateMessage

- (BOOL) hasPath {
  return !!hasPath_;
}
- (void) setHasPath:(BOOL) value {
  hasPath_ = !!value;
}
@synthesize path;
- (id) init {
  if ((self = [super init])) {
    self.path = @"";
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return FileUpdateMessage_message;
}
static FileUpdateMessage* defaultFileUpdateMessageInstance = nil;
+ (void) initialize {
  if (self == [FileUpdateMessage class]) {
    defaultFileUpdateMessageInstance = [[FileUpdateMessage alloc] init];
  }
}
+ (FileUpdateMessage*) defaultInstance {
  return defaultFileUpdateMessageInstance;
}
- (FileUpdateMessage*) defaultInstance {
  return defaultFileUpdateMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPath) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPath) {
    [output writeString:1 value:self.path];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPath) {
    size += computeStringSize(1, self.path);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FileUpdateMessage*) parseFromData:(NSData*) data {
  return (FileUpdateMessage*)[[[FileUpdateMessage builder] mergeFromData:data] build];
}
+ (FileUpdateMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileUpdateMessage*)[[[FileUpdateMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FileUpdateMessage*) parseFromInputStream:(NSInputStream*) input {
  return (FileUpdateMessage*)[[[FileUpdateMessage builder] mergeFromInputStream:input] build];
}
+ (FileUpdateMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileUpdateMessage*)[[[FileUpdateMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileUpdateMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FileUpdateMessage*)[[[FileUpdateMessage builder] mergeFromCodedInputStream:input] build];
}
+ (FileUpdateMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileUpdateMessage*)[[[FileUpdateMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileUpdateMessage_Builder*) builder {
  return [[FileUpdateMessage_Builder alloc] init];
}
+ (FileUpdateMessage_Builder*) builderWithPrototype:(FileUpdateMessage*) prototype {
  return [[FileUpdateMessage builder] mergeFrom:prototype];
}
- (FileUpdateMessage_Builder*) builder {
  return [FileUpdateMessage builder];
}
- (FileUpdateMessage_Builder*) toBuilder {
  return [FileUpdateMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasPath) {
    [output appendFormat:@"%@%@: %@\n", indent, @"path", self.path];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[FileUpdateMessage class]]) {
    return NO;
  }
  FileUpdateMessage *otherMessage = other;
  return
      self.hasPath == otherMessage.hasPath &&
      (!self.hasPath || [self.path isEqual:otherMessage.path]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasPath) {
    hashCode = hashCode * 31 + [self.path hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface FileUpdateMessage_Builder()
@property (strong) FileUpdateMessage* result;
@end

@implementation FileUpdateMessage_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[FileUpdateMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FileUpdateMessage_Builder*) clear {
  self.result = [[FileUpdateMessage alloc] init];
  return self;
}
- (FileUpdateMessage_Builder*) clone {
  return [FileUpdateMessage builderWithPrototype:result];
}
- (FileUpdateMessage*) defaultInstance {
  return [FileUpdateMessage defaultInstance];
}
- (FileUpdateMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FileUpdateMessage*) buildPartial {
  FileUpdateMessage* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (FileUpdateMessage_Builder*) mergeFrom:(FileUpdateMessage*) other {
  if (other == [FileUpdateMessage defaultInstance]) {
    return self;
  }
  if (other.hasPath) {
    [self setPath:other.path];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FileUpdateMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FileUpdateMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPath:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPath {
  return result.hasPath;
}
- (NSString*) path {
  return result.path;
}
- (FileUpdateMessage_Builder*) setPath:(NSString*) value {
  result.hasPath = YES;
  result.path = value;
  return self;
}
- (FileUpdateMessage_Builder*) clearPath {
  result.hasPath = NO;
  result.path = @"";
  return self;
}
@end

@interface RuntimeInfoChangeMessage ()
@property (strong) NSString* publicIp;
@property (strong) NSString* systemName;
@property (strong) NSString* sessionKey;
@property BOOL allowCameraChangesDeprecated;
@end

@implementation RuntimeInfoChangeMessage

- (BOOL) hasPublicIp {
  return !!hasPublicIp_;
}
- (void) setHasPublicIp:(BOOL) value {
  hasPublicIp_ = !!value;
}
@synthesize publicIp;
- (BOOL) hasSystemName {
  return !!hasSystemName_;
}
- (void) setHasSystemName:(BOOL) value {
  hasSystemName_ = !!value;
}
@synthesize systemName;
- (BOOL) hasSessionKey {
  return !!hasSessionKey_;
}
- (void) setHasSessionKey:(BOOL) value {
  hasSessionKey_ = !!value;
}
@synthesize sessionKey;
- (BOOL) hasAllowCameraChangesDeprecated {
  return !!hasAllowCameraChangesDeprecated_;
}
- (void) setHasAllowCameraChangesDeprecated:(BOOL) value {
  hasAllowCameraChangesDeprecated_ = !!value;
}
- (BOOL) allowCameraChangesDeprecated {
  return !!allowCameraChangesDeprecated_;
}
- (void) setAllowCameraChangesDeprecated:(BOOL) value {
  allowCameraChangesDeprecated_ = !!value;
}
- (id) init {
  if ((self = [super init])) {
    self.publicIp = @"";
    self.systemName = @"";
    self.sessionKey = @"";
    self.allowCameraChangesDeprecated = NO;
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return RuntimeInfoChangeMessage_message;
}
static RuntimeInfoChangeMessage* defaultRuntimeInfoChangeMessageInstance = nil;
+ (void) initialize {
  if (self == [RuntimeInfoChangeMessage class]) {
    defaultRuntimeInfoChangeMessageInstance = [[RuntimeInfoChangeMessage alloc] init];
  }
}
+ (RuntimeInfoChangeMessage*) defaultInstance {
  return defaultRuntimeInfoChangeMessageInstance;
}
- (RuntimeInfoChangeMessage*) defaultInstance {
  return defaultRuntimeInfoChangeMessageInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPublicIp) {
    [output writeString:1 value:self.publicIp];
  }
  if (self.hasSystemName) {
    [output writeString:2 value:self.systemName];
  }
  if (self.hasSessionKey) {
    [output writeString:3 value:self.sessionKey];
  }
  if (self.hasAllowCameraChangesDeprecated) {
    [output writeBool:4 value:self.allowCameraChangesDeprecated];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPublicIp) {
    size += computeStringSize(1, self.publicIp);
  }
  if (self.hasSystemName) {
    size += computeStringSize(2, self.systemName);
  }
  if (self.hasSessionKey) {
    size += computeStringSize(3, self.sessionKey);
  }
  if (self.hasAllowCameraChangesDeprecated) {
    size += computeBoolSize(4, self.allowCameraChangesDeprecated);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RuntimeInfoChangeMessage*) parseFromData:(NSData*) data {
  return (RuntimeInfoChangeMessage*)[[[RuntimeInfoChangeMessage builder] mergeFromData:data] build];
}
+ (RuntimeInfoChangeMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RuntimeInfoChangeMessage*)[[[RuntimeInfoChangeMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RuntimeInfoChangeMessage*) parseFromInputStream:(NSInputStream*) input {
  return (RuntimeInfoChangeMessage*)[[[RuntimeInfoChangeMessage builder] mergeFromInputStream:input] build];
}
+ (RuntimeInfoChangeMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RuntimeInfoChangeMessage*)[[[RuntimeInfoChangeMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RuntimeInfoChangeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RuntimeInfoChangeMessage*)[[[RuntimeInfoChangeMessage builder] mergeFromCodedInputStream:input] build];
}
+ (RuntimeInfoChangeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RuntimeInfoChangeMessage*)[[[RuntimeInfoChangeMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RuntimeInfoChangeMessage_Builder*) builder {
  return [[RuntimeInfoChangeMessage_Builder alloc] init];
}
+ (RuntimeInfoChangeMessage_Builder*) builderWithPrototype:(RuntimeInfoChangeMessage*) prototype {
  return [[RuntimeInfoChangeMessage builder] mergeFrom:prototype];
}
- (RuntimeInfoChangeMessage_Builder*) builder {
  return [RuntimeInfoChangeMessage builder];
}
- (RuntimeInfoChangeMessage_Builder*) toBuilder {
  return [RuntimeInfoChangeMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasPublicIp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"publicIp", self.publicIp];
  }
  if (self.hasSystemName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"systemName", self.systemName];
  }
  if (self.hasSessionKey) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sessionKey", self.sessionKey];
  }
  if (self.hasAllowCameraChangesDeprecated) {
    [output appendFormat:@"%@%@: %@\n", indent, @"allowCameraChangesDeprecated", [NSNumber numberWithBool:self.allowCameraChangesDeprecated]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RuntimeInfoChangeMessage class]]) {
    return NO;
  }
  RuntimeInfoChangeMessage *otherMessage = other;
  return
      self.hasPublicIp == otherMessage.hasPublicIp &&
      (!self.hasPublicIp || [self.publicIp isEqual:otherMessage.publicIp]) &&
      self.hasSystemName == otherMessage.hasSystemName &&
      (!self.hasSystemName || [self.systemName isEqual:otherMessage.systemName]) &&
      self.hasSessionKey == otherMessage.hasSessionKey &&
      (!self.hasSessionKey || [self.sessionKey isEqual:otherMessage.sessionKey]) &&
      self.hasAllowCameraChangesDeprecated == otherMessage.hasAllowCameraChangesDeprecated &&
      (!self.hasAllowCameraChangesDeprecated || self.allowCameraChangesDeprecated == otherMessage.allowCameraChangesDeprecated) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasPublicIp) {
    hashCode = hashCode * 31 + [self.publicIp hash];
  }
  if (self.hasSystemName) {
    hashCode = hashCode * 31 + [self.systemName hash];
  }
  if (self.hasSessionKey) {
    hashCode = hashCode * 31 + [self.sessionKey hash];
  }
  if (self.hasAllowCameraChangesDeprecated) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.allowCameraChangesDeprecated] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RuntimeInfoChangeMessage_Builder()
@property (strong) RuntimeInfoChangeMessage* result;
@end

@implementation RuntimeInfoChangeMessage_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RuntimeInfoChangeMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RuntimeInfoChangeMessage_Builder*) clear {
  self.result = [[RuntimeInfoChangeMessage alloc] init];
  return self;
}
- (RuntimeInfoChangeMessage_Builder*) clone {
  return [RuntimeInfoChangeMessage builderWithPrototype:result];
}
- (RuntimeInfoChangeMessage*) defaultInstance {
  return [RuntimeInfoChangeMessage defaultInstance];
}
- (RuntimeInfoChangeMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RuntimeInfoChangeMessage*) buildPartial {
  RuntimeInfoChangeMessage* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RuntimeInfoChangeMessage_Builder*) mergeFrom:(RuntimeInfoChangeMessage*) other {
  if (other == [RuntimeInfoChangeMessage defaultInstance]) {
    return self;
  }
  if (other.hasPublicIp) {
    [self setPublicIp:other.publicIp];
  }
  if (other.hasSystemName) {
    [self setSystemName:other.systemName];
  }
  if (other.hasSessionKey) {
    [self setSessionKey:other.sessionKey];
  }
  if (other.hasAllowCameraChangesDeprecated) {
    [self setAllowCameraChangesDeprecated:other.allowCameraChangesDeprecated];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RuntimeInfoChangeMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RuntimeInfoChangeMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPublicIp:[input readString]];
        break;
      }
      case 18: {
        [self setSystemName:[input readString]];
        break;
      }
      case 26: {
        [self setSessionKey:[input readString]];
        break;
      }
      case 32: {
        [self setAllowCameraChangesDeprecated:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasPublicIp {
  return result.hasPublicIp;
}
- (NSString*) publicIp {
  return result.publicIp;
}
- (RuntimeInfoChangeMessage_Builder*) setPublicIp:(NSString*) value {
  result.hasPublicIp = YES;
  result.publicIp = value;
  return self;
}
- (RuntimeInfoChangeMessage_Builder*) clearPublicIp {
  result.hasPublicIp = NO;
  result.publicIp = @"";
  return self;
}
- (BOOL) hasSystemName {
  return result.hasSystemName;
}
- (NSString*) systemName {
  return result.systemName;
}
- (RuntimeInfoChangeMessage_Builder*) setSystemName:(NSString*) value {
  result.hasSystemName = YES;
  result.systemName = value;
  return self;
}
- (RuntimeInfoChangeMessage_Builder*) clearSystemName {
  result.hasSystemName = NO;
  result.systemName = @"";
  return self;
}
- (BOOL) hasSessionKey {
  return result.hasSessionKey;
}
- (NSString*) sessionKey {
  return result.sessionKey;
}
- (RuntimeInfoChangeMessage_Builder*) setSessionKey:(NSString*) value {
  result.hasSessionKey = YES;
  result.sessionKey = value;
  return self;
}
- (RuntimeInfoChangeMessage_Builder*) clearSessionKey {
  result.hasSessionKey = NO;
  result.sessionKey = @"";
  return self;
}
- (BOOL) hasAllowCameraChangesDeprecated {
  return result.hasAllowCameraChangesDeprecated;
}
- (BOOL) allowCameraChangesDeprecated {
  return result.allowCameraChangesDeprecated;
}
- (RuntimeInfoChangeMessage_Builder*) setAllowCameraChangesDeprecated:(BOOL) value {
  result.hasAllowCameraChangesDeprecated = YES;
  result.allowCameraChangesDeprecated = value;
  return self;
}
- (RuntimeInfoChangeMessage_Builder*) clearAllowCameraChangesDeprecated {
  result.hasAllowCameraChangesDeprecated = NO;
  result.allowCameraChangesDeprecated = NO;
  return self;
}
@end

@interface BusinessRuleResetMessage ()
@property (strong) NSMutableArray * businessRuleArray;
@end

@implementation BusinessRuleResetMessage

@synthesize businessRuleArray;
@dynamic businessRule;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return BusinessRuleResetMessage_message;
}
static BusinessRuleResetMessage* defaultBusinessRuleResetMessageInstance = nil;
+ (void) initialize {
  if (self == [BusinessRuleResetMessage class]) {
    defaultBusinessRuleResetMessageInstance = [[BusinessRuleResetMessage alloc] init];
  }
}
+ (BusinessRuleResetMessage*) defaultInstance {
  return defaultBusinessRuleResetMessageInstance;
}
- (BusinessRuleResetMessage*) defaultInstance {
  return defaultBusinessRuleResetMessageInstance;
}
- (NSArray *)businessRule {
  return businessRuleArray;
}
- (BusinessRule*)businessRuleAtIndex:(NSUInteger)index {
  return [businessRuleArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (BusinessRule *element in self.businessRuleArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (BusinessRule *element in self.businessRuleArray) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (BusinessRuleResetMessage*) parseFromData:(NSData*) data {
  return (BusinessRuleResetMessage*)[[[BusinessRuleResetMessage builder] mergeFromData:data] build];
}
+ (BusinessRuleResetMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessRuleResetMessage*)[[[BusinessRuleResetMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BusinessRuleResetMessage*) parseFromInputStream:(NSInputStream*) input {
  return (BusinessRuleResetMessage*)[[[BusinessRuleResetMessage builder] mergeFromInputStream:input] build];
}
+ (BusinessRuleResetMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessRuleResetMessage*)[[[BusinessRuleResetMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BusinessRuleResetMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BusinessRuleResetMessage*)[[[BusinessRuleResetMessage builder] mergeFromCodedInputStream:input] build];
}
+ (BusinessRuleResetMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BusinessRuleResetMessage*)[[[BusinessRuleResetMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BusinessRuleResetMessage_Builder*) builder {
  return [[BusinessRuleResetMessage_Builder alloc] init];
}
+ (BusinessRuleResetMessage_Builder*) builderWithPrototype:(BusinessRuleResetMessage*) prototype {
  return [[BusinessRuleResetMessage builder] mergeFrom:prototype];
}
- (BusinessRuleResetMessage_Builder*) builder {
  return [BusinessRuleResetMessage builder];
}
- (BusinessRuleResetMessage_Builder*) toBuilder {
  return [BusinessRuleResetMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  for (BusinessRule* element in self.businessRuleArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"businessRule"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BusinessRuleResetMessage class]]) {
    return NO;
  }
  BusinessRuleResetMessage *otherMessage = other;
  return
      [self.businessRuleArray isEqualToArray:otherMessage.businessRuleArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  for (BusinessRule* element in self.businessRuleArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BusinessRuleResetMessage_Builder()
@property (strong) BusinessRuleResetMessage* result;
@end

@implementation BusinessRuleResetMessage_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[BusinessRuleResetMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (BusinessRuleResetMessage_Builder*) clear {
  self.result = [[BusinessRuleResetMessage alloc] init];
  return self;
}
- (BusinessRuleResetMessage_Builder*) clone {
  return [BusinessRuleResetMessage builderWithPrototype:result];
}
- (BusinessRuleResetMessage*) defaultInstance {
  return [BusinessRuleResetMessage defaultInstance];
}
- (BusinessRuleResetMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BusinessRuleResetMessage*) buildPartial {
  BusinessRuleResetMessage* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (BusinessRuleResetMessage_Builder*) mergeFrom:(BusinessRuleResetMessage*) other {
  if (other == [BusinessRuleResetMessage defaultInstance]) {
    return self;
  }
  if (other.businessRuleArray.count > 0) {
    if (result.businessRuleArray == nil) {
      result.businessRuleArray = [[NSMutableArray alloc] initWithArray:other.businessRuleArray];
    } else {
      [result.businessRuleArray addObjectsFromArray:other.businessRuleArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BusinessRuleResetMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BusinessRuleResetMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BusinessRule_Builder* subBuilder = [BusinessRule builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBusinessRule:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)businessRule {
  return result.businessRuleArray;
}
- (BusinessRule*)businessRuleAtIndex:(NSUInteger)index {
  return [result businessRuleAtIndex:index];
}
- (BusinessRuleResetMessage_Builder *)addBusinessRule:(BusinessRule*)value {
  if (result.businessRuleArray == nil) {
    result.businessRuleArray = [[NSMutableArray alloc]init];
  }
  [result.businessRuleArray addObject:value];
  return self;
}
- (BusinessRuleResetMessage_Builder *)setBusinessRuleArray:(NSArray *)array {
  result.businessRuleArray = [[NSMutableArray alloc]init];
  return self;
}
- (BusinessRuleResetMessage_Builder *)clearBusinessRule {
  result.businessRuleArray = nil;
  return self;
}
@end

@interface KvPairChangeMessage ()
@property (strong) NSMutableArray * kvPairArray;
@end

@implementation KvPairChangeMessage

@synthesize kvPairArray;
@dynamic kvPair;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return KvPairChangeMessage_message;
}
static KvPairChangeMessage* defaultKvPairChangeMessageInstance = nil;
+ (void) initialize {
  if (self == [KvPairChangeMessage class]) {
    defaultKvPairChangeMessageInstance = [[KvPairChangeMessage alloc] init];
  }
}
+ (KvPairChangeMessage*) defaultInstance {
  return defaultKvPairChangeMessageInstance;
}
- (KvPairChangeMessage*) defaultInstance {
  return defaultKvPairChangeMessageInstance;
}
- (NSArray *)kvPair {
  return kvPairArray;
}
- (KvPair*)kvPairAtIndex:(NSUInteger)index {
  return [kvPairArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (KvPair* element in self.kvPair) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (KvPair *element in self.kvPairArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (KvPair *element in self.kvPairArray) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (KvPairChangeMessage*) parseFromData:(NSData*) data {
  return (KvPairChangeMessage*)[[[KvPairChangeMessage builder] mergeFromData:data] build];
}
+ (KvPairChangeMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KvPairChangeMessage*)[[[KvPairChangeMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (KvPairChangeMessage*) parseFromInputStream:(NSInputStream*) input {
  return (KvPairChangeMessage*)[[[KvPairChangeMessage builder] mergeFromInputStream:input] build];
}
+ (KvPairChangeMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KvPairChangeMessage*)[[[KvPairChangeMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (KvPairChangeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (KvPairChangeMessage*)[[[KvPairChangeMessage builder] mergeFromCodedInputStream:input] build];
}
+ (KvPairChangeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KvPairChangeMessage*)[[[KvPairChangeMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (KvPairChangeMessage_Builder*) builder {
  return [[KvPairChangeMessage_Builder alloc] init];
}
+ (KvPairChangeMessage_Builder*) builderWithPrototype:(KvPairChangeMessage*) prototype {
  return [[KvPairChangeMessage builder] mergeFrom:prototype];
}
- (KvPairChangeMessage_Builder*) builder {
  return [KvPairChangeMessage builder];
}
- (KvPairChangeMessage_Builder*) toBuilder {
  return [KvPairChangeMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  for (KvPair* element in self.kvPairArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"kvPair"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[KvPairChangeMessage class]]) {
    return NO;
  }
  KvPairChangeMessage *otherMessage = other;
  return
      [self.kvPairArray isEqualToArray:otherMessage.kvPairArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  for (KvPair* element in self.kvPairArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface KvPairChangeMessage_Builder()
@property (strong) KvPairChangeMessage* result;
@end

@implementation KvPairChangeMessage_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[KvPairChangeMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (KvPairChangeMessage_Builder*) clear {
  self.result = [[KvPairChangeMessage alloc] init];
  return self;
}
- (KvPairChangeMessage_Builder*) clone {
  return [KvPairChangeMessage builderWithPrototype:result];
}
- (KvPairChangeMessage*) defaultInstance {
  return [KvPairChangeMessage defaultInstance];
}
- (KvPairChangeMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (KvPairChangeMessage*) buildPartial {
  KvPairChangeMessage* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (KvPairChangeMessage_Builder*) mergeFrom:(KvPairChangeMessage*) other {
  if (other == [KvPairChangeMessage defaultInstance]) {
    return self;
  }
  if (other.kvPairArray.count > 0) {
    if (result.kvPairArray == nil) {
      result.kvPairArray = [[NSMutableArray alloc] initWithArray:other.kvPairArray];
    } else {
      [result.kvPairArray addObjectsFromArray:other.kvPairArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (KvPairChangeMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (KvPairChangeMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        KvPair_Builder* subBuilder = [KvPair builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addKvPair:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)kvPair {
  return result.kvPairArray;
}
- (KvPair*)kvPairAtIndex:(NSUInteger)index {
  return [result kvPairAtIndex:index];
}
- (KvPairChangeMessage_Builder *)addKvPair:(KvPair*)value {
  if (result.kvPairArray == nil) {
    result.kvPairArray = [[NSMutableArray alloc]init];
  }
  [result.kvPairArray addObject:value];
  return self;
}
- (KvPairChangeMessage_Builder *)setKvPairArray:(NSArray *)array {
  result.kvPairArray = [[NSMutableArray alloc]init];
  return self;
}
- (KvPairChangeMessage_Builder *)clearKvPair {
  result.kvPairArray = nil;
  return self;
}
@end

@interface KvPairDeleteMessage ()
@property (strong) NSMutableArray * kvPairArray;
@end

@implementation KvPairDeleteMessage

@synthesize kvPairArray;
@dynamic kvPair;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return KvPairDeleteMessage_message;
}
static KvPairDeleteMessage* defaultKvPairDeleteMessageInstance = nil;
+ (void) initialize {
  if (self == [KvPairDeleteMessage class]) {
    defaultKvPairDeleteMessageInstance = [[KvPairDeleteMessage alloc] init];
  }
}
+ (KvPairDeleteMessage*) defaultInstance {
  return defaultKvPairDeleteMessageInstance;
}
- (KvPairDeleteMessage*) defaultInstance {
  return defaultKvPairDeleteMessageInstance;
}
- (NSArray *)kvPair {
  return kvPairArray;
}
- (KvPair*)kvPairAtIndex:(NSUInteger)index {
  return [kvPairArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (KvPair* element in self.kvPair) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (KvPair *element in self.kvPairArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (KvPair *element in self.kvPairArray) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (KvPairDeleteMessage*) parseFromData:(NSData*) data {
  return (KvPairDeleteMessage*)[[[KvPairDeleteMessage builder] mergeFromData:data] build];
}
+ (KvPairDeleteMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KvPairDeleteMessage*)[[[KvPairDeleteMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (KvPairDeleteMessage*) parseFromInputStream:(NSInputStream*) input {
  return (KvPairDeleteMessage*)[[[KvPairDeleteMessage builder] mergeFromInputStream:input] build];
}
+ (KvPairDeleteMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KvPairDeleteMessage*)[[[KvPairDeleteMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (KvPairDeleteMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (KvPairDeleteMessage*)[[[KvPairDeleteMessage builder] mergeFromCodedInputStream:input] build];
}
+ (KvPairDeleteMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (KvPairDeleteMessage*)[[[KvPairDeleteMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (KvPairDeleteMessage_Builder*) builder {
  return [[KvPairDeleteMessage_Builder alloc] init];
}
+ (KvPairDeleteMessage_Builder*) builderWithPrototype:(KvPairDeleteMessage*) prototype {
  return [[KvPairDeleteMessage builder] mergeFrom:prototype];
}
- (KvPairDeleteMessage_Builder*) builder {
  return [KvPairDeleteMessage builder];
}
- (KvPairDeleteMessage_Builder*) toBuilder {
  return [KvPairDeleteMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  for (KvPair* element in self.kvPairArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"kvPair"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[KvPairDeleteMessage class]]) {
    return NO;
  }
  KvPairDeleteMessage *otherMessage = other;
  return
      [self.kvPairArray isEqualToArray:otherMessage.kvPairArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  for (KvPair* element in self.kvPairArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface KvPairDeleteMessage_Builder()
@property (strong) KvPairDeleteMessage* result;
@end

@implementation KvPairDeleteMessage_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[KvPairDeleteMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (KvPairDeleteMessage_Builder*) clear {
  self.result = [[KvPairDeleteMessage alloc] init];
  return self;
}
- (KvPairDeleteMessage_Builder*) clone {
  return [KvPairDeleteMessage builderWithPrototype:result];
}
- (KvPairDeleteMessage*) defaultInstance {
  return [KvPairDeleteMessage defaultInstance];
}
- (KvPairDeleteMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (KvPairDeleteMessage*) buildPartial {
  KvPairDeleteMessage* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (KvPairDeleteMessage_Builder*) mergeFrom:(KvPairDeleteMessage*) other {
  if (other == [KvPairDeleteMessage defaultInstance]) {
    return self;
  }
  if (other.kvPairArray.count > 0) {
    if (result.kvPairArray == nil) {
      result.kvPairArray = [[NSMutableArray alloc] initWithArray:other.kvPairArray];
    } else {
      [result.kvPairArray addObjectsFromArray:other.kvPairArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (KvPairDeleteMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (KvPairDeleteMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        KvPair_Builder* subBuilder = [KvPair builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addKvPair:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)kvPair {
  return result.kvPairArray;
}
- (KvPair*)kvPairAtIndex:(NSUInteger)index {
  return [result kvPairAtIndex:index];
}
- (KvPairDeleteMessage_Builder *)addKvPair:(KvPair*)value {
  if (result.kvPairArray == nil) {
    result.kvPairArray = [[NSMutableArray alloc]init];
  }
  [result.kvPairArray addObject:value];
  return self;
}
- (KvPairDeleteMessage_Builder *)setKvPairArray:(NSArray *)array {
  result.kvPairArray = [[NSMutableArray alloc]init];
  return self;
}
- (KvPairDeleteMessage_Builder *)clearKvPair {
  result.kvPairArray = nil;
  return self;
}
@end

@interface CommandMessage ()
@property CommandMessage_Command command;
@end

@implementation CommandMessage

- (BOOL) hasCommand {
  return !!hasCommand_;
}
- (void) setHasCommand:(BOOL) value {
  hasCommand_ = !!value;
}
@synthesize command;
- (id) init {
  if ((self = [super init])) {
    self.command = CommandMessage_CommandReboot;
  }
  return self;
}
+ (id<PBExtensionField>) message {
  return CommandMessage_message;
}
static CommandMessage* defaultCommandMessageInstance = nil;
+ (void) initialize {
  if (self == [CommandMessage class]) {
    defaultCommandMessageInstance = [[CommandMessage alloc] init];
  }
}
+ (CommandMessage*) defaultInstance {
  return defaultCommandMessageInstance;
}
- (CommandMessage*) defaultInstance {
  return defaultCommandMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCommand) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCommand) {
    [output writeEnum:1 value:self.command];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCommand) {
    size += computeEnumSize(1, self.command);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CommandMessage*) parseFromData:(NSData*) data {
  return (CommandMessage*)[[[CommandMessage builder] mergeFromData:data] build];
}
+ (CommandMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandMessage*)[[[CommandMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CommandMessage*) parseFromInputStream:(NSInputStream*) input {
  return (CommandMessage*)[[[CommandMessage builder] mergeFromInputStream:input] build];
}
+ (CommandMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandMessage*)[[[CommandMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CommandMessage*)[[[CommandMessage builder] mergeFromCodedInputStream:input] build];
}
+ (CommandMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CommandMessage*)[[[CommandMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CommandMessage_Builder*) builder {
  return [[CommandMessage_Builder alloc] init];
}
+ (CommandMessage_Builder*) builderWithPrototype:(CommandMessage*) prototype {
  return [[CommandMessage builder] mergeFrom:prototype];
}
- (CommandMessage_Builder*) builder {
  return [CommandMessage builder];
}
- (CommandMessage_Builder*) toBuilder {
  return [CommandMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasCommand) {
    [output appendFormat:@"%@%@: %d\n", indent, @"command", self.command];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CommandMessage class]]) {
    return NO;
  }
  CommandMessage *otherMessage = other;
  return
      self.hasCommand == otherMessage.hasCommand &&
      (!self.hasCommand || self.command != otherMessage.command) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasCommand) {
    hashCode = hashCode * 31 + self.command;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL CommandMessage_CommandIsValidValue(CommandMessage_Command value) {
  switch (value) {
    case CommandMessage_CommandReboot:
      return YES;
    default:
      return NO;
  }
}
@interface CommandMessage_Builder()
@property (strong) CommandMessage* result;
@end

@implementation CommandMessage_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[CommandMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CommandMessage_Builder*) clear {
  self.result = [[CommandMessage alloc] init];
  return self;
}
- (CommandMessage_Builder*) clone {
  return [CommandMessage builderWithPrototype:result];
}
- (CommandMessage*) defaultInstance {
  return [CommandMessage defaultInstance];
}
- (CommandMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CommandMessage*) buildPartial {
  CommandMessage* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (CommandMessage_Builder*) mergeFrom:(CommandMessage*) other {
  if (other == [CommandMessage defaultInstance]) {
    return self;
  }
  if (other.hasCommand) {
    [self setCommand:other.command];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CommandMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CommandMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (CommandMessage_CommandIsValidValue(value)) {
          [self setCommand:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasCommand {
  return result.hasCommand;
}
- (CommandMessage_Command) command {
  return result.command;
}
- (CommandMessage_Builder*) setCommand:(CommandMessage_Command) value {
  result.hasCommand = YES;
  result.command = value;
  return self;
}
- (CommandMessage_Builder*) clearCommand {
  result.hasCommand = NO;
  result.command = CommandMessage_CommandReboot;
  return self;
}
@end

