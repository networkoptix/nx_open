// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

#import "BusinessCommon.pb.h"
#import "BusinessAction.pb.h"

@class BusinessAction;
@class BusinessActionList;
@class BusinessActionList_Builder;
@class BusinessAction_Builder;
@class BusinessRule;
@class BusinessRule_Builder;
@class BusinessRules;
@class BusinessRules_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef enum {
  BusinessEventTypeNotDefinedEvent = 0,
  BusinessEventTypeCameraMotion = 1,
  BusinessEventTypeCameraInput = 2,
  BusinessEventTypeCameraDisconnect = 3,
  BusinessEventTypeStorageFailure = 4,
  BusinessEventTypeNetworkIssue = 5,
  BusinessEventTypeCameraIpConflict = 6,
  BusinessEventTypeMediaServerFailure = 7,
  BusinessEventTypeMediaServerConflict = 8,
  BusinessEventTypeMediaServerStarted = 9,
  BusinessEventTypeSystemHealthMessage = 500,
  BusinessEventTypeUserDefinedEvent = 1000,
} BusinessEventType;

BOOL BusinessEventTypeIsValidValue(BusinessEventType value);


@interface BusinessRuleRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface BusinessRule : PBGeneratedMessage {
@private
  BOOL hasDisabled_:1;
  BOOL hasSystem_:1;
  BOOL hasId_:1;
  BOOL hasAggregationPeriod_:1;
  BOOL hasEventCondition_:1;
  BOOL hasActionParams_:1;
  BOOL hasComments_:1;
  BOOL hasSchedule_:1;
  BOOL hasEventType_:1;
  BOOL hasEventState_:1;
  BOOL hasActionType_:1;
  BOOL disabled_:1;
  BOOL system_:1;
  int32_t id;
  int32_t aggregationPeriod;
  NSString* eventCondition;
  NSString* actionParams;
  NSString* comments;
  NSString* schedule;
  BusinessEventType eventType;
  ToggleStateType eventState;
  BusinessActionType actionType;
  PBAppendableArray * eventResourceArray;
  PBAppendableArray * actionResourceArray;
}
- (BOOL) hasId;
- (BOOL) hasEventType;
- (BOOL) hasEventCondition;
- (BOOL) hasEventState;
- (BOOL) hasActionType;
- (BOOL) hasActionParams;
- (BOOL) hasAggregationPeriod;
- (BOOL) hasDisabled;
- (BOOL) hasComments;
- (BOOL) hasSchedule;
- (BOOL) hasSystem;
@property (readonly) int32_t id;
@property (readonly) BusinessEventType eventType;
@property (readonly, strong) PBArray * eventResource;
@property (readonly, strong) NSString* eventCondition;
@property (readonly) ToggleStateType eventState;
@property (readonly) BusinessActionType actionType;
@property (readonly, strong) PBArray * actionResource;
@property (readonly, strong) NSString* actionParams;
@property (readonly) int32_t aggregationPeriod;
- (BOOL) disabled;
@property (readonly, strong) NSString* comments;
@property (readonly, strong) NSString* schedule;
- (BOOL) system;
- (int32_t)eventResourceAtIndex:(NSUInteger)index;
- (int32_t)actionResourceAtIndex:(NSUInteger)index;

+ (BusinessRule*) defaultInstance;
- (BusinessRule*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BusinessRule_Builder*) builder;
+ (BusinessRule_Builder*) builder;
+ (BusinessRule_Builder*) builderWithPrototype:(BusinessRule*) prototype;
- (BusinessRule_Builder*) toBuilder;

+ (BusinessRule*) parseFromData:(NSData*) data;
+ (BusinessRule*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BusinessRule*) parseFromInputStream:(NSInputStream*) input;
+ (BusinessRule*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BusinessRule*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BusinessRule*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BusinessRule_Builder : PBGeneratedMessage_Builder {
@private
  BusinessRule* result;
}

- (BusinessRule*) defaultInstance;

- (BusinessRule_Builder*) clear;
- (BusinessRule_Builder*) clone;

- (BusinessRule*) build;
- (BusinessRule*) buildPartial;

- (BusinessRule_Builder*) mergeFrom:(BusinessRule*) other;
- (BusinessRule_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BusinessRule_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (int32_t) id;
- (BusinessRule_Builder*) setId:(int32_t) value;
- (BusinessRule_Builder*) clearId;

- (BOOL) hasEventType;
- (BusinessEventType) eventType;
- (BusinessRule_Builder*) setEventType:(BusinessEventType) value;
- (BusinessRule_Builder*) clearEventType;

- (PBAppendableArray *)eventResource;
- (int32_t)eventResourceAtIndex:(NSUInteger)index;
- (BusinessRule_Builder *)addEventResource:(int32_t)value;
- (BusinessRule_Builder *)setEventResourceArray:(NSArray *)array;
- (BusinessRule_Builder *)setEventResourceValues:(const int32_t *)values count:(NSUInteger)count;
- (BusinessRule_Builder *)clearEventResource;

- (BOOL) hasEventCondition;
- (NSString*) eventCondition;
- (BusinessRule_Builder*) setEventCondition:(NSString*) value;
- (BusinessRule_Builder*) clearEventCondition;

- (BOOL) hasEventState;
- (ToggleStateType) eventState;
- (BusinessRule_Builder*) setEventState:(ToggleStateType) value;
- (BusinessRule_Builder*) clearEventState;

- (BOOL) hasActionType;
- (BusinessActionType) actionType;
- (BusinessRule_Builder*) setActionType:(BusinessActionType) value;
- (BusinessRule_Builder*) clearActionType;

- (PBAppendableArray *)actionResource;
- (int32_t)actionResourceAtIndex:(NSUInteger)index;
- (BusinessRule_Builder *)addActionResource:(int32_t)value;
- (BusinessRule_Builder *)setActionResourceArray:(NSArray *)array;
- (BusinessRule_Builder *)setActionResourceValues:(const int32_t *)values count:(NSUInteger)count;
- (BusinessRule_Builder *)clearActionResource;

- (BOOL) hasActionParams;
- (NSString*) actionParams;
- (BusinessRule_Builder*) setActionParams:(NSString*) value;
- (BusinessRule_Builder*) clearActionParams;

- (BOOL) hasAggregationPeriod;
- (int32_t) aggregationPeriod;
- (BusinessRule_Builder*) setAggregationPeriod:(int32_t) value;
- (BusinessRule_Builder*) clearAggregationPeriod;

- (BOOL) hasDisabled;
- (BOOL) disabled;
- (BusinessRule_Builder*) setDisabled:(BOOL) value;
- (BusinessRule_Builder*) clearDisabled;

- (BOOL) hasComments;
- (NSString*) comments;
- (BusinessRule_Builder*) setComments:(NSString*) value;
- (BusinessRule_Builder*) clearComments;

- (BOOL) hasSchedule;
- (NSString*) schedule;
- (BusinessRule_Builder*) setSchedule:(NSString*) value;
- (BusinessRule_Builder*) clearSchedule;

- (BOOL) hasSystem;
- (BOOL) system;
- (BusinessRule_Builder*) setSystem:(BOOL) value;
- (BusinessRule_Builder*) clearSystem;
@end

@interface BusinessRules : PBGeneratedMessage {
@private
  NSMutableArray * businessRuleArray;
}
@property (readonly, strong) NSArray * businessRule;
- (BusinessRule*)businessRuleAtIndex:(NSUInteger)index;

+ (BusinessRules*) defaultInstance;
- (BusinessRules*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BusinessRules_Builder*) builder;
+ (BusinessRules_Builder*) builder;
+ (BusinessRules_Builder*) builderWithPrototype:(BusinessRules*) prototype;
- (BusinessRules_Builder*) toBuilder;

+ (BusinessRules*) parseFromData:(NSData*) data;
+ (BusinessRules*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BusinessRules*) parseFromInputStream:(NSInputStream*) input;
+ (BusinessRules*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BusinessRules*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BusinessRules*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BusinessRules_Builder : PBGeneratedMessage_Builder {
@private
  BusinessRules* result;
}

- (BusinessRules*) defaultInstance;

- (BusinessRules_Builder*) clear;
- (BusinessRules_Builder*) clone;

- (BusinessRules*) build;
- (BusinessRules*) buildPartial;

- (BusinessRules_Builder*) mergeFrom:(BusinessRules*) other;
- (BusinessRules_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BusinessRules_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)businessRule;
- (BusinessRule*)businessRuleAtIndex:(NSUInteger)index;
- (BusinessRules_Builder *)addBusinessRule:(BusinessRule*)value;
- (BusinessRules_Builder *)setBusinessRuleArray:(NSArray *)array;
- (BusinessRules_Builder *)clearBusinessRule;
@end

