// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Ms_recordedTimePeriod.pb.h"

@implementation MsRecordedTimePeriodRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [MsRecordedTimePeriodRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface RecordedTimePeriod ()
@property int64_t startTime;
@property int64_t duration;
@end

@implementation RecordedTimePeriod

- (BOOL) hasStartTime {
  return !!hasStartTime_;
}
- (void) setHasStartTime:(BOOL) value {
  hasStartTime_ = !!value;
}
@synthesize startTime;
- (BOOL) hasDuration {
  return !!hasDuration_;
}
- (void) setHasDuration:(BOOL) value {
  hasDuration_ = !!value;
}
@synthesize duration;
- (id) init {
  if ((self = [super init])) {
    self.startTime = 0L;
    self.duration = 0L;
  }
  return self;
}
static RecordedTimePeriod* defaultRecordedTimePeriodInstance = nil;
+ (void) initialize {
  if (self == [RecordedTimePeriod class]) {
    defaultRecordedTimePeriodInstance = [[RecordedTimePeriod alloc] init];
  }
}
+ (RecordedTimePeriod*) defaultInstance {
  return defaultRecordedTimePeriodInstance;
}
- (RecordedTimePeriod*) defaultInstance {
  return defaultRecordedTimePeriodInstance;
}
- (BOOL) isInitialized {
  if (!self.hasStartTime) {
    return NO;
  }
  if (!self.hasDuration) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasStartTime) {
    [output writeInt64:1 value:self.startTime];
  }
  if (self.hasDuration) {
    [output writeInt64:2 value:self.duration];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasStartTime) {
    size += computeInt64Size(1, self.startTime);
  }
  if (self.hasDuration) {
    size += computeInt64Size(2, self.duration);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RecordedTimePeriod*) parseFromData:(NSData*) data {
  return (RecordedTimePeriod*)[[[RecordedTimePeriod builder] mergeFromData:data] build];
}
+ (RecordedTimePeriod*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordedTimePeriod*)[[[RecordedTimePeriod builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordedTimePeriod*) parseFromInputStream:(NSInputStream*) input {
  return (RecordedTimePeriod*)[[[RecordedTimePeriod builder] mergeFromInputStream:input] build];
}
+ (RecordedTimePeriod*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordedTimePeriod*)[[[RecordedTimePeriod builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordedTimePeriod*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordedTimePeriod*)[[[RecordedTimePeriod builder] mergeFromCodedInputStream:input] build];
}
+ (RecordedTimePeriod*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordedTimePeriod*)[[[RecordedTimePeriod builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordedTimePeriod_Builder*) builder {
  return [[RecordedTimePeriod_Builder alloc] init];
}
+ (RecordedTimePeriod_Builder*) builderWithPrototype:(RecordedTimePeriod*) prototype {
  return [[RecordedTimePeriod builder] mergeFrom:prototype];
}
- (RecordedTimePeriod_Builder*) builder {
  return [RecordedTimePeriod builder];
}
- (RecordedTimePeriod_Builder*) toBuilder {
  return [RecordedTimePeriod builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasStartTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startTime", [NSNumber numberWithLongLong:self.startTime]];
  }
  if (self.hasDuration) {
    [output appendFormat:@"%@%@: %@\n", indent, @"duration", [NSNumber numberWithLongLong:self.duration]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RecordedTimePeriod class]]) {
    return NO;
  }
  RecordedTimePeriod *otherMessage = other;
  return
      self.hasStartTime == otherMessage.hasStartTime &&
      (!self.hasStartTime || self.startTime == otherMessage.startTime) &&
      self.hasDuration == otherMessage.hasDuration &&
      (!self.hasDuration || self.duration == otherMessage.duration) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasStartTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.startTime] hash];
  }
  if (self.hasDuration) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.duration] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RecordedTimePeriod_Builder()
@property (strong) RecordedTimePeriod* result;
@end

@implementation RecordedTimePeriod_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RecordedTimePeriod alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordedTimePeriod_Builder*) clear {
  self.result = [[RecordedTimePeriod alloc] init];
  return self;
}
- (RecordedTimePeriod_Builder*) clone {
  return [RecordedTimePeriod builderWithPrototype:result];
}
- (RecordedTimePeriod*) defaultInstance {
  return [RecordedTimePeriod defaultInstance];
}
- (RecordedTimePeriod*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordedTimePeriod*) buildPartial {
  RecordedTimePeriod* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RecordedTimePeriod_Builder*) mergeFrom:(RecordedTimePeriod*) other {
  if (other == [RecordedTimePeriod defaultInstance]) {
    return self;
  }
  if (other.hasStartTime) {
    [self setStartTime:other.startTime];
  }
  if (other.hasDuration) {
    [self setDuration:other.duration];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordedTimePeriod_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordedTimePeriod_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setStartTime:[input readInt64]];
        break;
      }
      case 16: {
        [self setDuration:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasStartTime {
  return result.hasStartTime;
}
- (int64_t) startTime {
  return result.startTime;
}
- (RecordedTimePeriod_Builder*) setStartTime:(int64_t) value {
  result.hasStartTime = YES;
  result.startTime = value;
  return self;
}
- (RecordedTimePeriod_Builder*) clearStartTime {
  result.hasStartTime = NO;
  result.startTime = 0L;
  return self;
}
- (BOOL) hasDuration {
  return result.hasDuration;
}
- (int64_t) duration {
  return result.duration;
}
- (RecordedTimePeriod_Builder*) setDuration:(int64_t) value {
  result.hasDuration = YES;
  result.duration = value;
  return self;
}
- (RecordedTimePeriod_Builder*) clearDuration {
  result.hasDuration = NO;
  result.duration = 0L;
  return self;
}
@end

@interface RecordedTimePeriods ()
@property (strong) NSMutableArray * recordedTypePeriodArray;
@end

@implementation RecordedTimePeriods

@synthesize recordedTypePeriodArray;
@dynamic recordedTypePeriod;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static RecordedTimePeriods* defaultRecordedTimePeriodsInstance = nil;
+ (void) initialize {
  if (self == [RecordedTimePeriods class]) {
    defaultRecordedTimePeriodsInstance = [[RecordedTimePeriods alloc] init];
  }
}
+ (RecordedTimePeriods*) defaultInstance {
  return defaultRecordedTimePeriodsInstance;
}
- (RecordedTimePeriods*) defaultInstance {
  return defaultRecordedTimePeriodsInstance;
}
- (NSArray *)recordedTypePeriod {
  return recordedTypePeriodArray;
}
- (RecordedTimePeriod*)recordedTypePeriodAtIndex:(NSUInteger)index {
  return [recordedTypePeriodArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (RecordedTimePeriod* element in self.recordedTypePeriod) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (RecordedTimePeriod *element in self.recordedTypePeriodArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (RecordedTimePeriod *element in self.recordedTypePeriodArray) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (RecordedTimePeriods*) parseFromData:(NSData*) data {
  return (RecordedTimePeriods*)[[[RecordedTimePeriods builder] mergeFromData:data] build];
}
+ (RecordedTimePeriods*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordedTimePeriods*)[[[RecordedTimePeriods builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecordedTimePeriods*) parseFromInputStream:(NSInputStream*) input {
  return (RecordedTimePeriods*)[[[RecordedTimePeriods builder] mergeFromInputStream:input] build];
}
+ (RecordedTimePeriods*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordedTimePeriods*)[[[RecordedTimePeriods builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordedTimePeriods*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecordedTimePeriods*)[[[RecordedTimePeriods builder] mergeFromCodedInputStream:input] build];
}
+ (RecordedTimePeriods*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecordedTimePeriods*)[[[RecordedTimePeriods builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecordedTimePeriods_Builder*) builder {
  return [[RecordedTimePeriods_Builder alloc] init];
}
+ (RecordedTimePeriods_Builder*) builderWithPrototype:(RecordedTimePeriods*) prototype {
  return [[RecordedTimePeriods builder] mergeFrom:prototype];
}
- (RecordedTimePeriods_Builder*) builder {
  return [RecordedTimePeriods builder];
}
- (RecordedTimePeriods_Builder*) toBuilder {
  return [RecordedTimePeriods builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  for (RecordedTimePeriod* element in self.recordedTypePeriodArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"recordedTypePeriod"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RecordedTimePeriods class]]) {
    return NO;
  }
  RecordedTimePeriods *otherMessage = other;
  return
      [self.recordedTypePeriodArray isEqualToArray:otherMessage.recordedTypePeriodArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  for (RecordedTimePeriod* element in self.recordedTypePeriodArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RecordedTimePeriods_Builder()
@property (strong) RecordedTimePeriods* result;
@end

@implementation RecordedTimePeriods_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[RecordedTimePeriods alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (RecordedTimePeriods_Builder*) clear {
  self.result = [[RecordedTimePeriods alloc] init];
  return self;
}
- (RecordedTimePeriods_Builder*) clone {
  return [RecordedTimePeriods builderWithPrototype:result];
}
- (RecordedTimePeriods*) defaultInstance {
  return [RecordedTimePeriods defaultInstance];
}
- (RecordedTimePeriods*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecordedTimePeriods*) buildPartial {
  RecordedTimePeriods* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (RecordedTimePeriods_Builder*) mergeFrom:(RecordedTimePeriods*) other {
  if (other == [RecordedTimePeriods defaultInstance]) {
    return self;
  }
  if (other.recordedTypePeriodArray.count > 0) {
    if (result.recordedTypePeriodArray == nil) {
      result.recordedTypePeriodArray = [[NSMutableArray alloc] initWithArray:other.recordedTypePeriodArray];
    } else {
      [result.recordedTypePeriodArray addObjectsFromArray:other.recordedTypePeriodArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecordedTimePeriods_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecordedTimePeriods_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        RecordedTimePeriod_Builder* subBuilder = [RecordedTimePeriod builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRecordedTypePeriod:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)recordedTypePeriod {
  return result.recordedTypePeriodArray;
}
- (RecordedTimePeriod*)recordedTypePeriodAtIndex:(NSUInteger)index {
  return [result recordedTypePeriodAtIndex:index];
}
- (RecordedTimePeriods_Builder *)addRecordedTypePeriod:(RecordedTimePeriod*)value {
  if (result.recordedTypePeriodArray == nil) {
    result.recordedTypePeriodArray = [[NSMutableArray alloc]init];
  }
  [result.recordedTypePeriodArray addObject:value];
  return self;
}
- (RecordedTimePeriods_Builder *)setRecordedTypePeriodArray:(NSArray *)array {
  result.recordedTypePeriodArray = [[NSMutableArray alloc]init];
  return self;
}
- (RecordedTimePeriods_Builder *)clearRecordedTypePeriod {
  result.recordedTypePeriodArray = nil;
  return self;
}
@end

