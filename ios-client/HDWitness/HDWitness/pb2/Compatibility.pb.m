// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Compatibility.pb.h"

@implementation CompatibilityRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [CompatibilityRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface CompatibilityItem ()
@property (strong) NSString* ver1;
@property (strong) NSString* comp1;
@property (strong) NSString* ver2;
@end

@implementation CompatibilityItem

- (BOOL) hasVer1 {
  return !!hasVer1_;
}
- (void) setHasVer1:(BOOL) value {
  hasVer1_ = !!value;
}
@synthesize ver1;
- (BOOL) hasComp1 {
  return !!hasComp1_;
}
- (void) setHasComp1:(BOOL) value {
  hasComp1_ = !!value;
}
@synthesize comp1;
- (BOOL) hasVer2 {
  return !!hasVer2_;
}
- (void) setHasVer2:(BOOL) value {
  hasVer2_ = !!value;
}
@synthesize ver2;
- (id) init {
  if ((self = [super init])) {
    self.ver1 = @"";
    self.comp1 = @"";
    self.ver2 = @"";
  }
  return self;
}
static CompatibilityItem* defaultCompatibilityItemInstance = nil;
+ (void) initialize {
  if (self == [CompatibilityItem class]) {
    defaultCompatibilityItemInstance = [[CompatibilityItem alloc] init];
  }
}
+ (CompatibilityItem*) defaultInstance {
  return defaultCompatibilityItemInstance;
}
- (CompatibilityItem*) defaultInstance {
  return defaultCompatibilityItemInstance;
}
- (BOOL) isInitialized {
  if (!self.hasVer1) {
    return NO;
  }
  if (!self.hasComp1) {
    return NO;
  }
  if (!self.hasVer2) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVer1) {
    [output writeString:1 value:self.ver1];
  }
  if (self.hasComp1) {
    [output writeString:2 value:self.comp1];
  }
  if (self.hasVer2) {
    [output writeString:3 value:self.ver2];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasVer1) {
    size += computeStringSize(1, self.ver1);
  }
  if (self.hasComp1) {
    size += computeStringSize(2, self.comp1);
  }
  if (self.hasVer2) {
    size += computeStringSize(3, self.ver2);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CompatibilityItem*) parseFromData:(NSData*) data {
  return (CompatibilityItem*)[[[CompatibilityItem builder] mergeFromData:data] build];
}
+ (CompatibilityItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompatibilityItem*)[[[CompatibilityItem builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CompatibilityItem*) parseFromInputStream:(NSInputStream*) input {
  return (CompatibilityItem*)[[[CompatibilityItem builder] mergeFromInputStream:input] build];
}
+ (CompatibilityItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompatibilityItem*)[[[CompatibilityItem builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompatibilityItem*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CompatibilityItem*)[[[CompatibilityItem builder] mergeFromCodedInputStream:input] build];
}
+ (CompatibilityItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompatibilityItem*)[[[CompatibilityItem builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompatibilityItem_Builder*) builder {
  return [[CompatibilityItem_Builder alloc] init];
}
+ (CompatibilityItem_Builder*) builderWithPrototype:(CompatibilityItem*) prototype {
  return [[CompatibilityItem builder] mergeFrom:prototype];
}
- (CompatibilityItem_Builder*) builder {
  return [CompatibilityItem builder];
}
- (CompatibilityItem_Builder*) toBuilder {
  return [CompatibilityItem builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  if (self.hasVer1) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ver1", self.ver1];
  }
  if (self.hasComp1) {
    [output appendFormat:@"%@%@: %@\n", indent, @"comp1", self.comp1];
  }
  if (self.hasVer2) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ver2", self.ver2];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CompatibilityItem class]]) {
    return NO;
  }
  CompatibilityItem *otherMessage = other;
  return
      self.hasVer1 == otherMessage.hasVer1 &&
      (!self.hasVer1 || [self.ver1 isEqual:otherMessage.ver1]) &&
      self.hasComp1 == otherMessage.hasComp1 &&
      (!self.hasComp1 || [self.comp1 isEqual:otherMessage.comp1]) &&
      self.hasVer2 == otherMessage.hasVer2 &&
      (!self.hasVer2 || [self.ver2 isEqual:otherMessage.ver2]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  if (self.hasVer1) {
    hashCode = hashCode * 31 + [self.ver1 hash];
  }
  if (self.hasComp1) {
    hashCode = hashCode * 31 + [self.comp1 hash];
  }
  if (self.hasVer2) {
    hashCode = hashCode * 31 + [self.ver2 hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CompatibilityItem_Builder()
@property (strong) CompatibilityItem* result;
@end

@implementation CompatibilityItem_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[CompatibilityItem alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CompatibilityItem_Builder*) clear {
  self.result = [[CompatibilityItem alloc] init];
  return self;
}
- (CompatibilityItem_Builder*) clone {
  return [CompatibilityItem builderWithPrototype:result];
}
- (CompatibilityItem*) defaultInstance {
  return [CompatibilityItem defaultInstance];
}
- (CompatibilityItem*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CompatibilityItem*) buildPartial {
  CompatibilityItem* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (CompatibilityItem_Builder*) mergeFrom:(CompatibilityItem*) other {
  if (other == [CompatibilityItem defaultInstance]) {
    return self;
  }
  if (other.hasVer1) {
    [self setVer1:other.ver1];
  }
  if (other.hasComp1) {
    [self setComp1:other.comp1];
  }
  if (other.hasVer2) {
    [self setVer2:other.ver2];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CompatibilityItem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CompatibilityItem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setVer1:[input readString]];
        break;
      }
      case 18: {
        [self setComp1:[input readString]];
        break;
      }
      case 26: {
        [self setVer2:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasVer1 {
  return result.hasVer1;
}
- (NSString*) ver1 {
  return result.ver1;
}
- (CompatibilityItem_Builder*) setVer1:(NSString*) value {
  result.hasVer1 = YES;
  result.ver1 = value;
  return self;
}
- (CompatibilityItem_Builder*) clearVer1 {
  result.hasVer1 = NO;
  result.ver1 = @"";
  return self;
}
- (BOOL) hasComp1 {
  return result.hasComp1;
}
- (NSString*) comp1 {
  return result.comp1;
}
- (CompatibilityItem_Builder*) setComp1:(NSString*) value {
  result.hasComp1 = YES;
  result.comp1 = value;
  return self;
}
- (CompatibilityItem_Builder*) clearComp1 {
  result.hasComp1 = NO;
  result.comp1 = @"";
  return self;
}
- (BOOL) hasVer2 {
  return result.hasVer2;
}
- (NSString*) ver2 {
  return result.ver2;
}
- (CompatibilityItem_Builder*) setVer2:(NSString*) value {
  result.hasVer2 = YES;
  result.ver2 = value;
  return self;
}
- (CompatibilityItem_Builder*) clearVer2 {
  result.hasVer2 = NO;
  result.ver2 = @"";
  return self;
}
@end

@interface CompatibilityItems ()
@property (strong) NSMutableArray * itemArray;
@end

@implementation CompatibilityItems

@synthesize itemArray;
@dynamic item;
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CompatibilityItems* defaultCompatibilityItemsInstance = nil;
+ (void) initialize {
  if (self == [CompatibilityItems class]) {
    defaultCompatibilityItemsInstance = [[CompatibilityItems alloc] init];
  }
}
+ (CompatibilityItems*) defaultInstance {
  return defaultCompatibilityItemsInstance;
}
- (CompatibilityItems*) defaultInstance {
  return defaultCompatibilityItemsInstance;
}
- (NSArray *)item {
  return itemArray;
}
- (CompatibilityItem*)itemAtIndex:(NSUInteger)index {
  return [itemArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (CompatibilityItem* element in self.item) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (CompatibilityItem *element in self.itemArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (CompatibilityItem *element in self.itemArray) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CompatibilityItems*) parseFromData:(NSData*) data {
  return (CompatibilityItems*)[[[CompatibilityItems builder] mergeFromData:data] build];
}
+ (CompatibilityItems*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompatibilityItems*)[[[CompatibilityItems builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CompatibilityItems*) parseFromInputStream:(NSInputStream*) input {
  return (CompatibilityItems*)[[[CompatibilityItems builder] mergeFromInputStream:input] build];
}
+ (CompatibilityItems*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompatibilityItems*)[[[CompatibilityItems builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompatibilityItems*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CompatibilityItems*)[[[CompatibilityItems builder] mergeFromCodedInputStream:input] build];
}
+ (CompatibilityItems*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CompatibilityItems*)[[[CompatibilityItems builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CompatibilityItems_Builder*) builder {
  return [[CompatibilityItems_Builder alloc] init];
}
+ (CompatibilityItems_Builder*) builderWithPrototype:(CompatibilityItems*) prototype {
  return [[CompatibilityItems builder] mergeFrom:prototype];
}
- (CompatibilityItems_Builder*) builder {
  return [CompatibilityItems builder];
}
- (CompatibilityItems_Builder*) toBuilder {
  return [CompatibilityItems builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  NSUInteger listCount = 0;
  for (CompatibilityItem* element in self.itemArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"item"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[CompatibilityItems class]]) {
    return NO;
  }
  CompatibilityItems *otherMessage = other;
  return
      [self.itemArray isEqualToArray:otherMessage.itemArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  NSUInteger listCount = 0;
  for (CompatibilityItem* element in self.itemArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface CompatibilityItems_Builder()
@property (strong) CompatibilityItems* result;
@end

@implementation CompatibilityItems_Builder
@synthesize result;
- (id) init {
  if ((self = [super init])) {
    self.result = [[CompatibilityItems alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CompatibilityItems_Builder*) clear {
  self.result = [[CompatibilityItems alloc] init];
  return self;
}
- (CompatibilityItems_Builder*) clone {
  return [CompatibilityItems builderWithPrototype:result];
}
- (CompatibilityItems*) defaultInstance {
  return [CompatibilityItems defaultInstance];
}
- (CompatibilityItems*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CompatibilityItems*) buildPartial {
  CompatibilityItems* returnMe = result;
  self.result = nil;
  return returnMe;
}
- (CompatibilityItems_Builder*) mergeFrom:(CompatibilityItems*) other {
  if (other == [CompatibilityItems defaultInstance]) {
    return self;
  }
  if (other.itemArray.count > 0) {
    if (result.itemArray == nil) {
      result.itemArray = [[NSMutableArray alloc] initWithArray:other.itemArray];
    } else {
      [result.itemArray addObjectsFromArray:other.itemArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CompatibilityItems_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CompatibilityItems_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        CompatibilityItem_Builder* subBuilder = [CompatibilityItem builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addItem:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)item {
  return result.itemArray;
}
- (CompatibilityItem*)itemAtIndex:(NSUInteger)index {
  return [result itemAtIndex:index];
}
- (CompatibilityItems_Builder *)addItem:(CompatibilityItem*)value {
  if (result.itemArray == nil) {
    result.itemArray = [[NSMutableArray alloc]init];
  }
  [result.itemArray addObject:value];
  return self;
}
- (CompatibilityItems_Builder *)setItemArray:(NSArray *)array {
  result.itemArray = [[NSMutableArray alloc]init];
  return self;
}
- (CompatibilityItems_Builder *)clearItem {
  result.itemArray = nil;
  return self;
}
@end

