// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

@class Setting;
@class Setting_Builder;
@class Settings;
@class Settings_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif


@interface SettingRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface Setting : PBGeneratedMessage {
@private
  BOOL hasName_:1;
  BOOL hasValue_:1;
  NSString* name;
  NSString* value;
}
- (BOOL) hasName;
- (BOOL) hasValue;
@property (readonly, strong) NSString* name;
@property (readonly, strong) NSString* value;

+ (Setting*) defaultInstance;
- (Setting*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Setting_Builder*) builder;
+ (Setting_Builder*) builder;
+ (Setting_Builder*) builderWithPrototype:(Setting*) prototype;
- (Setting_Builder*) toBuilder;

+ (Setting*) parseFromData:(NSData*) data;
+ (Setting*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Setting*) parseFromInputStream:(NSInputStream*) input;
+ (Setting*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Setting*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Setting*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Setting_Builder : PBGeneratedMessage_Builder {
@private
  Setting* result;
}

- (Setting*) defaultInstance;

- (Setting_Builder*) clear;
- (Setting_Builder*) clone;

- (Setting*) build;
- (Setting*) buildPartial;

- (Setting_Builder*) mergeFrom:(Setting*) other;
- (Setting_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Setting_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasName;
- (NSString*) name;
- (Setting_Builder*) setName:(NSString*) value;
- (Setting_Builder*) clearName;

- (BOOL) hasValue;
- (NSString*) value;
- (Setting_Builder*) setValue:(NSString*) value;
- (Setting_Builder*) clearValue;
@end

@interface Settings : PBGeneratedMessage {
@private
  NSMutableArray * settingArray;
}
@property (readonly, strong) NSArray * setting;
- (Setting*)settingAtIndex:(NSUInteger)index;

+ (Settings*) defaultInstance;
- (Settings*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Settings_Builder*) builder;
+ (Settings_Builder*) builder;
+ (Settings_Builder*) builderWithPrototype:(Settings*) prototype;
- (Settings_Builder*) toBuilder;

+ (Settings*) parseFromData:(NSData*) data;
+ (Settings*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Settings*) parseFromInputStream:(NSInputStream*) input;
+ (Settings*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Settings*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Settings*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Settings_Builder : PBGeneratedMessage_Builder {
@private
  Settings* result;
}

- (Settings*) defaultInstance;

- (Settings_Builder*) clear;
- (Settings_Builder*) clone;

- (Settings*) build;
- (Settings*) buildPartial;

- (Settings_Builder*) mergeFrom:(Settings*) other;
- (Settings_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Settings_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)setting;
- (Setting*)settingAtIndex:(NSUInteger)index;
- (Settings_Builder *)addSetting:(Setting*)value;
- (Settings_Builder *)setSettingArray:(NSArray *)array;
- (Settings_Builder *)clearSetting;
@end

