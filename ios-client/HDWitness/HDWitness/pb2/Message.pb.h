// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

#import "ResourceType.pb.h"
#import "Resource.pb.h"
#import "License.pb.h"
#import "CameraServerItem.pb.h"
#import "BusinessRule.pb.h"
#import "BusinessAction.pb.h"
#import "Kvpair.pb.h"

@class BroadcastBusinessActionMessage;
@class BroadcastBusinessActionMessage_Builder;
@class BusinessAction;
@class BusinessActionList;
@class BusinessActionList_Builder;
@class BusinessAction_Builder;
@class BusinessRule;
@class BusinessRuleMessage;
@class BusinessRuleMessage_Builder;
@class BusinessRuleResetMessage;
@class BusinessRuleResetMessage_Builder;
@class BusinessRule_Builder;
@class BusinessRules;
@class BusinessRules_Builder;
@class CameraServerItem;
@class CameraServerItemMessage;
@class CameraServerItemMessage_Builder;
@class CameraServerItem_Builder;
@class CameraServerItems;
@class CameraServerItems_Builder;
@class CommandMessage;
@class CommandMessage_Builder;
@class FileAddMessage;
@class FileAddMessage_Builder;
@class FileRemoveMessage;
@class FileRemoveMessage_Builder;
@class FileUpdateMessage;
@class FileUpdateMessage_Builder;
@class InitialMessage;
@class InitialMessage_Builder;
@class KvPair;
@class KvPairChangeMessage;
@class KvPairChangeMessage_Builder;
@class KvPairDeleteMessage;
@class KvPairDeleteMessage_Builder;
@class KvPair_Builder;
@class KvPairs;
@class KvPairs_Builder;
@class License;
@class LicenseMessage;
@class LicenseMessage_Builder;
@class License_Builder;
@class Licenses;
@class Licenses_Builder;
@class Message;
@class Message_Builder;
@class PropertyType;
@class PropertyType_Builder;
@class Resource;
@class ResourceMessage;
@class ResourceMessage_Builder;
@class ResourceType;
@class ResourceType_Builder;
@class ResourceTypes;
@class ResourceTypes_Builder;
@class Resource_Builder;
@class Resource_Property;
@class Resource_Property_Builder;
@class Resources;
@class Resources_Builder;
@class RuntimeInfoChangeMessage;
@class RuntimeInfoChangeMessage_Builder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef enum {
  Message_TypeInitial = 0,
  Message_TypePing = 1,
  Message_TypeResourceChange = 2,
  Message_TypeResourceDelete = 3,
  Message_TypeResourceStatusChange = 4,
  Message_TypeResourceDisabledChange = 5,
  Message_TypeLicense = 6,
  Message_TypeCameraServerItem = 7,
  Message_TypeBusinessRuleChange = 8,
  Message_TypeBusinessRuleDelete = 9,
  Message_TypeBroadcastBusinessAction = 10,
  Message_TypeFileAdd = 11,
  Message_TypeFileRemove = 12,
  Message_TypeFileUpdate = 13,
  Message_TypeRuntimeInfoChange = 14,
  Message_TypeBusinessRuleReset = 15,
  Message_TypeKvPairChange = 16,
  Message_TypeKvPairDelete = 17,
  Message_TypeCommand = 18,
} Message_Type;

BOOL Message_TypeIsValidValue(Message_Type value);

typedef enum {
  CommandMessage_CommandReboot = 0,
} CommandMessage_Command;

BOOL CommandMessage_CommandIsValidValue(CommandMessage_Command value);


@interface MessageRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface Message : PBExtendableMessage {
@private
  BOOL hasSeqNumber_:1;
  BOOL hasType_:1;
  uint32_t seqNumber;
  Message_Type type;
}
- (BOOL) hasType;
- (BOOL) hasSeqNumber;
@property (readonly) Message_Type type;
@property (readonly) uint32_t seqNumber;

+ (Message*) defaultInstance;
- (Message*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Message_Builder*) builder;
+ (Message_Builder*) builder;
+ (Message_Builder*) builderWithPrototype:(Message*) prototype;
- (Message_Builder*) toBuilder;

+ (Message*) parseFromData:(NSData*) data;
+ (Message*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Message*) parseFromInputStream:(NSInputStream*) input;
+ (Message*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Message*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Message*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Message_Builder : PBExtendableMessage_Builder {
@private
  Message* result;
}

- (Message*) defaultInstance;

- (Message_Builder*) clear;
- (Message_Builder*) clone;

- (Message*) build;
- (Message*) buildPartial;

- (Message_Builder*) mergeFrom:(Message*) other;
- (Message_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Message_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasType;
- (Message_Type) type;
- (Message_Builder*) setType:(Message_Type) value;
- (Message_Builder*) clearType;

- (BOOL) hasSeqNumber;
- (uint32_t) seqNumber;
- (Message_Builder*) setSeqNumber:(uint32_t) value;
- (Message_Builder*) clearSeqNumber;
@end

@interface ResourceMessage : PBGeneratedMessage {
@private
  BOOL hasResource_:1;
  Resource* resource;
}
- (BOOL) hasResource;
@property (readonly, strong) Resource* resource;

+ (ResourceMessage*) defaultInstance;
- (ResourceMessage*) defaultInstance;

+ (id<PBExtensionField>) message;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ResourceMessage_Builder*) builder;
+ (ResourceMessage_Builder*) builder;
+ (ResourceMessage_Builder*) builderWithPrototype:(ResourceMessage*) prototype;
- (ResourceMessage_Builder*) toBuilder;

+ (ResourceMessage*) parseFromData:(NSData*) data;
+ (ResourceMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResourceMessage*) parseFromInputStream:(NSInputStream*) input;
+ (ResourceMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ResourceMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ResourceMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ResourceMessage_Builder : PBGeneratedMessage_Builder {
@private
  ResourceMessage* result;
}

- (ResourceMessage*) defaultInstance;

- (ResourceMessage_Builder*) clear;
- (ResourceMessage_Builder*) clone;

- (ResourceMessage*) build;
- (ResourceMessage*) buildPartial;

- (ResourceMessage_Builder*) mergeFrom:(ResourceMessage*) other;
- (ResourceMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ResourceMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResource;
- (Resource*) resource;
- (ResourceMessage_Builder*) setResource:(Resource*) value;
- (ResourceMessage_Builder*) setResourceBuilder:(Resource_Builder*) builderForValue;
- (ResourceMessage_Builder*) mergeResource:(Resource*) value;
- (ResourceMessage_Builder*) clearResource;
@end

@interface LicenseMessage : PBGeneratedMessage {
@private
  BOOL hasLicense_:1;
  License* license;
}
- (BOOL) hasLicense;
@property (readonly, strong) License* license;

+ (LicenseMessage*) defaultInstance;
- (LicenseMessage*) defaultInstance;

+ (id<PBExtensionField>) message;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LicenseMessage_Builder*) builder;
+ (LicenseMessage_Builder*) builder;
+ (LicenseMessage_Builder*) builderWithPrototype:(LicenseMessage*) prototype;
- (LicenseMessage_Builder*) toBuilder;

+ (LicenseMessage*) parseFromData:(NSData*) data;
+ (LicenseMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LicenseMessage*) parseFromInputStream:(NSInputStream*) input;
+ (LicenseMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LicenseMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LicenseMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LicenseMessage_Builder : PBGeneratedMessage_Builder {
@private
  LicenseMessage* result;
}

- (LicenseMessage*) defaultInstance;

- (LicenseMessage_Builder*) clear;
- (LicenseMessage_Builder*) clone;

- (LicenseMessage*) build;
- (LicenseMessage*) buildPartial;

- (LicenseMessage_Builder*) mergeFrom:(LicenseMessage*) other;
- (LicenseMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LicenseMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLicense;
- (License*) license;
- (LicenseMessage_Builder*) setLicense:(License*) value;
- (LicenseMessage_Builder*) setLicenseBuilder:(License_Builder*) builderForValue;
- (LicenseMessage_Builder*) mergeLicense:(License*) value;
- (LicenseMessage_Builder*) clearLicense;
@end

@interface CameraServerItemMessage : PBGeneratedMessage {
@private
  BOOL hasCameraServerItem_:1;
  CameraServerItem* cameraServerItem;
}
- (BOOL) hasCameraServerItem;
@property (readonly, strong) CameraServerItem* cameraServerItem;

+ (CameraServerItemMessage*) defaultInstance;
- (CameraServerItemMessage*) defaultInstance;

+ (id<PBExtensionField>) message;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CameraServerItemMessage_Builder*) builder;
+ (CameraServerItemMessage_Builder*) builder;
+ (CameraServerItemMessage_Builder*) builderWithPrototype:(CameraServerItemMessage*) prototype;
- (CameraServerItemMessage_Builder*) toBuilder;

+ (CameraServerItemMessage*) parseFromData:(NSData*) data;
+ (CameraServerItemMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CameraServerItemMessage*) parseFromInputStream:(NSInputStream*) input;
+ (CameraServerItemMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CameraServerItemMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CameraServerItemMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CameraServerItemMessage_Builder : PBGeneratedMessage_Builder {
@private
  CameraServerItemMessage* result;
}

- (CameraServerItemMessage*) defaultInstance;

- (CameraServerItemMessage_Builder*) clear;
- (CameraServerItemMessage_Builder*) clone;

- (CameraServerItemMessage*) build;
- (CameraServerItemMessage*) buildPartial;

- (CameraServerItemMessage_Builder*) mergeFrom:(CameraServerItemMessage*) other;
- (CameraServerItemMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CameraServerItemMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCameraServerItem;
- (CameraServerItem*) cameraServerItem;
- (CameraServerItemMessage_Builder*) setCameraServerItem:(CameraServerItem*) value;
- (CameraServerItemMessage_Builder*) setCameraServerItemBuilder:(CameraServerItem_Builder*) builderForValue;
- (CameraServerItemMessage_Builder*) mergeCameraServerItem:(CameraServerItem*) value;
- (CameraServerItemMessage_Builder*) clearCameraServerItem;
@end

@interface BusinessRuleMessage : PBGeneratedMessage {
@private
  BOOL hasBusinessRule_:1;
  BusinessRule* businessRule;
}
- (BOOL) hasBusinessRule;
@property (readonly, strong) BusinessRule* businessRule;

+ (BusinessRuleMessage*) defaultInstance;
- (BusinessRuleMessage*) defaultInstance;

+ (id<PBExtensionField>) message;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BusinessRuleMessage_Builder*) builder;
+ (BusinessRuleMessage_Builder*) builder;
+ (BusinessRuleMessage_Builder*) builderWithPrototype:(BusinessRuleMessage*) prototype;
- (BusinessRuleMessage_Builder*) toBuilder;

+ (BusinessRuleMessage*) parseFromData:(NSData*) data;
+ (BusinessRuleMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BusinessRuleMessage*) parseFromInputStream:(NSInputStream*) input;
+ (BusinessRuleMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BusinessRuleMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BusinessRuleMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BusinessRuleMessage_Builder : PBGeneratedMessage_Builder {
@private
  BusinessRuleMessage* result;
}

- (BusinessRuleMessage*) defaultInstance;

- (BusinessRuleMessage_Builder*) clear;
- (BusinessRuleMessage_Builder*) clone;

- (BusinessRuleMessage*) build;
- (BusinessRuleMessage*) buildPartial;

- (BusinessRuleMessage_Builder*) mergeFrom:(BusinessRuleMessage*) other;
- (BusinessRuleMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BusinessRuleMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBusinessRule;
- (BusinessRule*) businessRule;
- (BusinessRuleMessage_Builder*) setBusinessRule:(BusinessRule*) value;
- (BusinessRuleMessage_Builder*) setBusinessRuleBuilder:(BusinessRule_Builder*) builderForValue;
- (BusinessRuleMessage_Builder*) mergeBusinessRule:(BusinessRule*) value;
- (BusinessRuleMessage_Builder*) clearBusinessRule;
@end

@interface BroadcastBusinessActionMessage : PBGeneratedMessage {
@private
  BOOL hasBusinessAction_:1;
  BusinessAction* businessAction;
}
- (BOOL) hasBusinessAction;
@property (readonly, strong) BusinessAction* businessAction;

+ (BroadcastBusinessActionMessage*) defaultInstance;
- (BroadcastBusinessActionMessage*) defaultInstance;

+ (id<PBExtensionField>) message;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BroadcastBusinessActionMessage_Builder*) builder;
+ (BroadcastBusinessActionMessage_Builder*) builder;
+ (BroadcastBusinessActionMessage_Builder*) builderWithPrototype:(BroadcastBusinessActionMessage*) prototype;
- (BroadcastBusinessActionMessage_Builder*) toBuilder;

+ (BroadcastBusinessActionMessage*) parseFromData:(NSData*) data;
+ (BroadcastBusinessActionMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BroadcastBusinessActionMessage*) parseFromInputStream:(NSInputStream*) input;
+ (BroadcastBusinessActionMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BroadcastBusinessActionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BroadcastBusinessActionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BroadcastBusinessActionMessage_Builder : PBGeneratedMessage_Builder {
@private
  BroadcastBusinessActionMessage* result;
}

- (BroadcastBusinessActionMessage*) defaultInstance;

- (BroadcastBusinessActionMessage_Builder*) clear;
- (BroadcastBusinessActionMessage_Builder*) clone;

- (BroadcastBusinessActionMessage*) build;
- (BroadcastBusinessActionMessage*) buildPartial;

- (BroadcastBusinessActionMessage_Builder*) mergeFrom:(BroadcastBusinessActionMessage*) other;
- (BroadcastBusinessActionMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BroadcastBusinessActionMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBusinessAction;
- (BusinessAction*) businessAction;
- (BroadcastBusinessActionMessage_Builder*) setBusinessAction:(BusinessAction*) value;
- (BroadcastBusinessActionMessage_Builder*) setBusinessActionBuilder:(BusinessAction_Builder*) builderForValue;
- (BroadcastBusinessActionMessage_Builder*) mergeBusinessAction:(BusinessAction*) value;
- (BroadcastBusinessActionMessage_Builder*) clearBusinessAction;
@end

@interface InitialMessage : PBGeneratedMessage {
@private
  BOOL hasAllowCameraChangesDeprecated_:1;
  BOOL hasHardwareId1_:1;
  BOOL hasOldHardwareId_:1;
  BOOL hasHardwareId2_:1;
  BOOL hasPublicIp_:1;
  BOOL hasSystemName_:1;
  BOOL hasHardwareId3_:1;
  BOOL hasSessionKey_:1;
  BOOL allowCameraChangesDeprecated_:1;
  NSString* hardwareId1;
  NSString* oldHardwareId;
  NSString* hardwareId2;
  NSString* publicIp;
  NSString* systemName;
  NSString* hardwareId3;
  NSString* sessionKey;
  NSMutableArray * resourceTypeArray;
  NSMutableArray * resourceArray;
  NSMutableArray * licenseArray;
  NSMutableArray * cameraServerItemArray;
  NSMutableArray * kvPairArray;
}
- (BOOL) hasHardwareId1;
- (BOOL) hasOldHardwareId;
- (BOOL) hasHardwareId2;
- (BOOL) hasPublicIp;
- (BOOL) hasSystemName;
- (BOOL) hasHardwareId3;
- (BOOL) hasSessionKey;
- (BOOL) hasAllowCameraChangesDeprecated;
@property (readonly, strong) NSArray * resourceType;
@property (readonly, strong) NSArray * resource;
@property (readonly, strong) NSArray * license;
@property (readonly, strong) NSArray * cameraServerItem;
@property (readonly, strong) NSString* hardwareId1;
@property (readonly, strong) NSString* oldHardwareId;
@property (readonly, strong) NSString* hardwareId2;
@property (readonly, strong) NSString* publicIp;
@property (readonly, strong) NSString* systemName;
@property (readonly, strong) NSString* hardwareId3;
@property (readonly, strong) NSString* sessionKey;
- (BOOL) allowCameraChangesDeprecated;
@property (readonly, strong) NSArray * kvPair;
- (ResourceType*)resourceTypeAtIndex:(NSUInteger)index;
- (Resource*)resourceAtIndex:(NSUInteger)index;
- (License*)licenseAtIndex:(NSUInteger)index;
- (CameraServerItem*)cameraServerItemAtIndex:(NSUInteger)index;
- (KvPair*)kvPairAtIndex:(NSUInteger)index;

+ (InitialMessage*) defaultInstance;
- (InitialMessage*) defaultInstance;

+ (id<PBExtensionField>) message;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (InitialMessage_Builder*) builder;
+ (InitialMessage_Builder*) builder;
+ (InitialMessage_Builder*) builderWithPrototype:(InitialMessage*) prototype;
- (InitialMessage_Builder*) toBuilder;

+ (InitialMessage*) parseFromData:(NSData*) data;
+ (InitialMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (InitialMessage*) parseFromInputStream:(NSInputStream*) input;
+ (InitialMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (InitialMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (InitialMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface InitialMessage_Builder : PBGeneratedMessage_Builder {
@private
  InitialMessage* result;
}

- (InitialMessage*) defaultInstance;

- (InitialMessage_Builder*) clear;
- (InitialMessage_Builder*) clone;

- (InitialMessage*) build;
- (InitialMessage*) buildPartial;

- (InitialMessage_Builder*) mergeFrom:(InitialMessage*) other;
- (InitialMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (InitialMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)resourceType;
- (ResourceType*)resourceTypeAtIndex:(NSUInteger)index;
- (InitialMessage_Builder *)addResourceType:(ResourceType*)value;
- (InitialMessage_Builder *)setResourceTypeArray:(NSArray *)array;
- (InitialMessage_Builder *)clearResourceType;

- (NSMutableArray *)resource;
- (Resource*)resourceAtIndex:(NSUInteger)index;
- (InitialMessage_Builder *)addResource:(Resource*)value;
- (InitialMessage_Builder *)setResourceArray:(NSArray *)array;
- (InitialMessage_Builder *)clearResource;

- (NSMutableArray *)license;
- (License*)licenseAtIndex:(NSUInteger)index;
- (InitialMessage_Builder *)addLicense:(License*)value;
- (InitialMessage_Builder *)setLicenseArray:(NSArray *)array;
- (InitialMessage_Builder *)clearLicense;

- (NSMutableArray *)cameraServerItem;
- (CameraServerItem*)cameraServerItemAtIndex:(NSUInteger)index;
- (InitialMessage_Builder *)addCameraServerItem:(CameraServerItem*)value;
- (InitialMessage_Builder *)setCameraServerItemArray:(NSArray *)array;
- (InitialMessage_Builder *)clearCameraServerItem;

- (BOOL) hasHardwareId1;
- (NSString*) hardwareId1;
- (InitialMessage_Builder*) setHardwareId1:(NSString*) value;
- (InitialMessage_Builder*) clearHardwareId1;

- (BOOL) hasOldHardwareId;
- (NSString*) oldHardwareId;
- (InitialMessage_Builder*) setOldHardwareId:(NSString*) value;
- (InitialMessage_Builder*) clearOldHardwareId;

- (BOOL) hasHardwareId2;
- (NSString*) hardwareId2;
- (InitialMessage_Builder*) setHardwareId2:(NSString*) value;
- (InitialMessage_Builder*) clearHardwareId2;

- (BOOL) hasPublicIp;
- (NSString*) publicIp;
- (InitialMessage_Builder*) setPublicIp:(NSString*) value;
- (InitialMessage_Builder*) clearPublicIp;

- (BOOL) hasSystemName;
- (NSString*) systemName;
- (InitialMessage_Builder*) setSystemName:(NSString*) value;
- (InitialMessage_Builder*) clearSystemName;

- (BOOL) hasHardwareId3;
- (NSString*) hardwareId3;
- (InitialMessage_Builder*) setHardwareId3:(NSString*) value;
- (InitialMessage_Builder*) clearHardwareId3;

- (BOOL) hasSessionKey;
- (NSString*) sessionKey;
- (InitialMessage_Builder*) setSessionKey:(NSString*) value;
- (InitialMessage_Builder*) clearSessionKey;

- (BOOL) hasAllowCameraChangesDeprecated;
- (BOOL) allowCameraChangesDeprecated;
- (InitialMessage_Builder*) setAllowCameraChangesDeprecated:(BOOL) value;
- (InitialMessage_Builder*) clearAllowCameraChangesDeprecated;

- (NSMutableArray *)kvPair;
- (KvPair*)kvPairAtIndex:(NSUInteger)index;
- (InitialMessage_Builder *)addKvPair:(KvPair*)value;
- (InitialMessage_Builder *)setKvPairArray:(NSArray *)array;
- (InitialMessage_Builder *)clearKvPair;
@end

@interface FileAddMessage : PBGeneratedMessage {
@private
  BOOL hasPath_:1;
  NSString* path;
}
- (BOOL) hasPath;
@property (readonly, strong) NSString* path;

+ (FileAddMessage*) defaultInstance;
- (FileAddMessage*) defaultInstance;

+ (id<PBExtensionField>) message;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileAddMessage_Builder*) builder;
+ (FileAddMessage_Builder*) builder;
+ (FileAddMessage_Builder*) builderWithPrototype:(FileAddMessage*) prototype;
- (FileAddMessage_Builder*) toBuilder;

+ (FileAddMessage*) parseFromData:(NSData*) data;
+ (FileAddMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileAddMessage*) parseFromInputStream:(NSInputStream*) input;
+ (FileAddMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileAddMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileAddMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileAddMessage_Builder : PBGeneratedMessage_Builder {
@private
  FileAddMessage* result;
}

- (FileAddMessage*) defaultInstance;

- (FileAddMessage_Builder*) clear;
- (FileAddMessage_Builder*) clone;

- (FileAddMessage*) build;
- (FileAddMessage*) buildPartial;

- (FileAddMessage_Builder*) mergeFrom:(FileAddMessage*) other;
- (FileAddMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileAddMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPath;
- (NSString*) path;
- (FileAddMessage_Builder*) setPath:(NSString*) value;
- (FileAddMessage_Builder*) clearPath;
@end

@interface FileRemoveMessage : PBGeneratedMessage {
@private
  BOOL hasPath_:1;
  NSString* path;
}
- (BOOL) hasPath;
@property (readonly, strong) NSString* path;

+ (FileRemoveMessage*) defaultInstance;
- (FileRemoveMessage*) defaultInstance;

+ (id<PBExtensionField>) message;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileRemoveMessage_Builder*) builder;
+ (FileRemoveMessage_Builder*) builder;
+ (FileRemoveMessage_Builder*) builderWithPrototype:(FileRemoveMessage*) prototype;
- (FileRemoveMessage_Builder*) toBuilder;

+ (FileRemoveMessage*) parseFromData:(NSData*) data;
+ (FileRemoveMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileRemoveMessage*) parseFromInputStream:(NSInputStream*) input;
+ (FileRemoveMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileRemoveMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileRemoveMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileRemoveMessage_Builder : PBGeneratedMessage_Builder {
@private
  FileRemoveMessage* result;
}

- (FileRemoveMessage*) defaultInstance;

- (FileRemoveMessage_Builder*) clear;
- (FileRemoveMessage_Builder*) clone;

- (FileRemoveMessage*) build;
- (FileRemoveMessage*) buildPartial;

- (FileRemoveMessage_Builder*) mergeFrom:(FileRemoveMessage*) other;
- (FileRemoveMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileRemoveMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPath;
- (NSString*) path;
- (FileRemoveMessage_Builder*) setPath:(NSString*) value;
- (FileRemoveMessage_Builder*) clearPath;
@end

@interface FileUpdateMessage : PBGeneratedMessage {
@private
  BOOL hasPath_:1;
  NSString* path;
}
- (BOOL) hasPath;
@property (readonly, strong) NSString* path;

+ (FileUpdateMessage*) defaultInstance;
- (FileUpdateMessage*) defaultInstance;

+ (id<PBExtensionField>) message;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (FileUpdateMessage_Builder*) builder;
+ (FileUpdateMessage_Builder*) builder;
+ (FileUpdateMessage_Builder*) builderWithPrototype:(FileUpdateMessage*) prototype;
- (FileUpdateMessage_Builder*) toBuilder;

+ (FileUpdateMessage*) parseFromData:(NSData*) data;
+ (FileUpdateMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileUpdateMessage*) parseFromInputStream:(NSInputStream*) input;
+ (FileUpdateMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (FileUpdateMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (FileUpdateMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface FileUpdateMessage_Builder : PBGeneratedMessage_Builder {
@private
  FileUpdateMessage* result;
}

- (FileUpdateMessage*) defaultInstance;

- (FileUpdateMessage_Builder*) clear;
- (FileUpdateMessage_Builder*) clone;

- (FileUpdateMessage*) build;
- (FileUpdateMessage*) buildPartial;

- (FileUpdateMessage_Builder*) mergeFrom:(FileUpdateMessage*) other;
- (FileUpdateMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (FileUpdateMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPath;
- (NSString*) path;
- (FileUpdateMessage_Builder*) setPath:(NSString*) value;
- (FileUpdateMessage_Builder*) clearPath;
@end

@interface RuntimeInfoChangeMessage : PBGeneratedMessage {
@private
  BOOL hasAllowCameraChangesDeprecated_:1;
  BOOL hasPublicIp_:1;
  BOOL hasSystemName_:1;
  BOOL hasSessionKey_:1;
  BOOL allowCameraChangesDeprecated_:1;
  NSString* publicIp;
  NSString* systemName;
  NSString* sessionKey;
}
- (BOOL) hasPublicIp;
- (BOOL) hasSystemName;
- (BOOL) hasSessionKey;
- (BOOL) hasAllowCameraChangesDeprecated;
@property (readonly, strong) NSString* publicIp;
@property (readonly, strong) NSString* systemName;
@property (readonly, strong) NSString* sessionKey;
- (BOOL) allowCameraChangesDeprecated;

+ (RuntimeInfoChangeMessage*) defaultInstance;
- (RuntimeInfoChangeMessage*) defaultInstance;

+ (id<PBExtensionField>) message;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (RuntimeInfoChangeMessage_Builder*) builder;
+ (RuntimeInfoChangeMessage_Builder*) builder;
+ (RuntimeInfoChangeMessage_Builder*) builderWithPrototype:(RuntimeInfoChangeMessage*) prototype;
- (RuntimeInfoChangeMessage_Builder*) toBuilder;

+ (RuntimeInfoChangeMessage*) parseFromData:(NSData*) data;
+ (RuntimeInfoChangeMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RuntimeInfoChangeMessage*) parseFromInputStream:(NSInputStream*) input;
+ (RuntimeInfoChangeMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (RuntimeInfoChangeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (RuntimeInfoChangeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface RuntimeInfoChangeMessage_Builder : PBGeneratedMessage_Builder {
@private
  RuntimeInfoChangeMessage* result;
}

- (RuntimeInfoChangeMessage*) defaultInstance;

- (RuntimeInfoChangeMessage_Builder*) clear;
- (RuntimeInfoChangeMessage_Builder*) clone;

- (RuntimeInfoChangeMessage*) build;
- (RuntimeInfoChangeMessage*) buildPartial;

- (RuntimeInfoChangeMessage_Builder*) mergeFrom:(RuntimeInfoChangeMessage*) other;
- (RuntimeInfoChangeMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (RuntimeInfoChangeMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPublicIp;
- (NSString*) publicIp;
- (RuntimeInfoChangeMessage_Builder*) setPublicIp:(NSString*) value;
- (RuntimeInfoChangeMessage_Builder*) clearPublicIp;

- (BOOL) hasSystemName;
- (NSString*) systemName;
- (RuntimeInfoChangeMessage_Builder*) setSystemName:(NSString*) value;
- (RuntimeInfoChangeMessage_Builder*) clearSystemName;

- (BOOL) hasSessionKey;
- (NSString*) sessionKey;
- (RuntimeInfoChangeMessage_Builder*) setSessionKey:(NSString*) value;
- (RuntimeInfoChangeMessage_Builder*) clearSessionKey;

- (BOOL) hasAllowCameraChangesDeprecated;
- (BOOL) allowCameraChangesDeprecated;
- (RuntimeInfoChangeMessage_Builder*) setAllowCameraChangesDeprecated:(BOOL) value;
- (RuntimeInfoChangeMessage_Builder*) clearAllowCameraChangesDeprecated;
@end

@interface BusinessRuleResetMessage : PBGeneratedMessage {
@private
  NSMutableArray * businessRuleArray;
}
@property (readonly, strong) NSArray * businessRule;
- (BusinessRule*)businessRuleAtIndex:(NSUInteger)index;

+ (BusinessRuleResetMessage*) defaultInstance;
- (BusinessRuleResetMessage*) defaultInstance;

+ (id<PBExtensionField>) message;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BusinessRuleResetMessage_Builder*) builder;
+ (BusinessRuleResetMessage_Builder*) builder;
+ (BusinessRuleResetMessage_Builder*) builderWithPrototype:(BusinessRuleResetMessage*) prototype;
- (BusinessRuleResetMessage_Builder*) toBuilder;

+ (BusinessRuleResetMessage*) parseFromData:(NSData*) data;
+ (BusinessRuleResetMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BusinessRuleResetMessage*) parseFromInputStream:(NSInputStream*) input;
+ (BusinessRuleResetMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BusinessRuleResetMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BusinessRuleResetMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BusinessRuleResetMessage_Builder : PBGeneratedMessage_Builder {
@private
  BusinessRuleResetMessage* result;
}

- (BusinessRuleResetMessage*) defaultInstance;

- (BusinessRuleResetMessage_Builder*) clear;
- (BusinessRuleResetMessage_Builder*) clone;

- (BusinessRuleResetMessage*) build;
- (BusinessRuleResetMessage*) buildPartial;

- (BusinessRuleResetMessage_Builder*) mergeFrom:(BusinessRuleResetMessage*) other;
- (BusinessRuleResetMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BusinessRuleResetMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)businessRule;
- (BusinessRule*)businessRuleAtIndex:(NSUInteger)index;
- (BusinessRuleResetMessage_Builder *)addBusinessRule:(BusinessRule*)value;
- (BusinessRuleResetMessage_Builder *)setBusinessRuleArray:(NSArray *)array;
- (BusinessRuleResetMessage_Builder *)clearBusinessRule;
@end

@interface KvPairChangeMessage : PBGeneratedMessage {
@private
  NSMutableArray * kvPairArray;
}
@property (readonly, strong) NSArray * kvPair;
- (KvPair*)kvPairAtIndex:(NSUInteger)index;

+ (KvPairChangeMessage*) defaultInstance;
- (KvPairChangeMessage*) defaultInstance;

+ (id<PBExtensionField>) message;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KvPairChangeMessage_Builder*) builder;
+ (KvPairChangeMessage_Builder*) builder;
+ (KvPairChangeMessage_Builder*) builderWithPrototype:(KvPairChangeMessage*) prototype;
- (KvPairChangeMessage_Builder*) toBuilder;

+ (KvPairChangeMessage*) parseFromData:(NSData*) data;
+ (KvPairChangeMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KvPairChangeMessage*) parseFromInputStream:(NSInputStream*) input;
+ (KvPairChangeMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KvPairChangeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KvPairChangeMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KvPairChangeMessage_Builder : PBGeneratedMessage_Builder {
@private
  KvPairChangeMessage* result;
}

- (KvPairChangeMessage*) defaultInstance;

- (KvPairChangeMessage_Builder*) clear;
- (KvPairChangeMessage_Builder*) clone;

- (KvPairChangeMessage*) build;
- (KvPairChangeMessage*) buildPartial;

- (KvPairChangeMessage_Builder*) mergeFrom:(KvPairChangeMessage*) other;
- (KvPairChangeMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KvPairChangeMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)kvPair;
- (KvPair*)kvPairAtIndex:(NSUInteger)index;
- (KvPairChangeMessage_Builder *)addKvPair:(KvPair*)value;
- (KvPairChangeMessage_Builder *)setKvPairArray:(NSArray *)array;
- (KvPairChangeMessage_Builder *)clearKvPair;
@end

@interface KvPairDeleteMessage : PBGeneratedMessage {
@private
  NSMutableArray * kvPairArray;
}
@property (readonly, strong) NSArray * kvPair;
- (KvPair*)kvPairAtIndex:(NSUInteger)index;

+ (KvPairDeleteMessage*) defaultInstance;
- (KvPairDeleteMessage*) defaultInstance;

+ (id<PBExtensionField>) message;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (KvPairDeleteMessage_Builder*) builder;
+ (KvPairDeleteMessage_Builder*) builder;
+ (KvPairDeleteMessage_Builder*) builderWithPrototype:(KvPairDeleteMessage*) prototype;
- (KvPairDeleteMessage_Builder*) toBuilder;

+ (KvPairDeleteMessage*) parseFromData:(NSData*) data;
+ (KvPairDeleteMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KvPairDeleteMessage*) parseFromInputStream:(NSInputStream*) input;
+ (KvPairDeleteMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (KvPairDeleteMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (KvPairDeleteMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface KvPairDeleteMessage_Builder : PBGeneratedMessage_Builder {
@private
  KvPairDeleteMessage* result;
}

- (KvPairDeleteMessage*) defaultInstance;

- (KvPairDeleteMessage_Builder*) clear;
- (KvPairDeleteMessage_Builder*) clone;

- (KvPairDeleteMessage*) build;
- (KvPairDeleteMessage*) buildPartial;

- (KvPairDeleteMessage_Builder*) mergeFrom:(KvPairDeleteMessage*) other;
- (KvPairDeleteMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (KvPairDeleteMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)kvPair;
- (KvPair*)kvPairAtIndex:(NSUInteger)index;
- (KvPairDeleteMessage_Builder *)addKvPair:(KvPair*)value;
- (KvPairDeleteMessage_Builder *)setKvPairArray:(NSArray *)array;
- (KvPairDeleteMessage_Builder *)clearKvPair;
@end

@interface CommandMessage : PBGeneratedMessage {
@private
  BOOL hasCommand_:1;
  CommandMessage_Command command;
}
- (BOOL) hasCommand;
@property (readonly) CommandMessage_Command command;

+ (CommandMessage*) defaultInstance;
- (CommandMessage*) defaultInstance;

+ (id<PBExtensionField>) message;
- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (CommandMessage_Builder*) builder;
+ (CommandMessage_Builder*) builder;
+ (CommandMessage_Builder*) builderWithPrototype:(CommandMessage*) prototype;
- (CommandMessage_Builder*) toBuilder;

+ (CommandMessage*) parseFromData:(NSData*) data;
+ (CommandMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CommandMessage*) parseFromInputStream:(NSInputStream*) input;
+ (CommandMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (CommandMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (CommandMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface CommandMessage_Builder : PBGeneratedMessage_Builder {
@private
  CommandMessage* result;
}

- (CommandMessage*) defaultInstance;

- (CommandMessage_Builder*) clear;
- (CommandMessage_Builder*) clone;

- (CommandMessage*) build;
- (CommandMessage*) buildPartial;

- (CommandMessage_Builder*) mergeFrom:(CommandMessage*) other;
- (CommandMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (CommandMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCommand;
- (CommandMessage_Command) command;
- (CommandMessage_Builder*) setCommand:(CommandMessage_Command) value;
- (CommandMessage_Builder*) clearCommand;
@end

