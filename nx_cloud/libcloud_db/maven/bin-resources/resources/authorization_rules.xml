<?xml version="1.0" encoding="utf-8"?>

<sequence>
    <set resName="secureSource" resValue="false"/>

    <condition resName="socket.intf.ip">
        <set value="127.0.0.1" resName="secureSource" resValue="true"/>
    </condition>

    <condition resName="operation">

        <sequence value="authentication">
            <!-- TODO cloud modules authentication rules should be added here -->
            <!-- TODO this section should be suitable for authentication by ip address and for password check -->
            <set resName="authenticated" resValue="false"/>
        
            <condition resName="user.name">
                <set value="connection_mediator" resName="user.password" resValue="123456"/>
                <!-- <sequence value="connection_mediator">
                    <set resName="user.realm" resValue="dwspectrum"/>
                    <set resName="user.ha1" resValue="111111111111111"/>
                </sequence> -->
            </condition>

            <condition resName="request.path">
                <set value="/account/reset_password" resName="authenticated" resValue="true"/>
            </condition>
        </sequence>

        <sequence value="authorization">
            <set resName="authorized" resValue="true"/>

            <condition resName="account.status">
                <sequence value="1">
                    <!-- account not activated -->
                    <set resName="authorized" resValue="false"/>
                    <condition resName="request.path">
                        <set value="/account/activate" resName="authorized" resValue="true"/>
                        <set value="/account/get" resName="authorized" resValue="true"/>
                    </condition>
                </sequence>
            </condition>

            <condition resName="authorized">
                <!-- following section forbids authorization on some conditions -->
                <condition value="true" resName="request.path">
                    <sequence value="/account/register">
                        <!--
                        This request must be allowed for cloud portal only
                        <set resName="authorized" resValue="false"/>
                        -->
                    </sequence>
                    <sequence value="/account/activate">
                        <!--
                        This request must be allowed for cloud portal only
                        <set resName="authorized" resValue="false"/>
                        -->
                    </sequence>
                    <sequence value="/system/share">
                        <set resName="authorized" resValue="false"/>
                        <condition resName="auth.accountRightsOnSystem">
                            <set value="owner" resName="authorized" resValue="true"/>
                            <set value="editorWithSharing" resName="authorized" resValue="true"/>
                            <condition value="maintenance" resName="systemAccessRole">
                                <!-- integrator can share system being monitored to other integrator account -->
                                <set value="maintenance" resName="authorized" resValue="true"/>
                            </condition>
                        </condition>
                    </sequence>
                    <condition value="/system/get_cloud_users" resName="systemID" matchType="presence">
                        <sequence value="true">
                            <set resName="authorized" resValue="false"/>
                            <condition resName="auth.accountRightsOnSystem">
                                <set value="owner" resName="authorized" resValue="true"/>
                                <set value="editorWithSharing" resName="authorized" resValue="true"/>
                                <!-- TODO should maintenance be able to view all sharings? or, maybe, just other maintenance? -->
                                <set value="maintenance" resName="authorized" resValue="true"/>
                            </condition>
                        </sequence>
                        <!-- request is allowed for account only -->
                    </condition>
                    <sequence value="/system/update_sharing">
                        <set resName="authorized" resValue="false"/>
                        <condition resName="auth.accountRightsOnSystem">
                            <set value="owner" resName="authorized" resValue="true"/>
                            <set value="editorWithSharing" resName="authorized" resValue="true"/>
                            <condition value="maintenance" resName="systemAccessRole">
                                <!-- integrator can share system being monitored to other integrator account -->
                                <set value="maintenance" resName="authorized" resValue="true"/>
                            </condition>
                        </condition>
                        <condition resName="data.accountRightsOnSystem">
                            <!-- maintenance sharing can be self-removed or removed by another maintenance -->
                            <sequence value="maintenance">
                                <set resName="authorized" resValue="false"/>
                                <condition resName="auth.accountRightsOnSystem">
                                    <condition value="maintenance" resName="systemAccessRole">
                                        <set value="none" resName="authorized" resValue="true"/>
                                    </condition>
                                </condition>
                            </sequence>
                        </condition>
                        <condition resName="auth.selfAccountAccessRequested">
                            <sequence value="true">
                                <condition resName="systemAccessRole">
                                    <sequence value="none">  <!-- sharing removal... -->
                                        <!-- any account can remove non-owner sharing to itself -->
                                        <set resName="authorized" resValue="true"/>
                                        <condition resName="auth.accountRightsOnSystem">
                                            <!-- cannot remove owner sharing -->
                                            <set value="owner" resName="authorized" resValue="false"/>
                                        </condition>
                                    </sequence>
                                </condition>
                            </sequence>
                        </condition>
                        <condition resName="data.accountRightsOnSystem">
                            <!-- owner sharing cannot be modified by anyone -->
                            <set value="owner" resName="authorized" resValue="false"/>
                        </condition>
                        <condition resName="systemAccessRole">
                            <!-- "owner" role cannot be assigned to anyone -->
                            <set value="owner" resName="authorized" resValue="false"/>
                        </condition>
                    </sequence>
                    <sequence value="/system/bind">
                        <!-- check system is already bound -->
                        <set resName="authorized" resValue="false"/>
                        <condition resName="auth.accountEmail" matchType="presence">
                            <set value="true" resName="authorized" resValue="true"/>
                        </condition>
                    </sequence>
                    <sequence value="/system/unbind">
                        <set resName="authorized" resValue="false"/>
                        <condition resName="auth.accountRightsOnSystem">
                            <set value="owner" resName="authorized" resValue="true"/>
                        </condition>
                    </sequence>
                    <sequence value="/auth/get_authentication">
                        <set resName="authorized" resValue="false"/>
                        <condition resName="auth.systemID" matchType="presence">
                            <set value="true" resName="authorized" resValue="true"/>
                        </condition>
                    </sequence>
                    <sequence value="/auth/get_nonce">
                        <set resName="authorized" resValue="false"/>
                        <condition resName="auth.systemID" matchType="presence">
                            <set value="true" resName="authorized" resValue="true"/>
                        </condition>
                    </sequence>
                </condition>
            </condition>
        </sequence>
    </condition>
</sequence>
