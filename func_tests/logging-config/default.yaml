# Default logging configuration.

version: 1
disable_existing_loggers: false
formatters:
  default:
    format: '%(asctime)-15s %(levelname)7s %(threadName)-11s %(message)s'
handlers:
  stderr:
    class: logging.StreamHandler
    level: DEBUG
    formatter: default
    stream: ext://sys.stderr

loggers:
  urllib3.connectionpool: {level: INFO}
  SMB.SMBConnection: {level: WARNING}
  paramiko.transport: {level: INFO}
  paramiko.transport.sftp: {level: WARNING}
  parse: {level: INFO}
  fixtures.mediaservers: {level: INFO}
  framework.context_logger: {level: WARNING}
  framework.ca: {level: INFO}
  framework.lock: {level: WARNING}
  framework.registry: {level: INFO}
  framework.data_differ: {level: INFO}
  framework.vms.vm_type: {level: INFO}
  framework.vms.vm_type.wait: {level: WARNING}
  framework.vms.vm_type.ssh: {level: WARNING}
  framework.vms.vm_type.winrm: {level: WARNING}
  framework.vms.vm_type.networking.ssh: {level: WARNING}
  framework.vms.vm_type.networking.winrm: {level: WARNING}
  framework.vms.hypervisor.virtual_box: {level: INFO}
  framework.vms.hypervisor.virtual_box.manage: {level: WARNING}
  framework.os_access.windows_remoting.wmi: {level: INFO}
  framework.os_access.traffic_capture: {level: INFO}
  framework.mediaserver_api.setup: {level: INFO}
  framework.mediaserver_api.setup.wait: {level: WARNING}
  framework.mediaserver_api.merge: {level: INFO}
  framework.message_bus: {level: INFO}
  framework.message_bus.thread: {level: WARNING}
  framework.mediaserver_sync_wait.sync.mediaserver_api: {level: INFO}
  framework.mediaserver_sync_wait.wait: {level: WARNING}
  framework.installation.installer: {level: INFO}
  framework.installation.deb_installation: {level: INFO}
  framework.installation.mediaserver.examination: {level: INFO}
  framework.installation.mediaserver.wait: {level: INFO}
  framework.installation.mediaserver.http: {level: INFO}
  framework.installation.mediaserver.mediaserver_api: {level: INFO}
  framework.installation.lightweight_mediaserver.wait: {level: INFO}
  framework.installation.lightweight_mediaserver.http: {level: INFO}
  framework.installation.lightweight_mediaserver.mediaserver_api: {level: INFO}

  resource_synchronization_test.dumper.mediaserver_api: {level: INFO}
  scalability_test.create_test_data: {level: INFO}
  scalability_test.merge: {level: INFO}
  scalability_test.stamp: {level: INFO}
  scalability_test.dumper: {level: INFO}
  scalability_test.post_check: {level: INFO}

root:
  handlers: [stderr]
