@startuml

abstract Installation {
    + {abstract} identity
    + {abstract} is_valid
    + {abstract} service
    # _restore_conf()
    + {abstract} install(installer)
    + {abstract} list_log_files()
    + {abstract} list_core_dumps()
    + {abstract} parse_core_dump(dump)
    + cleanup(new_key_pair)
    + cleanup_core_dumps()
}

Installation <|---- WindowsInstallation
class WindowsInstallation {
    + identity
    + is_valid
    + service
    + install(installer)
    # _upload_installer(installer)
    # _backup_configuration()
    # _restore_conf()
}

Installation <|-- DebInstallation
abstract DebInstallation {
    + paths_to_validate
    + is_valid
    + parse_core_dump
    # _restore_conf
    + update_mediaserver_conf(new_configuration)
    + identity
    # _discover_identity()
    + should_reinstall(installer)
}

DebInstallation <|--- DpkgInstallation
class DpkgInstallation {
    + service
    + install(installer, force=False)
}

DebInstallation <|-- CustomPosixInstallation
abstract CustomPosixInstallation {
    + service
}

CustomPosixInstallation <|-- CopyInstallation
class CopyInstallation {
    + install(installer, force=False)
    + ensure_server_is_stopped()
    + _write_control_script()
    + _write_server_info()
    + list_log_files()
}

CustomPosixInstallation <|-- LwsInstallation
class LwsInstallation {
    + {static} create(posix_access, dir, installation_group, server_port_base)
    + server_count
    + paths_to_validate
    + install(installer, lightweight_mediaserver_installer, force=False)
    + ensure_server_is_stopped()
    + write_control_script()
    + _write_server_info()
    + list_log_files()
    + cleanup()
}

@enduml
