/* soapMediaBindingProxy.cpp
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapMediaBindingProxy.h"

MediaBindingProxy::MediaBindingProxy()
{
    this->soap = soap_new();
    this->soap_own = true;
    MediaBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

MediaBindingProxy::MediaBindingProxy(const MediaBindingProxy& rhs)
{
    this->soap = rhs.soap;
    this->soap_own = false;
    this->soap_endpoint = rhs.soap_endpoint;
}

MediaBindingProxy::MediaBindingProxy(struct soap *_soap)
{
    this->soap = _soap;
    this->soap_own = false;
    MediaBindingProxy_init(_soap->imode, _soap->omode);
}

MediaBindingProxy::MediaBindingProxy(const char *endpoint)
{
    this->soap = soap_new();
    this->soap_own = true;
    MediaBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
    soap_endpoint = endpoint;
}

MediaBindingProxy::MediaBindingProxy(soap_mode iomode)
{
    this->soap = soap_new();
    this->soap_own = true;
    MediaBindingProxy_init(iomode, iomode);
}

MediaBindingProxy::MediaBindingProxy(const char *endpoint, soap_mode iomode)
{
    this->soap = soap_new();
    this->soap_own = true;
    MediaBindingProxy_init(iomode, iomode);
    soap_endpoint = endpoint;
}

MediaBindingProxy::MediaBindingProxy(soap_mode imode, soap_mode omode)
{
    this->soap = soap_new();
    this->soap_own = true;
    MediaBindingProxy_init(imode, omode);
}

MediaBindingProxy::~MediaBindingProxy()
{
    if (this->soap_own)
        soap_free(this->soap);
}

void MediaBindingProxy::MediaBindingProxy_init(soap_mode imode, soap_mode omode)
{
    soap_imode(this->soap, imode);
    soap_omode(this->soap, omode);
    soap_endpoint = NULL;

    // Optimized namespace list for Media web service.
    static const struct Namespace namespaces[] = {
        // SOAP envelope and SOAP encoding.
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},

        // XML schema instance and XML schema definition.
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},

        // XML MIME definition and XML-binary Optimized Packaging.
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},

        // Web service security and web service security utility (used in SOAP headers).
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},

        // ONVIF schema.
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        // ONVIF Media.
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},

        {NULL, NULL, NULL, NULL}
    };

#if 0
    // Raw namespace list for Media web service.
    static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"onvifPacs", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"onvifAccessControl", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"onvifAccessRules", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"onvifActionEngine", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"onvifAdvancedSecurity-assb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
        {"onvifAdvancedSecurity-db", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
        {"onvifAdvancedSecurity-kb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
        {"onvifAdvancedSecurity-tsb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
        {"onvifAdvancedSecurity", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"onvifAnalytics-aeb", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
        {"onvifAnalytics-reb", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
        {"onvifAnalytics", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"onvifAnalyticsDevice", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"onvifCredential", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"onvifDisplay", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"onvifDoorControl", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"onvifEvents-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
        {"onvifEvents-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
        {"onvifEvents-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
        {"onvifEvents-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
        {"onvifEvents-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
        {"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"onvifEvents-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
        {"onvifEvents-psmb", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
        {"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"onvifEvents-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
        {"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"onvifMedia2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"onvifNetwork-dlb", "http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding", NULL, NULL},
        {"onvifNetwork-rdb", "http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding", NULL, NULL},
        {"onvifNetwork", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"onvifProvisioning", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"onvifReceiver", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"onvifRecording", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"onvifReplay", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"onvifScedule", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"onvifSearch", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {"onvifThermal", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
#endif

    soap_set_namespaces(this->soap, namespaces);
}

MediaBindingProxy *MediaBindingProxy::copy()
{
    MediaBindingProxy *dup = SOAP_NEW_UNMANAGED(MediaBindingProxy);
    if (dup)
    {
        soap_done(dup->soap);
        soap_copy_context(dup->soap, this->soap);
    }
    return dup;
}

MediaBindingProxy& MediaBindingProxy::operator=(const MediaBindingProxy& rhs)
{
    if (this->soap != rhs.soap)
    {
        if (this->soap_own)
            soap_free(this->soap);
        this->soap = rhs.soap;
        this->soap_own = false;
        this->soap_endpoint = rhs.soap_endpoint;
    }
    return *this;
}

void MediaBindingProxy::destroy()
{
    soap_destroy(this->soap);
    soap_end(this->soap);
}

void MediaBindingProxy::reset()
{
    this->destroy();
    soap_done(this->soap);
    soap_initialize(this->soap);
    MediaBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void MediaBindingProxy::soap_noheader()
{
    this->soap->header = NULL;
}

void MediaBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *SubscriptionId)
{
    ::soap_header(this->soap);
    this->soap->header->wsa5__MessageID = wsa5__MessageID;
    this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
    this->soap->header->wsa5__From = wsa5__From;
    this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
    this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
    this->soap->header->wsa5__To = wsa5__To;
    this->soap->header->wsa5__Action = wsa5__Action;
    this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
    this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
    this->soap->header->wsse__Security = wsse__Security;
    this->soap->header->SubscriptionId = SubscriptionId;
}

::SOAP_ENV__Header *MediaBindingProxy::soap_header()
{
    return this->soap->header;
}

::SOAP_ENV__Fault *MediaBindingProxy::soap_fault()
{
    return this->soap->fault;
}

const char *MediaBindingProxy::soap_fault_string()
{
    return *soap_faultstring(this->soap);
}

const char *MediaBindingProxy::soap_fault_detail()
{
    return *soap_faultdetail(this->soap);
}

int MediaBindingProxy::soap_close_socket()
{
    return soap_closesock(this->soap);
}

int MediaBindingProxy::soap_force_close_socket()
{
    return soap_force_closesock(this->soap);
}

void MediaBindingProxy::soap_print_fault(FILE *fd)
{
    ::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void MediaBindingProxy::soap_stream_fault(std::ostream& os)
{
    ::soap_stream_fault(this->soap, os);
}
#endif

char *MediaBindingProxy::soap_sprint_fault(char *buf, size_t len)
{
    return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int MediaBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _onvifMedia__GetServiceCapabilities *onvifMedia__GetServiceCapabilities, _onvifMedia__GetServiceCapabilitiesResponse &onvifMedia__GetServiceCapabilitiesResponse)
{
    struct __onvifMedia__GetServiceCapabilities soap_tmp___onvifMedia__GetServiceCapabilities;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities";
    soap_tmp___onvifMedia__GetServiceCapabilities.onvifMedia__GetServiceCapabilities = onvifMedia__GetServiceCapabilities;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetServiceCapabilities(soap, &soap_tmp___onvifMedia__GetServiceCapabilities);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetServiceCapabilities(soap, &soap_tmp___onvifMedia__GetServiceCapabilities, "-onvifMedia:GetServiceCapabilities", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetServiceCapabilities(soap, &soap_tmp___onvifMedia__GetServiceCapabilities, "-onvifMedia:GetServiceCapabilities", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetServiceCapabilitiesResponse*>(&onvifMedia__GetServiceCapabilitiesResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetServiceCapabilitiesResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetServiceCapabilitiesResponse.soap_get(soap, "onvifMedia:GetServiceCapabilitiesResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSources(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoSources *onvifMedia__GetVideoSources, _onvifMedia__GetVideoSourcesResponse &onvifMedia__GetVideoSourcesResponse)
{
    struct __onvifMedia__GetVideoSources soap_tmp___onvifMedia__GetVideoSources;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdlGetVideoSources/";
    soap_tmp___onvifMedia__GetVideoSources.onvifMedia__GetVideoSources = onvifMedia__GetVideoSources;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetVideoSources(soap, &soap_tmp___onvifMedia__GetVideoSources);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetVideoSources(soap, &soap_tmp___onvifMedia__GetVideoSources, "-onvifMedia:GetVideoSources", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetVideoSources(soap, &soap_tmp___onvifMedia__GetVideoSources, "-onvifMedia:GetVideoSources", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetVideoSourcesResponse*>(&onvifMedia__GetVideoSourcesResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetVideoSourcesResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetVideoSourcesResponse.soap_get(soap, "onvifMedia:GetVideoSourcesResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSources(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioSources *onvifMedia__GetAudioSources, _onvifMedia__GetAudioSourcesResponse &onvifMedia__GetAudioSourcesResponse)
{
    struct __onvifMedia__GetAudioSources soap_tmp___onvifMedia__GetAudioSources;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSources";
    soap_tmp___onvifMedia__GetAudioSources.onvifMedia__GetAudioSources = onvifMedia__GetAudioSources;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetAudioSources(soap, &soap_tmp___onvifMedia__GetAudioSources);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetAudioSources(soap, &soap_tmp___onvifMedia__GetAudioSources, "-onvifMedia:GetAudioSources", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetAudioSources(soap, &soap_tmp___onvifMedia__GetAudioSources, "-onvifMedia:GetAudioSources", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetAudioSourcesResponse*>(&onvifMedia__GetAudioSourcesResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetAudioSourcesResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetAudioSourcesResponse.soap_get(soap, "onvifMedia:GetAudioSourcesResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputs(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioOutputs *onvifMedia__GetAudioOutputs, _onvifMedia__GetAudioOutputsResponse &onvifMedia__GetAudioOutputsResponse)
{
    struct __onvifMedia__GetAudioOutputs soap_tmp___onvifMedia__GetAudioOutputs;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs";
    soap_tmp___onvifMedia__GetAudioOutputs.onvifMedia__GetAudioOutputs = onvifMedia__GetAudioOutputs;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetAudioOutputs(soap, &soap_tmp___onvifMedia__GetAudioOutputs);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetAudioOutputs(soap, &soap_tmp___onvifMedia__GetAudioOutputs, "-onvifMedia:GetAudioOutputs", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetAudioOutputs(soap, &soap_tmp___onvifMedia__GetAudioOutputs, "-onvifMedia:GetAudioOutputs", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetAudioOutputsResponse*>(&onvifMedia__GetAudioOutputsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetAudioOutputsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetAudioOutputsResponse.soap_get(soap, "onvifMedia:GetAudioOutputsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::CreateProfile(const char *endpoint, const char *soap_action, _onvifMedia__CreateProfile *onvifMedia__CreateProfile, _onvifMedia__CreateProfileResponse &onvifMedia__CreateProfileResponse)
{
    struct __onvifMedia__CreateProfile soap_tmp___onvifMedia__CreateProfile;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/CreateProfile";
    soap_tmp___onvifMedia__CreateProfile.onvifMedia__CreateProfile = onvifMedia__CreateProfile;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__CreateProfile(soap, &soap_tmp___onvifMedia__CreateProfile);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__CreateProfile(soap, &soap_tmp___onvifMedia__CreateProfile, "-onvifMedia:CreateProfile", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__CreateProfile(soap, &soap_tmp___onvifMedia__CreateProfile, "-onvifMedia:CreateProfile", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__CreateProfileResponse*>(&onvifMedia__CreateProfileResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__CreateProfileResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__CreateProfileResponse.soap_get(soap, "onvifMedia:CreateProfileResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetProfile(const char *endpoint, const char *soap_action, _onvifMedia__GetProfile *onvifMedia__GetProfile, _onvifMedia__GetProfileResponse &onvifMedia__GetProfileResponse)
{
    struct __onvifMedia__GetProfile soap_tmp___onvifMedia__GetProfile;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdlGetProfile/";
    soap_tmp___onvifMedia__GetProfile.onvifMedia__GetProfile = onvifMedia__GetProfile;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetProfile(soap, &soap_tmp___onvifMedia__GetProfile);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetProfile(soap, &soap_tmp___onvifMedia__GetProfile, "-onvifMedia:GetProfile", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetProfile(soap, &soap_tmp___onvifMedia__GetProfile, "-onvifMedia:GetProfile", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetProfileResponse*>(&onvifMedia__GetProfileResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetProfileResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetProfileResponse.soap_get(soap, "onvifMedia:GetProfileResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetProfiles(const char *endpoint, const char *soap_action, _onvifMedia__GetProfiles *onvifMedia__GetProfiles, _onvifMedia__GetProfilesResponse &onvifMedia__GetProfilesResponse)
{
    struct __onvifMedia__GetProfiles soap_tmp___onvifMedia__GetProfiles;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetProfiles";
    soap_tmp___onvifMedia__GetProfiles.onvifMedia__GetProfiles = onvifMedia__GetProfiles;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetProfiles(soap, &soap_tmp___onvifMedia__GetProfiles);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetProfiles(soap, &soap_tmp___onvifMedia__GetProfiles, "-onvifMedia:GetProfiles", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetProfiles(soap, &soap_tmp___onvifMedia__GetProfiles, "-onvifMedia:GetProfiles", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetProfilesResponse*>(&onvifMedia__GetProfilesResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetProfilesResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetProfilesResponse.soap_get(soap, "onvifMedia:GetProfilesResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::AddVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddVideoEncoderConfiguration *onvifMedia__AddVideoEncoderConfiguration, _onvifMedia__AddVideoEncoderConfigurationResponse &onvifMedia__AddVideoEncoderConfigurationResponse)
{
    struct __onvifMedia__AddVideoEncoderConfiguration soap_tmp___onvifMedia__AddVideoEncoderConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration";
    soap_tmp___onvifMedia__AddVideoEncoderConfiguration.onvifMedia__AddVideoEncoderConfiguration = onvifMedia__AddVideoEncoderConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__AddVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddVideoEncoderConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__AddVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddVideoEncoderConfiguration, "-onvifMedia:AddVideoEncoderConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__AddVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddVideoEncoderConfiguration, "-onvifMedia:AddVideoEncoderConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__AddVideoEncoderConfigurationResponse*>(&onvifMedia__AddVideoEncoderConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__AddVideoEncoderConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__AddVideoEncoderConfigurationResponse.soap_get(soap, "onvifMedia:AddVideoEncoderConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::AddVideoSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddVideoSourceConfiguration *onvifMedia__AddVideoSourceConfiguration, _onvifMedia__AddVideoSourceConfigurationResponse &onvifMedia__AddVideoSourceConfigurationResponse)
{
    struct __onvifMedia__AddVideoSourceConfiguration soap_tmp___onvifMedia__AddVideoSourceConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration";
    soap_tmp___onvifMedia__AddVideoSourceConfiguration.onvifMedia__AddVideoSourceConfiguration = onvifMedia__AddVideoSourceConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__AddVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__AddVideoSourceConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__AddVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__AddVideoSourceConfiguration, "-onvifMedia:AddVideoSourceConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__AddVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__AddVideoSourceConfiguration, "-onvifMedia:AddVideoSourceConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__AddVideoSourceConfigurationResponse*>(&onvifMedia__AddVideoSourceConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__AddVideoSourceConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__AddVideoSourceConfigurationResponse.soap_get(soap, "onvifMedia:AddVideoSourceConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddAudioEncoderConfiguration *onvifMedia__AddAudioEncoderConfiguration, _onvifMedia__AddAudioEncoderConfigurationResponse &onvifMedia__AddAudioEncoderConfigurationResponse)
{
    struct __onvifMedia__AddAudioEncoderConfiguration soap_tmp___onvifMedia__AddAudioEncoderConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration";
    soap_tmp___onvifMedia__AddAudioEncoderConfiguration.onvifMedia__AddAudioEncoderConfiguration = onvifMedia__AddAudioEncoderConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__AddAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioEncoderConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__AddAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioEncoderConfiguration, "-onvifMedia:AddAudioEncoderConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__AddAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioEncoderConfiguration, "-onvifMedia:AddAudioEncoderConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__AddAudioEncoderConfigurationResponse*>(&onvifMedia__AddAudioEncoderConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__AddAudioEncoderConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__AddAudioEncoderConfigurationResponse.soap_get(soap, "onvifMedia:AddAudioEncoderConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddAudioSourceConfiguration *onvifMedia__AddAudioSourceConfiguration, _onvifMedia__AddAudioSourceConfigurationResponse &onvifMedia__AddAudioSourceConfigurationResponse)
{
    struct __onvifMedia__AddAudioSourceConfiguration soap_tmp___onvifMedia__AddAudioSourceConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration";
    soap_tmp___onvifMedia__AddAudioSourceConfiguration.onvifMedia__AddAudioSourceConfiguration = onvifMedia__AddAudioSourceConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__AddAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__AddAudioSourceConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__AddAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__AddAudioSourceConfiguration, "-onvifMedia:AddAudioSourceConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__AddAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__AddAudioSourceConfiguration, "-onvifMedia:AddAudioSourceConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__AddAudioSourceConfigurationResponse*>(&onvifMedia__AddAudioSourceConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__AddAudioSourceConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__AddAudioSourceConfigurationResponse.soap_get(soap, "onvifMedia:AddAudioSourceConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::AddPTZConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddPTZConfiguration *onvifMedia__AddPTZConfiguration, _onvifMedia__AddPTZConfigurationResponse &onvifMedia__AddPTZConfigurationResponse)
{
    struct __onvifMedia__AddPTZConfiguration soap_tmp___onvifMedia__AddPTZConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration";
    soap_tmp___onvifMedia__AddPTZConfiguration.onvifMedia__AddPTZConfiguration = onvifMedia__AddPTZConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__AddPTZConfiguration(soap, &soap_tmp___onvifMedia__AddPTZConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__AddPTZConfiguration(soap, &soap_tmp___onvifMedia__AddPTZConfiguration, "-onvifMedia:AddPTZConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__AddPTZConfiguration(soap, &soap_tmp___onvifMedia__AddPTZConfiguration, "-onvifMedia:AddPTZConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__AddPTZConfigurationResponse*>(&onvifMedia__AddPTZConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__AddPTZConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__AddPTZConfigurationResponse.soap_get(soap, "onvifMedia:AddPTZConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::AddVideoAnalyticsConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddVideoAnalyticsConfiguration *onvifMedia__AddVideoAnalyticsConfiguration, _onvifMedia__AddVideoAnalyticsConfigurationResponse &onvifMedia__AddVideoAnalyticsConfigurationResponse)
{
    struct __onvifMedia__AddVideoAnalyticsConfiguration soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration";
    soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration.onvifMedia__AddVideoAnalyticsConfiguration = onvifMedia__AddVideoAnalyticsConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__AddVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__AddVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration, "-onvifMedia:AddVideoAnalyticsConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__AddVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__AddVideoAnalyticsConfiguration, "-onvifMedia:AddVideoAnalyticsConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__AddVideoAnalyticsConfigurationResponse*>(&onvifMedia__AddVideoAnalyticsConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__AddVideoAnalyticsConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__AddVideoAnalyticsConfigurationResponse.soap_get(soap, "onvifMedia:AddVideoAnalyticsConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::AddMetadataConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddMetadataConfiguration *onvifMedia__AddMetadataConfiguration, _onvifMedia__AddMetadataConfigurationResponse &onvifMedia__AddMetadataConfigurationResponse)
{
    struct __onvifMedia__AddMetadataConfiguration soap_tmp___onvifMedia__AddMetadataConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration";
    soap_tmp___onvifMedia__AddMetadataConfiguration.onvifMedia__AddMetadataConfiguration = onvifMedia__AddMetadataConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__AddMetadataConfiguration(soap, &soap_tmp___onvifMedia__AddMetadataConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__AddMetadataConfiguration(soap, &soap_tmp___onvifMedia__AddMetadataConfiguration, "-onvifMedia:AddMetadataConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__AddMetadataConfiguration(soap, &soap_tmp___onvifMedia__AddMetadataConfiguration, "-onvifMedia:AddMetadataConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__AddMetadataConfigurationResponse*>(&onvifMedia__AddMetadataConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__AddMetadataConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__AddMetadataConfigurationResponse.soap_get(soap, "onvifMedia:AddMetadataConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioOutputConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddAudioOutputConfiguration *onvifMedia__AddAudioOutputConfiguration, _onvifMedia__AddAudioOutputConfigurationResponse &onvifMedia__AddAudioOutputConfigurationResponse)
{
    struct __onvifMedia__AddAudioOutputConfiguration soap_tmp___onvifMedia__AddAudioOutputConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration";
    soap_tmp___onvifMedia__AddAudioOutputConfiguration.onvifMedia__AddAudioOutputConfiguration = onvifMedia__AddAudioOutputConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__AddAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__AddAudioOutputConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__AddAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__AddAudioOutputConfiguration, "-onvifMedia:AddAudioOutputConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__AddAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__AddAudioOutputConfiguration, "-onvifMedia:AddAudioOutputConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__AddAudioOutputConfigurationResponse*>(&onvifMedia__AddAudioOutputConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__AddAudioOutputConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__AddAudioOutputConfigurationResponse.soap_get(soap, "onvifMedia:AddAudioOutputConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::AddAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__AddAudioDecoderConfiguration *onvifMedia__AddAudioDecoderConfiguration, _onvifMedia__AddAudioDecoderConfigurationResponse &onvifMedia__AddAudioDecoderConfigurationResponse)
{
    struct __onvifMedia__AddAudioDecoderConfiguration soap_tmp___onvifMedia__AddAudioDecoderConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration";
    soap_tmp___onvifMedia__AddAudioDecoderConfiguration.onvifMedia__AddAudioDecoderConfiguration = onvifMedia__AddAudioDecoderConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__AddAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioDecoderConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__AddAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioDecoderConfiguration, "-onvifMedia:AddAudioDecoderConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__AddAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__AddAudioDecoderConfiguration, "-onvifMedia:AddAudioDecoderConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__AddAudioDecoderConfigurationResponse*>(&onvifMedia__AddAudioDecoderConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__AddAudioDecoderConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__AddAudioDecoderConfigurationResponse.soap_get(soap, "onvifMedia:AddAudioDecoderConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::RemoveVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveVideoEncoderConfiguration *onvifMedia__RemoveVideoEncoderConfiguration, _onvifMedia__RemoveVideoEncoderConfigurationResponse &onvifMedia__RemoveVideoEncoderConfigurationResponse)
{
    struct __onvifMedia__RemoveVideoEncoderConfiguration soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration";
    soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration.onvifMedia__RemoveVideoEncoderConfiguration = onvifMedia__RemoveVideoEncoderConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__RemoveVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__RemoveVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration, "-onvifMedia:RemoveVideoEncoderConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__RemoveVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoEncoderConfiguration, "-onvifMedia:RemoveVideoEncoderConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__RemoveVideoEncoderConfigurationResponse*>(&onvifMedia__RemoveVideoEncoderConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__RemoveVideoEncoderConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__RemoveVideoEncoderConfigurationResponse.soap_get(soap, "onvifMedia:RemoveVideoEncoderConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::RemoveVideoSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveVideoSourceConfiguration *onvifMedia__RemoveVideoSourceConfiguration, _onvifMedia__RemoveVideoSourceConfigurationResponse &onvifMedia__RemoveVideoSourceConfigurationResponse)
{
    struct __onvifMedia__RemoveVideoSourceConfiguration soap_tmp___onvifMedia__RemoveVideoSourceConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration";
    soap_tmp___onvifMedia__RemoveVideoSourceConfiguration.onvifMedia__RemoveVideoSourceConfiguration = onvifMedia__RemoveVideoSourceConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__RemoveVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoSourceConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__RemoveVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoSourceConfiguration, "-onvifMedia:RemoveVideoSourceConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__RemoveVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoSourceConfiguration, "-onvifMedia:RemoveVideoSourceConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__RemoveVideoSourceConfigurationResponse*>(&onvifMedia__RemoveVideoSourceConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__RemoveVideoSourceConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__RemoveVideoSourceConfigurationResponse.soap_get(soap, "onvifMedia:RemoveVideoSourceConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveAudioEncoderConfiguration *onvifMedia__RemoveAudioEncoderConfiguration, _onvifMedia__RemoveAudioEncoderConfigurationResponse &onvifMedia__RemoveAudioEncoderConfigurationResponse)
{
    struct __onvifMedia__RemoveAudioEncoderConfiguration soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration";
    soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration.onvifMedia__RemoveAudioEncoderConfiguration = onvifMedia__RemoveAudioEncoderConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__RemoveAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__RemoveAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration, "-onvifMedia:RemoveAudioEncoderConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__RemoveAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioEncoderConfiguration, "-onvifMedia:RemoveAudioEncoderConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__RemoveAudioEncoderConfigurationResponse*>(&onvifMedia__RemoveAudioEncoderConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__RemoveAudioEncoderConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__RemoveAudioEncoderConfigurationResponse.soap_get(soap, "onvifMedia:RemoveAudioEncoderConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveAudioSourceConfiguration *onvifMedia__RemoveAudioSourceConfiguration, _onvifMedia__RemoveAudioSourceConfigurationResponse &onvifMedia__RemoveAudioSourceConfigurationResponse)
{
    struct __onvifMedia__RemoveAudioSourceConfiguration soap_tmp___onvifMedia__RemoveAudioSourceConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration";
    soap_tmp___onvifMedia__RemoveAudioSourceConfiguration.onvifMedia__RemoveAudioSourceConfiguration = onvifMedia__RemoveAudioSourceConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__RemoveAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioSourceConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__RemoveAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioSourceConfiguration, "-onvifMedia:RemoveAudioSourceConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__RemoveAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioSourceConfiguration, "-onvifMedia:RemoveAudioSourceConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__RemoveAudioSourceConfigurationResponse*>(&onvifMedia__RemoveAudioSourceConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__RemoveAudioSourceConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__RemoveAudioSourceConfigurationResponse.soap_get(soap, "onvifMedia:RemoveAudioSourceConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::RemovePTZConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemovePTZConfiguration *onvifMedia__RemovePTZConfiguration, _onvifMedia__RemovePTZConfigurationResponse &onvifMedia__RemovePTZConfigurationResponse)
{
    struct __onvifMedia__RemovePTZConfiguration soap_tmp___onvifMedia__RemovePTZConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration";
    soap_tmp___onvifMedia__RemovePTZConfiguration.onvifMedia__RemovePTZConfiguration = onvifMedia__RemovePTZConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__RemovePTZConfiguration(soap, &soap_tmp___onvifMedia__RemovePTZConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__RemovePTZConfiguration(soap, &soap_tmp___onvifMedia__RemovePTZConfiguration, "-onvifMedia:RemovePTZConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__RemovePTZConfiguration(soap, &soap_tmp___onvifMedia__RemovePTZConfiguration, "-onvifMedia:RemovePTZConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__RemovePTZConfigurationResponse*>(&onvifMedia__RemovePTZConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__RemovePTZConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__RemovePTZConfigurationResponse.soap_get(soap, "onvifMedia:RemovePTZConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::RemoveVideoAnalyticsConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveVideoAnalyticsConfiguration *onvifMedia__RemoveVideoAnalyticsConfiguration, _onvifMedia__RemoveVideoAnalyticsConfigurationResponse &onvifMedia__RemoveVideoAnalyticsConfigurationResponse)
{
    struct __onvifMedia__RemoveVideoAnalyticsConfiguration soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration";
    soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration.onvifMedia__RemoveVideoAnalyticsConfiguration = onvifMedia__RemoveVideoAnalyticsConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration, "-onvifMedia:RemoveVideoAnalyticsConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__RemoveVideoAnalyticsConfiguration, "-onvifMedia:RemoveVideoAnalyticsConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__RemoveVideoAnalyticsConfigurationResponse*>(&onvifMedia__RemoveVideoAnalyticsConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__RemoveVideoAnalyticsConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__RemoveVideoAnalyticsConfigurationResponse.soap_get(soap, "onvifMedia:RemoveVideoAnalyticsConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::RemoveMetadataConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveMetadataConfiguration *onvifMedia__RemoveMetadataConfiguration, _onvifMedia__RemoveMetadataConfigurationResponse &onvifMedia__RemoveMetadataConfigurationResponse)
{
    struct __onvifMedia__RemoveMetadataConfiguration soap_tmp___onvifMedia__RemoveMetadataConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration";
    soap_tmp___onvifMedia__RemoveMetadataConfiguration.onvifMedia__RemoveMetadataConfiguration = onvifMedia__RemoveMetadataConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__RemoveMetadataConfiguration(soap, &soap_tmp___onvifMedia__RemoveMetadataConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__RemoveMetadataConfiguration(soap, &soap_tmp___onvifMedia__RemoveMetadataConfiguration, "-onvifMedia:RemoveMetadataConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__RemoveMetadataConfiguration(soap, &soap_tmp___onvifMedia__RemoveMetadataConfiguration, "-onvifMedia:RemoveMetadataConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__RemoveMetadataConfigurationResponse*>(&onvifMedia__RemoveMetadataConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__RemoveMetadataConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__RemoveMetadataConfigurationResponse.soap_get(soap, "onvifMedia:RemoveMetadataConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioOutputConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveAudioOutputConfiguration *onvifMedia__RemoveAudioOutputConfiguration, _onvifMedia__RemoveAudioOutputConfigurationResponse &onvifMedia__RemoveAudioOutputConfigurationResponse)
{
    struct __onvifMedia__RemoveAudioOutputConfiguration soap_tmp___onvifMedia__RemoveAudioOutputConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration";
    soap_tmp___onvifMedia__RemoveAudioOutputConfiguration.onvifMedia__RemoveAudioOutputConfiguration = onvifMedia__RemoveAudioOutputConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__RemoveAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioOutputConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__RemoveAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioOutputConfiguration, "-onvifMedia:RemoveAudioOutputConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__RemoveAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioOutputConfiguration, "-onvifMedia:RemoveAudioOutputConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__RemoveAudioOutputConfigurationResponse*>(&onvifMedia__RemoveAudioOutputConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__RemoveAudioOutputConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__RemoveAudioOutputConfigurationResponse.soap_get(soap, "onvifMedia:RemoveAudioOutputConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::RemoveAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__RemoveAudioDecoderConfiguration *onvifMedia__RemoveAudioDecoderConfiguration, _onvifMedia__RemoveAudioDecoderConfigurationResponse &onvifMedia__RemoveAudioDecoderConfigurationResponse)
{
    struct __onvifMedia__RemoveAudioDecoderConfiguration soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration";
    soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration.onvifMedia__RemoveAudioDecoderConfiguration = onvifMedia__RemoveAudioDecoderConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__RemoveAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__RemoveAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration, "-onvifMedia:RemoveAudioDecoderConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__RemoveAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__RemoveAudioDecoderConfiguration, "-onvifMedia:RemoveAudioDecoderConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__RemoveAudioDecoderConfigurationResponse*>(&onvifMedia__RemoveAudioDecoderConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__RemoveAudioDecoderConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__RemoveAudioDecoderConfigurationResponse.soap_get(soap, "onvifMedia:RemoveAudioDecoderConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::DeleteProfile(const char *endpoint, const char *soap_action, _onvifMedia__DeleteProfile *onvifMedia__DeleteProfile, _onvifMedia__DeleteProfileResponse &onvifMedia__DeleteProfileResponse)
{
    struct __onvifMedia__DeleteProfile soap_tmp___onvifMedia__DeleteProfile;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/DeleteProfile";
    soap_tmp___onvifMedia__DeleteProfile.onvifMedia__DeleteProfile = onvifMedia__DeleteProfile;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__DeleteProfile(soap, &soap_tmp___onvifMedia__DeleteProfile);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__DeleteProfile(soap, &soap_tmp___onvifMedia__DeleteProfile, "-onvifMedia:DeleteProfile", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__DeleteProfile(soap, &soap_tmp___onvifMedia__DeleteProfile, "-onvifMedia:DeleteProfile", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__DeleteProfileResponse*>(&onvifMedia__DeleteProfileResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__DeleteProfileResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__DeleteProfileResponse.soap_get(soap, "onvifMedia:DeleteProfileResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSourceConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoSourceConfigurations *onvifMedia__GetVideoSourceConfigurations, _onvifMedia__GetVideoSourceConfigurationsResponse &onvifMedia__GetVideoSourceConfigurationsResponse)
{
    struct __onvifMedia__GetVideoSourceConfigurations soap_tmp___onvifMedia__GetVideoSourceConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations";
    soap_tmp___onvifMedia__GetVideoSourceConfigurations.onvifMedia__GetVideoSourceConfigurations = onvifMedia__GetVideoSourceConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurations, "-onvifMedia:GetVideoSourceConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurations, "-onvifMedia:GetVideoSourceConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetVideoSourceConfigurationsResponse*>(&onvifMedia__GetVideoSourceConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetVideoSourceConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetVideoSourceConfigurationsResponse.soap_get(soap, "onvifMedia:GetVideoSourceConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoEncoderConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoEncoderConfigurations *onvifMedia__GetVideoEncoderConfigurations, _onvifMedia__GetVideoEncoderConfigurationsResponse &onvifMedia__GetVideoEncoderConfigurationsResponse)
{
    struct __onvifMedia__GetVideoEncoderConfigurations soap_tmp___onvifMedia__GetVideoEncoderConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations";
    soap_tmp___onvifMedia__GetVideoEncoderConfigurations.onvifMedia__GetVideoEncoderConfigurations = onvifMedia__GetVideoEncoderConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurations, "-onvifMedia:GetVideoEncoderConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurations, "-onvifMedia:GetVideoEncoderConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetVideoEncoderConfigurationsResponse*>(&onvifMedia__GetVideoEncoderConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetVideoEncoderConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetVideoEncoderConfigurationsResponse.soap_get(soap, "onvifMedia:GetVideoEncoderConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSourceConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioSourceConfigurations *onvifMedia__GetAudioSourceConfigurations, _onvifMedia__GetAudioSourceConfigurationsResponse &onvifMedia__GetAudioSourceConfigurationsResponse)
{
    struct __onvifMedia__GetAudioSourceConfigurations soap_tmp___onvifMedia__GetAudioSourceConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/";
    soap_tmp___onvifMedia__GetAudioSourceConfigurations.onvifMedia__GetAudioSourceConfigurations = onvifMedia__GetAudioSourceConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurations, "-onvifMedia:GetAudioSourceConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurations, "-onvifMedia:GetAudioSourceConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetAudioSourceConfigurationsResponse*>(&onvifMedia__GetAudioSourceConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetAudioSourceConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetAudioSourceConfigurationsResponse.soap_get(soap, "onvifMedia:GetAudioSourceConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioEncoderConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioEncoderConfigurations *onvifMedia__GetAudioEncoderConfigurations, _onvifMedia__GetAudioEncoderConfigurationsResponse &onvifMedia__GetAudioEncoderConfigurationsResponse)
{
    struct __onvifMedia__GetAudioEncoderConfigurations soap_tmp___onvifMedia__GetAudioEncoderConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations";
    soap_tmp___onvifMedia__GetAudioEncoderConfigurations.onvifMedia__GetAudioEncoderConfigurations = onvifMedia__GetAudioEncoderConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurations, "-onvifMedia:GetAudioEncoderConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurations, "-onvifMedia:GetAudioEncoderConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetAudioEncoderConfigurationsResponse*>(&onvifMedia__GetAudioEncoderConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetAudioEncoderConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetAudioEncoderConfigurationsResponse.soap_get(soap, "onvifMedia:GetAudioEncoderConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoAnalyticsConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoAnalyticsConfigurations *onvifMedia__GetVideoAnalyticsConfigurations, _onvifMedia__GetVideoAnalyticsConfigurationsResponse &onvifMedia__GetVideoAnalyticsConfigurationsResponse)
{
    struct __onvifMedia__GetVideoAnalyticsConfigurations soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations";
    soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations.onvifMedia__GetVideoAnalyticsConfigurations = onvifMedia__GetVideoAnalyticsConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations, "-onvifMedia:GetVideoAnalyticsConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfigurations, "-onvifMedia:GetVideoAnalyticsConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetVideoAnalyticsConfigurationsResponse*>(&onvifMedia__GetVideoAnalyticsConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetVideoAnalyticsConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetVideoAnalyticsConfigurationsResponse.soap_get(soap, "onvifMedia:GetVideoAnalyticsConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetMetadataConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetMetadataConfigurations *onvifMedia__GetMetadataConfigurations, _onvifMedia__GetMetadataConfigurationsResponse &onvifMedia__GetMetadataConfigurationsResponse)
{
    struct __onvifMedia__GetMetadataConfigurations soap_tmp___onvifMedia__GetMetadataConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations";
    soap_tmp___onvifMedia__GetMetadataConfigurations.onvifMedia__GetMetadataConfigurations = onvifMedia__GetMetadataConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetMetadataConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetMetadataConfigurations, "-onvifMedia:GetMetadataConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetMetadataConfigurations, "-onvifMedia:GetMetadataConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetMetadataConfigurationsResponse*>(&onvifMedia__GetMetadataConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetMetadataConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetMetadataConfigurationsResponse.soap_get(soap, "onvifMedia:GetMetadataConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioOutputConfigurations *onvifMedia__GetAudioOutputConfigurations, _onvifMedia__GetAudioOutputConfigurationsResponse &onvifMedia__GetAudioOutputConfigurationsResponse)
{
    struct __onvifMedia__GetAudioOutputConfigurations soap_tmp___onvifMedia__GetAudioOutputConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations";
    soap_tmp___onvifMedia__GetAudioOutputConfigurations.onvifMedia__GetAudioOutputConfigurations = onvifMedia__GetAudioOutputConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurations, "-onvifMedia:GetAudioOutputConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurations, "-onvifMedia:GetAudioOutputConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetAudioOutputConfigurationsResponse*>(&onvifMedia__GetAudioOutputConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetAudioOutputConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetAudioOutputConfigurationsResponse.soap_get(soap, "onvifMedia:GetAudioOutputConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioDecoderConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioDecoderConfigurations *onvifMedia__GetAudioDecoderConfigurations, _onvifMedia__GetAudioDecoderConfigurationsResponse &onvifMedia__GetAudioDecoderConfigurationsResponse)
{
    struct __onvifMedia__GetAudioDecoderConfigurations soap_tmp___onvifMedia__GetAudioDecoderConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations";
    soap_tmp___onvifMedia__GetAudioDecoderConfigurations.onvifMedia__GetAudioDecoderConfigurations = onvifMedia__GetAudioDecoderConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurations, "-onvifMedia:GetAudioDecoderConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurations, "-onvifMedia:GetAudioDecoderConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetAudioDecoderConfigurationsResponse*>(&onvifMedia__GetAudioDecoderConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetAudioDecoderConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetAudioDecoderConfigurationsResponse.soap_get(soap, "onvifMedia:GetAudioDecoderConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoSourceConfiguration *onvifMedia__GetVideoSourceConfiguration, _onvifMedia__GetVideoSourceConfigurationResponse &onvifMedia__GetVideoSourceConfigurationResponse)
{
    struct __onvifMedia__GetVideoSourceConfiguration soap_tmp___onvifMedia__GetVideoSourceConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration";
    soap_tmp___onvifMedia__GetVideoSourceConfiguration.onvifMedia__GetVideoSourceConfiguration = onvifMedia__GetVideoSourceConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__GetVideoSourceConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__GetVideoSourceConfiguration, "-onvifMedia:GetVideoSourceConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__GetVideoSourceConfiguration, "-onvifMedia:GetVideoSourceConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetVideoSourceConfigurationResponse*>(&onvifMedia__GetVideoSourceConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetVideoSourceConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetVideoSourceConfigurationResponse.soap_get(soap, "onvifMedia:GetVideoSourceConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoEncoderConfiguration *onvifMedia__GetVideoEncoderConfiguration, _onvifMedia__GetVideoEncoderConfigurationResponse &onvifMedia__GetVideoEncoderConfigurationResponse)
{
    struct __onvifMedia__GetVideoEncoderConfiguration soap_tmp___onvifMedia__GetVideoEncoderConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration";
    soap_tmp___onvifMedia__GetVideoEncoderConfiguration.onvifMedia__GetVideoEncoderConfiguration = onvifMedia__GetVideoEncoderConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfiguration, "-onvifMedia:GetVideoEncoderConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfiguration, "-onvifMedia:GetVideoEncoderConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetVideoEncoderConfigurationResponse*>(&onvifMedia__GetVideoEncoderConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetVideoEncoderConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetVideoEncoderConfigurationResponse.soap_get(soap, "onvifMedia:GetVideoEncoderConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioSourceConfiguration *onvifMedia__GetAudioSourceConfiguration, _onvifMedia__GetAudioSourceConfigurationResponse &onvifMedia__GetAudioSourceConfigurationResponse)
{
    struct __onvifMedia__GetAudioSourceConfiguration soap_tmp___onvifMedia__GetAudioSourceConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration";
    soap_tmp___onvifMedia__GetAudioSourceConfiguration.onvifMedia__GetAudioSourceConfiguration = onvifMedia__GetAudioSourceConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__GetAudioSourceConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__GetAudioSourceConfiguration, "-onvifMedia:GetAudioSourceConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__GetAudioSourceConfiguration, "-onvifMedia:GetAudioSourceConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetAudioSourceConfigurationResponse*>(&onvifMedia__GetAudioSourceConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetAudioSourceConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetAudioSourceConfigurationResponse.soap_get(soap, "onvifMedia:GetAudioSourceConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioEncoderConfiguration *onvifMedia__GetAudioEncoderConfiguration, _onvifMedia__GetAudioEncoderConfigurationResponse &onvifMedia__GetAudioEncoderConfigurationResponse)
{
    struct __onvifMedia__GetAudioEncoderConfiguration soap_tmp___onvifMedia__GetAudioEncoderConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration";
    soap_tmp___onvifMedia__GetAudioEncoderConfiguration.onvifMedia__GetAudioEncoderConfiguration = onvifMedia__GetAudioEncoderConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfiguration, "-onvifMedia:GetAudioEncoderConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfiguration, "-onvifMedia:GetAudioEncoderConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetAudioEncoderConfigurationResponse*>(&onvifMedia__GetAudioEncoderConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetAudioEncoderConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetAudioEncoderConfigurationResponse.soap_get(soap, "onvifMedia:GetAudioEncoderConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoAnalyticsConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoAnalyticsConfiguration *onvifMedia__GetVideoAnalyticsConfiguration, _onvifMedia__GetVideoAnalyticsConfigurationResponse &onvifMedia__GetVideoAnalyticsConfigurationResponse)
{
    struct __onvifMedia__GetVideoAnalyticsConfiguration soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration";
    soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration.onvifMedia__GetVideoAnalyticsConfiguration = onvifMedia__GetVideoAnalyticsConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration, "-onvifMedia:GetVideoAnalyticsConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__GetVideoAnalyticsConfiguration, "-onvifMedia:GetVideoAnalyticsConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetVideoAnalyticsConfigurationResponse*>(&onvifMedia__GetVideoAnalyticsConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetVideoAnalyticsConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetVideoAnalyticsConfigurationResponse.soap_get(soap, "onvifMedia:GetVideoAnalyticsConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetMetadataConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetMetadataConfiguration *onvifMedia__GetMetadataConfiguration, _onvifMedia__GetMetadataConfigurationResponse &onvifMedia__GetMetadataConfigurationResponse)
{
    struct __onvifMedia__GetMetadataConfiguration soap_tmp___onvifMedia__GetMetadataConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration";
    soap_tmp___onvifMedia__GetMetadataConfiguration.onvifMedia__GetMetadataConfiguration = onvifMedia__GetMetadataConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetMetadataConfiguration(soap, &soap_tmp___onvifMedia__GetMetadataConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetMetadataConfiguration(soap, &soap_tmp___onvifMedia__GetMetadataConfiguration, "-onvifMedia:GetMetadataConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetMetadataConfiguration(soap, &soap_tmp___onvifMedia__GetMetadataConfiguration, "-onvifMedia:GetMetadataConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetMetadataConfigurationResponse*>(&onvifMedia__GetMetadataConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetMetadataConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetMetadataConfigurationResponse.soap_get(soap, "onvifMedia:GetMetadataConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioOutputConfiguration *onvifMedia__GetAudioOutputConfiguration, _onvifMedia__GetAudioOutputConfigurationResponse &onvifMedia__GetAudioOutputConfigurationResponse)
{
    struct __onvifMedia__GetAudioOutputConfiguration soap_tmp___onvifMedia__GetAudioOutputConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration";
    soap_tmp___onvifMedia__GetAudioOutputConfiguration.onvifMedia__GetAudioOutputConfiguration = onvifMedia__GetAudioOutputConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__GetAudioOutputConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__GetAudioOutputConfiguration, "-onvifMedia:GetAudioOutputConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__GetAudioOutputConfiguration, "-onvifMedia:GetAudioOutputConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetAudioOutputConfigurationResponse*>(&onvifMedia__GetAudioOutputConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetAudioOutputConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetAudioOutputConfigurationResponse.soap_get(soap, "onvifMedia:GetAudioOutputConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioDecoderConfiguration *onvifMedia__GetAudioDecoderConfiguration, _onvifMedia__GetAudioDecoderConfigurationResponse &onvifMedia__GetAudioDecoderConfigurationResponse)
{
    struct __onvifMedia__GetAudioDecoderConfiguration soap_tmp___onvifMedia__GetAudioDecoderConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration";
    soap_tmp___onvifMedia__GetAudioDecoderConfiguration.onvifMedia__GetAudioDecoderConfiguration = onvifMedia__GetAudioDecoderConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfiguration, "-onvifMedia:GetAudioDecoderConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfiguration, "-onvifMedia:GetAudioDecoderConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetAudioDecoderConfigurationResponse*>(&onvifMedia__GetAudioDecoderConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetAudioDecoderConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetAudioDecoderConfigurationResponse.soap_get(soap, "onvifMedia:GetAudioDecoderConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleVideoEncoderConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleVideoEncoderConfigurations *onvifMedia__GetCompatibleVideoEncoderConfigurations, _onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse &onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse)
{
    struct __onvifMedia__GetCompatibleVideoEncoderConfigurations soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations";
    soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations.onvifMedia__GetCompatibleVideoEncoderConfigurations = onvifMedia__GetCompatibleVideoEncoderConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations, "-onvifMedia:GetCompatibleVideoEncoderConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoEncoderConfigurations, "-onvifMedia:GetCompatibleVideoEncoderConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse*>(&onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetCompatibleVideoEncoderConfigurationsResponse.soap_get(soap, "onvifMedia:GetCompatibleVideoEncoderConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleVideoSourceConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleVideoSourceConfigurations *onvifMedia__GetCompatibleVideoSourceConfigurations, _onvifMedia__GetCompatibleVideoSourceConfigurationsResponse &onvifMedia__GetCompatibleVideoSourceConfigurationsResponse)
{
    struct __onvifMedia__GetCompatibleVideoSourceConfigurations soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations";
    soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations.onvifMedia__GetCompatibleVideoSourceConfigurations = onvifMedia__GetCompatibleVideoSourceConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations, "-onvifMedia:GetCompatibleVideoSourceConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoSourceConfigurations, "-onvifMedia:GetCompatibleVideoSourceConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetCompatibleVideoSourceConfigurationsResponse*>(&onvifMedia__GetCompatibleVideoSourceConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetCompatibleVideoSourceConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetCompatibleVideoSourceConfigurationsResponse.soap_get(soap, "onvifMedia:GetCompatibleVideoSourceConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioEncoderConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleAudioEncoderConfigurations *onvifMedia__GetCompatibleAudioEncoderConfigurations, _onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse &onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse)
{
    struct __onvifMedia__GetCompatibleAudioEncoderConfigurations soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations";
    soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations.onvifMedia__GetCompatibleAudioEncoderConfigurations = onvifMedia__GetCompatibleAudioEncoderConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations, "-onvifMedia:GetCompatibleAudioEncoderConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioEncoderConfigurations, "-onvifMedia:GetCompatibleAudioEncoderConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse*>(&onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetCompatibleAudioEncoderConfigurationsResponse.soap_get(soap, "onvifMedia:GetCompatibleAudioEncoderConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioSourceConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleAudioSourceConfigurations *onvifMedia__GetCompatibleAudioSourceConfigurations, _onvifMedia__GetCompatibleAudioSourceConfigurationsResponse &onvifMedia__GetCompatibleAudioSourceConfigurationsResponse)
{
    struct __onvifMedia__GetCompatibleAudioSourceConfigurations soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations";
    soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations.onvifMedia__GetCompatibleAudioSourceConfigurations = onvifMedia__GetCompatibleAudioSourceConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations, "-onvifMedia:GetCompatibleAudioSourceConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioSourceConfigurations, "-onvifMedia:GetCompatibleAudioSourceConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetCompatibleAudioSourceConfigurationsResponse*>(&onvifMedia__GetCompatibleAudioSourceConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetCompatibleAudioSourceConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetCompatibleAudioSourceConfigurationsResponse.soap_get(soap, "onvifMedia:GetCompatibleAudioSourceConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleVideoAnalyticsConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleVideoAnalyticsConfigurations *onvifMedia__GetCompatibleVideoAnalyticsConfigurations, _onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse &onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse)
{
    struct __onvifMedia__GetCompatibleVideoAnalyticsConfigurations soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations";
    soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations.onvifMedia__GetCompatibleVideoAnalyticsConfigurations = onvifMedia__GetCompatibleVideoAnalyticsConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations, "-onvifMedia:GetCompatibleVideoAnalyticsConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleVideoAnalyticsConfigurations, "-onvifMedia:GetCompatibleVideoAnalyticsConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse*>(&onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_get(soap, "onvifMedia:GetCompatibleVideoAnalyticsConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleMetadataConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleMetadataConfigurations *onvifMedia__GetCompatibleMetadataConfigurations, _onvifMedia__GetCompatibleMetadataConfigurationsResponse &onvifMedia__GetCompatibleMetadataConfigurationsResponse)
{
    struct __onvifMedia__GetCompatibleMetadataConfigurations soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations";
    soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations.onvifMedia__GetCompatibleMetadataConfigurations = onvifMedia__GetCompatibleMetadataConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetCompatibleMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetCompatibleMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations, "-onvifMedia:GetCompatibleMetadataConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetCompatibleMetadataConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleMetadataConfigurations, "-onvifMedia:GetCompatibleMetadataConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetCompatibleMetadataConfigurationsResponse*>(&onvifMedia__GetCompatibleMetadataConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetCompatibleMetadataConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetCompatibleMetadataConfigurationsResponse.soap_get(soap, "onvifMedia:GetCompatibleMetadataConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioOutputConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleAudioOutputConfigurations *onvifMedia__GetCompatibleAudioOutputConfigurations, _onvifMedia__GetCompatibleAudioOutputConfigurationsResponse &onvifMedia__GetCompatibleAudioOutputConfigurationsResponse)
{
    struct __onvifMedia__GetCompatibleAudioOutputConfigurations soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations";
    soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations.onvifMedia__GetCompatibleAudioOutputConfigurations = onvifMedia__GetCompatibleAudioOutputConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations, "-onvifMedia:GetCompatibleAudioOutputConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioOutputConfigurations, "-onvifMedia:GetCompatibleAudioOutputConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetCompatibleAudioOutputConfigurationsResponse*>(&onvifMedia__GetCompatibleAudioOutputConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetCompatibleAudioOutputConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetCompatibleAudioOutputConfigurationsResponse.soap_get(soap, "onvifMedia:GetCompatibleAudioOutputConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetCompatibleAudioDecoderConfigurations(const char *endpoint, const char *soap_action, _onvifMedia__GetCompatibleAudioDecoderConfigurations *onvifMedia__GetCompatibleAudioDecoderConfigurations, _onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse &onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse)
{
    struct __onvifMedia__GetCompatibleAudioDecoderConfigurations soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations";
    soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations.onvifMedia__GetCompatibleAudioDecoderConfigurations = onvifMedia__GetCompatibleAudioDecoderConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations, "-onvifMedia:GetCompatibleAudioDecoderConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___onvifMedia__GetCompatibleAudioDecoderConfigurations, "-onvifMedia:GetCompatibleAudioDecoderConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse*>(&onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetCompatibleAudioDecoderConfigurationsResponse.soap_get(soap, "onvifMedia:GetCompatibleAudioDecoderConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::SetVideoSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetVideoSourceConfiguration *onvifMedia__SetVideoSourceConfiguration, _onvifMedia__SetVideoSourceConfigurationResponse &onvifMedia__SetVideoSourceConfigurationResponse)
{
    struct __onvifMedia__SetVideoSourceConfiguration soap_tmp___onvifMedia__SetVideoSourceConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration";
    soap_tmp___onvifMedia__SetVideoSourceConfiguration.onvifMedia__SetVideoSourceConfiguration = onvifMedia__SetVideoSourceConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__SetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__SetVideoSourceConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__SetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__SetVideoSourceConfiguration, "-onvifMedia:SetVideoSourceConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__SetVideoSourceConfiguration(soap, &soap_tmp___onvifMedia__SetVideoSourceConfiguration, "-onvifMedia:SetVideoSourceConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__SetVideoSourceConfigurationResponse*>(&onvifMedia__SetVideoSourceConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__SetVideoSourceConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__SetVideoSourceConfigurationResponse.soap_get(soap, "onvifMedia:SetVideoSourceConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::SetVideoEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetVideoEncoderConfiguration *onvifMedia__SetVideoEncoderConfiguration, _onvifMedia__SetVideoEncoderConfigurationResponse &onvifMedia__SetVideoEncoderConfigurationResponse)
{
    struct __onvifMedia__SetVideoEncoderConfiguration soap_tmp___onvifMedia__SetVideoEncoderConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration";
    soap_tmp___onvifMedia__SetVideoEncoderConfiguration.onvifMedia__SetVideoEncoderConfiguration = onvifMedia__SetVideoEncoderConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__SetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetVideoEncoderConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__SetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetVideoEncoderConfiguration, "-onvifMedia:SetVideoEncoderConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__SetVideoEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetVideoEncoderConfiguration, "-onvifMedia:SetVideoEncoderConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__SetVideoEncoderConfigurationResponse*>(&onvifMedia__SetVideoEncoderConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__SetVideoEncoderConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__SetVideoEncoderConfigurationResponse.soap_get(soap, "onvifMedia:SetVideoEncoderConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioSourceConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetAudioSourceConfiguration *onvifMedia__SetAudioSourceConfiguration, _onvifMedia__SetAudioSourceConfigurationResponse &onvifMedia__SetAudioSourceConfigurationResponse)
{
    struct __onvifMedia__SetAudioSourceConfiguration soap_tmp___onvifMedia__SetAudioSourceConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration";
    soap_tmp___onvifMedia__SetAudioSourceConfiguration.onvifMedia__SetAudioSourceConfiguration = onvifMedia__SetAudioSourceConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__SetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__SetAudioSourceConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__SetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__SetAudioSourceConfiguration, "-onvifMedia:SetAudioSourceConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__SetAudioSourceConfiguration(soap, &soap_tmp___onvifMedia__SetAudioSourceConfiguration, "-onvifMedia:SetAudioSourceConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__SetAudioSourceConfigurationResponse*>(&onvifMedia__SetAudioSourceConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__SetAudioSourceConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__SetAudioSourceConfigurationResponse.soap_get(soap, "onvifMedia:SetAudioSourceConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioEncoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetAudioEncoderConfiguration *onvifMedia__SetAudioEncoderConfiguration, _onvifMedia__SetAudioEncoderConfigurationResponse &onvifMedia__SetAudioEncoderConfigurationResponse)
{
    struct __onvifMedia__SetAudioEncoderConfiguration soap_tmp___onvifMedia__SetAudioEncoderConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration";
    soap_tmp___onvifMedia__SetAudioEncoderConfiguration.onvifMedia__SetAudioEncoderConfiguration = onvifMedia__SetAudioEncoderConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__SetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioEncoderConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__SetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioEncoderConfiguration, "-onvifMedia:SetAudioEncoderConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__SetAudioEncoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioEncoderConfiguration, "-onvifMedia:SetAudioEncoderConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__SetAudioEncoderConfigurationResponse*>(&onvifMedia__SetAudioEncoderConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__SetAudioEncoderConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__SetAudioEncoderConfigurationResponse.soap_get(soap, "onvifMedia:SetAudioEncoderConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::SetVideoAnalyticsConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetVideoAnalyticsConfiguration *onvifMedia__SetVideoAnalyticsConfiguration, _onvifMedia__SetVideoAnalyticsConfigurationResponse &onvifMedia__SetVideoAnalyticsConfigurationResponse)
{
    struct __onvifMedia__SetVideoAnalyticsConfiguration soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration";
    soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration.onvifMedia__SetVideoAnalyticsConfiguration = onvifMedia__SetVideoAnalyticsConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__SetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__SetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration, "-onvifMedia:SetVideoAnalyticsConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__SetVideoAnalyticsConfiguration(soap, &soap_tmp___onvifMedia__SetVideoAnalyticsConfiguration, "-onvifMedia:SetVideoAnalyticsConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__SetVideoAnalyticsConfigurationResponse*>(&onvifMedia__SetVideoAnalyticsConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__SetVideoAnalyticsConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__SetVideoAnalyticsConfigurationResponse.soap_get(soap, "onvifMedia:SetVideoAnalyticsConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::SetMetadataConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetMetadataConfiguration *onvifMedia__SetMetadataConfiguration, _onvifMedia__SetMetadataConfigurationResponse &onvifMedia__SetMetadataConfigurationResponse)
{
    struct __onvifMedia__SetMetadataConfiguration soap_tmp___onvifMedia__SetMetadataConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration";
    soap_tmp___onvifMedia__SetMetadataConfiguration.onvifMedia__SetMetadataConfiguration = onvifMedia__SetMetadataConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__SetMetadataConfiguration(soap, &soap_tmp___onvifMedia__SetMetadataConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__SetMetadataConfiguration(soap, &soap_tmp___onvifMedia__SetMetadataConfiguration, "-onvifMedia:SetMetadataConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__SetMetadataConfiguration(soap, &soap_tmp___onvifMedia__SetMetadataConfiguration, "-onvifMedia:SetMetadataConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__SetMetadataConfigurationResponse*>(&onvifMedia__SetMetadataConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__SetMetadataConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__SetMetadataConfigurationResponse.soap_get(soap, "onvifMedia:SetMetadataConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioOutputConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetAudioOutputConfiguration *onvifMedia__SetAudioOutputConfiguration, _onvifMedia__SetAudioOutputConfigurationResponse &onvifMedia__SetAudioOutputConfigurationResponse)
{
    struct __onvifMedia__SetAudioOutputConfiguration soap_tmp___onvifMedia__SetAudioOutputConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration";
    soap_tmp___onvifMedia__SetAudioOutputConfiguration.onvifMedia__SetAudioOutputConfiguration = onvifMedia__SetAudioOutputConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__SetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__SetAudioOutputConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__SetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__SetAudioOutputConfiguration, "-onvifMedia:SetAudioOutputConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__SetAudioOutputConfiguration(soap, &soap_tmp___onvifMedia__SetAudioOutputConfiguration, "-onvifMedia:SetAudioOutputConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__SetAudioOutputConfigurationResponse*>(&onvifMedia__SetAudioOutputConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__SetAudioOutputConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__SetAudioOutputConfigurationResponse.soap_get(soap, "onvifMedia:SetAudioOutputConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::SetAudioDecoderConfiguration(const char *endpoint, const char *soap_action, _onvifMedia__SetAudioDecoderConfiguration *onvifMedia__SetAudioDecoderConfiguration, _onvifMedia__SetAudioDecoderConfigurationResponse &onvifMedia__SetAudioDecoderConfigurationResponse)
{
    struct __onvifMedia__SetAudioDecoderConfiguration soap_tmp___onvifMedia__SetAudioDecoderConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration";
    soap_tmp___onvifMedia__SetAudioDecoderConfiguration.onvifMedia__SetAudioDecoderConfiguration = onvifMedia__SetAudioDecoderConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__SetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioDecoderConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__SetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioDecoderConfiguration, "-onvifMedia:SetAudioDecoderConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__SetAudioDecoderConfiguration(soap, &soap_tmp___onvifMedia__SetAudioDecoderConfiguration, "-onvifMedia:SetAudioDecoderConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__SetAudioDecoderConfigurationResponse*>(&onvifMedia__SetAudioDecoderConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__SetAudioDecoderConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__SetAudioDecoderConfigurationResponse.soap_get(soap, "onvifMedia:SetAudioDecoderConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSourceConfigurationOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoSourceConfigurationOptions *onvifMedia__GetVideoSourceConfigurationOptions, _onvifMedia__GetVideoSourceConfigurationOptionsResponse &onvifMedia__GetVideoSourceConfigurationOptionsResponse)
{
    struct __onvifMedia__GetVideoSourceConfigurationOptions soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/";
    soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions.onvifMedia__GetVideoSourceConfigurationOptions = onvifMedia__GetVideoSourceConfigurationOptions;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions, "-onvifMedia:GetVideoSourceConfigurationOptions", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetVideoSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoSourceConfigurationOptions, "-onvifMedia:GetVideoSourceConfigurationOptions", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetVideoSourceConfigurationOptionsResponse*>(&onvifMedia__GetVideoSourceConfigurationOptionsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetVideoSourceConfigurationOptionsResponse.soap_get(soap, "onvifMedia:GetVideoSourceConfigurationOptionsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoEncoderConfigurationOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoEncoderConfigurationOptions *onvifMedia__GetVideoEncoderConfigurationOptions, _onvifMedia__GetVideoEncoderConfigurationOptionsResponse &onvifMedia__GetVideoEncoderConfigurationOptionsResponse)
{
    struct __onvifMedia__GetVideoEncoderConfigurationOptions soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions";
    soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions.onvifMedia__GetVideoEncoderConfigurationOptions = onvifMedia__GetVideoEncoderConfigurationOptions;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions, "-onvifMedia:GetVideoEncoderConfigurationOptions", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetVideoEncoderConfigurationOptions, "-onvifMedia:GetVideoEncoderConfigurationOptions", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetVideoEncoderConfigurationOptionsResponse*>(&onvifMedia__GetVideoEncoderConfigurationOptionsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetVideoEncoderConfigurationOptionsResponse.soap_get(soap, "onvifMedia:GetVideoEncoderConfigurationOptionsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioSourceConfigurationOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioSourceConfigurationOptions *onvifMedia__GetAudioSourceConfigurationOptions, _onvifMedia__GetAudioSourceConfigurationOptionsResponse &onvifMedia__GetAudioSourceConfigurationOptionsResponse)
{
    struct __onvifMedia__GetAudioSourceConfigurationOptions soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions";
    soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions.onvifMedia__GetAudioSourceConfigurationOptions = onvifMedia__GetAudioSourceConfigurationOptions;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions, "-onvifMedia:GetAudioSourceConfigurationOptions", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetAudioSourceConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioSourceConfigurationOptions, "-onvifMedia:GetAudioSourceConfigurationOptions", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetAudioSourceConfigurationOptionsResponse*>(&onvifMedia__GetAudioSourceConfigurationOptionsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetAudioSourceConfigurationOptionsResponse.soap_get(soap, "onvifMedia:GetAudioSourceConfigurationOptionsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioEncoderConfigurationOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioEncoderConfigurationOptions *onvifMedia__GetAudioEncoderConfigurationOptions, _onvifMedia__GetAudioEncoderConfigurationOptionsResponse &onvifMedia__GetAudioEncoderConfigurationOptionsResponse)
{
    struct __onvifMedia__GetAudioEncoderConfigurationOptions soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions";
    soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions.onvifMedia__GetAudioEncoderConfigurationOptions = onvifMedia__GetAudioEncoderConfigurationOptions;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions, "-onvifMedia:GetAudioEncoderConfigurationOptions", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioEncoderConfigurationOptions, "-onvifMedia:GetAudioEncoderConfigurationOptions", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetAudioEncoderConfigurationOptionsResponse*>(&onvifMedia__GetAudioEncoderConfigurationOptionsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetAudioEncoderConfigurationOptionsResponse.soap_get(soap, "onvifMedia:GetAudioEncoderConfigurationOptionsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetMetadataConfigurationOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetMetadataConfigurationOptions *onvifMedia__GetMetadataConfigurationOptions, _onvifMedia__GetMetadataConfigurationOptionsResponse &onvifMedia__GetMetadataConfigurationOptionsResponse)
{
    struct __onvifMedia__GetMetadataConfigurationOptions soap_tmp___onvifMedia__GetMetadataConfigurationOptions;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions";
    soap_tmp___onvifMedia__GetMetadataConfigurationOptions.onvifMedia__GetMetadataConfigurationOptions = onvifMedia__GetMetadataConfigurationOptions;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetMetadataConfigurationOptions(soap, &soap_tmp___onvifMedia__GetMetadataConfigurationOptions);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetMetadataConfigurationOptions(soap, &soap_tmp___onvifMedia__GetMetadataConfigurationOptions, "-onvifMedia:GetMetadataConfigurationOptions", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetMetadataConfigurationOptions(soap, &soap_tmp___onvifMedia__GetMetadataConfigurationOptions, "-onvifMedia:GetMetadataConfigurationOptions", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetMetadataConfigurationOptionsResponse*>(&onvifMedia__GetMetadataConfigurationOptionsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetMetadataConfigurationOptionsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetMetadataConfigurationOptionsResponse.soap_get(soap, "onvifMedia:GetMetadataConfigurationOptionsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioOutputConfigurationOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioOutputConfigurationOptions *onvifMedia__GetAudioOutputConfigurationOptions, _onvifMedia__GetAudioOutputConfigurationOptionsResponse &onvifMedia__GetAudioOutputConfigurationOptionsResponse)
{
    struct __onvifMedia__GetAudioOutputConfigurationOptions soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions";
    soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions.onvifMedia__GetAudioOutputConfigurationOptions = onvifMedia__GetAudioOutputConfigurationOptions;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions, "-onvifMedia:GetAudioOutputConfigurationOptions", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetAudioOutputConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioOutputConfigurationOptions, "-onvifMedia:GetAudioOutputConfigurationOptions", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetAudioOutputConfigurationOptionsResponse*>(&onvifMedia__GetAudioOutputConfigurationOptionsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetAudioOutputConfigurationOptionsResponse.soap_get(soap, "onvifMedia:GetAudioOutputConfigurationOptionsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetAudioDecoderConfigurationOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetAudioDecoderConfigurationOptions *onvifMedia__GetAudioDecoderConfigurationOptions, _onvifMedia__GetAudioDecoderConfigurationOptionsResponse &onvifMedia__GetAudioDecoderConfigurationOptionsResponse)
{
    struct __onvifMedia__GetAudioDecoderConfigurationOptions soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions";
    soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions.onvifMedia__GetAudioDecoderConfigurationOptions = onvifMedia__GetAudioDecoderConfigurationOptions;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions, "-onvifMedia:GetAudioDecoderConfigurationOptions", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___onvifMedia__GetAudioDecoderConfigurationOptions, "-onvifMedia:GetAudioDecoderConfigurationOptions", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetAudioDecoderConfigurationOptionsResponse*>(&onvifMedia__GetAudioDecoderConfigurationOptionsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetAudioDecoderConfigurationOptionsResponse.soap_get(soap, "onvifMedia:GetAudioDecoderConfigurationOptionsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetGuaranteedNumberOfVideoEncoderInstances(const char *endpoint, const char *soap_action, _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances *onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances, _onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse &onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse)
{
    struct __onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances";
    soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances.onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances = onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances, "-onvifMedia:GetGuaranteedNumberOfVideoEncoderInstances", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___onvifMedia__GetGuaranteedNumberOfVideoEncoderInstances, "-onvifMedia:GetGuaranteedNumberOfVideoEncoderInstances", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse*>(&onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_get(soap, "onvifMedia:GetGuaranteedNumberOfVideoEncoderInstancesResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetStreamUri(const char *endpoint, const char *soap_action, _onvifMedia__GetStreamUri *onvifMedia__GetStreamUri, _onvifMedia__GetStreamUriResponse &onvifMedia__GetStreamUriResponse)
{
    struct __onvifMedia__GetStreamUri soap_tmp___onvifMedia__GetStreamUri;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetStreamUri";
    soap_tmp___onvifMedia__GetStreamUri.onvifMedia__GetStreamUri = onvifMedia__GetStreamUri;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetStreamUri(soap, &soap_tmp___onvifMedia__GetStreamUri);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetStreamUri(soap, &soap_tmp___onvifMedia__GetStreamUri, "-onvifMedia:GetStreamUri", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetStreamUri(soap, &soap_tmp___onvifMedia__GetStreamUri, "-onvifMedia:GetStreamUri", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetStreamUriResponse*>(&onvifMedia__GetStreamUriResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetStreamUriResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetStreamUriResponse.soap_get(soap, "onvifMedia:GetStreamUriResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::StartMulticastStreaming(const char *endpoint, const char *soap_action, _onvifMedia__StartMulticastStreaming *onvifMedia__StartMulticastStreaming, _onvifMedia__StartMulticastStreamingResponse &onvifMedia__StartMulticastStreamingResponse)
{
    struct __onvifMedia__StartMulticastStreaming soap_tmp___onvifMedia__StartMulticastStreaming;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming";
    soap_tmp___onvifMedia__StartMulticastStreaming.onvifMedia__StartMulticastStreaming = onvifMedia__StartMulticastStreaming;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__StartMulticastStreaming(soap, &soap_tmp___onvifMedia__StartMulticastStreaming);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__StartMulticastStreaming(soap, &soap_tmp___onvifMedia__StartMulticastStreaming, "-onvifMedia:StartMulticastStreaming", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__StartMulticastStreaming(soap, &soap_tmp___onvifMedia__StartMulticastStreaming, "-onvifMedia:StartMulticastStreaming", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__StartMulticastStreamingResponse*>(&onvifMedia__StartMulticastStreamingResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__StartMulticastStreamingResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__StartMulticastStreamingResponse.soap_get(soap, "onvifMedia:StartMulticastStreamingResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::StopMulticastStreaming(const char *endpoint, const char *soap_action, _onvifMedia__StopMulticastStreaming *onvifMedia__StopMulticastStreaming, _onvifMedia__StopMulticastStreamingResponse &onvifMedia__StopMulticastStreamingResponse)
{
    struct __onvifMedia__StopMulticastStreaming soap_tmp___onvifMedia__StopMulticastStreaming;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming";
    soap_tmp___onvifMedia__StopMulticastStreaming.onvifMedia__StopMulticastStreaming = onvifMedia__StopMulticastStreaming;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__StopMulticastStreaming(soap, &soap_tmp___onvifMedia__StopMulticastStreaming);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__StopMulticastStreaming(soap, &soap_tmp___onvifMedia__StopMulticastStreaming, "-onvifMedia:StopMulticastStreaming", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__StopMulticastStreaming(soap, &soap_tmp___onvifMedia__StopMulticastStreaming, "-onvifMedia:StopMulticastStreaming", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__StopMulticastStreamingResponse*>(&onvifMedia__StopMulticastStreamingResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__StopMulticastStreamingResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__StopMulticastStreamingResponse.soap_get(soap, "onvifMedia:StopMulticastStreamingResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::SetSynchronizationPoint(const char *endpoint, const char *soap_action, _onvifMedia__SetSynchronizationPoint *onvifMedia__SetSynchronizationPoint, _onvifMedia__SetSynchronizationPointResponse &onvifMedia__SetSynchronizationPointResponse)
{
    struct __onvifMedia__SetSynchronizationPoint soap_tmp___onvifMedia__SetSynchronizationPoint;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint";
    soap_tmp___onvifMedia__SetSynchronizationPoint.onvifMedia__SetSynchronizationPoint = onvifMedia__SetSynchronizationPoint;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__SetSynchronizationPoint(soap, &soap_tmp___onvifMedia__SetSynchronizationPoint);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__SetSynchronizationPoint(soap, &soap_tmp___onvifMedia__SetSynchronizationPoint, "-onvifMedia:SetSynchronizationPoint", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__SetSynchronizationPoint(soap, &soap_tmp___onvifMedia__SetSynchronizationPoint, "-onvifMedia:SetSynchronizationPoint", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__SetSynchronizationPointResponse*>(&onvifMedia__SetSynchronizationPointResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__SetSynchronizationPointResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__SetSynchronizationPointResponse.soap_get(soap, "onvifMedia:SetSynchronizationPointResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetSnapshotUri(const char *endpoint, const char *soap_action, _onvifMedia__GetSnapshotUri *onvifMedia__GetSnapshotUri, _onvifMedia__GetSnapshotUriResponse &onvifMedia__GetSnapshotUriResponse)
{
    struct __onvifMedia__GetSnapshotUri soap_tmp___onvifMedia__GetSnapshotUri;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri";
    soap_tmp___onvifMedia__GetSnapshotUri.onvifMedia__GetSnapshotUri = onvifMedia__GetSnapshotUri;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetSnapshotUri(soap, &soap_tmp___onvifMedia__GetSnapshotUri);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetSnapshotUri(soap, &soap_tmp___onvifMedia__GetSnapshotUri, "-onvifMedia:GetSnapshotUri", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetSnapshotUri(soap, &soap_tmp___onvifMedia__GetSnapshotUri, "-onvifMedia:GetSnapshotUri", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetSnapshotUriResponse*>(&onvifMedia__GetSnapshotUriResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetSnapshotUriResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetSnapshotUriResponse.soap_get(soap, "onvifMedia:GetSnapshotUriResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetVideoSourceModes(const char *endpoint, const char *soap_action, _onvifMedia__GetVideoSourceModes *onvifMedia__GetVideoSourceModes, _onvifMedia__GetVideoSourceModesResponse &onvifMedia__GetVideoSourceModesResponse)
{
    struct __onvifMedia__GetVideoSourceModes soap_tmp___onvifMedia__GetVideoSourceModes;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes";
    soap_tmp___onvifMedia__GetVideoSourceModes.onvifMedia__GetVideoSourceModes = onvifMedia__GetVideoSourceModes;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetVideoSourceModes(soap, &soap_tmp___onvifMedia__GetVideoSourceModes);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetVideoSourceModes(soap, &soap_tmp___onvifMedia__GetVideoSourceModes, "-onvifMedia:GetVideoSourceModes", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetVideoSourceModes(soap, &soap_tmp___onvifMedia__GetVideoSourceModes, "-onvifMedia:GetVideoSourceModes", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetVideoSourceModesResponse*>(&onvifMedia__GetVideoSourceModesResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetVideoSourceModesResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetVideoSourceModesResponse.soap_get(soap, "onvifMedia:GetVideoSourceModesResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::SetVideoSourceMode(const char *endpoint, const char *soap_action, _onvifMedia__SetVideoSourceMode *onvifMedia__SetVideoSourceMode, _onvifMedia__SetVideoSourceModeResponse &onvifMedia__SetVideoSourceModeResponse)
{
    struct __onvifMedia__SetVideoSourceMode soap_tmp___onvifMedia__SetVideoSourceMode;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode";
    soap_tmp___onvifMedia__SetVideoSourceMode.onvifMedia__SetVideoSourceMode = onvifMedia__SetVideoSourceMode;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__SetVideoSourceMode(soap, &soap_tmp___onvifMedia__SetVideoSourceMode);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__SetVideoSourceMode(soap, &soap_tmp___onvifMedia__SetVideoSourceMode, "-onvifMedia:SetVideoSourceMode", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__SetVideoSourceMode(soap, &soap_tmp___onvifMedia__SetVideoSourceMode, "-onvifMedia:SetVideoSourceMode", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__SetVideoSourceModeResponse*>(&onvifMedia__SetVideoSourceModeResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__SetVideoSourceModeResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__SetVideoSourceModeResponse.soap_get(soap, "onvifMedia:SetVideoSourceModeResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetOSDs(const char *endpoint, const char *soap_action, _onvifMedia__GetOSDs *onvifMedia__GetOSDs, _onvifMedia__GetOSDsResponse &onvifMedia__GetOSDsResponse)
{
    struct __onvifMedia__GetOSDs soap_tmp___onvifMedia__GetOSDs;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetOSDs";
    soap_tmp___onvifMedia__GetOSDs.onvifMedia__GetOSDs = onvifMedia__GetOSDs;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetOSDs(soap, &soap_tmp___onvifMedia__GetOSDs);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetOSDs(soap, &soap_tmp___onvifMedia__GetOSDs, "-onvifMedia:GetOSDs", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetOSDs(soap, &soap_tmp___onvifMedia__GetOSDs, "-onvifMedia:GetOSDs", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetOSDsResponse*>(&onvifMedia__GetOSDsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetOSDsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetOSDsResponse.soap_get(soap, "onvifMedia:GetOSDsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetOSD(const char *endpoint, const char *soap_action, _onvifMedia__GetOSD *onvifMedia__GetOSD, _onvifMedia__GetOSDResponse &onvifMedia__GetOSDResponse)
{
    struct __onvifMedia__GetOSD soap_tmp___onvifMedia__GetOSD;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetOSD";
    soap_tmp___onvifMedia__GetOSD.onvifMedia__GetOSD = onvifMedia__GetOSD;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetOSD(soap, &soap_tmp___onvifMedia__GetOSD);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetOSD(soap, &soap_tmp___onvifMedia__GetOSD, "-onvifMedia:GetOSD", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetOSD(soap, &soap_tmp___onvifMedia__GetOSD, "-onvifMedia:GetOSD", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetOSDResponse*>(&onvifMedia__GetOSDResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetOSDResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetOSDResponse.soap_get(soap, "onvifMedia:GetOSDResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::GetOSDOptions(const char *endpoint, const char *soap_action, _onvifMedia__GetOSDOptions *onvifMedia__GetOSDOptions, _onvifMedia__GetOSDOptionsResponse &onvifMedia__GetOSDOptionsResponse)
{
    struct __onvifMedia__GetOSDOptions soap_tmp___onvifMedia__GetOSDOptions;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions";
    soap_tmp___onvifMedia__GetOSDOptions.onvifMedia__GetOSDOptions = onvifMedia__GetOSDOptions;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__GetOSDOptions(soap, &soap_tmp___onvifMedia__GetOSDOptions);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__GetOSDOptions(soap, &soap_tmp___onvifMedia__GetOSDOptions, "-onvifMedia:GetOSDOptions", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__GetOSDOptions(soap, &soap_tmp___onvifMedia__GetOSDOptions, "-onvifMedia:GetOSDOptions", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__GetOSDOptionsResponse*>(&onvifMedia__GetOSDOptionsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__GetOSDOptionsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__GetOSDOptionsResponse.soap_get(soap, "onvifMedia:GetOSDOptionsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::SetOSD(const char *endpoint, const char *soap_action, _onvifMedia__SetOSD *onvifMedia__SetOSD, _onvifMedia__SetOSDResponse &onvifMedia__SetOSDResponse)
{
    struct __onvifMedia__SetOSD soap_tmp___onvifMedia__SetOSD;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/SetOSD";
    soap_tmp___onvifMedia__SetOSD.onvifMedia__SetOSD = onvifMedia__SetOSD;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__SetOSD(soap, &soap_tmp___onvifMedia__SetOSD);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__SetOSD(soap, &soap_tmp___onvifMedia__SetOSD, "-onvifMedia:SetOSD", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__SetOSD(soap, &soap_tmp___onvifMedia__SetOSD, "-onvifMedia:SetOSD", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__SetOSDResponse*>(&onvifMedia__SetOSDResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__SetOSDResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__SetOSDResponse.soap_get(soap, "onvifMedia:SetOSDResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::CreateOSD(const char *endpoint, const char *soap_action, _onvifMedia__CreateOSD *onvifMedia__CreateOSD, _onvifMedia__CreateOSDResponse &onvifMedia__CreateOSDResponse)
{
    struct __onvifMedia__CreateOSD soap_tmp___onvifMedia__CreateOSD;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/CreateOSD";
    soap_tmp___onvifMedia__CreateOSD.onvifMedia__CreateOSD = onvifMedia__CreateOSD;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__CreateOSD(soap, &soap_tmp___onvifMedia__CreateOSD);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__CreateOSD(soap, &soap_tmp___onvifMedia__CreateOSD, "-onvifMedia:CreateOSD", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__CreateOSD(soap, &soap_tmp___onvifMedia__CreateOSD, "-onvifMedia:CreateOSD", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__CreateOSDResponse*>(&onvifMedia__CreateOSDResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__CreateOSDResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__CreateOSDResponse.soap_get(soap, "onvifMedia:CreateOSDResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int MediaBindingProxy::DeleteOSD(const char *endpoint, const char *soap_action, _onvifMedia__DeleteOSD *onvifMedia__DeleteOSD, _onvifMedia__DeleteOSDResponse &onvifMedia__DeleteOSDResponse)
{
    struct __onvifMedia__DeleteOSD soap_tmp___onvifMedia__DeleteOSD;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver10/media/wsdl/DeleteOSD";
    soap_tmp___onvifMedia__DeleteOSD.onvifMedia__DeleteOSD = onvifMedia__DeleteOSD;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifMedia__DeleteOSD(soap, &soap_tmp___onvifMedia__DeleteOSD);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifMedia__DeleteOSD(soap, &soap_tmp___onvifMedia__DeleteOSD, "-onvifMedia:DeleteOSD", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifMedia__DeleteOSD(soap, &soap_tmp___onvifMedia__DeleteOSD, "-onvifMedia:DeleteOSD", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifMedia__DeleteOSDResponse*>(&onvifMedia__DeleteOSDResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifMedia__DeleteOSDResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifMedia__DeleteOSDResponse.soap_get(soap, "onvifMedia:DeleteOSDResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}
/* End of client proxy code */
