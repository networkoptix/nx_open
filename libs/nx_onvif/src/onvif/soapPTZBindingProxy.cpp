/* soapPTZBindingProxy.cpp
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapPTZBindingProxy.h"

PTZBindingProxy::PTZBindingProxy()
{
    this->soap = soap_new();
    this->soap_own = true;
    PTZBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

PTZBindingProxy::PTZBindingProxy(const PTZBindingProxy& rhs)
{
    this->soap = rhs.soap;
    this->soap_own = false;
    this->soap_endpoint = rhs.soap_endpoint;
}

PTZBindingProxy::PTZBindingProxy(struct soap *_soap)
{
    this->soap = _soap;
    this->soap_own = false;
    PTZBindingProxy_init(_soap->imode, _soap->omode);
}

PTZBindingProxy::PTZBindingProxy(const char *endpoint)
{
    this->soap = soap_new();
    this->soap_own = true;
    PTZBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
    soap_endpoint = endpoint;
}

PTZBindingProxy::PTZBindingProxy(soap_mode iomode)
{
    this->soap = soap_new();
    this->soap_own = true;
    PTZBindingProxy_init(iomode, iomode);
}

PTZBindingProxy::PTZBindingProxy(const char *endpoint, soap_mode iomode)
{
    this->soap = soap_new();
    this->soap_own = true;
    PTZBindingProxy_init(iomode, iomode);
    soap_endpoint = endpoint;
}

PTZBindingProxy::PTZBindingProxy(soap_mode imode, soap_mode omode)
{
    this->soap = soap_new();
    this->soap_own = true;
    PTZBindingProxy_init(imode, omode);
}

PTZBindingProxy::~PTZBindingProxy()
{
    if (this->soap_own)
        soap_free(this->soap);
}

void PTZBindingProxy::PTZBindingProxy_init(soap_mode imode, soap_mode omode)
{
    soap_imode(this->soap, imode);
    soap_omode(this->soap, omode);
    soap_endpoint = NULL;

    // Optimized namespace list for PTZ web service.
    static const struct Namespace namespaces[] = {
        // SOAP envelope and SOAP encoding.
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},

        // XML schema instance and XML schema definition.
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},

        // XML MIME definition and XML-binary Optimized Packaging.
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},

        // Web service security and web service security utility (used in SOAP headers).
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},

        // ONVIF schema.
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        // ONVIF PTZ.
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},

        {NULL, NULL, NULL, NULL}
    };

#if 0
    // Raw namespace list for PTZ web service.
    static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"onvifPacs", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"onvifAccessControl", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"onvifAccessRules", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"onvifActionEngine", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"onvifAdvancedSecurity-assb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
        {"onvifAdvancedSecurity-db", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
        {"onvifAdvancedSecurity-kb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
        {"onvifAdvancedSecurity-tsb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
        {"onvifAdvancedSecurity", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"onvifAnalytics-aeb", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
        {"onvifAnalytics-reb", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
        {"onvifAnalytics", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"onvifAnalyticsDevice", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"onvifCredential", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"onvifDisplay", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"onvifDoorControl", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"onvifEvents-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
        {"onvifEvents-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
        {"onvifEvents-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
        {"onvifEvents-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
        {"onvifEvents-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
        {"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"onvifEvents-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
        {"onvifEvents-psmb", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
        {"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"onvifEvents-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
        {"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"onvifMedia2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"onvifNetwork-dlb", "http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding", NULL, NULL},
        {"onvifNetwork-rdb", "http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding", NULL, NULL},
        {"onvifNetwork", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"onvifProvisioning", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"onvifReceiver", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"onvifRecording", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"onvifReplay", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"onvifScedule", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"onvifSearch", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {"onvifThermal", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
#endif

    soap_set_namespaces(this->soap, namespaces);
}

PTZBindingProxy *PTZBindingProxy::copy()
{
    PTZBindingProxy *dup = SOAP_NEW_UNMANAGED(PTZBindingProxy);
    if (dup)
    {
        soap_done(dup->soap);
        soap_copy_context(dup->soap, this->soap);
    }
    return dup;
}

PTZBindingProxy& PTZBindingProxy::operator=(const PTZBindingProxy& rhs)
{
    if (this->soap != rhs.soap)
    {
        if (this->soap_own)
            soap_free(this->soap);
        this->soap = rhs.soap;
        this->soap_own = false;
        this->soap_endpoint = rhs.soap_endpoint;
    }
    return *this;
}

void PTZBindingProxy::destroy()
{
    soap_destroy(this->soap);
    soap_end(this->soap);
}

void PTZBindingProxy::reset()
{
    this->destroy();
    soap_done(this->soap);
    soap_initialize(this->soap);
    PTZBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void PTZBindingProxy::soap_noheader()
{
    this->soap->header = NULL;
}

void PTZBindingProxy::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *SubscriptionId)
{
    ::soap_header(this->soap);
    this->soap->header->wsa5__MessageID = wsa5__MessageID;
    this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
    this->soap->header->wsa5__From = wsa5__From;
    this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
    this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
    this->soap->header->wsa5__To = wsa5__To;
    this->soap->header->wsa5__Action = wsa5__Action;
    this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
    this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
    this->soap->header->wsse__Security = wsse__Security;
    this->soap->header->SubscriptionId = SubscriptionId;
}

::SOAP_ENV__Header *PTZBindingProxy::soap_header()
{
    return this->soap->header;
}

::SOAP_ENV__Fault *PTZBindingProxy::soap_fault()
{
    return this->soap->fault;
}

const char *PTZBindingProxy::soap_fault_string()
{
    return *soap_faultstring(this->soap);
}

const char *PTZBindingProxy::soap_fault_detail()
{
    return *soap_faultdetail(this->soap);
}

int PTZBindingProxy::soap_close_socket()
{
    return soap_closesock(this->soap);
}

int PTZBindingProxy::soap_force_close_socket()
{
    return soap_force_closesock(this->soap);
}

void PTZBindingProxy::soap_print_fault(FILE *fd)
{
    ::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void PTZBindingProxy::soap_stream_fault(std::ostream& os)
{
    ::soap_stream_fault(this->soap, os);
}
#endif

char *PTZBindingProxy::soap_sprint_fault(char *buf, size_t len)
{
    return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int PTZBindingProxy::GetServiceCapabilities(const char *endpoint, const char *soap_action, _onvifPtz__GetServiceCapabilities *onvifPtz__GetServiceCapabilities, _onvifPtz__GetServiceCapabilitiesResponse &onvifPtz__GetServiceCapabilitiesResponse)
{
    struct __onvifPtz__GetServiceCapabilities soap_tmp___onvifPtz__GetServiceCapabilities;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities";
    soap_tmp___onvifPtz__GetServiceCapabilities.onvifPtz__GetServiceCapabilities = onvifPtz__GetServiceCapabilities;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GetServiceCapabilities(soap, &soap_tmp___onvifPtz__GetServiceCapabilities);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GetServiceCapabilities(soap, &soap_tmp___onvifPtz__GetServiceCapabilities, "-onvifPtz:GetServiceCapabilities", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GetServiceCapabilities(soap, &soap_tmp___onvifPtz__GetServiceCapabilities, "-onvifPtz:GetServiceCapabilities", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GetServiceCapabilitiesResponse*>(&onvifPtz__GetServiceCapabilitiesResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GetServiceCapabilitiesResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GetServiceCapabilitiesResponse.soap_get(soap, "onvifPtz:GetServiceCapabilitiesResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::GetConfigurations(const char *endpoint, const char *soap_action, _onvifPtz__GetConfigurations *onvifPtz__GetConfigurations, _onvifPtz__GetConfigurationsResponse &onvifPtz__GetConfigurationsResponse)
{
    struct __onvifPtz__GetConfigurations soap_tmp___onvifPtz__GetConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations";
    soap_tmp___onvifPtz__GetConfigurations.onvifPtz__GetConfigurations = onvifPtz__GetConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GetConfigurations(soap, &soap_tmp___onvifPtz__GetConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GetConfigurations(soap, &soap_tmp___onvifPtz__GetConfigurations, "-onvifPtz:GetConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GetConfigurations(soap, &soap_tmp___onvifPtz__GetConfigurations, "-onvifPtz:GetConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GetConfigurationsResponse*>(&onvifPtz__GetConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GetConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GetConfigurationsResponse.soap_get(soap, "onvifPtz:GetConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::GetPresets(const char *endpoint, const char *soap_action, _onvifPtz__GetPresets *onvifPtz__GetPresets, _onvifPtz__GetPresetsResponse &onvifPtz__GetPresetsResponse)
{
    struct __onvifPtz__GetPresets soap_tmp___onvifPtz__GetPresets;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetPresets";
    soap_tmp___onvifPtz__GetPresets.onvifPtz__GetPresets = onvifPtz__GetPresets;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GetPresets(soap, &soap_tmp___onvifPtz__GetPresets);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GetPresets(soap, &soap_tmp___onvifPtz__GetPresets, "-onvifPtz:GetPresets", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GetPresets(soap, &soap_tmp___onvifPtz__GetPresets, "-onvifPtz:GetPresets", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GetPresetsResponse*>(&onvifPtz__GetPresetsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GetPresetsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GetPresetsResponse.soap_get(soap, "onvifPtz:GetPresetsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::SetPreset(const char *endpoint, const char *soap_action, _onvifPtz__SetPreset *onvifPtz__SetPreset, _onvifPtz__SetPresetResponse &onvifPtz__SetPresetResponse)
{
    struct __onvifPtz__SetPreset soap_tmp___onvifPtz__SetPreset;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/SetPreset";
    soap_tmp___onvifPtz__SetPreset.onvifPtz__SetPreset = onvifPtz__SetPreset;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__SetPreset(soap, &soap_tmp___onvifPtz__SetPreset);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__SetPreset(soap, &soap_tmp___onvifPtz__SetPreset, "-onvifPtz:SetPreset", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__SetPreset(soap, &soap_tmp___onvifPtz__SetPreset, "-onvifPtz:SetPreset", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__SetPresetResponse*>(&onvifPtz__SetPresetResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__SetPresetResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__SetPresetResponse.soap_get(soap, "onvifPtz:SetPresetResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::RemovePreset(const char *endpoint, const char *soap_action, _onvifPtz__RemovePreset *onvifPtz__RemovePreset, _onvifPtz__RemovePresetResponse &onvifPtz__RemovePresetResponse)
{
    struct __onvifPtz__RemovePreset soap_tmp___onvifPtz__RemovePreset;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset";
    soap_tmp___onvifPtz__RemovePreset.onvifPtz__RemovePreset = onvifPtz__RemovePreset;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__RemovePreset(soap, &soap_tmp___onvifPtz__RemovePreset);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__RemovePreset(soap, &soap_tmp___onvifPtz__RemovePreset, "-onvifPtz:RemovePreset", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__RemovePreset(soap, &soap_tmp___onvifPtz__RemovePreset, "-onvifPtz:RemovePreset", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__RemovePresetResponse*>(&onvifPtz__RemovePresetResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__RemovePresetResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__RemovePresetResponse.soap_get(soap, "onvifPtz:RemovePresetResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::GotoPreset(const char *endpoint, const char *soap_action, _onvifPtz__GotoPreset *onvifPtz__GotoPreset, _onvifPtz__GotoPresetResponse &onvifPtz__GotoPresetResponse)
{
    struct __onvifPtz__GotoPreset soap_tmp___onvifPtz__GotoPreset;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset";
    soap_tmp___onvifPtz__GotoPreset.onvifPtz__GotoPreset = onvifPtz__GotoPreset;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GotoPreset(soap, &soap_tmp___onvifPtz__GotoPreset);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GotoPreset(soap, &soap_tmp___onvifPtz__GotoPreset, "-onvifPtz:GotoPreset", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GotoPreset(soap, &soap_tmp___onvifPtz__GotoPreset, "-onvifPtz:GotoPreset", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GotoPresetResponse*>(&onvifPtz__GotoPresetResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GotoPresetResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GotoPresetResponse.soap_get(soap, "onvifPtz:GotoPresetResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::GetStatus(const char *endpoint, const char *soap_action, _onvifPtz__GetStatus *onvifPtz__GetStatus, _onvifPtz__GetStatusResponse &onvifPtz__GetStatusResponse)
{
    struct __onvifPtz__GetStatus soap_tmp___onvifPtz__GetStatus;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetStatus";
    soap_tmp___onvifPtz__GetStatus.onvifPtz__GetStatus = onvifPtz__GetStatus;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GetStatus(soap, &soap_tmp___onvifPtz__GetStatus);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GetStatus(soap, &soap_tmp___onvifPtz__GetStatus, "-onvifPtz:GetStatus", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GetStatus(soap, &soap_tmp___onvifPtz__GetStatus, "-onvifPtz:GetStatus", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GetStatusResponse*>(&onvifPtz__GetStatusResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GetStatusResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GetStatusResponse.soap_get(soap, "onvifPtz:GetStatusResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::GetConfiguration(const char *endpoint, const char *soap_action, _onvifPtz__GetConfiguration *onvifPtz__GetConfiguration, _onvifPtz__GetConfigurationResponse &onvifPtz__GetConfigurationResponse)
{
    struct __onvifPtz__GetConfiguration soap_tmp___onvifPtz__GetConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration";
    soap_tmp___onvifPtz__GetConfiguration.onvifPtz__GetConfiguration = onvifPtz__GetConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GetConfiguration(soap, &soap_tmp___onvifPtz__GetConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GetConfiguration(soap, &soap_tmp___onvifPtz__GetConfiguration, "-onvifPtz:GetConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GetConfiguration(soap, &soap_tmp___onvifPtz__GetConfiguration, "-onvifPtz:GetConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GetConfigurationResponse*>(&onvifPtz__GetConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GetConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GetConfigurationResponse.soap_get(soap, "onvifPtz:GetConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::GetNodes(const char *endpoint, const char *soap_action, _onvifPtz__GetNodes *onvifPtz__GetNodes, _onvifPtz__GetNodesResponse &onvifPtz__GetNodesResponse)
{
    struct __onvifPtz__GetNodes soap_tmp___onvifPtz__GetNodes;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetNodes";
    soap_tmp___onvifPtz__GetNodes.onvifPtz__GetNodes = onvifPtz__GetNodes;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GetNodes(soap, &soap_tmp___onvifPtz__GetNodes);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GetNodes(soap, &soap_tmp___onvifPtz__GetNodes, "-onvifPtz:GetNodes", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GetNodes(soap, &soap_tmp___onvifPtz__GetNodes, "-onvifPtz:GetNodes", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GetNodesResponse*>(&onvifPtz__GetNodesResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GetNodesResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GetNodesResponse.soap_get(soap, "onvifPtz:GetNodesResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::GetNode(const char *endpoint, const char *soap_action, _onvifPtz__GetNode *onvifPtz__GetNode, _onvifPtz__GetNodeResponse &onvifPtz__GetNodeResponse)
{
    struct __onvifPtz__GetNode soap_tmp___onvifPtz__GetNode;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetNode";
    soap_tmp___onvifPtz__GetNode.onvifPtz__GetNode = onvifPtz__GetNode;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GetNode(soap, &soap_tmp___onvifPtz__GetNode);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GetNode(soap, &soap_tmp___onvifPtz__GetNode, "-onvifPtz:GetNode", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GetNode(soap, &soap_tmp___onvifPtz__GetNode, "-onvifPtz:GetNode", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GetNodeResponse*>(&onvifPtz__GetNodeResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GetNodeResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GetNodeResponse.soap_get(soap, "onvifPtz:GetNodeResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::SetConfiguration(const char *endpoint, const char *soap_action, _onvifPtz__SetConfiguration *onvifPtz__SetConfiguration, _onvifPtz__SetConfigurationResponse &onvifPtz__SetConfigurationResponse)
{
    struct __onvifPtz__SetConfiguration soap_tmp___onvifPtz__SetConfiguration;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration";
    soap_tmp___onvifPtz__SetConfiguration.onvifPtz__SetConfiguration = onvifPtz__SetConfiguration;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__SetConfiguration(soap, &soap_tmp___onvifPtz__SetConfiguration);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__SetConfiguration(soap, &soap_tmp___onvifPtz__SetConfiguration, "-onvifPtz:SetConfiguration", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__SetConfiguration(soap, &soap_tmp___onvifPtz__SetConfiguration, "-onvifPtz:SetConfiguration", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__SetConfigurationResponse*>(&onvifPtz__SetConfigurationResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__SetConfigurationResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__SetConfigurationResponse.soap_get(soap, "onvifPtz:SetConfigurationResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::GetConfigurationOptions(const char *endpoint, const char *soap_action, _onvifPtz__GetConfigurationOptions *onvifPtz__GetConfigurationOptions, _onvifPtz__GetConfigurationOptionsResponse &onvifPtz__GetConfigurationOptionsResponse)
{
    struct __onvifPtz__GetConfigurationOptions soap_tmp___onvifPtz__GetConfigurationOptions;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions";
    soap_tmp___onvifPtz__GetConfigurationOptions.onvifPtz__GetConfigurationOptions = onvifPtz__GetConfigurationOptions;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GetConfigurationOptions(soap, &soap_tmp___onvifPtz__GetConfigurationOptions);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GetConfigurationOptions(soap, &soap_tmp___onvifPtz__GetConfigurationOptions, "-onvifPtz:GetConfigurationOptions", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GetConfigurationOptions(soap, &soap_tmp___onvifPtz__GetConfigurationOptions, "-onvifPtz:GetConfigurationOptions", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GetConfigurationOptionsResponse*>(&onvifPtz__GetConfigurationOptionsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GetConfigurationOptionsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GetConfigurationOptionsResponse.soap_get(soap, "onvifPtz:GetConfigurationOptionsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::GotoHomePosition(const char *endpoint, const char *soap_action, _onvifPtz__GotoHomePosition *onvifPtz__GotoHomePosition, _onvifPtz__GotoHomePositionResponse &onvifPtz__GotoHomePositionResponse)
{
    struct __onvifPtz__GotoHomePosition soap_tmp___onvifPtz__GotoHomePosition;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition";
    soap_tmp___onvifPtz__GotoHomePosition.onvifPtz__GotoHomePosition = onvifPtz__GotoHomePosition;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GotoHomePosition(soap, &soap_tmp___onvifPtz__GotoHomePosition);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GotoHomePosition(soap, &soap_tmp___onvifPtz__GotoHomePosition, "-onvifPtz:GotoHomePosition", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GotoHomePosition(soap, &soap_tmp___onvifPtz__GotoHomePosition, "-onvifPtz:GotoHomePosition", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GotoHomePositionResponse*>(&onvifPtz__GotoHomePositionResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GotoHomePositionResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GotoHomePositionResponse.soap_get(soap, "onvifPtz:GotoHomePositionResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::SetHomePosition(const char *endpoint, const char *soap_action, _onvifPtz__SetHomePosition *onvifPtz__SetHomePosition, _onvifPtz__SetHomePositionResponse &onvifPtz__SetHomePositionResponse)
{
    struct __onvifPtz__SetHomePosition soap_tmp___onvifPtz__SetHomePosition;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition";
    soap_tmp___onvifPtz__SetHomePosition.onvifPtz__SetHomePosition = onvifPtz__SetHomePosition;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__SetHomePosition(soap, &soap_tmp___onvifPtz__SetHomePosition);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__SetHomePosition(soap, &soap_tmp___onvifPtz__SetHomePosition, "-onvifPtz:SetHomePosition", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__SetHomePosition(soap, &soap_tmp___onvifPtz__SetHomePosition, "-onvifPtz:SetHomePosition", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__SetHomePositionResponse*>(&onvifPtz__SetHomePositionResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__SetHomePositionResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__SetHomePositionResponse.soap_get(soap, "onvifPtz:SetHomePositionResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::ContinuousMove(const char *endpoint, const char *soap_action, _onvifPtz__ContinuousMove *onvifPtz__ContinuousMove, _onvifPtz__ContinuousMoveResponse &onvifPtz__ContinuousMoveResponse)
{
    struct __onvifPtz__ContinuousMove soap_tmp___onvifPtz__ContinuousMove;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove";
    soap_tmp___onvifPtz__ContinuousMove.onvifPtz__ContinuousMove = onvifPtz__ContinuousMove;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__ContinuousMove(soap, &soap_tmp___onvifPtz__ContinuousMove);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__ContinuousMove(soap, &soap_tmp___onvifPtz__ContinuousMove, "-onvifPtz:ContinuousMove", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__ContinuousMove(soap, &soap_tmp___onvifPtz__ContinuousMove, "-onvifPtz:ContinuousMove", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__ContinuousMoveResponse*>(&onvifPtz__ContinuousMoveResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__ContinuousMoveResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__ContinuousMoveResponse.soap_get(soap, "onvifPtz:ContinuousMoveResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::RelativeMove(const char *endpoint, const char *soap_action, _onvifPtz__RelativeMove *onvifPtz__RelativeMove, _onvifPtz__RelativeMoveResponse &onvifPtz__RelativeMoveResponse)
{
    struct __onvifPtz__RelativeMove soap_tmp___onvifPtz__RelativeMove;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove";
    soap_tmp___onvifPtz__RelativeMove.onvifPtz__RelativeMove = onvifPtz__RelativeMove;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__RelativeMove(soap, &soap_tmp___onvifPtz__RelativeMove);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__RelativeMove(soap, &soap_tmp___onvifPtz__RelativeMove, "-onvifPtz:RelativeMove", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__RelativeMove(soap, &soap_tmp___onvifPtz__RelativeMove, "-onvifPtz:RelativeMove", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__RelativeMoveResponse*>(&onvifPtz__RelativeMoveResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__RelativeMoveResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__RelativeMoveResponse.soap_get(soap, "onvifPtz:RelativeMoveResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::SendAuxiliaryCommand(const char *endpoint, const char *soap_action, _onvifPtz__SendAuxiliaryCommand *onvifPtz__SendAuxiliaryCommand, _onvifPtz__SendAuxiliaryCommandResponse &onvifPtz__SendAuxiliaryCommandResponse)
{
    struct __onvifPtz__SendAuxiliaryCommand soap_tmp___onvifPtz__SendAuxiliaryCommand;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand";
    soap_tmp___onvifPtz__SendAuxiliaryCommand.onvifPtz__SendAuxiliaryCommand = onvifPtz__SendAuxiliaryCommand;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__SendAuxiliaryCommand(soap, &soap_tmp___onvifPtz__SendAuxiliaryCommand);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__SendAuxiliaryCommand(soap, &soap_tmp___onvifPtz__SendAuxiliaryCommand, "-onvifPtz:SendAuxiliaryCommand", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__SendAuxiliaryCommand(soap, &soap_tmp___onvifPtz__SendAuxiliaryCommand, "-onvifPtz:SendAuxiliaryCommand", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__SendAuxiliaryCommandResponse*>(&onvifPtz__SendAuxiliaryCommandResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__SendAuxiliaryCommandResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__SendAuxiliaryCommandResponse.soap_get(soap, "onvifPtz:SendAuxiliaryCommandResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::AbsoluteMove(const char *endpoint, const char *soap_action, _onvifPtz__AbsoluteMove *onvifPtz__AbsoluteMove, _onvifPtz__AbsoluteMoveResponse &onvifPtz__AbsoluteMoveResponse)
{
    struct __onvifPtz__AbsoluteMove soap_tmp___onvifPtz__AbsoluteMove;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove";
    soap_tmp___onvifPtz__AbsoluteMove.onvifPtz__AbsoluteMove = onvifPtz__AbsoluteMove;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__AbsoluteMove(soap, &soap_tmp___onvifPtz__AbsoluteMove);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__AbsoluteMove(soap, &soap_tmp___onvifPtz__AbsoluteMove, "-onvifPtz:AbsoluteMove", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__AbsoluteMove(soap, &soap_tmp___onvifPtz__AbsoluteMove, "-onvifPtz:AbsoluteMove", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__AbsoluteMoveResponse*>(&onvifPtz__AbsoluteMoveResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__AbsoluteMoveResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__AbsoluteMoveResponse.soap_get(soap, "onvifPtz:AbsoluteMoveResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::GeoMove(const char *endpoint, const char *soap_action, _onvifPtz__GeoMove *onvifPtz__GeoMove, _onvifPtz__GeoMoveResponse &onvifPtz__GeoMoveResponse)
{
    struct __onvifPtz__GeoMove soap_tmp___onvifPtz__GeoMove;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GeoMove";
    soap_tmp___onvifPtz__GeoMove.onvifPtz__GeoMove = onvifPtz__GeoMove;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GeoMove(soap, &soap_tmp___onvifPtz__GeoMove);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GeoMove(soap, &soap_tmp___onvifPtz__GeoMove, "-onvifPtz:GeoMove", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GeoMove(soap, &soap_tmp___onvifPtz__GeoMove, "-onvifPtz:GeoMove", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GeoMoveResponse*>(&onvifPtz__GeoMoveResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GeoMoveResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GeoMoveResponse.soap_get(soap, "onvifPtz:GeoMoveResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::Stop(const char *endpoint, const char *soap_action, _onvifPtz__Stop *onvifPtz__Stop, _onvifPtz__StopResponse &onvifPtz__StopResponse)
{
    struct __onvifPtz__Stop soap_tmp___onvifPtz__Stop;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/Stop";
    soap_tmp___onvifPtz__Stop.onvifPtz__Stop = onvifPtz__Stop;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__Stop(soap, &soap_tmp___onvifPtz__Stop);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__Stop(soap, &soap_tmp___onvifPtz__Stop, "-onvifPtz:Stop", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__Stop(soap, &soap_tmp___onvifPtz__Stop, "-onvifPtz:Stop", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__StopResponse*>(&onvifPtz__StopResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__StopResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__StopResponse.soap_get(soap, "onvifPtz:StopResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::GetPresetTours(const char *endpoint, const char *soap_action, _onvifPtz__GetPresetTours *onvifPtz__GetPresetTours, _onvifPtz__GetPresetToursResponse &onvifPtz__GetPresetToursResponse)
{
    struct __onvifPtz__GetPresetTours soap_tmp___onvifPtz__GetPresetTours;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours";
    soap_tmp___onvifPtz__GetPresetTours.onvifPtz__GetPresetTours = onvifPtz__GetPresetTours;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GetPresetTours(soap, &soap_tmp___onvifPtz__GetPresetTours);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GetPresetTours(soap, &soap_tmp___onvifPtz__GetPresetTours, "-onvifPtz:GetPresetTours", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GetPresetTours(soap, &soap_tmp___onvifPtz__GetPresetTours, "-onvifPtz:GetPresetTours", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GetPresetToursResponse*>(&onvifPtz__GetPresetToursResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GetPresetToursResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GetPresetToursResponse.soap_get(soap, "onvifPtz:GetPresetToursResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::GetPresetTour(const char *endpoint, const char *soap_action, _onvifPtz__GetPresetTour *onvifPtz__GetPresetTour, _onvifPtz__GetPresetTourResponse &onvifPtz__GetPresetTourResponse)
{
    struct __onvifPtz__GetPresetTour soap_tmp___onvifPtz__GetPresetTour;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour";
    soap_tmp___onvifPtz__GetPresetTour.onvifPtz__GetPresetTour = onvifPtz__GetPresetTour;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GetPresetTour(soap, &soap_tmp___onvifPtz__GetPresetTour);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GetPresetTour(soap, &soap_tmp___onvifPtz__GetPresetTour, "-onvifPtz:GetPresetTour", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GetPresetTour(soap, &soap_tmp___onvifPtz__GetPresetTour, "-onvifPtz:GetPresetTour", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GetPresetTourResponse*>(&onvifPtz__GetPresetTourResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GetPresetTourResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GetPresetTourResponse.soap_get(soap, "onvifPtz:GetPresetTourResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::GetPresetTourOptions(const char *endpoint, const char *soap_action, _onvifPtz__GetPresetTourOptions *onvifPtz__GetPresetTourOptions, _onvifPtz__GetPresetTourOptionsResponse &onvifPtz__GetPresetTourOptionsResponse)
{
    struct __onvifPtz__GetPresetTourOptions soap_tmp___onvifPtz__GetPresetTourOptions;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions";
    soap_tmp___onvifPtz__GetPresetTourOptions.onvifPtz__GetPresetTourOptions = onvifPtz__GetPresetTourOptions;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GetPresetTourOptions(soap, &soap_tmp___onvifPtz__GetPresetTourOptions);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GetPresetTourOptions(soap, &soap_tmp___onvifPtz__GetPresetTourOptions, "-onvifPtz:GetPresetTourOptions", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GetPresetTourOptions(soap, &soap_tmp___onvifPtz__GetPresetTourOptions, "-onvifPtz:GetPresetTourOptions", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GetPresetTourOptionsResponse*>(&onvifPtz__GetPresetTourOptionsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GetPresetTourOptionsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GetPresetTourOptionsResponse.soap_get(soap, "onvifPtz:GetPresetTourOptionsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::CreatePresetTour(const char *endpoint, const char *soap_action, _onvifPtz__CreatePresetTour *onvifPtz__CreatePresetTour, _onvifPtz__CreatePresetTourResponse &onvifPtz__CreatePresetTourResponse)
{
    struct __onvifPtz__CreatePresetTour soap_tmp___onvifPtz__CreatePresetTour;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour";
    soap_tmp___onvifPtz__CreatePresetTour.onvifPtz__CreatePresetTour = onvifPtz__CreatePresetTour;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__CreatePresetTour(soap, &soap_tmp___onvifPtz__CreatePresetTour);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__CreatePresetTour(soap, &soap_tmp___onvifPtz__CreatePresetTour, "-onvifPtz:CreatePresetTour", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__CreatePresetTour(soap, &soap_tmp___onvifPtz__CreatePresetTour, "-onvifPtz:CreatePresetTour", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__CreatePresetTourResponse*>(&onvifPtz__CreatePresetTourResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__CreatePresetTourResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__CreatePresetTourResponse.soap_get(soap, "onvifPtz:CreatePresetTourResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::ModifyPresetTour(const char *endpoint, const char *soap_action, _onvifPtz__ModifyPresetTour *onvifPtz__ModifyPresetTour, _onvifPtz__ModifyPresetTourResponse &onvifPtz__ModifyPresetTourResponse)
{
    struct __onvifPtz__ModifyPresetTour soap_tmp___onvifPtz__ModifyPresetTour;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour";
    soap_tmp___onvifPtz__ModifyPresetTour.onvifPtz__ModifyPresetTour = onvifPtz__ModifyPresetTour;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__ModifyPresetTour(soap, &soap_tmp___onvifPtz__ModifyPresetTour);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__ModifyPresetTour(soap, &soap_tmp___onvifPtz__ModifyPresetTour, "-onvifPtz:ModifyPresetTour", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__ModifyPresetTour(soap, &soap_tmp___onvifPtz__ModifyPresetTour, "-onvifPtz:ModifyPresetTour", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__ModifyPresetTourResponse*>(&onvifPtz__ModifyPresetTourResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__ModifyPresetTourResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__ModifyPresetTourResponse.soap_get(soap, "onvifPtz:ModifyPresetTourResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::OperatePresetTour(const char *endpoint, const char *soap_action, _onvifPtz__OperatePresetTour *onvifPtz__OperatePresetTour, _onvifPtz__OperatePresetTourResponse &onvifPtz__OperatePresetTourResponse)
{
    struct __onvifPtz__OperatePresetTour soap_tmp___onvifPtz__OperatePresetTour;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour";
    soap_tmp___onvifPtz__OperatePresetTour.onvifPtz__OperatePresetTour = onvifPtz__OperatePresetTour;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__OperatePresetTour(soap, &soap_tmp___onvifPtz__OperatePresetTour);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__OperatePresetTour(soap, &soap_tmp___onvifPtz__OperatePresetTour, "-onvifPtz:OperatePresetTour", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__OperatePresetTour(soap, &soap_tmp___onvifPtz__OperatePresetTour, "-onvifPtz:OperatePresetTour", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__OperatePresetTourResponse*>(&onvifPtz__OperatePresetTourResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__OperatePresetTourResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__OperatePresetTourResponse.soap_get(soap, "onvifPtz:OperatePresetTourResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::RemovePresetTour(const char *endpoint, const char *soap_action, _onvifPtz__RemovePresetTour *onvifPtz__RemovePresetTour, _onvifPtz__RemovePresetTourResponse &onvifPtz__RemovePresetTourResponse)
{
    struct __onvifPtz__RemovePresetTour soap_tmp___onvifPtz__RemovePresetTour;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour";
    soap_tmp___onvifPtz__RemovePresetTour.onvifPtz__RemovePresetTour = onvifPtz__RemovePresetTour;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__RemovePresetTour(soap, &soap_tmp___onvifPtz__RemovePresetTour);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__RemovePresetTour(soap, &soap_tmp___onvifPtz__RemovePresetTour, "-onvifPtz:RemovePresetTour", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__RemovePresetTour(soap, &soap_tmp___onvifPtz__RemovePresetTour, "-onvifPtz:RemovePresetTour", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__RemovePresetTourResponse*>(&onvifPtz__RemovePresetTourResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__RemovePresetTourResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__RemovePresetTourResponse.soap_get(soap, "onvifPtz:RemovePresetTourResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}

int PTZBindingProxy::GetCompatibleConfigurations(const char *endpoint, const char *soap_action, _onvifPtz__GetCompatibleConfigurations *onvifPtz__GetCompatibleConfigurations, _onvifPtz__GetCompatibleConfigurationsResponse &onvifPtz__GetCompatibleConfigurationsResponse)
{
    struct __onvifPtz__GetCompatibleConfigurations soap_tmp___onvifPtz__GetCompatibleConfigurations;
    if (endpoint)
        soap_endpoint = endpoint;
    if (soap_action == NULL)
        soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations";
    soap_tmp___onvifPtz__GetCompatibleConfigurations.onvifPtz__GetCompatibleConfigurations = onvifPtz__GetCompatibleConfigurations;
    soap_begin(soap);
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    soap_serialize___onvifPtz__GetCompatibleConfigurations(soap, &soap_tmp___onvifPtz__GetCompatibleConfigurations);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || soap_put___onvifPtz__GetCompatibleConfigurations(soap, &soap_tmp___onvifPtz__GetCompatibleConfigurations, "-onvifPtz:GetCompatibleConfigurations", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    }
    if (soap_end_count(soap))
        return soap->error;
    if (soap_connect(soap, soap_endpoint, soap_action)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || soap_put___onvifPtz__GetCompatibleConfigurations(soap, &soap_tmp___onvifPtz__GetCompatibleConfigurations, "-onvifPtz:GetCompatibleConfigurations", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap_closesock(soap);
    if (!static_cast<_onvifPtz__GetCompatibleConfigurationsResponse*>(&onvifPtz__GetCompatibleConfigurationsResponse)) // NULL ref?
        return soap_closesock(soap);
    onvifPtz__GetCompatibleConfigurationsResponse.soap_default(soap);
    if (soap_begin_recv(soap)
     || soap_envelope_begin_in(soap)
     || soap_recv_header(soap)
     || soap_body_begin_in(soap))
        return soap_closesock(soap);
    onvifPtz__GetCompatibleConfigurationsResponse.soap_get(soap, "onvifPtz:GetCompatibleConfigurationsResponse", NULL);
    if (soap->error)
        return soap_recv_fault(soap, 0);
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap_closesock(soap);
    return soap_closesock(soap);
}
/* End of client proxy code */
