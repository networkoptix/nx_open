/* soapScheduleBindingService.cpp
   Generated by gSOAP 2.8.66 for ../result/interim/onvif.h_

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapScheduleBindingService.h"

ScheduleBindingService::ScheduleBindingService()
{
    this->soap = soap_new();
    this->soap_own = true;
    ScheduleBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ScheduleBindingService::ScheduleBindingService(const ScheduleBindingService& rhs)
{
    this->soap = rhs.soap;
    this->soap_own = false;
}

ScheduleBindingService::ScheduleBindingService(struct soap *_soap)
{
    this->soap = _soap;
    this->soap_own = false;
    ScheduleBindingService_init(_soap->imode, _soap->omode);
}

ScheduleBindingService::ScheduleBindingService(soap_mode iomode)
{
    this->soap = soap_new();
    this->soap_own = true;
    ScheduleBindingService_init(iomode, iomode);
}

ScheduleBindingService::ScheduleBindingService(soap_mode imode, soap_mode omode)
{
    this->soap = soap_new();
    this->soap_own = true;
    ScheduleBindingService_init(imode, omode);
}

ScheduleBindingService::~ScheduleBindingService()
{
    if (this->soap_own)
        soap_free(this->soap);
}

void ScheduleBindingService::ScheduleBindingService_init(soap_mode imode, soap_mode omode)
{
    soap_imode(this->soap, imode);
    soap_omode(this->soap, omode);
    static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
        {"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"chan", "http://schemas.microsoft.com/ws/2005/02/duplex", NULL, NULL},
        {"wsa5", "http://www.w3.org/2005/08/addressing", "http://schemas.xmlsoap.org/ws/2004/08/addressing", NULL},
        {"wsdd", "http://schemas.xmlsoap.org/ws/2005/04/discovery", NULL, NULL},
        {"c14n", "http://www.w3.org/2001/10/xml-exc-c14n#", NULL, NULL},
        {"ds", "http://www.w3.org/2000/09/xmldsig#", NULL, NULL},
        {"saml1", "urn:oasis:names:tc:SAML:1.0:assertion", NULL, NULL},
        {"saml2", "urn:oasis:names:tc:SAML:2.0:assertion", NULL, NULL},
        {"wsu", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd", NULL, NULL},
        {"xenc", "http://www.w3.org/2001/04/xmlenc#", NULL, NULL},
        {"wsc", "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512", NULL, NULL},
        {"wsse", "http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd", "http://docs.oasis-open.org/wss/oasis-wss-wssecurity-secext-1.1.xsd", NULL},
        {"onvifPacs", "http://www.onvif.org/ver10/pacs", NULL, NULL},
        {"xmime", "http://tempuri.org/xmime.xsd", NULL, NULL},
        {"xop", "http://www.w3.org/2004/08/xop/include", NULL, NULL},
        {"onvifXsd", "http://www.onvif.org/ver10/schema", NULL, NULL},
        {"oasisWsrf", "http://docs.oasis-open.org/wsrf/bf-2", NULL, NULL},
        {"oasisWsnT1", "http://docs.oasis-open.org/wsn/t-1", NULL, NULL},
        {"oasisWsrfR2", "http://docs.oasis-open.org/wsrf/r-2", NULL, NULL},
        {"onvifAccessControl", "http://www.onvif.org/ver10/accesscontrol/wsdl", NULL, NULL},
        {"onvifAccessRules", "http://www.onvif.org/ver10/accessrules/wsdl", NULL, NULL},
        {"onvifActionEngine", "http://www.onvif.org/ver10/actionengine/wsdl", NULL, NULL},
        {"onvifAdvancedSecurity-assb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/AdvancedSecurityServiceBinding", NULL, NULL},
        {"onvifAdvancedSecurity-db", "http://www.onvif.org/ver10/advancedsecurity/wsdl/Dot1XBinding", NULL, NULL},
        {"onvifAdvancedSecurity-kb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/KeystoreBinding", NULL, NULL},
        {"onvifAdvancedSecurity-tsb", "http://www.onvif.org/ver10/advancedsecurity/wsdl/TLSServerBinding", NULL, NULL},
        {"onvifAdvancedSecurity", "http://www.onvif.org/ver10/advancedsecurity/wsdl", NULL, NULL},
        {"onvifAnalytics-aeb", "http://www.onvif.org/ver20/analytics/wsdl/AnalyticsEngineBinding", NULL, NULL},
        {"onvifAnalytics-reb", "http://www.onvif.org/ver20/analytics/wsdl/RuleEngineBinding", NULL, NULL},
        {"onvifAnalytics", "http://www.onvif.org/ver20/analytics/wsdl", NULL, NULL},
        {"onvifAnalyticsDevice", "http://www.onvif.org/ver10/analyticsdevice/wsdl", NULL, NULL},
        {"onvifCredential", "http://www.onvif.org/ver10/credential/wsdl", NULL, NULL},
        {"onvifDevice", "http://www.onvif.org/ver10/device/wsdl", NULL, NULL},
        {"onvifDeviceIO", "http://www.onvif.org/ver10/deviceIO/wsdl", NULL, NULL},
        {"onvifDisplay", "http://www.onvif.org/ver10/display/wsdl", NULL, NULL},
        {"onvifDoorControl", "http://www.onvif.org/ver10/doorcontrol/wsdl", NULL, NULL},
        {"onvifEvents-cpb", "http://www.onvif.org/ver10/events/wsdl/CreatePullPointBinding", NULL, NULL},
        {"onvifEvents-eb", "http://www.onvif.org/ver10/events/wsdl/EventBinding", NULL, NULL},
        {"onvifEvents-ncb", "http://www.onvif.org/ver10/events/wsdl/NotificationConsumerBinding", NULL, NULL},
        {"onvifEvents-npb", "http://www.onvif.org/ver10/events/wsdl/NotificationProducerBinding", NULL, NULL},
        {"onvifEvents-ppb", "http://www.onvif.org/ver10/events/wsdl/PullPointBinding", NULL, NULL},
        {"onvifEvents", "http://www.onvif.org/ver10/events/wsdl", NULL, NULL},
        {"onvifEvents-pps", "http://www.onvif.org/ver10/events/wsdl/PullPointSubscriptionBinding", NULL, NULL},
        {"onvifEvents-psmb", "http://www.onvif.org/ver10/events/wsdl/PausableSubscriptionManagerBinding", NULL, NULL},
        {"oasisWsnB2", "http://docs.oasis-open.org/wsn/b-2", NULL, NULL},
        {"onvifEvents-smb", "http://www.onvif.org/ver10/events/wsdl/SubscriptionManagerBinding", NULL, NULL},
        {"onvifImg", "http://www.onvif.org/ver20/imaging/wsdl", NULL, NULL},
        {"onvifMedia", "http://www.onvif.org/ver10/media/wsdl", NULL, NULL},
        {"onvifMedia2", "http://www.onvif.org/ver20/media/wsdl", NULL, NULL},
        {"onvifNetwork-dlb", "http://www.onvif.org/ver10/network/wsdl/DiscoveryLookupBinding", NULL, NULL},
        {"onvifNetwork-rdb", "http://www.onvif.org/ver10/network/wsdl/RemoteDiscoveryBinding", NULL, NULL},
        {"onvifNetwork", "http://www.onvif.org/ver10/network/wsdl", NULL, NULL},
        {"onvifProvisioning", "http://www.onvif.org/ver10/provisioning/wsdl", NULL, NULL},
        {"onvifPtz", "http://www.onvif.org/ver20/ptz/wsdl", NULL, NULL},
        {"onvifReceiver", "http://www.onvif.org/ver10/receiver/wsdl", NULL, NULL},
        {"onvifRecording", "http://www.onvif.org/ver10/recording/wsdl", NULL, NULL},
        {"onvifReplay", "http://www.onvif.org/ver10/replay/wsdl", NULL, NULL},
        {"onvifScedule", "http://www.onvif.org/ver10/schedule/wsdl", NULL, NULL},
        {"onvifSearch", "http://www.onvif.org/ver10/search/wsdl", NULL, NULL},
        {"onvifThermal", "http://www.onvif.org/ver10/thermal/wsdl", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
    soap_set_namespaces(this->soap, namespaces);
}

void ScheduleBindingService::destroy()
{
    soap_destroy(this->soap);
    soap_end(this->soap);
}

void ScheduleBindingService::reset()
{
    this->destroy();
    soap_done(this->soap);
    soap_initialize(this->soap);
    ScheduleBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

#ifndef WITH_PURE_VIRTUAL
ScheduleBindingService *ScheduleBindingService::copy()
{
    ScheduleBindingService *dup = SOAP_NEW_UNMANAGED(ScheduleBindingService);
    if (dup)
    {
        soap_done(dup->soap);
        soap_copy_context(dup->soap, this->soap);
    }
    return dup;
}
#endif

ScheduleBindingService& ScheduleBindingService::operator=(const ScheduleBindingService& rhs)
{
    if (this->soap != rhs.soap)
    {
        if (this->soap_own)
            soap_free(this->soap);
        this->soap = rhs.soap;
        this->soap_own = false;
    }
    return *this;
}

int ScheduleBindingService::soap_close_socket()
{
    return soap_closesock(this->soap);
}

int ScheduleBindingService::soap_force_close_socket()
{
    return soap_force_closesock(this->soap);
}

int ScheduleBindingService::soap_senderfault(const char *string, const char *detailXML)
{
    return ::soap_sender_fault(this->soap, string, detailXML);
}

int ScheduleBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{
    return ::soap_sender_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

int ScheduleBindingService::soap_receiverfault(const char *string, const char *detailXML)
{
    return ::soap_receiver_fault(this->soap, string, detailXML);
}

int ScheduleBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{
    return ::soap_receiver_fault_subcode(this->soap, subcodeQName, string, detailXML);
}

void ScheduleBindingService::soap_print_fault(FILE *fd)
{
    ::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ScheduleBindingService::soap_stream_fault(std::ostream& os)
{
    ::soap_stream_fault(this->soap, os);
}
#endif

char *ScheduleBindingService::soap_sprint_fault(char *buf, size_t len)
{
    return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

void ScheduleBindingService::soap_noheader()
{
    this->soap->header = NULL;
}

void ScheduleBindingService::soap_header(char *wsa5__MessageID, struct wsa5__RelatesToType *wsa5__RelatesTo, struct wsa5__EndpointReferenceType *wsa5__From, struct wsa5__EndpointReferenceType *wsa5__ReplyTo, struct wsa5__EndpointReferenceType *wsa5__FaultTo, char *wsa5__To, char *wsa5__Action, struct chan__ChannelInstanceType *chan__ChannelInstance, struct wsdd__AppSequenceType *wsdd__AppSequence, struct _wsse__Security *wsse__Security, char *SubscriptionId)
{
    ::soap_header(this->soap);
    this->soap->header->wsa5__MessageID = wsa5__MessageID;
    this->soap->header->wsa5__RelatesTo = wsa5__RelatesTo;
    this->soap->header->wsa5__From = wsa5__From;
    this->soap->header->wsa5__ReplyTo = wsa5__ReplyTo;
    this->soap->header->wsa5__FaultTo = wsa5__FaultTo;
    this->soap->header->wsa5__To = wsa5__To;
    this->soap->header->wsa5__Action = wsa5__Action;
    this->soap->header->chan__ChannelInstance = chan__ChannelInstance;
    this->soap->header->wsdd__AppSequence = wsdd__AppSequence;
    this->soap->header->wsse__Security = wsse__Security;
    this->soap->header->SubscriptionId = SubscriptionId;
}

::SOAP_ENV__Header *ScheduleBindingService::soap_header()
{
    return this->soap->header;
}

#ifndef WITH_NOIO
int ScheduleBindingService::run(int port)
{
    if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
        return this->soap->error;
    for (;;)
    {
        if (!soap_valid_socket(this->accept()))
        {
            if (this->soap->errnum == 0) // timeout?
                this->soap->error = SOAP_OK;
            break;
        }
        if (this->serve())
            break;
        this->destroy();
    }
    return this->soap->error;
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int ScheduleBindingService::ssl_run(int port)
{
    if (!soap_valid_socket(this->soap->master) && !soap_valid_socket(this->bind(NULL, port, 100)))
        return this->soap->error;
    for (;;)
    {
        if (!soap_valid_socket(this->accept()))
        {
            if (this->soap->errnum == 0) // timeout?
                this->soap->error = SOAP_OK;
            break;
        }
        if (this->ssl_accept() || this->serve())
            break;
        this->destroy();
    }
    return this->soap->error;
}
#endif

SOAP_SOCKET ScheduleBindingService::bind(const char *host, int port, int backlog)
{
    return soap_bind(this->soap, host, port, backlog);
}

SOAP_SOCKET ScheduleBindingService::accept()
{
    return soap_accept(this->soap);
}

#if defined(WITH_OPENSSL) || defined(WITH_GNUTLS)
int ScheduleBindingService::ssl_accept()
{
    return soap_ssl_accept(this->soap);
}
#endif
#endif

int ScheduleBindingService::serve()
{
#ifndef WITH_FASTCGI
    this->soap->keep_alive = this->soap->max_keep_alive + 1;
#endif
    do
    {
#ifndef WITH_FASTCGI
        if (this->soap->keep_alive > 0 && this->soap->max_keep_alive > 0)
            this->soap->keep_alive--;
#endif
        if (soap_begin_serve(this->soap))
        {
            if (this->soap->error >= SOAP_STOP)
                continue;
            return this->soap->error;
        }
        if ((dispatch() || (this->soap->fserveloop && this->soap->fserveloop(this->soap))) && this->soap->error && this->soap->error < SOAP_STOP)
        {
#ifdef WITH_FASTCGI
            soap_send_fault(this->soap);
#else
            return soap_send_fault(this->soap);
#endif
        }
#ifdef WITH_FASTCGI
        soap_destroy(this->soap);
        soap_end(this->soap);
    } while (1);
#else
    } while (this->soap->keep_alive);
#endif
    return SOAP_OK;
}

static int serve___onvifScedule__GetServiceCapabilities(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__GetScheduleState(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__GetScheduleInfo(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__GetScheduleInfoList(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__GetSchedules(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__GetScheduleList(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__CreateSchedule(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__SetSchedule(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__ModifySchedule(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__DeleteSchedule(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__GetSpecialDayGroupInfo(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__GetSpecialDayGroupInfoList(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__GetSpecialDayGroups(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__GetSpecialDayGroupList(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__CreateSpecialDayGroup(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__SetSpecialDayGroup(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__ModifySpecialDayGroup(struct soap*, ScheduleBindingService*);
static int serve___onvifScedule__DeleteSpecialDayGroup(struct soap*, ScheduleBindingService*);

int ScheduleBindingService::dispatch()
{
    return dispatch(this->soap);
}

int ScheduleBindingService::dispatch(struct soap* soap)
{
    ScheduleBindingService_init(soap->imode, soap->omode);

    soap_peek_element(soap);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:GetServiceCapabilities"))
        return serve___onvifScedule__GetServiceCapabilities(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:GetScheduleState"))
        return serve___onvifScedule__GetScheduleState(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:GetScheduleInfo"))
        return serve___onvifScedule__GetScheduleInfo(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:GetScheduleInfoList"))
        return serve___onvifScedule__GetScheduleInfoList(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:GetSchedules"))
        return serve___onvifScedule__GetSchedules(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:GetScheduleList"))
        return serve___onvifScedule__GetScheduleList(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:CreateSchedule"))
        return serve___onvifScedule__CreateSchedule(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:SetSchedule"))
        return serve___onvifScedule__SetSchedule(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:ModifySchedule"))
        return serve___onvifScedule__ModifySchedule(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:DeleteSchedule"))
        return serve___onvifScedule__DeleteSchedule(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:GetSpecialDayGroupInfo"))
        return serve___onvifScedule__GetSpecialDayGroupInfo(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:GetSpecialDayGroupInfoList"))
        return serve___onvifScedule__GetSpecialDayGroupInfoList(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:GetSpecialDayGroups"))
        return serve___onvifScedule__GetSpecialDayGroups(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:GetSpecialDayGroupList"))
        return serve___onvifScedule__GetSpecialDayGroupList(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:CreateSpecialDayGroup"))
        return serve___onvifScedule__CreateSpecialDayGroup(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:SetSpecialDayGroup"))
        return serve___onvifScedule__SetSpecialDayGroup(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:ModifySpecialDayGroup"))
        return serve___onvifScedule__ModifySpecialDayGroup(soap, this);
    if (!soap_match_tag(soap, soap->tag, "onvifScedule:DeleteSpecialDayGroup"))
        return serve___onvifScedule__DeleteSpecialDayGroup(soap, this);
    return soap->error = SOAP_NO_METHOD;
}

static int serve___onvifScedule__GetServiceCapabilities(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__GetServiceCapabilities soap_tmp___onvifScedule__GetServiceCapabilities;
    _onvifScedule__GetServiceCapabilitiesResponse onvifScedule__GetServiceCapabilitiesResponse;
    onvifScedule__GetServiceCapabilitiesResponse.soap_default(soap);
    soap_default___onvifScedule__GetServiceCapabilities(soap, &soap_tmp___onvifScedule__GetServiceCapabilities);
    if (!soap_get___onvifScedule__GetServiceCapabilities(soap, &soap_tmp___onvifScedule__GetServiceCapabilities, "-onvifScedule:GetServiceCapabilities", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetServiceCapabilities(soap_tmp___onvifScedule__GetServiceCapabilities.onvifScedule__GetServiceCapabilities, onvifScedule__GetServiceCapabilitiesResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__GetServiceCapabilitiesResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__GetServiceCapabilitiesResponse.soap_put(soap, "onvifScedule:GetServiceCapabilitiesResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__GetServiceCapabilitiesResponse.soap_put(soap, "onvifScedule:GetServiceCapabilitiesResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__GetScheduleState(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__GetScheduleState soap_tmp___onvifScedule__GetScheduleState;
    _onvifScedule__GetScheduleStateResponse onvifScedule__GetScheduleStateResponse;
    onvifScedule__GetScheduleStateResponse.soap_default(soap);
    soap_default___onvifScedule__GetScheduleState(soap, &soap_tmp___onvifScedule__GetScheduleState);
    if (!soap_get___onvifScedule__GetScheduleState(soap, &soap_tmp___onvifScedule__GetScheduleState, "-onvifScedule:GetScheduleState", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetScheduleState(soap_tmp___onvifScedule__GetScheduleState.onvifScedule__GetScheduleState, onvifScedule__GetScheduleStateResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__GetScheduleStateResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__GetScheduleStateResponse.soap_put(soap, "onvifScedule:GetScheduleStateResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__GetScheduleStateResponse.soap_put(soap, "onvifScedule:GetScheduleStateResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__GetScheduleInfo(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__GetScheduleInfo soap_tmp___onvifScedule__GetScheduleInfo;
    _onvifScedule__GetScheduleInfoResponse onvifScedule__GetScheduleInfoResponse;
    onvifScedule__GetScheduleInfoResponse.soap_default(soap);
    soap_default___onvifScedule__GetScheduleInfo(soap, &soap_tmp___onvifScedule__GetScheduleInfo);
    if (!soap_get___onvifScedule__GetScheduleInfo(soap, &soap_tmp___onvifScedule__GetScheduleInfo, "-onvifScedule:GetScheduleInfo", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetScheduleInfo(soap_tmp___onvifScedule__GetScheduleInfo.onvifScedule__GetScheduleInfo, onvifScedule__GetScheduleInfoResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__GetScheduleInfoResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__GetScheduleInfoResponse.soap_put(soap, "onvifScedule:GetScheduleInfoResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__GetScheduleInfoResponse.soap_put(soap, "onvifScedule:GetScheduleInfoResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__GetScheduleInfoList(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__GetScheduleInfoList soap_tmp___onvifScedule__GetScheduleInfoList;
    _onvifScedule__GetScheduleInfoListResponse onvifScedule__GetScheduleInfoListResponse;
    onvifScedule__GetScheduleInfoListResponse.soap_default(soap);
    soap_default___onvifScedule__GetScheduleInfoList(soap, &soap_tmp___onvifScedule__GetScheduleInfoList);
    if (!soap_get___onvifScedule__GetScheduleInfoList(soap, &soap_tmp___onvifScedule__GetScheduleInfoList, "-onvifScedule:GetScheduleInfoList", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetScheduleInfoList(soap_tmp___onvifScedule__GetScheduleInfoList.onvifScedule__GetScheduleInfoList, onvifScedule__GetScheduleInfoListResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__GetScheduleInfoListResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__GetScheduleInfoListResponse.soap_put(soap, "onvifScedule:GetScheduleInfoListResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__GetScheduleInfoListResponse.soap_put(soap, "onvifScedule:GetScheduleInfoListResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__GetSchedules(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__GetSchedules soap_tmp___onvifScedule__GetSchedules;
    _onvifScedule__GetSchedulesResponse onvifScedule__GetSchedulesResponse;
    onvifScedule__GetSchedulesResponse.soap_default(soap);
    soap_default___onvifScedule__GetSchedules(soap, &soap_tmp___onvifScedule__GetSchedules);
    if (!soap_get___onvifScedule__GetSchedules(soap, &soap_tmp___onvifScedule__GetSchedules, "-onvifScedule:GetSchedules", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetSchedules(soap_tmp___onvifScedule__GetSchedules.onvifScedule__GetSchedules, onvifScedule__GetSchedulesResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__GetSchedulesResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__GetSchedulesResponse.soap_put(soap, "onvifScedule:GetSchedulesResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__GetSchedulesResponse.soap_put(soap, "onvifScedule:GetSchedulesResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__GetScheduleList(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__GetScheduleList soap_tmp___onvifScedule__GetScheduleList;
    _onvifScedule__GetScheduleListResponse onvifScedule__GetScheduleListResponse;
    onvifScedule__GetScheduleListResponse.soap_default(soap);
    soap_default___onvifScedule__GetScheduleList(soap, &soap_tmp___onvifScedule__GetScheduleList);
    if (!soap_get___onvifScedule__GetScheduleList(soap, &soap_tmp___onvifScedule__GetScheduleList, "-onvifScedule:GetScheduleList", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetScheduleList(soap_tmp___onvifScedule__GetScheduleList.onvifScedule__GetScheduleList, onvifScedule__GetScheduleListResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__GetScheduleListResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__GetScheduleListResponse.soap_put(soap, "onvifScedule:GetScheduleListResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__GetScheduleListResponse.soap_put(soap, "onvifScedule:GetScheduleListResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__CreateSchedule(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__CreateSchedule soap_tmp___onvifScedule__CreateSchedule;
    _onvifScedule__CreateScheduleResponse onvifScedule__CreateScheduleResponse;
    onvifScedule__CreateScheduleResponse.soap_default(soap);
    soap_default___onvifScedule__CreateSchedule(soap, &soap_tmp___onvifScedule__CreateSchedule);
    if (!soap_get___onvifScedule__CreateSchedule(soap, &soap_tmp___onvifScedule__CreateSchedule, "-onvifScedule:CreateSchedule", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->CreateSchedule(soap_tmp___onvifScedule__CreateSchedule.onvifScedule__CreateSchedule, onvifScedule__CreateScheduleResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__CreateScheduleResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__CreateScheduleResponse.soap_put(soap, "onvifScedule:CreateScheduleResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__CreateScheduleResponse.soap_put(soap, "onvifScedule:CreateScheduleResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__SetSchedule(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__SetSchedule soap_tmp___onvifScedule__SetSchedule;
    _onvifScedule__SetScheduleResponse onvifScedule__SetScheduleResponse;
    onvifScedule__SetScheduleResponse.soap_default(soap);
    soap_default___onvifScedule__SetSchedule(soap, &soap_tmp___onvifScedule__SetSchedule);
    if (!soap_get___onvifScedule__SetSchedule(soap, &soap_tmp___onvifScedule__SetSchedule, "-onvifScedule:SetSchedule", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->SetSchedule(soap_tmp___onvifScedule__SetSchedule.onvifScedule__SetSchedule, onvifScedule__SetScheduleResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__SetScheduleResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__SetScheduleResponse.soap_put(soap, "onvifScedule:SetScheduleResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__SetScheduleResponse.soap_put(soap, "onvifScedule:SetScheduleResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__ModifySchedule(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__ModifySchedule soap_tmp___onvifScedule__ModifySchedule;
    _onvifScedule__ModifyScheduleResponse onvifScedule__ModifyScheduleResponse;
    onvifScedule__ModifyScheduleResponse.soap_default(soap);
    soap_default___onvifScedule__ModifySchedule(soap, &soap_tmp___onvifScedule__ModifySchedule);
    if (!soap_get___onvifScedule__ModifySchedule(soap, &soap_tmp___onvifScedule__ModifySchedule, "-onvifScedule:ModifySchedule", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->ModifySchedule(soap_tmp___onvifScedule__ModifySchedule.onvifScedule__ModifySchedule, onvifScedule__ModifyScheduleResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__ModifyScheduleResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__ModifyScheduleResponse.soap_put(soap, "onvifScedule:ModifyScheduleResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__ModifyScheduleResponse.soap_put(soap, "onvifScedule:ModifyScheduleResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__DeleteSchedule(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__DeleteSchedule soap_tmp___onvifScedule__DeleteSchedule;
    _onvifScedule__DeleteScheduleResponse onvifScedule__DeleteScheduleResponse;
    onvifScedule__DeleteScheduleResponse.soap_default(soap);
    soap_default___onvifScedule__DeleteSchedule(soap, &soap_tmp___onvifScedule__DeleteSchedule);
    if (!soap_get___onvifScedule__DeleteSchedule(soap, &soap_tmp___onvifScedule__DeleteSchedule, "-onvifScedule:DeleteSchedule", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->DeleteSchedule(soap_tmp___onvifScedule__DeleteSchedule.onvifScedule__DeleteSchedule, onvifScedule__DeleteScheduleResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__DeleteScheduleResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__DeleteScheduleResponse.soap_put(soap, "onvifScedule:DeleteScheduleResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__DeleteScheduleResponse.soap_put(soap, "onvifScedule:DeleteScheduleResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__GetSpecialDayGroupInfo(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__GetSpecialDayGroupInfo soap_tmp___onvifScedule__GetSpecialDayGroupInfo;
    _onvifScedule__GetSpecialDayGroupInfoResponse onvifScedule__GetSpecialDayGroupInfoResponse;
    onvifScedule__GetSpecialDayGroupInfoResponse.soap_default(soap);
    soap_default___onvifScedule__GetSpecialDayGroupInfo(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupInfo);
    if (!soap_get___onvifScedule__GetSpecialDayGroupInfo(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupInfo, "-onvifScedule:GetSpecialDayGroupInfo", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetSpecialDayGroupInfo(soap_tmp___onvifScedule__GetSpecialDayGroupInfo.onvifScedule__GetSpecialDayGroupInfo, onvifScedule__GetSpecialDayGroupInfoResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__GetSpecialDayGroupInfoResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__GetSpecialDayGroupInfoResponse.soap_put(soap, "onvifScedule:GetSpecialDayGroupInfoResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__GetSpecialDayGroupInfoResponse.soap_put(soap, "onvifScedule:GetSpecialDayGroupInfoResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__GetSpecialDayGroupInfoList(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__GetSpecialDayGroupInfoList soap_tmp___onvifScedule__GetSpecialDayGroupInfoList;
    _onvifScedule__GetSpecialDayGroupInfoListResponse onvifScedule__GetSpecialDayGroupInfoListResponse;
    onvifScedule__GetSpecialDayGroupInfoListResponse.soap_default(soap);
    soap_default___onvifScedule__GetSpecialDayGroupInfoList(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupInfoList);
    if (!soap_get___onvifScedule__GetSpecialDayGroupInfoList(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupInfoList, "-onvifScedule:GetSpecialDayGroupInfoList", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetSpecialDayGroupInfoList(soap_tmp___onvifScedule__GetSpecialDayGroupInfoList.onvifScedule__GetSpecialDayGroupInfoList, onvifScedule__GetSpecialDayGroupInfoListResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__GetSpecialDayGroupInfoListResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__GetSpecialDayGroupInfoListResponse.soap_put(soap, "onvifScedule:GetSpecialDayGroupInfoListResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__GetSpecialDayGroupInfoListResponse.soap_put(soap, "onvifScedule:GetSpecialDayGroupInfoListResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__GetSpecialDayGroups(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__GetSpecialDayGroups soap_tmp___onvifScedule__GetSpecialDayGroups;
    _onvifScedule__GetSpecialDayGroupsResponse onvifScedule__GetSpecialDayGroupsResponse;
    onvifScedule__GetSpecialDayGroupsResponse.soap_default(soap);
    soap_default___onvifScedule__GetSpecialDayGroups(soap, &soap_tmp___onvifScedule__GetSpecialDayGroups);
    if (!soap_get___onvifScedule__GetSpecialDayGroups(soap, &soap_tmp___onvifScedule__GetSpecialDayGroups, "-onvifScedule:GetSpecialDayGroups", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetSpecialDayGroups(soap_tmp___onvifScedule__GetSpecialDayGroups.onvifScedule__GetSpecialDayGroups, onvifScedule__GetSpecialDayGroupsResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__GetSpecialDayGroupsResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__GetSpecialDayGroupsResponse.soap_put(soap, "onvifScedule:GetSpecialDayGroupsResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__GetSpecialDayGroupsResponse.soap_put(soap, "onvifScedule:GetSpecialDayGroupsResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__GetSpecialDayGroupList(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__GetSpecialDayGroupList soap_tmp___onvifScedule__GetSpecialDayGroupList;
    _onvifScedule__GetSpecialDayGroupListResponse onvifScedule__GetSpecialDayGroupListResponse;
    onvifScedule__GetSpecialDayGroupListResponse.soap_default(soap);
    soap_default___onvifScedule__GetSpecialDayGroupList(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupList);
    if (!soap_get___onvifScedule__GetSpecialDayGroupList(soap, &soap_tmp___onvifScedule__GetSpecialDayGroupList, "-onvifScedule:GetSpecialDayGroupList", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->GetSpecialDayGroupList(soap_tmp___onvifScedule__GetSpecialDayGroupList.onvifScedule__GetSpecialDayGroupList, onvifScedule__GetSpecialDayGroupListResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__GetSpecialDayGroupListResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__GetSpecialDayGroupListResponse.soap_put(soap, "onvifScedule:GetSpecialDayGroupListResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__GetSpecialDayGroupListResponse.soap_put(soap, "onvifScedule:GetSpecialDayGroupListResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__CreateSpecialDayGroup(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__CreateSpecialDayGroup soap_tmp___onvifScedule__CreateSpecialDayGroup;
    _onvifScedule__CreateSpecialDayGroupResponse onvifScedule__CreateSpecialDayGroupResponse;
    onvifScedule__CreateSpecialDayGroupResponse.soap_default(soap);
    soap_default___onvifScedule__CreateSpecialDayGroup(soap, &soap_tmp___onvifScedule__CreateSpecialDayGroup);
    if (!soap_get___onvifScedule__CreateSpecialDayGroup(soap, &soap_tmp___onvifScedule__CreateSpecialDayGroup, "-onvifScedule:CreateSpecialDayGroup", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->CreateSpecialDayGroup(soap_tmp___onvifScedule__CreateSpecialDayGroup.onvifScedule__CreateSpecialDayGroup, onvifScedule__CreateSpecialDayGroupResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__CreateSpecialDayGroupResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__CreateSpecialDayGroupResponse.soap_put(soap, "onvifScedule:CreateSpecialDayGroupResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__CreateSpecialDayGroupResponse.soap_put(soap, "onvifScedule:CreateSpecialDayGroupResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__SetSpecialDayGroup(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__SetSpecialDayGroup soap_tmp___onvifScedule__SetSpecialDayGroup;
    _onvifScedule__SetSpecialDayGroupResponse onvifScedule__SetSpecialDayGroupResponse;
    onvifScedule__SetSpecialDayGroupResponse.soap_default(soap);
    soap_default___onvifScedule__SetSpecialDayGroup(soap, &soap_tmp___onvifScedule__SetSpecialDayGroup);
    if (!soap_get___onvifScedule__SetSpecialDayGroup(soap, &soap_tmp___onvifScedule__SetSpecialDayGroup, "-onvifScedule:SetSpecialDayGroup", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->SetSpecialDayGroup(soap_tmp___onvifScedule__SetSpecialDayGroup.onvifScedule__SetSpecialDayGroup, onvifScedule__SetSpecialDayGroupResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__SetSpecialDayGroupResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__SetSpecialDayGroupResponse.soap_put(soap, "onvifScedule:SetSpecialDayGroupResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__SetSpecialDayGroupResponse.soap_put(soap, "onvifScedule:SetSpecialDayGroupResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__ModifySpecialDayGroup(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__ModifySpecialDayGroup soap_tmp___onvifScedule__ModifySpecialDayGroup;
    _onvifScedule__ModifySpecialDayGroupResponse onvifScedule__ModifySpecialDayGroupResponse;
    onvifScedule__ModifySpecialDayGroupResponse.soap_default(soap);
    soap_default___onvifScedule__ModifySpecialDayGroup(soap, &soap_tmp___onvifScedule__ModifySpecialDayGroup);
    if (!soap_get___onvifScedule__ModifySpecialDayGroup(soap, &soap_tmp___onvifScedule__ModifySpecialDayGroup, "-onvifScedule:ModifySpecialDayGroup", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->ModifySpecialDayGroup(soap_tmp___onvifScedule__ModifySpecialDayGroup.onvifScedule__ModifySpecialDayGroup, onvifScedule__ModifySpecialDayGroupResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__ModifySpecialDayGroupResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__ModifySpecialDayGroupResponse.soap_put(soap, "onvifScedule:ModifySpecialDayGroupResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__ModifySpecialDayGroupResponse.soap_put(soap, "onvifScedule:ModifySpecialDayGroupResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}

static int serve___onvifScedule__DeleteSpecialDayGroup(struct soap *soap, ScheduleBindingService *service)
{
    struct __onvifScedule__DeleteSpecialDayGroup soap_tmp___onvifScedule__DeleteSpecialDayGroup;
    _onvifScedule__DeleteSpecialDayGroupResponse onvifScedule__DeleteSpecialDayGroupResponse;
    onvifScedule__DeleteSpecialDayGroupResponse.soap_default(soap);
    soap_default___onvifScedule__DeleteSpecialDayGroup(soap, &soap_tmp___onvifScedule__DeleteSpecialDayGroup);
    if (!soap_get___onvifScedule__DeleteSpecialDayGroup(soap, &soap_tmp___onvifScedule__DeleteSpecialDayGroup, "-onvifScedule:DeleteSpecialDayGroup", NULL))
        return soap->error;
    if (soap_body_end_in(soap)
     || soap_envelope_end_in(soap)
     || soap_end_recv(soap))
        return soap->error;
    soap->error = service->DeleteSpecialDayGroup(soap_tmp___onvifScedule__DeleteSpecialDayGroup.onvifScedule__DeleteSpecialDayGroup, onvifScedule__DeleteSpecialDayGroupResponse);
    if (soap->error)
        return soap->error;
    soap->encodingStyle = NULL;
    soap_serializeheader(soap);
    onvifScedule__DeleteSpecialDayGroupResponse.soap_serialize(soap);
    if (soap_begin_count(soap))
        return soap->error;
    if (soap->mode & SOAP_IO_LENGTH)
    {
        if (soap_envelope_begin_out(soap)
         || soap_putheader(soap)
         || soap_body_begin_out(soap)
         || onvifScedule__DeleteSpecialDayGroupResponse.soap_put(soap, "onvifScedule:DeleteSpecialDayGroupResponse", "")
         || soap_body_end_out(soap)
         || soap_envelope_end_out(soap))
             return soap->error;
    };
    if (soap_end_count(soap)
     || soap_response(soap, SOAP_OK)
     || soap_envelope_begin_out(soap)
     || soap_putheader(soap)
     || soap_body_begin_out(soap)
     || onvifScedule__DeleteSpecialDayGroupResponse.soap_put(soap, "onvifScedule:DeleteSpecialDayGroupResponse", "")
     || soap_body_end_out(soap)
     || soap_envelope_end_out(soap)
     || soap_end_send(soap))
        return soap->error;
    return soap_closesock(soap);
}
/* End of server object code */
