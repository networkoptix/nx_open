        <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <artifactId>hdwitness</artifactId>
        <groupId>com.networkoptix.hdwitness</groupId>
        <version>2.0.0-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>

    <groupId>com.networkoptix.hdwitness</groupId>
    <version>2.0.0-SNAPSHOT</version>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>build_environment</artifactId>
    <packaging>pom</packaging>
    <name>Build Environment for QT projects</name>

    <properties>
        <!-- Change it to point relatively to the root-->
        <root.dir>${basedir}/..</root.dir>
        <!-- Change it to true to skip buildenv synchronization (can save time)-->
        <rsync.skip>false</rsync.skip>
        <buildLib/>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>help</artifactId>
            <version>${project.version}</version>
            <type>tar.gz</type>
            <classifier>${customization}</classifier>
        </dependency>
        <dependency>
            <groupId>com.google</groupId>
            <artifactId>protobuf</artifactId>
            <version>2.4.1-1.5.2-SNAPSHOT</version>
            <type>tar.gz</type>
            <classifier>${platform}-${compiler}</classifier>
        </dependency>                           
        <dependency>
            <groupId>org.openssl</groupId>
            <artifactId>openssl</artifactId>
            <version>${openssl.version}</version>
            <type>tar.gz</type>
            <classifier>${platform}-${compiler}</classifier>
        </dependency>
        <dependency>
            <groupId>org.boost</groupId>
            <artifactId>boost</artifactId>
            <version>${boost.version}</version>
            <type>tar.gz</type>
            <classifier>${platform}-${arch}-${compiler}</classifier>
        </dependency>
        <dependency>
            <groupId>org.ffmpeg</groupId>
            <artifactId>ffmpeg</artifactId>
            <version>${ffmpeg.version}</version>
            <type>tar.gz</type>
            <classifier>${platform}-${arch}</classifier>
        </dependency>      
        <dependency>
            <groupId>org</groupId>
            <artifactId>onvif</artifactId>
            <version>${onvif.version}</version>
            <type>tar.gz</type>
            <classifier>${platform}-${compiler}</classifier>
        </dependency>		
        <dependency>
            <groupId>com.sourceforge.cloudcity</groupId>
            <artifactId>bespin</artifactId>
            <version>1.1-1.5.2-SNAPSHOT</version>
            <type>tar.gz</type>
            <classifier>${platform}-${compiler}</classifier>
        </dependency>                               	
        <dependency>
            <groupId>org.hyperic</groupId>
            <artifactId>sigar</artifactId>
            <version>${sigar.version}</version>
            <type>tar.gz</type>
            <classifier>${platform}-${compiler}</classifier>
        </dependency>                               	
        <dependency>
            <groupId>org</groupId>
            <artifactId>festival</artifactId>
            <version>${festival.version}</version>
            <type>tar.gz</type>
            <classifier>${platform}</classifier>
        </dependency>                               	
        <dependency>
            <groupId>org.festival</groupId>
            <artifactId>festival-vox</artifactId>
            <version>${festival.version}</version>
            <type>tar.gz</type>
            <classifier>all-os</classifier>
        </dependency> 
        <dependency>
            <groupId>net.sourceforge</groupId>
            <artifactId>qjson</artifactId>
            <version>0.7.1-1.5.2-SNAPSHOT</version>
            <type>tar.gz</type>
            <classifier>${platform}-${compiler}</classifier>
        </dependency>       
        <dependency>
            <groupId>com.creativelabs</groupId>
            <artifactId>openal</artifactId>
            <version>1.1-1.5.2-SNAPSHOT</version>
            <type>tar.gz</type>
            <classifier>${platform}</classifier>
        </dependency>
        <dependency>                 
            <groupId>com.nokia.qt.addons</groupId>
            <artifactId>qtcolorpicker</artifactId>
            <version>2.6.1-1.5.2-SNAPSHOT</version>
            <type>tar.gz</type>
            <classifier>${platform}</classifier>
        </dependency>                      
    </dependencies>		

    <build>
        <defaultGoal>compile</defaultGoal>
        <plugins>		
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.1.1</version>
                <executions>
                    <execution>
                        <id>configure</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${python.dir}/python</executable>
                            <arguments>
                                <argument>configure.py</argument>
                                <argument>--cst</argument>
                                <argument>${customization}</argument>
                                <argument>--cfg</argument>
                                <argument>${build.configuration}</argument>                                
                            </arguments>
                            <workingDirectory>${root.dir}</workingDirectory>		
                        </configuration>
                    </execution>
                    <execution>
                        <id>update-buildenv</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${python.dir}/python</executable>
                            <arguments>
                                <argument>buildenv.py</argument>
                            </arguments>
                            <workingDirectory>${basedir}/python</workingDirectory>		
                            <skip>${rsync.skip}</skip>
                        </configuration>
                    </execution>          
                    <execution>
                        <id>copy-additional-resources</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${python.dir}/python</executable>
                            <arguments>
                                <argument>copy_additional_resources.py</argument>
                            </arguments>
                            <workingDirectory>${project.build.directory}</workingDirectory>		
                        </configuration>
                    </execution>     
                    <execution>
                        <id>install-packages</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${python.dir}/python</executable>
                            <arguments>
                                <argument>install_packages.py</argument>
                            </arguments>
                            <workingDirectory>${basedir}/python</workingDirectory>		
                        </configuration>
                    </execution>                       
                </executions>
            </plugin>	
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>unpack-platform-libs</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <!-- Qt debug libraries -->
                            <!-- Qt release libraries -->
                            <resource>
                                <targetPath>${project.build.directory}/bin/release/</targetPath>
                                <directory>${environment.dir}/qt5/qtbase-${arch}/lib/</directory>
                                <preservePath>true</preservePath>
                                <includes>
                                    <include>**/Qt5${qtlib1}.*</include>
                                    <include>**/Qt5${qtlib2}.*</include>
                                    <include>**/Qt5${qtlib3}.*</include>
                                    <include>**/Qt5${qtlib4}.*</include>
                                    <include>**/Qt5${qtlib5}.*</include>
                                    <include>**/Qt5${qtlib6}.*</include>
                                    <include>**/Qt5${qtlib7}.*</include>
                                    <include>**/Qt5${qtlib8}.*</include>
                                    <include>**/Qt5${qtlib9}.*</include>
                                </includes>
                            </resource>
                        </configuration>
                    </execution>							
                </executions>
            </plugin>            			
        </plugins>		
    </build>
    <profiles>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.google</groupId>
                    <artifactId>protobuf</artifactId>
                    <version>2.4.1</version>
                    <classifier>${platform}-${arch}-${compiler}</classifier>
                </dependency>                           
                <dependency>                
                    <groupId>com.digitalwatchdog.dvr</groupId>
                    <artifactId>vmax-integration</artifactId>
                    <version>1.0-1.5.2-SNAPSHOT</version>
                    <type>tar.gz</type>
                    <classifier>${platform}</classifier>
                </dependency>				
                <dependency>
                    <groupId>com.microsoft.directx</groupId>
                    <artifactId>d3d9</artifactId>
                    <version>JUN2010-1.5.2-SNAPSHOT</version>
                    <type>tar.gz</type>
                    <classifier>${platform}</classifier>
                </dependency>   
                <dependency>
                    <groupId>com.microsoft.directx</groupId>
                    <artifactId>dxerr</artifactId>
                    <version>JUN2010-1.5.2-SNAPSHOT</version>
                    <type>tar.gz</type>
                    <classifier>${platform}</classifier>
                </dependency>   
                <dependency>
                    <groupId>com.intel</groupId>
                    <artifactId>mfx</artifactId>
                    <version>2012-R2-1.5.2-SNAPSHOT</version>
                    <type>tar.gz</type>
                    <classifier>${platform}</classifier>
                </dependency>                               	
                <dependency>
                    <groupId>com.microsoft</groupId>
                    <artifactId>redistributable</artifactId>
                    <version>vs2008-1.5.2-SNAPSHOT</version>
                    <type>tar.gz</type>
                    <classifier>${platform}</classifier>
                </dependency>		
                <dependency>
                    <groupId>org.festival</groupId>
                    <artifactId>festival-vox</artifactId>
                    <version>${festival.version}</version>
                    <type>zip</type>
                    <classifier>all-os</classifier>
                </dependency>                         
            </dependencies>			
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.code.maven-replacer-plugin</groupId>
                        <artifactId>replacer</artifactId>
                        <version>1.5.2</version>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>replace</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>**/libdir.properties</include>
                                    </includes>
                                    <replacements>
                                        <replacement>
                                            <token>\\\\</token>
                                            <value>/</value>
                                        </replacement>         
                                    </replacements>
                                    <skip>${replace.skip}</skip>
                                </configuration>								
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>linux</name>
                </os>		
				<property>
					<name>!cross-arch</name>
				</property>
            </activation>
					<type>zip</type>
					<classifier>${platform}-${arch}-${compiler}</classifier>
				</dependency>                               	
				<dependency>
					<groupId>org.festival</groupId>
					<artifactId>festival-vox</artifactId>
					<version>${festival.version}</version>
					<type>zip</type>
					<classifier>all-os</classifier>
				</dependency>                         
			</dependencies>
			<build>	
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1.1</version>
						<executions>
							<execution>
								<id>rsync-buildenv</id>
								<phase>initialize</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${environment.dir}/get_buildenv.sh</executable>
 									<workingDirectory>${environment.dir}</workingDirectory>		
                                                                        <arguments>
                                                                                <commandlineArgs>${arch} ${toolchain.version}</commandlineArgs>
                                                                        </arguments>
									<skip>${rsync.skip}</skip>
								</configuration>
							</execution>
							<execution>
								<id>prepare-deb</id>
								<phase>compile</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${project.build.directory}/prepare-package.sh</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>		
		    							<skip>${assembly-skip}</skip>
								</configuration>
							</execution>							
						</executions>
					</plugin>				
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<id>copy-platform-libs</id>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}</outputDirectory>
								</configuration>
							</execution>							
						</executions>
					</plugin>

					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>generate-qt-project</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<failOnError>false</failOnError>
									<target>							
										<chmod file="${project.build.directory}/*.sh" perm="755"/>
										<exec dir="${libdir}" executable="unzip" failifexecutionfails="false">
											<arg line="-a -u *.zip -x **/include/** *.a"/>
										</exec>
										<exec dir="${libdir}" executable="unzip" failifexecutionfails="false">
											<arg line="-a -u *.zip **/include/**"/>
										</exec>
										<exec dir="${libdir}" executable="unzip" failifexecutionfails="false">
											<arg line="-a -u *.zip *.a"/>
										</exec>
										<exec dir="${libdir}" executable="rm" failifexecutionfails="false">
											<arg line="*.zip"/>
										</exec>
									</target>										
								</configuration>
							</execution>				
						</executions>
					</plugin>					
				</plugins>	
			</build>			
		</profile>		

		<profile>
			<id>linux-arm</id>
			<activation>
				<os>
					<family>unix</family>
					<name>linux</name>
				</os> 
				<property>
					<name>cross-arch</name>
					<value>arm</value>
				</property>
			</activation>
			<properties>
				<rename-skip>false</rename-skip>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.ffmpeg</groupId>
					<artifactId>ffmpeg</artifactId>
					<version>${ffmpeg.version}</version>
					<type>zip</type>
					<classifier>${platform}-${arch}-${compiler}</classifier>
				</dependency>      
				<dependency>
					<groupId>org.openssl</groupId>
					<artifactId>openssl</artifactId>
					<version>${openssl.version}</version>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.1.1</version>
                        <executions>
                            <execution>
                                                                        <arguments>
                                                                                <commandlineArgs>${arch}</commandlineArgs>
                                                                                <commandlineArgs>${toolchain.version}</commandlineArgs>
                                                                        </arguments>
                                <id>prepare-deb</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.build.directory}/prepare-package.sh</executable>
                                    <workingDirectory>${project.build.directory}</workingDirectory>		
                                    <skip>${assembly-skip}</skip>
                                </configuration>
                            </execution>							
                        </executions>
                    </plugin>				
                </plugins>
            </build>						
        </profile>		

        <profile>
            <id>macosx</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
					<type>zip</type>
					<classifier>${platform}-${arch}</classifier>
				</dependency>      
				<dependency>
					<groupId>com.sourceforge.cloudcity</groupId>
					<artifactId>bespin</artifactId>
					<version>${bespin.version}</version>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.1.1</version>
                        <executions>
                            <execution>
                                                                        <arguments>
                                                                                <commandlineArgs>${arch}</commandlineArgs>
                                                                        </arguments>
                                <id>prepare-deb</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.build.directory}/prepare-package.sh</executable>
                                    <workingDirectory>${project.build.directory}</workingDirectory>		
                                    <skip>${assembly-skip}</skip>
                                </configuration>
                            </execution>							
                        </executions>
                    </plugin>				
                </plugins>
            </build>
        </profile> -->
    </profiles>	
</project>

