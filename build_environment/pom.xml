<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <artifactId>hdwitness</artifactId>
        <groupId>com.networkoptix.hdwitness</groupId>
        <version>2.2.0-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>

    <groupId>com.networkoptix.hdwitness</groupId>
    <version>2.2.0-SNAPSHOT</version>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>build_environment</artifactId>
    <packaging>pom</packaging>
    <name>Build Environment for QT projects</name>

    <properties>
        <!-- Change it to point relatively to the root-->
        <root.dir>${basedir}/..</root.dir>
        <!-- Change it to true to skip buildenv synchronization (can save time)-->
        <rsync.skip>false</rsync.skip>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.google</groupId>
            <artifactId>protobuf</artifactId>
            <version>${protobuf.version}</version>
            <type>tar.gz</type>
            <classifier>${profile.classifier}-${additional.compiler}</classifier>
        </dependency>                           
        <dependency>
            <groupId>org.openssl</groupId>
            <artifactId>openssl</artifactId>
            <version>${openssl.version}</version>
            <type>tar.gz</type>
            <classifier>${profile.classifier}-${compiler}</classifier>
        </dependency>
        <dependency>
            <groupId>org</groupId>
            <artifactId>onvif</artifactId>
            <version>${onvif.version}</version>
            <type>tar.gz</type>
            <classifier>${profile.classifier}-${additional.compiler}</classifier>
        </dependency>		                        
        <dependency>
            <groupId>org.hyperic</groupId>
            <artifactId>sigar</artifactId>
            <version>${sigar.version}</version>
            <type>tar.gz</type>
            <classifier>${profile.classifier}-${compiler}</classifier>
        </dependency>                               	

        <!--   
        <dependency>                 
            <groupId>com.nokia.qt.addons</groupId>
            <artifactId>qtcolorpicker</artifactId>
            <version>2.6.1-SNAPSHOT</version>
            <type>tar.gz</type>
            <classifier>${platform}</classifier>
        </dependency>                      -->
    </dependencies>		

    <build>
        <defaultGoal>compile</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>copy-platform-libs</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>                        
                    </execution>							
                </executions>
            </plugin> 
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>update-buildenv</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <exec dir="${environment.dir}" executable="hg" failifexecutionfails="true">
                                    <arg line="pull -u"/> 
                                </exec>
                                <chmod file="${environment.dir}/${buildenv.script}" perm="755"/>	
                                <exec dir="${environment.dir}" executable="${environment.dir}/${buildenv.script}" failifexecutionfails="true">
                                    <arg line="${arch} ${toolchain.version}"/> 
                                </exec>
                            </target>
                        </configuration>
                    </execution>	
                </executions>
            </plugin>            
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.1.1</version>
                <executions>        
                    <execution>
                        <id>copy-additional-resources</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${python.dir}/python</executable>
                            <arguments>
                                <argument>copy_additional_resources.py</argument>
                            </arguments>
                            <workingDirectory>${project.build.directory}</workingDirectory>		
                        </configuration>
                    </execution>     
                    <execution>
                        <id>install-packages-x86</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <environmentVariables>
                                <PATH>${environment.dir}/python/x86;${environment.dir}/python/x86/Scripts;${env.PATH}</PATH>
                            </environmentVariables>      
                            <executable>${environment.dir}/python/x86/python.exe</executable>
                            <arguments>
                                <argument>install_packages.py</argument>
                            </arguments>
                            <workingDirectory>${basedir}/python</workingDirectory>		
                            <skip>${unix}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-packages-x64</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${environment.dir}/python/x64/python.exe</executable>
                            <environmentVariables>
                                <PATH>${environment.dir}/python/x86;${environment.dir}/python/x86/Scripts;${env.PATH}</PATH>
                            </environmentVariables>      
                            <arguments>
                                <argument>install_packages.py</argument>
                            </arguments>
                            <workingDirectory>${basedir}/python</workingDirectory>		
                            <skip>${unix}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-packages-unix</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${python.dir}/python</executable>
                            <environmentVariables>                            
                                <PATH>${python.dir}:${env.PATH}</PATH>
                            </environmentVariables>           
                            <arguments>
                                <argument>install_packages.py</argument>
                            </arguments>
                            <workingDirectory>${basedir}/python</workingDirectory>		
                            <skip>${windows}</skip>
                        </configuration>

                    </execution>                    
                </executions>
            </plugin>	
        </plugins>		
    </build>
    <profiles>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.creativelabs</groupId>
                    <artifactId>openal</artifactId>
                    <version>1.1-SNAPSHOT</version>
                    <type>tar.gz</type>
                    <classifier>${profile.classifier}</classifier>
                </dependency>
                <dependency>                
                    <groupId>com.digitalwatchdog.dvr</groupId>
                    <artifactId>vmax-integration</artifactId>
                    <version>1.0-SNAPSHOT</version>
                    <type>tar.gz</type>
                    <classifier>${profile.classifier}</classifier>
                </dependency>				
                <dependency>
                    <groupId>com.microsoft</groupId>
                    <artifactId>directx</artifactId>
                    <version>JUN2010-SNAPSHOT</version>
                    <type>tar.gz</type>
                    <classifier>${profile.classifier}</classifier>
                </dependency>
                <dependency>
                    <groupId>com.intel</groupId>
                    <artifactId>mfx</artifactId>
                    <version>2012-R2-SNAPSHOT</version>
                    <type>tar.gz</type>
                    <classifier>${profile.classifier}</classifier>
                </dependency>                               	
                <dependency>
                    <groupId>com.microsoft</groupId>
                    <artifactId>redistributable</artifactId>
                    <version>vs2008-SNAPSHOT</version>
                    <type>tar.gz</type>
                    <classifier>${profile.classifier}</classifier>
                </dependency>		
                <dependency>
                    <groupId>org.ffmpeg</groupId>
                    <artifactId>ffmpeg</artifactId>
                    <version>${ffmpeg.version}</version>
                    <type>tar.gz</type>
                    <classifier>${profile.classifier}</classifier>
                </dependency>      
            </dependencies>	          
        </profile>
        <profile>
            <id>noarm</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>arch</name>
                    <value>!arm</value>
                </property>
            </activation>            
            <dependencies>

                <dependency>
                    <groupId>org</groupId>
                    <artifactId>festival</artifactId>
                    <version>${festival.version}</version>
                    <type>tar.gz</type>
                    <classifier>${profile.classifier}-${compiler}</classifier>
                </dependency>                               	

                <dependency>
                    <groupId>com.sourceforge.cloudcity</groupId>
                    <artifactId>bespin</artifactId>
                    <version>1.2-SNAPSHOT</version>
                    <type>tar.gz</type>
                    <classifier>${profile.classifier}-${additional.compiler}</classifier>
                </dependency>                   
                <dependency>
                    <groupId>org.ffmpeg</groupId>
                    <artifactId>ffmpeg</artifactId>
                    <version>${ffmpeg.version}</version>
                    <type>tar.gz</type>
                    <classifier>${profile.classifier}</classifier>
                </dependency>      
            </dependencies>	            
        </profile>      

        <profile>
            <id>linux-arm</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <os>
                    <family>unix</family>
                    <name>linux</name>
                </os>
                <property>
                    <name>arch</name>
                    <value>arm</value>
                </property>
            </activation>

            <dependencies>	            
                <dependency>
                    <groupId>org.ffmpeg</groupId>
                    <artifactId>ffmpeg</artifactId>
                    <version>${ffmpeg.version}</version>
                    <type>tar.gz</type>
                    <classifier>${profile.classifier}-${compiler}</classifier>
                </dependency>      
                <dependency>
                    <groupId>com.isdedge</groupId>
                    <artifactId>vmux</artifactId>
                    <version>1.0.0-SNAPSHOT</version>
                    <type>tar.gz</type>
                    <classifier>${profile.classifier}-${compiler}</classifier>
                </dependency>      
            </dependencies>	            
        </profile>
    </profiles>	
</project>
