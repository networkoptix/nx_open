    <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<artifactId>hdwitness</artifactId>
		<groupId>com.networkoptix.hdwitness</groupId>
		<version>2.3.0-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>

	<groupId>com.networkoptix.hdwitness</groupId>
	<version>2.3.0-SNAPSHOT</version>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>build_environment</artifactId>
	<packaging>pom</packaging>
	<name>Build Environment for QT projects</name>

	<properties>
		<!-- Change it to point relatively to the root-->
		<root.dir>${basedir}/..</root.dir>
		<!-- Change it to true to skip buildenv synchronization (can save time)-->
		<rsync.skip>false</rsync.skip>
	</properties>

	<dependencies>

		<!-- <dependency>
            <groupId>com.google</groupId>
            <artifactId>protobuf</artifactId>
            <version>${protobuf.version}</version>
            <type>tar.gz</type>
            <classifier>${profile.classifier}-${additional.compiler}</classifier>
        </dependency> -->
		<dependency>
			<groupId>org</groupId>
			<artifactId>onvif</artifactId>
			<version>${onvif.version}</version>
			<type>tar.gz</type>
			<classifier>${profile.classifier}-${additional.compiler}</classifier>
		</dependency>
		<dependency>
			<groupId>org.hyperic</groupId>
			<artifactId>sigar</artifactId>
			<version>${sigar.version}</version>
			<type>tar.gz</type>
			<classifier>${profile.classifier}-${compiler}</classifier>
		</dependency>                                   
		<dependency>
			<groupId>net.sourceforge</groupId>
			<artifactId>quazip</artifactId>
			<version>${quazip.version}</version>
			<type>tar.gz</type>
			<classifier>${profile.classifier}-${compiler}</classifier>
		</dependency>

		<!--   
        <dependency>                 
            <groupId>com.nokia.qt.addons</groupId>
            <artifactId>qtcolorpicker</artifactId>
            <version>2.6.1-SNAPSHOT</version>
            <type>tar.gz</type>
            <classifier>${platform}</classifier>
        </dependency>                      -->
	</dependencies>     

	<build>
		<defaultGoal>compile</defaultGoal>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>auto-clean</id>
						<phase>validate</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>buildenv</include>
									</includes>
								</fileset>   
								<fileset>
									<directory>${project.build.directory}/x86/python</directory>
									<followSymlinks>false</followSymlinks>
									<useDefaultExcludes>true</useDefaultExcludes>
								</fileset>
								<fileset>
									<directory>${project.build.directory}/x64/python</directory>
									<followSymlinks>false</followSymlinks>
									<useDefaultExcludes>true</useDefaultExcludes>
								</fileset>                                
							</filesets>
							<skip>${clean-skip}</skip>							
						</configuration>
					</execution>
				</executions>
			</plugin>        
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>copy-platform-libs</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
						</configuration>                        
					</execution>                            
				</executions>
			</plugin> 
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>update-buildenv</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<exec dir="${environment.dir}" executable="hg" failifexecutionfails="true">
									<arg line="pull"/> 
								</exec>
								<exec dir="${environment.dir}" executable="hg" failifexecutionfails="true">
									<arg line="up -C"/> 
								</exec>                                
								<chmod file="${environment.dir}/${buildenv.script}" perm="755"/>    
								<chmod file="${libdir}/virtualenv.sh" perm="755"/>    
								<exec dir="${environment.dir}" executable="${environment.dir}/${buildenv.script}" failifexecutionfails="true">
									<arg line="${arch} ${toolchain.version} noqt4 noqt5"/> 
								</exec>
							</target>
							<skip>${rsync.skip}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>            
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>        
					<execution>
						<id>virtualenv-win</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${project.build.directory}/virtualenv.bat</executable>
							<workingDirectory>${project.build.directory}</workingDirectory>    
							<skip>${unix}</skip>                            
						</configuration>
					</execution>

					<execution>
						<id>virtualenv-unix</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${project.build.directory}/virtualenv.sh</executable>
							<workingDirectory>${project.build.directory}</workingDirectory>     
							<skip>${windows}</skip>
						</configuration>
					</execution>                      
					<execution>
						<id>copy-additional-resources</id>
						<phase>process-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${python.dir}/python</executable>
							<arguments>
								<argument>copy_additional_resources.py</argument>
							</arguments>
							<workingDirectory>${project.build.directory}</workingDirectory>     
						</configuration>
					</execution>                   
				</executions>
			</plugin>   
		</plugins>      
	</build>
	<profiles>
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>appserver</artifactId>
					<version>2.2.1-SNAPSHOT</version>
					<type>tar.gz</type>
					<classifier>${platform}-x86</classifier>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>appserver</artifactId>
					<version>2.2.1-SNAPSHOT</version>
					<type>tar.gz</type>
					<classifier>${platform}-x64</classifier>
				</dependency>
				<dependency>
					<groupId>com.digia</groupId>
					<version>5.2.1-SNAPSHOT</version>
					<artifactId>qt</artifactId>
					<type>tar.gz</type>
					<classifier>${profile.classifier}-x86${compile.options}</classifier>
				</dependency>	
				<dependency>
					<groupId>com.digia</groupId>
					<version>5.2.1-SNAPSHOT</version>
					<artifactId>qt</artifactId>
					<type>tar.gz</type>
					<classifier>${profile.classifier}-x64${compile.options}</classifier>
				</dependency>			
				<dependency>
					<groupId>org.openssl</groupId>
					<artifactId>openssl</artifactId>
					<version>${openssl.version}</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}-${compiler}</classifier>
				</dependency>
				<dependency>
					<groupId>com.creativelabs</groupId>
					<artifactId>openal</artifactId>
					<version>1.1-SNAPSHOT</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}</classifier>
				</dependency>
				<dependency>                
					<groupId>com.networkoptix.hdwitness</groupId>
					<artifactId>vmaxproxy</artifactId>
					<version>2.1-SNAPSHOT</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}</classifier>
				</dependency>               
				<dependency>
					<groupId>com.microsoft</groupId>
					<artifactId>directx</artifactId>
					<version>JUN2010-SNAPSHOT</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}</classifier>
				</dependency>
				<dependency>
					<groupId>com.intel</groupId>
					<artifactId>mfx</artifactId>
					<version>2012-R2-SNAPSHOT</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}</classifier>
				</dependency>                                   
				<dependency>
					<groupId>com.microsoft</groupId>
					<artifactId>redistributable</artifactId>
					<version>vs2008-SNAPSHOT</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}</classifier>
				</dependency>       
				<dependency>
					<groupId>org.ffmpeg</groupId>
					<artifactId>ffmpeg</artifactId>
					<version>${ffmpeg.version}</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}</classifier>
				</dependency>      
			</dependencies>           
		</profile>
		<profile>
			<!-- Common Profile for Linux (PC / ARM), Mac -->
			<id>unix</id>
			<activation>
				<os>
					<family>unix</family>
				</os> 
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.digia</groupId>
					<version>5.2.1-SNAPSHOT</version>
					<artifactId>qt</artifactId>
					<type>tar.gz</type>
					<classifier>${qt.classifier}${compile.options}</classifier>
				</dependency>
			</dependencies>
		</profile>  		
		<profile>
			<id>desktop</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>arch</name>
					<value>!arm</value>
				</property>
			</activation>            
			<dependencies>
				<dependency>
					<groupId>org.openssl</groupId>
					<artifactId>openssl</artifactId>
					<version>${openssl.version}</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}-${compiler}</classifier>
				</dependency>
				<dependency>
					<groupId>org</groupId>
					<artifactId>festival</artifactId>
					<version>${festival.version}</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}-${compiler}</classifier>
				</dependency>                                   
				<dependency>
					<groupId>com.sourceforge.cloudcity</groupId>
					<artifactId>bespin</artifactId>
					<version>1.2-SNAPSHOT</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}-${additional.compiler}</classifier>
				</dependency>                   
				<dependency>
					<groupId>org.ffmpeg</groupId>
					<artifactId>ffmpeg</artifactId>
					<version>${ffmpeg.version}</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}</classifier>
				</dependency>      
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>appserver</artifactId>
					<version>2.2.1-SNAPSHOT</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}</classifier>
				</dependency>				
			</dependencies>             
		</profile>      

		<profile>
			<id>linux-isd-jaguar</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<os>
					<family>unix</family>
					<name>linux</name>
				</os>
				<property>
					<name>box</name>
					<value>isd</value>
				</property>
			</activation>

			<dependencies>              
				<dependency>
					<groupId>org.openssl</groupId>
					<artifactId>openssl</artifactId>
					<version>${openssl.version}</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}-${compiler}</classifier>
				</dependency>
				<dependency>
					<groupId>org.ffmpeg</groupId>
					<artifactId>ffmpeg</artifactId>
					<version>${ffmpeg.version}</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}-${compiler}</classifier>
				</dependency>      
				<dependency>
					<groupId>com.isdedge</groupId>
					<artifactId>vmux</artifactId>
					<version>1.0.0-SNAPSHOT</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}-${compiler}</classifier>
				</dependency>      
			</dependencies>             
		</profile>

		<profile>
			<id>linux-isd-s2</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<os>
					<family>unix</family>
					<name>linux</name>
				</os>
				<property>
					<name>box</name>
					<value>isd_s2</value>
				</property>
			</activation>

			<dependencies> 			
				<dependency>
					<groupId>org.openssl</groupId>
					<artifactId>openssl</artifactId>
					<version>${openssl.version}</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}-${compiler}</classifier>
				</dependency>
				<dependency>
					<groupId>org.ffmpeg</groupId>
					<artifactId>ffmpeg</artifactId>
					<version>${ffmpeg.version}</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}-${compiler}</classifier>
				</dependency>      
				<dependency>
					<groupId>com.isdedge</groupId>
					<artifactId>vmux</artifactId>
					<version>1.0.0-SNAPSHOT</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}-${compiler}</classifier>
				</dependency>      
			</dependencies>             
		</profile>
		<profile>
			<id>linux-arm-rpi</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<os>
					<family>unix</family>
					<name>linux</name>
				</os>
				<property>
					<name>box</name>
					<value>rpi</value>
				</property>
			</activation>

			<dependencies>
				<dependency>
					<groupId>org.ffmpeg</groupId>
					<artifactId>ffmpeg</artifactId>
					<version>${ffmpeg.version}</version>
					<type>tar.gz</type>
					<classifier>${profile.classifier}-${compiler}</classifier>
				</dependency>
			</dependencies>
		</profile>

	</profiles> 
</project>
