#!/bin/sh -e

COMPANY_NAME=@deb.customization.company.name@

. /usr/share/debconf/confmodule

if [ -n "$DEBIAN_SCRIPT_DEBUG" ]; then set -v -x; DEBIAN_SCRIPT_TRACE=1; fi
${DEBIAN_SCRIPT_TRACE:+ echo "#42#DEBUG# RUNNING $0 $*" 1>&2 }

license=client-eula

errmsg()
{
    echo >&2 ''
    echo >&2 "$@"
    echo >&2 "try 'dpkg-reconfigure debconf' to select a frontend other than noninteractive"
    echo >&2 ''
}

db_get $COMPANY_NAME-client/accepted-$license
if [ "$RET" = "true" ]; then
    echo "$license license has already been accepted" >&2
    exit 0
else
    # show license again
    db_fset $COMPANY_NAME-client/present-$license seen false
fi

# facilitate backup capability per debconf-devel(7)
STATE=1
while true; do
    case "$STATE" in
    0)  # ensure going back from license presentment is harmless
        STATE=1
        continue
        ;;
    1)  # present license
        db_fset $COMPANY_NAME-client/present-$license seen false
        if ! db_input critical $COMPANY_NAME-client/present-$license ; then
            errmsg "$license license could not be presented"
            exit 0
        fi
        db_fset $COMPANY_NAME-client/accepted-$license seen false
        if ! db_input critical $COMPANY_NAME-client/accepted-$license ; then
            errmsg "$license agree question could not be asked"
            exit 0
        fi
        ;;
    2)  # determine users' choice
        db_get $COMPANY_NAME-client/accepted-$license
        if [ "$RET" = "true" ]; then
            # license accepted
            exit 0
        fi
        # error on decline license (give user chance to back up)
        db_input critical $COMPANY_NAME-client/error-$license
        ;;
    3)  # user has confirmed declining license
        echo "user did not accept the $license license" >&2
        exit 1
        ;;
    *)  # unknown state
        echo "$license license state unknown: $STATE" >&2
        exit 2
        ;;
    esac
    if db_go; then
        STATE=$(($STATE + 1))
    else
        STATE=$(($STATE - 1))
    fi
done

# proper exit (0 or 1) above
errmsg "$license license could not be presented / was not accepted"
exit 2
