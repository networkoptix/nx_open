set(product.title "${client.name}")
set(product.display.title "${client.display.name}")

find_files(src "ui" UI_FILES)
qt5_wrap_ui(UIC_FILES ${UI_FILES})

nx_configure_file(
    maven/filter-resources/resources/globals.json
    ${CMAKE_CURRENT_BINARY_DIR})

nx_configure_file(
    maven/filter-resources/client_app_info_impl.cpp
    ${CMAKE_CURRENT_BINARY_DIR})
nx_configure_file(
    maven/filter-resources/version.h
    ${CMAKE_CURRENT_BINARY_DIR})
nx_configure_file(
    ${PROJECT_SOURCE_DIR}/cpp/maven/bin-resources/app_icons.h
    ${CMAKE_CURRENT_BINARY_DIR})

if(MACOSX)
    set(mac_sources src/ui/workaround/mac_utils.mm)
endif()

file(GLOB_RECURSE QML_FILES static-resources/src/qml/*.qml static-resources/src/qml/*.js)

nx_add_target(libclient LIBRARY
    ADDITIONAL_SOURCES
        "${CMAKE_CURRENT_BINARY_DIR}/client_app_info_impl.cpp"
        ${UIC_FILES}
        ${mac_sources}
    ADDITIONAL_RESOURCES
        "${customization_dir}/libclient/resources"
        "${CMAKE_CURRENT_BINARY_DIR}/globals.json"
    OTHER_SOURCES
        ${QML_FILES}
    PUBLIC_LIBS
        Qt5::Widgets Qt5::OpenGL Qt5::WebKit Qt5::WebKitWidgets
        Qt5::Qml Qt5::QuickWidgets
        libclient_core nx_speech_synthesizer nx_audio libvms_gateway)

set_target_properties(libclient PROPERTIES PREFIX "")

target_include_directories(libclient
    PRIVATE
        ${Qt5Gui_PRIVATE_INCLUDE_DIRS}
        ${Qt5Widgets_PRIVATE_INCLUDE_DIRS})

if(LINUX)
    target_link_libraries(libclient PRIVATE Qt5::X11Extras Xss Xfixes X11)
endif()

if(WIN32)
    rdep_add_package(directx)
    target_link_libraries(libclient PRIVATE d3d9)
endif()