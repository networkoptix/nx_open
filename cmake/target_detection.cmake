function(detect_target)
    if(targetDevice STREQUAL "linux_arm64")
        set(LINUX TRUE PARENT_SCOPE)
        set(detected_arch "arm64")
        set(detected_platform "linux")
        set(detected_modification "ubuntu")
        set(detected_platform_new "linux_arm64")
    elseif(targetDevice STREQUAL "linux_arm32")
        set(LINUX TRUE PARENT_SCOPE)
        set(detected_arch "arm")
        set(detected_platform "linux")
        set(detected_modification "ubuntu")
        set(detected_platform_new "linux_arm32")
    elseif(NOT targetDevice OR targetDevice MATCHES "linux|macosx|windows")
        if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
            set(LINUX TRUE PARENT_SCOPE)
            set(detected_platform "linux")
            set(detected_modification "ubuntu")
            if(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
                set(detected_arch "x64")
            elseif(CMAKE_SYSTEM_PROCESSOR MATCHES ".*86")
                set(detected_arch "x86")
            else()
                message(FATAL_ERROR
                    "Cannot detect your system architecture ${CMAKE_SYSTEM_PROCESSOR}")
            endif()
            set(detected_platform_new "linux_${detected_arch}")
        elseif(CMAKE_SYSTEM_NAME STREQUAL "Windows")
            set(WINDOWS TRUE PARENT_SCOPE)
            set(detected_platform "windows")
            set(detected_modification "winxp")
            if(MSVC)
                if(CMAKE_CL_64)
                    set(detected_arch "x64")
                else()
                    set(detected_arch "x86")
                endif()
            else()
                if(CMAKE_SYSTEM_PROCESSOR STREQUAL "AMD64")
                    set(detected_arch "x64")
                elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL ".*86")
                    set(detected_arch "x86")
                else()
                    message(FATAL_ERROR
                        "Cannot detect your system architecture ${CMAKE_SYSTEM_PROCESSOR}")
                endif()
            endif()
            set(detected_platform_new "windows_${detected_arch}")
        elseif(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
            set(MACOSX TRUE PARENT_SCOPE)
            set(detected_arch "x64")
            set(detected_platform "macosx")
            set(detected_modification "macosx")
            set(detected_platform_new "macos")
        else()
            message(FATAL_ERROR
                "Cannot detect parameters for your system ${CMAKE_SYSTEM_NAME}")
        endif()
    else()
        if(targetDevice MATCHES "android")
            set(LINUX TRUE PARENT_SCOPE)
            set(ANDROID TRUE PARENT_SCOPE)
            set(detected_arch "arm")
            set(detected_platform "android")
            set(detected_modification "")
            set(detected_platform_new "android_arm32")
        elseif(targetDevice MATCHES "ios")
            set(detected_arch "arm")
            set(detected_platform "ios")
            set(detected_modification "")
            set(detected_platform_new "ios")
        else()
            set(LINUX TRUE PARENT_SCOPE)
            set(detected_arch "arm")
            set(detected_platform "linux")
            set(detected_modification ${box})

            if(targetDevice STREQUAL "bpi")
                set(detected_platform_new "nx1")
            elseif(targetDevice STREQUAL "edge1")
                set(detected_platform_new "edge1")
            else()
                set(detected_platform_new "linux_arm32")
            endif()
        endif()
    endif()

    set(arch ${detected_arch} CACHE INTERNAL "")
    set(platform ${detected_platform} CACHE INTERNAL "")
    # TODO: Use this instead of old "platform".
    set(platform_new ${detected_platform_new} CACHE INTERNAL "")
    set(modification ${detected_modification} CACHE INTERNAL "")
endfunction()

detect_target()
