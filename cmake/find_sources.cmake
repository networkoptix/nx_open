## Copyright 2018-present Network Optix, Inc. Licensed under MPL 2.0: www.mozilla.org/MPL/2.0/

function(_nx_pick_file var file_name exclusions)
    if(file_name MATCHES "StdAfx.cpp" OR file_name MATCHES "StdAfx.h")
        set(${var} FALSE PARENT_SCOPE)
        return()
    elseif(file_name MATCHES "_win[./]")
        if(NOT WINDOWS)
            set(${var} FALSE PARENT_SCOPE)
            return()
        endif()
    elseif(file_name MATCHES "_unix[./]")
        if(NOT UNIX)
            set(${var} FALSE PARENT_SCOPE)
            return()
        endif()
    elseif(file_name MATCHES "_linux[./]")
        if(NOT LINUX)
            set(${var} FALSE PARENT_SCOPE)
            return()
        endif()
    elseif(file_name MATCHES "_mac[./]")
        if(NOT MACOSX AND NOT IOS)
            set(${var} FALSE PARENT_SCOPE)
            return()
        endif()
    elseif(file_name MATCHES "_macx[./]")
        if(NOT MACOSX)
            set(${var} FALSE PARENT_SCOPE)
            return()
        endif()
    elseif(file_name MATCHES "_android[./]")
        if(NOT ANDROID)
            set(${var} FALSE PARENT_SCOPE)
            return()
        endif()
    elseif(file_name MATCHES "_ios[./]")
        if(NOT IOS)
            set(${var} FALSE PARENT_SCOPE)
            return()
        endif()
    else()
        foreach(exclusion ${exclusions})
            if(file_name MATCHES ${exclusion})
                set(${var} FALSE PARENT_SCOPE)
                return()
            endif()
        endforeach()
    endif()
    set(${var} TRUE PARENT_SCOPE)
endfunction()

function(nx_find_files var src_dir extension)
    cmake_parse_arguments(FIND "" "" "EXCLUDE" ${ARGN})

    file(GLOB_RECURSE CODE_FILES CONFIGURE_DEPENDS ${src_dir}/*.${extension})

    get_filename_component(src_dir_absolute ${src_dir} ABSOLUTE)

    foreach(file_name ${CODE_FILES})
        file(RELATIVE_PATH rel_file_name ${src_dir_absolute} ${file_name})
        if(rel_file_name STREQUAL "")
            set(rel_file_name ${file_name})
        endif()
        _nx_pick_file(PICKED ${rel_file_name} "${FIND_EXCLUDE}")
        if(${PICKED})
            list(APPEND RESULT_FILES ${file_name})
        endif()
    endforeach()

    set(${var} ${RESULT_FILES} PARENT_SCOPE)
endfunction()

function(nx_find_sources src_dir src_var hpp_var)
    nx_find_files(cpp_files ${src_dir} "cpp" ${ARGN})
    set(${src_var} ${cpp_files} PARENT_SCOPE)

    nx_find_files(hpp_files ${src_dir} "h" ${ARGN})
    set(${hpp_var} ${hpp_files} PARENT_SCOPE)
endfunction()
