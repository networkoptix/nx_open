## Copyright 2018-present Network Optix, Inc. Licensed under MPL 2.0: www.mozilla.org/MPL/2.0/

set(QT_HOST_PATH "${CONAN_QT-HOST_ROOT}")

include("${CMAKE_CURRENT_LIST_DIR}/qt_utils/moc_utils.cmake")
include("${CMAKE_CURRENT_LIST_DIR}/qt_utils/translation_utils.cmake")
include("${CMAKE_CURRENT_LIST_DIR}/qt_utils/qrc_utils.cmake")
include("${CMAKE_CURRENT_LIST_DIR}/qt_utils/fix_qt_vars.cmake")

list(APPEND CMAKE_PREFIX_PATH ${QT_DIR})
list(APPEND CMAKE_FIND_ROOT_PATH ${QT_DIR})
if(MACOSX)
    set(CMAKE_FRAMEWORK_PATH "${QT_DIR}/lib")
    list(APPEND CMAKE_INSTALL_RPATH ${QT_DIR}/lib)
endif()

find_package(OpenSSL REQUIRED)

# Qt uses find_package(OpenSSL) by itself and wraps it with WrapOpenSSL.
# However we use conan autogenerated FindOpenSSL which is incompatible with what Qt expects.
# As a workaround we mimic Qt behavior and create WrapOpenSSL target so Qt won't complain.
add_library(WrapOpenSSL::WrapOpenSSL INTERFACE IMPORTED)
target_link_libraries(WrapOpenSSL::WrapOpenSSL INTERFACE OpenSSL::OpenSSL)

find_package(Qt6
    COMPONENTS
        LinguistTools
        Core
        Gui
        Network
        Xml
        Sql
        Concurrent
        Multimedia
        Qml
        Core5Compat
)
