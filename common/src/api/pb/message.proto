package pb;

import "resourceType.proto";
import "resource.proto";
import "license.proto";
import "cameraServerItem.proto";
import "businessRule.proto";
import "businessAction.proto";
import "kvpair.proto";

option java_package = "com.google.protobuf.implementation";
option java_outer_classname = "MessageProtos";

message Message { 
    extensions 100 to max;

    enum Type {
        Initial                 = 0;
        Ping                    = 1;

        ResourceChange          = 2;
        ResourceDelete          = 3;
        ResourceStatusChange    = 4;
        ResourceDisabledChange  = 5;

        License                 = 6;
        CameraServerItem        = 7;

        BusinessRuleChange      = 8;
        BusinessRuleDelete      = 9;

        BroadcastBusinessAction = 10;

        FileAdd                 = 11;
        FileRemove              = 12;
        FileUpdate              = 13;
        
        RuntimeInfoChange       = 14;
        BusinessRuleReset       = 15;

        KvPairChange            = 16;
        KvPairDelete            = 17;

        Command                 = 18;
    }

    required Type type = 1;
    required uint32 seqNumber = 2;
}

message ResourceMessage {
    extend Message {
        required ResourceMessage message = 100;
    }

    required Resource resource = 1;
}

message LicenseMessage {
    extend Message {
        required LicenseMessage message = 101;
    }

    required License license = 1;
}

message CameraServerItemMessage {
    extend Message {
        required CameraServerItemMessage message = 102;
    }

    required CameraServerItem cameraServerItem = 1;
}

message BusinessRuleMessage {
    extend Message {
        required BusinessRuleMessage message = 103;
    }

    required BusinessRule businessRule = 1;
}

message BroadcastBusinessActionMessage {
    extend Message {
        required BroadcastBusinessActionMessage message = 104;
    }

    required BusinessAction businessAction = 1;
}

message InitialMessage {
    extend Message {
        required InitialMessage message = 105;
    }

    repeated ResourceType resourceType          = 1;
    repeated Resource resource                  = 2;
    repeated License license                    = 3;
    repeated CameraServerItem cameraServerItem  = 4;
    optional string hardwareId1                 = 5;
    optional string oldHardwareId               = 6;
    optional string hardwareId2                 = 7;
    optional string publicIp                    = 8;
    optional string systemName                  = 9;
    optional string hardwareId3                 = 10;
    optional string sessionKey                  = 11;
    optional bool allowCameraChanges_deprecated = 12;
    repeated KvPair kvPair                      = 13;
    repeated string compatibleHardwareId        = 14;
}

message FileAddMessage {
    extend Message {
        required FileAddMessage message = 106;
    }

    required string path = 1;
}

message FileRemoveMessage {
    extend Message {
        required FileRemoveMessage message = 107;
    }

    required string path = 1;
}

message FileUpdateMessage {
    extend Message {
        required FileUpdateMessage message = 108;
    }

    required string path = 1;
}

message RuntimeInfoChangeMessage {
    extend Message {
        required RuntimeInfoChangeMessage message = 109;
    }

    optional string publicIp = 1;
    optional string systemName = 2;
    optional string sessionKey = 3;
    optional bool allowCameraChanges_deprecated = 4;
    repeated string mainHardwareId = 3;
    repeated string compatibleHardwareId = 4;
}

message BusinessRuleResetMessage {
    extend Message {
        required BusinessRuleResetMessage message = 110;
    }

    repeated BusinessRule businessRule = 1;
}

message KvPairChangeMessage {
    extend Message {
        required KvPairChangeMessage message = 111;
    }

    repeated KvPair kvPair = 1;
}

message KvPairDeleteMessage {
    extend Message {
        required KvPairDeleteMessage message = 112;
    }

    repeated KvPair kvPair = 1;
}

message CommandMessage {
    extend Message {
        required CommandMessage message = 113;
    }

    enum Command {
        Reboot = 0;
    }

    required Command command = 1;
}
