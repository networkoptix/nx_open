<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!--
    Example pom for delegating maven goals to msbuild so it builds the "solution"
 
    A solution can be a group of projects, but here we only have one.
    It should also be possible to have one maven project per solution project, 
    and have a parent pom to deletegate the build.
  -->
	<parent>
		<artifactId>cpp</artifactId>
		<groupId>com.networkoptix.hdwitness</groupId>
		<version>1.0.9</version>
		<relativePath>../cpp</relativePath>
	</parent>

	<groupId>com.networkoptix.hdwitness</groupId>
	<version>1.0.9</version>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>common</artifactId>
	<packaging>pom</packaging>
	<name>HD Witness Common Lib</name>

	<properties>
		<assembly-skip>true</assembly-skip>
		<rename-skip>true</rename-skip>
		<buildLib>staticlib</buildLib>
		<!--QT libs used-->
		<qtlib1>network</qtlib1>
		<qtlib2>xml</qtlib2>
		<qtlib3/>
		<qtlib4/>
		<qtlib5/>
		<qtlib6/>
		<qtlib7/>
		<qtlib8/>
		<qtlib9/>
		<!--Global libs-->
		<global.libs/>		
		<!--Specific os libs used-->
		<windows.oslibs>-lws2_32 -lIphlpapi -lOle32</windows.oslibs>
		<linux.oslibs>-lz -lbz2</linux.oslibs>
		<mac.oslibs>-framework IOKit</mac.oslibs>
		<!--Global defines-->
		<global.defines/>
		<!--Specific os defines-->
		<windows.defines/>
		<linux.defines/>
		<mac.defines/>		
	</properties>	

	<dependencies>
		<dependency>
			<groupId>com.nokia.qt</groupId>
			<artifactId>qtcore</artifactId>
			<version>4.7.4</version>
			<type>zip</type>
		</dependency>										
		<dependency>
			<groupId>org.ffmpeg</groupId>
			<artifactId>ffmpeg</artifactId>
			<version>${ffmpeg.version}</version>
			<type>zip</type>
			<classifier>${platform}-${arch}</classifier>
		</dependency>
		<dependency>
			<groupId>org</groupId>
			<artifactId>openssl</artifactId>
			<version>1.0.0e</version>
			<type>zip</type>
			<classifier>${platform}-${arch}</classifier>
		</dependency>							
		<dependency>
			<groupId>com.google</groupId>
			<artifactId>protobuf</artifactId>
			<version>2.4.1</version>
			<type>zip</type>
			<classifier>${platform}-${arch}</classifier>
		</dependency>							
		<dependency>
			<groupId>org</groupId>
			<artifactId>qjson</artifactId>
			<version>0.7.1</version>
			<type>zip</type>
			<classifier>${platform}-${arch}</classifier>
		</dependency>			
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-specifics-to-qt-project</id>
						<phase>process-sources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<failOnError>false</failOnError>
							<target>
								<fileset id="proto_path" dir="src">
									<include name="**/*.proto" />
								</fileset>
								<pathconvert pathsep="${line.separator}" property="proto" refid="proto_path">
									<map from="" to="PB_FILES += "/>
								</pathconvert>
								<echo file="${project.build.directory}/${project.artifactId}.pro" append="true">${line.separator}${proto}</echo>
							</target>
						</configuration>
					</execution>				
				</executions>
			</plugin>								
		</plugins>
	</build>    

	<profiles>
		<profile>
			<id>windows</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<properties>
				<qtlib9>multimedia</qtlib9>
			</properties>						
		</profile>
		<profile>
			<id>linux</id>
			<properties>

			</properties>
		</profile>	
		<profile>
			<id>convert-clean</id>
			<activation>				
				<file>
					<missing>${project.build.directory}/build/include</missing>
				</file> 		
			</activation>			
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1.1</version>
						<executions>
							<execution>
								<id>generate-filetypes</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>python</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>	
									<arguments>
										<commandlineArgs>${project.build.directory}/gen_filetypes.py</commandlineArgs>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>					
				</plugins>
			</build>					
		</profile>	
	</profiles>
</project>