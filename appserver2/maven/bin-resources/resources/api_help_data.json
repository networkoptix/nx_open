{
    "groups": [
        {
            "groupName": "api",
            "groupDescription": "This group contains functions related to single media server",
            "methods": [
                {
                    "name": "execAction",
                    "description": "Execute business action. Action data should bin in a internal binary format. This method is going to be refactor at next version.",
                    "isGetter": false,
                    "params": [],
                    "result": "Return XML with 'OK' message or error code"
                },
                {
                    "name": "events",
                    "description": "Returns event log",
                    "isGetter": true,
                    "params": [
                        {
                            "name": "from",
                            "description": "Start of time period at ms since 1.1.1970 (UTC format).",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "to",
                            "description": "End of time period at ms since 1.1.1970 (UTC format).",
                            "optional": true,
                            "values": []
                        },
                        {
                            "name": "event",
                            "description": "Event type.",
                            "optional": true,
                            "values": []
                        },
                        {
                            "name": "action",
                            "description": "Action type.",
                            "optional": true,
                            "values": []
                        },
                        {
                            "name": "brule_id",
                            "description": "Business rule id.",
                            "optional": true,
                            "values": []
                        }
                    ],
                    "result": "Return media server event log in proprietary binary format"
                },
                {
                    "name": "doCameraDiagnosticsStep",
                    "description": "Performs camera diagnostics.",
                    "isGetter": true,
                    "params": [
                        {
                            "name": "res_id",
                            "description": "camera id",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "type",
                            "description": "Diagnostics to perform.",
                            "optional": false,
                            "values": [
                                {"name": "mediaServerAvailability", "description": "Checks media server availability" },
                                {"name": "cameraAvailability", "description": "Checks if camera is accessible from media server" },
                                {"name": "mediaStreamAvailability", "description": "Checks if camera media stream can be opened" },
                                {"name": "mediaStreamIntegrity", "description": "Checks additional media stream parameters" }
                            ]
                        }
                    ],
                    "result": "Return XML with parameter value"
                },
                {
                    "name": "setCameraParam",
                    "description": "Sets values of several camera parameters. This parameters are used on a advanced Tab in camera settings. For instance: brigthness, contrast e.t.c.",
                    "isGetter": false,
                    "params": [
                        {
                            "name": "res_id",
                            "description": "camera unique id",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "<any name>",
                            "description": "Parameter for camera to set. Request can contains one or more parameters to set.",
                            "optional": true,
                            "values": []
                        }
                    ],
                    "result": "Returns OK if all parameters have been set, otherwise returns error 500 (Internal server error) and result of setting for every param."
                },
                {
                    "name": "getCameraParam",
                    "description": "Read camera parameters. For instance: brigthness, contrast e.t.c. Parameters to read should be specified.",
                    "isGetter": true,
                    "params": [
                        {
                            "name": "res_id",
                            "description": "camera unique id",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "<any name>",
                            "description": "Parameter name to read. Request can contains one or more parameters.",
                            "optional": true,
                            "values": []
                        }
                    ],
                    "result": "Returns required parameter values in form of paramName=paramValue, each param on new line"
                },
                {
                    "name": "image",
                    "description": "Return image from camera",
                    "isGetter": true,
                    "params": [
                        {
                            "name": "physicalId",
                            "description": "camera unique id",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "time",
                            "description": "required image time. Microseconds since 1970 UTC or string in format 'YYYY-MM-DDThh24:mi:ss.zzz'. Date format is auto detected. Also, addition special values are allowed.",
                            "optional": false,
                            "values": [
                                {"name": "YYYY-MM-DDThh24:mi:ss.zzz", "description": "Human readable date format" },
                                {"name": "[0..9]*", "description": "Microseconds since 1970 UTC" },
                                {"name": "NOW", "description": "Live position (no frame is returned if camera is offline" },
                                {"name": "LATEST", "description": "last frame from camera (return live position or last frame from archive if camera is offline)" }
                            ]
                        },
                        {
                            "name": "format",
                            "description": "Image format. Default value 'jpeg'",
                            "optional": true,
                            "values": [
                                {"name": "jpeg", "description": "JPEG image format" },
                                {"name": "png", "description": "PNG image format" },
                                {"name": "bmp", "description": "BMP image format" },
                                {"name": "tiff", "description": "TIFF image format" }
                            ]
                        },
                        {
                            "name": "method",
                            "description": "Parameter defines method to search frame inside GOP structure. Default value 'before'. Parameter not used for Motion jpeg video codec.",
                            "optional": true,
                            "values": [
                                {"name": "before", "description": "Returns nearest I-frame before specified time." },
                                {"name": "after", "description": "Returns nearest I-frame after specified time." },
                                {"name": "exact", "description": "Get image for exact time position. It required more CPU." }
                            ]
                        },
                        {
                            "name": "height",
                            "description": "Required image height. By default image have same size as source video stream.",
                            "optional": true,
                            "values": []
                        },
                        {
                            "name": "width",
                            "description": "Required image width. By default image have same size as source video stream. If only width or height is specified other parameter is auto detected. Video aspect ratio is not changed.",
                            "optional": true,
                            "values": []
                        }
                    ],
                    "result": "Returns image."
                },
                {
                    "name": "showLog",
                    "description": "Returns tail of the server log file",
                    "isGetter": true,
                    "params": [
                        {
                            "name": "lines",
                            "description": "Display last N log lines.",
                            "optional": true,
                            "values": []
                        }
                    ],
                    "result": "Tail of the server log file in text format"
                },
                {
                    "name": "manualCamera/search",
                    "description": "Search cameras in manual mode",
                    "isGetter": true,
                    "params": [
                        {
                            "name": "start_ip",
                            "description": "First ip address in range to scan.",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "end_ip",
                            "description": "Last ip address in range to scan.",
                            "optional": true,
                            "values": []
                        },
                        {
                            "name": "port",
                            "description": "Camera(s) port to chek. Port is autodetected if parameter is absent.",
                            "optional": true,
                            "values": []
                        },
                        {
                            "name": "user",
                            "description": "Username for the cameras",
                            "optional": true,
                            "values": []
                        },
                        {
                            "name": "password",
                            "description": "Password for the cameras",
                            "optional": true,
                            "values": []
                        }
                    ],
                    "result": "XML with camera names, manufacturers and urls."
                },
                {
                    "name": "manualCamera/status",
                    "description": "Get manual addition progress.",
                    "isGetter": true,
                    "params": [
                        {
                            "name": "uuid",
                            "description": "Process uuid.",
                            "optional": false,
                            "values": []
                        }
                    ],
                    "result": "XML with progress value."
                },
                {
                    "name": "manualCamera/stop",
                    "description": "Stop manual addition progress.",
                    "isGetter": false,
                    "params": [
                        {
                            "name": "uuid",
                            "description": "Process uuid.",
                            "optional": false,
                            "values": []
                        }
                    ],
                    "result": "XML with OK message or error code."
                },
                {
                    "name": "manualCamera/add",
                    "description": "Manual add camera(s). If several cameras are added, parameters 'url' and 'manufacturer' must be defined several times.",
                    "isGetter": false,
                    "params": [
                        {
                            "name": "url",
                            "description": "Camera url returned by scan request.",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "manufacturer",
                            "description": "Camera manufacturer.",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "user",
                            "description": "Username for the cameras",
                            "optional": true,
                            "values": []
                        },
                        {
                            "name": "password",
                            "description": "Password for the cameras",
                            "optional": true,
                            "values": []
                        }
                    ],
                    "result": "XML with OK message or error code."
                },
                {
                    "name": "ping",
                    "description": "Ping the server",
                    "isGetter": true,
                    "params": [],
                    "result": "XML with PONG message."
                },
                {
                    "name": "ptz/move",
                    "description": "Start camera moving.",
                    "isGetter": false,
                    "params": [
                        {
                            "name": "res_id",
                            "description": "Camera unique ID",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "xSpeed",
                            "description": "rotation X velocity in range [-1..+1]",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "ySpeed",
                            "description": "rotation Y velocity in range [-1..+1]",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "zoomSpeed",
                            "description": "zoom velocity in range [-1..+1]",
                            "optional": false,
                            "values": []
                        }
                    ],
                    "result": "XML with OK message or error code."
                },
                {
                    "name": "ptz/stop",
                    "description": "Stop camera moving.",
                    "isGetter": false,
                    "params": [
                        {
                            "name": "res_id",
                            "description": "Camera unique ID",
                            "optional": false,
                            "values": []
                        }
                    ],
                    "result": "XML with OK message or error code."
                },
                {
                    "name": "ptz/moveTo",
                    "description": "Go to absolute position",
                    "isGetter": false,
                    "params": [
                        {
                            "name": "res_id",
                            "description": "Camera unique ID",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "xPos",
                            "description": "Go to absolute X position in range [-1..+1]",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "yPos",
                            "description": "Go to absolute Y position in range [-1..+1]",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "zoomPos",
                            "description": "Go to absolute zoom position in range [-1..+1]",
                            "optional": false,
                            "values": []
                        }
                    ],
                    "result": "XML with OK message or error code."
                },
                {
                    "name": "ptz/getPosition",
                    "description": "Return current camera position.",
                    "isGetter": true,
                    "params": [
                        {
                            "name": "res_id",
                            "description": "Camera unique ID",
                            "optional": false,
                            "values": []
                        }
                    ],
                    "result": "XML with camera position or error code."
                },
                {
                    "name": "ptz/calibrate",
                    "description": "calibrate moving speed (addition speed coeff)",
                    "isGetter": false,
                    "params": [
                        {
                            "name": "res_id",
                            "description": "Camera unique ID",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "xSpeed",
                            "description": "rotation X velocity in range [-1..+1]",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "ySpeed",
                            "description": "rotation Y velocity in range [-1..+1]",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "zoomSpeed",
                            "description": "zoom velocity in range [-1..+1]",
                            "optional": false,
                            "values": []
                        }
                    ],
                    "result": "XML with OK message or error code."
                },
                {
                    "name": "ptz/getCalibrate",
                    "description": "Read current calibration settings",
                    "isGetter": true,
                    "params": [
                        {
                            "name": "res_id",
                            "description": "Camera unique ID",
                            "optional": false,
                            "values": []
                        }
                    ],
                    "result": "XML with calibration coeffecients."
                },
                {
                    "name": "ptz/getSpaceMapper",
                    "description": "return JSON-serialized PTZ space mapper. This information contains curves for camera FOV and zoom position and camera moving ranges. This information used in advanced PTZ mode.",
                    "isGetter": true,
                    "params": [
                        {
                            "name": "res_id",
                            "description": "Camera unique ID",
                            "optional": false,
                            "values": []
                        }
                    ],
                    "result": "return JSON-serialized PTZ space mapper."
                },
                {
                    "name": "rebuildArchive",
                    "description": "Start or stop rebuilding of media server archive.",
                    "isGetter": false,
                    "params": [
                        {
                            "name": "rebuild",
                            "description": "'start' or 'stop' value.",
                            "optional": true,
                            "values": []
                        }
                    ],
                    "result": "Rebuild progress if no input param specified or XML with OK message or error code."
                },
                {
                    "name": "RecordedTimePeriods",
                    "description": "Recorded chunk info by specified cameras.",
                    "isGetter": true,
                    "params": [
                        {
                            "name": "physicalId",
                            "description": "Camera unique ID. Parameter can be used several times to define a list of cameras.",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "startTime",
                            "description": "Start time of a time interval. Microseconds since 1970 UTC or string in format 'YYYY-MM-DDThh24:mi:ss.zzz'. format is auto detected.",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "endTime",
                            "description": "End time of a time interval. Microseconds since 1970 UTC or string in format 'YYYY-MM-DDThh24:mi:ss.zzz'. format is auto detected.",
                            "optional": false,
                            "values": []
                        },
                        {
                            "name": "motionRegions",
                            "description": "Match motion on a video by specified rect. Parameter can be used several times.",
                            "optional": true,
                            "values": []
                        },
                        {
                            "name": "format",
                            "description": "Data format. Allowed values: 'json', 'xml', 'txt', 'bin'. Default value 'json'",
                            "optional": true,
                            "values": []
                        },
                        {
                            "name": "detail",
                            "description": "Chunk detail level, in microseconds. Time periods/chunks that are shorter than the detail level are discarded. You can use detail level as amount of microseconds per screen pixel.",
                            "optional": false,
                            "values": []
                        }
                    ],
                    "result": "Chunks data in requested format. Chunks are merged for all requested cameras. Time and duration defined in UTC milliseconds."
                },
                {
                    "name": "statistics",
                    "description": "Returns server info: CPU usage, HDD usage e.t.c.",
                    "isGetter": true,
                    "params": [],
                    "result": "XML data with statistics."
                },
                {
                    "name": "storageSpace",
                    "description": "Returns a list of all server storages.",
                    "isGetter": true,
                    "params": [],
                    "result": "XML with server's storages."
                },
                {
                    "name": "storageStatus",
                    "description": "Check if specified folder can be used as media server storage.",
                    "isGetter": true,
                    "params": [
                        {
                            "name": "path",
                            "description": "Folder to check.",
                            "optional": false,
                            "values": []
                        }
                    ],
                    "result": "JSON data. 'OK' if specified folder may be used for writing on mediaServer. Otherwise returns 'FAIL' "
                },
                {
                    "name": "gettime",
                    "description": "Returns server UTC time and time zone",
                    "isGetter": true,
                    "params": [],
                    "result": "JSON data."
                },
                {
                    "name": "installUpdate",
                    "description": "Updates server by the package contained in POST body",
                    "isGetter": false,
                    "params": [],
                    "result": ""
                },
                {
                    "name": "version",
                    "description": "Return server version.",
                    "isGetter": true,
                    "params": [],
                    "result": "XML data with server version."
                },
                {
                    "name": "onEvent",
                    "description": "Process business event from external system. Reserved for future use.",
                    "isGetter": false,
                    "params": [],
                    "result": ""
                }
            ]
        },
        {
            "groupName": "ec2",
            "groupDescription": "This group contains functions related to whole system (all media servers)",
            "methods": [
            ]
        }
    ]
}
