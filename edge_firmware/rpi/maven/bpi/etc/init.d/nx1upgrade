#!/bin/bash

# VERSION: ${release.version}.${buildNumber}

## This command will run each time after networkoptix-embedded-tools is installed

set -x

export NX1UPGRADELOG=/var/log/nx1upgrade.log
# Close STDOUT file descriptor
exec 1<&-
# Close STDERR FD
exec 2<&-

# Open STDOUT as $NX1UPGRADELOG file for read and write.
exec 1<>$NX1UPGRADELOG

# Redirect STDERR to STDOUT
exec 2>&1

echo "Starting upgrade script ..."
#avoid grabbing libstdc++ from mediaserver lib folder
export LD_LIBRARY_PATH=
export CUSTOMIZATION=${deb.customization.company.name}
export DATAPART=/dev/mmcblk0p2
export MNTDATAPART=/mnt/data
export BOOTPART=/dev/mmcblk0p1
export MNTBOOTPART=/mnt/boot

mkdir -p $MNTBOOTPART
mount -t vfat $BOOTPART $MNTBOOTPART
cp -f /root/tools/uboot/* $MNTBOOTPART
umount $BOOTPART
rm -Rf $MNTBOOTPART
export DEBIAN_FRONTEND=noninteractive

LIBVDPAU=$(dpkg -l | grep libvdpau | grep 0.4.1)
if [ -z $LIBVDPAU ]; then dpkg -i /opt/deb/libvdpau/*.deb; fi

LIBC_NEW=$(dpkg -l | grep libc-bin | grep 2.23)
if [ -z $LIBC_NEW ]; then
  cp /etc/apt/sources.list /etc/apt/sources.list_bk
  echo "deb file:/opt/deb/libc6 /" > /etc/apt/sources.list
  apt-get update
  apt-get install libc-l10n libc6-armhf-cross libc-bin libc-dev-bin libc6 libc6-dbg libc6-dev locales -y -qq --force-yes
  mv /etc/apt/sources.list_bk /etc/apt/sources.list
  dpkg -i /opt/deb/curl/*.deb
fi

FONTCONFIG=$(dpkg -l | grep fontconfig | grep 2.11)
if [ -z $FONTCONFIG ]; then dpkg -i /opt/deb/fontconfig/*.deb; fi

touch /dev/cedar_dev
chmod 777 /dev/disp
chmod 777 /dev/cedar_dev
usermod -aG video root

mkdir -p $MNTDATAPART
mount -t ext4 $DATAPART $MNTDATAPART
cp -f /opt/$CUSTOMIZATION/mediaserver/var/ecs_static.sqlite /root/tools/nx/ecs_static.sqlite
rm -Rf $MNTDATAPART/opt/$CUSTOMIZATION
cp -f xfv /etc/init.d/nx1* $MNTDATAPART/etc/init.d
cp -f xfv /tmp/$DISTRIB.tar.gz $MNTDATAPART/root
mkdir -p $MNTDATAPART/opt/$CUSTOMIZATION/mediaserver/var
cp -f /root/tools/nx/ecs_static.sqlite $MNTDATAPART/opt/$CUSTOMIZATION/mediaserver/var
CONF_FILE="$MNTDATAPART/opt/$CUSTOMIZATION/mediaserver/etc/mediaserver.conf"
grep -q "statisticsReportAllowed=true" $CONF_FILE \
    && echo "statisticsReportAllowed=true" >> $CONF_FILE
umount $DATAPART
sync

exit 0
