// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: license.proto

package com.networkoptix.hdwitness.protobuf;

public final class LicenseProtos {
  private LicenseProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface LicenseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string name = 1;
    boolean hasName();
    String getName();
    
    // required string key = 2;
    boolean hasKey();
    String getKey();
    
    // required int32 cameraCount = 3;
    boolean hasCameraCount();
    int getCameraCount();
    
    // required string hwid = 4;
    boolean hasHwid();
    String getHwid();
    
    // required string signature = 5;
    boolean hasSignature();
    String getSignature();
  }
  public static final class License extends
      com.google.protobuf.GeneratedMessage
      implements LicenseOrBuilder {
    // Use License.newBuilder() to construct.
    private License(Builder builder) {
      super(builder);
    }
    private License(boolean noInit) {}
    
    private static final License defaultInstance;
    public static License getDefaultInstance() {
      return defaultInstance;
    }
    
    public License getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.networkoptix.hdwitness.protobuf.LicenseProtos.internal_static_pb_License_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.networkoptix.hdwitness.protobuf.LicenseProtos.internal_static_pb_License_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string key = 2;
    public static final int KEY_FIELD_NUMBER = 2;
    private java.lang.Object key_;
    public boolean hasKey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          key_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 cameraCount = 3;
    public static final int CAMERACOUNT_FIELD_NUMBER = 3;
    private int cameraCount_;
    public boolean hasCameraCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getCameraCount() {
      return cameraCount_;
    }
    
    // required string hwid = 4;
    public static final int HWID_FIELD_NUMBER = 4;
    private java.lang.Object hwid_;
    public boolean hasHwid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getHwid() {
      java.lang.Object ref = hwid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          hwid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getHwidBytes() {
      java.lang.Object ref = hwid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        hwid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string signature = 5;
    public static final int SIGNATURE_FIELD_NUMBER = 5;
    private java.lang.Object signature_;
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getSignature() {
      java.lang.Object ref = signature_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          signature_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSignatureBytes() {
      java.lang.Object ref = signature_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        signature_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      name_ = "";
      key_ = "";
      cameraCount_ = 0;
      hwid_ = "";
      signature_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCameraCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHwid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getKeyBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, cameraCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getHwidBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getSignatureBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getKeyBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cameraCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getHwidBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getSignatureBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.License parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.License parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.License parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.License parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.License parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.License parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.License parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.License parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.License parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.License parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.networkoptix.hdwitness.protobuf.LicenseProtos.License prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.networkoptix.hdwitness.protobuf.LicenseProtos.LicenseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.networkoptix.hdwitness.protobuf.LicenseProtos.internal_static_pb_License_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.networkoptix.hdwitness.protobuf.LicenseProtos.internal_static_pb_License_fieldAccessorTable;
      }
      
      // Construct using com.networkoptix.hdwitness.protobuf.LicenseProtos.License.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        cameraCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        hwid_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        signature_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.networkoptix.hdwitness.protobuf.LicenseProtos.License.getDescriptor();
      }
      
      public com.networkoptix.hdwitness.protobuf.LicenseProtos.License getDefaultInstanceForType() {
        return com.networkoptix.hdwitness.protobuf.LicenseProtos.License.getDefaultInstance();
      }
      
      public com.networkoptix.hdwitness.protobuf.LicenseProtos.License build() {
        com.networkoptix.hdwitness.protobuf.LicenseProtos.License result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.networkoptix.hdwitness.protobuf.LicenseProtos.License buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.networkoptix.hdwitness.protobuf.LicenseProtos.License result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.networkoptix.hdwitness.protobuf.LicenseProtos.License buildPartial() {
        com.networkoptix.hdwitness.protobuf.LicenseProtos.License result = new com.networkoptix.hdwitness.protobuf.LicenseProtos.License(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cameraCount_ = cameraCount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hwid_ = hwid_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.networkoptix.hdwitness.protobuf.LicenseProtos.License) {
          return mergeFrom((com.networkoptix.hdwitness.protobuf.LicenseProtos.License)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.networkoptix.hdwitness.protobuf.LicenseProtos.License other) {
        if (other == com.networkoptix.hdwitness.protobuf.LicenseProtos.License.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasCameraCount()) {
          setCameraCount(other.getCameraCount());
        }
        if (other.hasHwid()) {
          setHwid(other.getHwid());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasKey()) {
          
          return false;
        }
        if (!hasCameraCount()) {
          
          return false;
        }
        if (!hasHwid()) {
          
          return false;
        }
        if (!hasSignature()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              key_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              cameraCount_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              hwid_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              signature_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // required string key = 2;
      private java.lang.Object key_ = "";
      public boolean hasKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setKey(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        key_ = value;
        onChanged();
        return this;
      }
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      void setKey(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        key_ = value;
        onChanged();
      }
      
      // required int32 cameraCount = 3;
      private int cameraCount_ ;
      public boolean hasCameraCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getCameraCount() {
        return cameraCount_;
      }
      public Builder setCameraCount(int value) {
        bitField0_ |= 0x00000004;
        cameraCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearCameraCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cameraCount_ = 0;
        onChanged();
        return this;
      }
      
      // required string hwid = 4;
      private java.lang.Object hwid_ = "";
      public boolean hasHwid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getHwid() {
        java.lang.Object ref = hwid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          hwid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setHwid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        hwid_ = value;
        onChanged();
        return this;
      }
      public Builder clearHwid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hwid_ = getDefaultInstance().getHwid();
        onChanged();
        return this;
      }
      void setHwid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        hwid_ = value;
        onChanged();
      }
      
      // required string signature = 5;
      private java.lang.Object signature_ = "";
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getSignature() {
        java.lang.Object ref = signature_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          signature_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSignature(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        signature_ = value;
        onChanged();
        return this;
      }
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000010);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }
      void setSignature(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        signature_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:pb.License)
    }
    
    static {
      defaultInstance = new License(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:pb.License)
  }
  
  public interface LicensesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .pb.License license = 1;
    java.util.List<com.networkoptix.hdwitness.protobuf.LicenseProtos.License> 
        getLicenseList();
    com.networkoptix.hdwitness.protobuf.LicenseProtos.License getLicense(int index);
    int getLicenseCount();
    java.util.List<? extends com.networkoptix.hdwitness.protobuf.LicenseProtos.LicenseOrBuilder> 
        getLicenseOrBuilderList();
    com.networkoptix.hdwitness.protobuf.LicenseProtos.LicenseOrBuilder getLicenseOrBuilder(
        int index);
    
    // optional string hwid = 2;
    boolean hasHwid();
    String getHwid();
  }
  public static final class Licenses extends
      com.google.protobuf.GeneratedMessage
      implements LicensesOrBuilder {
    // Use Licenses.newBuilder() to construct.
    private Licenses(Builder builder) {
      super(builder);
    }
    private Licenses(boolean noInit) {}
    
    private static final Licenses defaultInstance;
    public static Licenses getDefaultInstance() {
      return defaultInstance;
    }
    
    public Licenses getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.networkoptix.hdwitness.protobuf.LicenseProtos.internal_static_pb_Licenses_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.networkoptix.hdwitness.protobuf.LicenseProtos.internal_static_pb_Licenses_fieldAccessorTable;
    }
    
    private int bitField0_;
    // repeated .pb.License license = 1;
    public static final int LICENSE_FIELD_NUMBER = 1;
    private java.util.List<com.networkoptix.hdwitness.protobuf.LicenseProtos.License> license_;
    public java.util.List<com.networkoptix.hdwitness.protobuf.LicenseProtos.License> getLicenseList() {
      return license_;
    }
    public java.util.List<? extends com.networkoptix.hdwitness.protobuf.LicenseProtos.LicenseOrBuilder> 
        getLicenseOrBuilderList() {
      return license_;
    }
    public int getLicenseCount() {
      return license_.size();
    }
    public com.networkoptix.hdwitness.protobuf.LicenseProtos.License getLicense(int index) {
      return license_.get(index);
    }
    public com.networkoptix.hdwitness.protobuf.LicenseProtos.LicenseOrBuilder getLicenseOrBuilder(
        int index) {
      return license_.get(index);
    }
    
    // optional string hwid = 2;
    public static final int HWID_FIELD_NUMBER = 2;
    private java.lang.Object hwid_;
    public boolean hasHwid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getHwid() {
      java.lang.Object ref = hwid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          hwid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getHwidBytes() {
      java.lang.Object ref = hwid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        hwid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      license_ = java.util.Collections.emptyList();
      hwid_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getLicenseCount(); i++) {
        if (!getLicense(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < license_.size(); i++) {
        output.writeMessage(1, license_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, getHwidBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < license_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, license_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getHwidBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.networkoptix.hdwitness.protobuf.LicenseProtos.LicensesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.networkoptix.hdwitness.protobuf.LicenseProtos.internal_static_pb_Licenses_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.networkoptix.hdwitness.protobuf.LicenseProtos.internal_static_pb_Licenses_fieldAccessorTable;
      }
      
      // Construct using com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLicenseFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (licenseBuilder_ == null) {
          license_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          licenseBuilder_.clear();
        }
        hwid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses.getDescriptor();
      }
      
      public com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses getDefaultInstanceForType() {
        return com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses.getDefaultInstance();
      }
      
      public com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses build() {
        com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses buildPartial() {
        com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses result = new com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (licenseBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            license_ = java.util.Collections.unmodifiableList(license_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.license_ = license_;
        } else {
          result.license_ = licenseBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hwid_ = hwid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses) {
          return mergeFrom((com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses other) {
        if (other == com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses.getDefaultInstance()) return this;
        if (licenseBuilder_ == null) {
          if (!other.license_.isEmpty()) {
            if (license_.isEmpty()) {
              license_ = other.license_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLicenseIsMutable();
              license_.addAll(other.license_);
            }
            onChanged();
          }
        } else {
          if (!other.license_.isEmpty()) {
            if (licenseBuilder_.isEmpty()) {
              licenseBuilder_.dispose();
              licenseBuilder_ = null;
              license_ = other.license_;
              bitField0_ = (bitField0_ & ~0x00000001);
              licenseBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLicenseFieldBuilder() : null;
            } else {
              licenseBuilder_.addAllMessages(other.license_);
            }
          }
        }
        if (other.hasHwid()) {
          setHwid(other.getHwid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getLicenseCount(); i++) {
          if (!getLicense(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.networkoptix.hdwitness.protobuf.LicenseProtos.License.Builder subBuilder = com.networkoptix.hdwitness.protobuf.LicenseProtos.License.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLicense(subBuilder.buildPartial());
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              hwid_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .pb.License license = 1;
      private java.util.List<com.networkoptix.hdwitness.protobuf.LicenseProtos.License> license_ =
        java.util.Collections.emptyList();
      private void ensureLicenseIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          license_ = new java.util.ArrayList<com.networkoptix.hdwitness.protobuf.LicenseProtos.License>(license_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.networkoptix.hdwitness.protobuf.LicenseProtos.License, com.networkoptix.hdwitness.protobuf.LicenseProtos.License.Builder, com.networkoptix.hdwitness.protobuf.LicenseProtos.LicenseOrBuilder> licenseBuilder_;
      
      public java.util.List<com.networkoptix.hdwitness.protobuf.LicenseProtos.License> getLicenseList() {
        if (licenseBuilder_ == null) {
          return java.util.Collections.unmodifiableList(license_);
        } else {
          return licenseBuilder_.getMessageList();
        }
      }
      public int getLicenseCount() {
        if (licenseBuilder_ == null) {
          return license_.size();
        } else {
          return licenseBuilder_.getCount();
        }
      }
      public com.networkoptix.hdwitness.protobuf.LicenseProtos.License getLicense(int index) {
        if (licenseBuilder_ == null) {
          return license_.get(index);
        } else {
          return licenseBuilder_.getMessage(index);
        }
      }
      public Builder setLicense(
          int index, com.networkoptix.hdwitness.protobuf.LicenseProtos.License value) {
        if (licenseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLicenseIsMutable();
          license_.set(index, value);
          onChanged();
        } else {
          licenseBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setLicense(
          int index, com.networkoptix.hdwitness.protobuf.LicenseProtos.License.Builder builderForValue) {
        if (licenseBuilder_ == null) {
          ensureLicenseIsMutable();
          license_.set(index, builderForValue.build());
          onChanged();
        } else {
          licenseBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addLicense(com.networkoptix.hdwitness.protobuf.LicenseProtos.License value) {
        if (licenseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLicenseIsMutable();
          license_.add(value);
          onChanged();
        } else {
          licenseBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addLicense(
          int index, com.networkoptix.hdwitness.protobuf.LicenseProtos.License value) {
        if (licenseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLicenseIsMutable();
          license_.add(index, value);
          onChanged();
        } else {
          licenseBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addLicense(
          com.networkoptix.hdwitness.protobuf.LicenseProtos.License.Builder builderForValue) {
        if (licenseBuilder_ == null) {
          ensureLicenseIsMutable();
          license_.add(builderForValue.build());
          onChanged();
        } else {
          licenseBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addLicense(
          int index, com.networkoptix.hdwitness.protobuf.LicenseProtos.License.Builder builderForValue) {
        if (licenseBuilder_ == null) {
          ensureLicenseIsMutable();
          license_.add(index, builderForValue.build());
          onChanged();
        } else {
          licenseBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllLicense(
          java.lang.Iterable<? extends com.networkoptix.hdwitness.protobuf.LicenseProtos.License> values) {
        if (licenseBuilder_ == null) {
          ensureLicenseIsMutable();
          super.addAll(values, license_);
          onChanged();
        } else {
          licenseBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearLicense() {
        if (licenseBuilder_ == null) {
          license_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          licenseBuilder_.clear();
        }
        return this;
      }
      public Builder removeLicense(int index) {
        if (licenseBuilder_ == null) {
          ensureLicenseIsMutable();
          license_.remove(index);
          onChanged();
        } else {
          licenseBuilder_.remove(index);
        }
        return this;
      }
      public com.networkoptix.hdwitness.protobuf.LicenseProtos.License.Builder getLicenseBuilder(
          int index) {
        return getLicenseFieldBuilder().getBuilder(index);
      }
      public com.networkoptix.hdwitness.protobuf.LicenseProtos.LicenseOrBuilder getLicenseOrBuilder(
          int index) {
        if (licenseBuilder_ == null) {
          return license_.get(index);  } else {
          return licenseBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.networkoptix.hdwitness.protobuf.LicenseProtos.LicenseOrBuilder> 
           getLicenseOrBuilderList() {
        if (licenseBuilder_ != null) {
          return licenseBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(license_);
        }
      }
      public com.networkoptix.hdwitness.protobuf.LicenseProtos.License.Builder addLicenseBuilder() {
        return getLicenseFieldBuilder().addBuilder(
            com.networkoptix.hdwitness.protobuf.LicenseProtos.License.getDefaultInstance());
      }
      public com.networkoptix.hdwitness.protobuf.LicenseProtos.License.Builder addLicenseBuilder(
          int index) {
        return getLicenseFieldBuilder().addBuilder(
            index, com.networkoptix.hdwitness.protobuf.LicenseProtos.License.getDefaultInstance());
      }
      public java.util.List<com.networkoptix.hdwitness.protobuf.LicenseProtos.License.Builder> 
           getLicenseBuilderList() {
        return getLicenseFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.networkoptix.hdwitness.protobuf.LicenseProtos.License, com.networkoptix.hdwitness.protobuf.LicenseProtos.License.Builder, com.networkoptix.hdwitness.protobuf.LicenseProtos.LicenseOrBuilder> 
          getLicenseFieldBuilder() {
        if (licenseBuilder_ == null) {
          licenseBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.networkoptix.hdwitness.protobuf.LicenseProtos.License, com.networkoptix.hdwitness.protobuf.LicenseProtos.License.Builder, com.networkoptix.hdwitness.protobuf.LicenseProtos.LicenseOrBuilder>(
                  license_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          license_ = null;
        }
        return licenseBuilder_;
      }
      
      // optional string hwid = 2;
      private java.lang.Object hwid_ = "";
      public boolean hasHwid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getHwid() {
        java.lang.Object ref = hwid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          hwid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setHwid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        hwid_ = value;
        onChanged();
        return this;
      }
      public Builder clearHwid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hwid_ = getDefaultInstance().getHwid();
        onChanged();
        return this;
      }
      void setHwid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        hwid_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:pb.Licenses)
    }
    
    static {
      defaultInstance = new Licenses(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:pb.Licenses)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_License_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_License_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pb_Licenses_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pb_Licenses_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rlicense.proto\022\002pb\"Z\n\007License\022\014\n\004name\030\001" +
      " \002(\t\022\013\n\003key\030\002 \002(\t\022\023\n\013cameraCount\030\003 \002(\005\022\014" +
      "\n\004hwid\030\004 \002(\t\022\021\n\tsignature\030\005 \002(\t\"6\n\010Licen" +
      "ses\022\034\n\007license\030\001 \003(\0132\013.pb.License\022\014\n\004hwi" +
      "d\030\002 \001(\tB4\n#com.networkoptix.hdwitness.pr" +
      "otobufB\rLicenseProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_pb_License_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_pb_License_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pb_License_descriptor,
              new java.lang.String[] { "Name", "Key", "CameraCount", "Hwid", "Signature", },
              com.networkoptix.hdwitness.protobuf.LicenseProtos.License.class,
              com.networkoptix.hdwitness.protobuf.LicenseProtos.License.Builder.class);
          internal_static_pb_Licenses_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_pb_Licenses_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pb_Licenses_descriptor,
              new java.lang.String[] { "License", "Hwid", },
              com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses.class,
              com.networkoptix.hdwitness.protobuf.LicenseProtos.Licenses.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
